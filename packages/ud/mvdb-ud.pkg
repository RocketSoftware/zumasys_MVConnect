001161RSS.BPþ0c00000ECSUB.TEMPLATE.SELþ0c2SUBROUTINE SUB.XXX.SEL(VARS,VALS,FEED,F.FILE,MAT RSS.DATA)þ*þINCLUDE RSS.BP RSS.DATA.INCþ*þOPEN "FILE" TO F.FILE ELSE STOP 201, "FILE"þ*þXLINE = 'SSELECT FILE .... WITH PARAMS ...'þEXECUTE XLINE CAPTURING JUNKþRETURN0002EESUB.RE.SELþ0c2SUBROUTINE SUB.RE.SEL(VARS,VALS,FEED,F.RUNTIME.ERRORS,MAT RSS.DATA)þ*þINCLUDE RSS.BP RSS.DATA.INCþ*þFEED.TITLE = RSS$FEED.REC<1>þLOCATE "account" IN VARS SETTING POS THENþ  account = VALS<POS>þ  FEED.TITLE := '(Account: ':account:')'þEND ELSE account = ""þLOCATE "user" IN VARS SETTING POS THENþ  user = VALS<POS>þ  FEED.TITLE := '(User: ':user:')'þEND ELSE user = ""þRSS$FEED.REC<1> = FEED.TITLEþ*þOPEN '','RUNTIME-ERRORS' TO F.RUNTIME.ERRORS ELSE STOP 201, 'RUNTIME-ERRORS'þXLINE = 'SSELECT RUNTIME-ERRORS BY-DSND DATE BY-DSND TIME'þIF account # "" THENþ  XLINE := ' WITH USERPIB = "[ ':account:'"'þEND ELSE IF user # "" THENþ  XLINE := ' WITH USERPIB = "[ ':user:' ]"'þENDþXLINE := " SAMPLING 100"þEXECUTE XLINE CAPTURING JUNKþRETURN0001F2RSS.DATA.INCþ0c2DIM RSS.DATA(20)þ*þEQU RSS$TITLE       TO RSS.DATA(1)þEQU RSS$LINK        TO RSS.DATA(2)þEQU RSS$AUTHOR      TO RSS.DATA(3)þEQU RSS$DATE        TO RSS.DATA(4)þEQU RSS$TIME        TO RSS.DATA(5)þEQU RSS$DESCRIPTION TO RSS.DATA(6)þ*þEQU RSS$FEED.REC    TO RSS.DATA(14)þEQU RSS$USER1       TO RSS.DATA(15)þEQU RSS$USER2       TO RSS.DATA(16)þEQU RSS$USER3       TO RSS.DATA(17)þEQU RSS$USER4       TO RSS.DATA(18)þEQU RSS$USER5       TO RSS.DATA(19)þEQU RSS$USER6       TO RSS.DATA(20)0000EESUB.FEEDS.SELþ0c2SUBROUTINE SUB.FEEDS.SEL(VARS,VALS,FEED,F.RSS.FEEDS,MAT RSS.DATA)þ*þINCLUDE RSS.BP RSS.DATA.INCþ*þOPEN '','RSS.FEEDS' TO F.RSS.FEEDS ELSE STOP 201, 'RSS.FEEDS'þ*þEXECUTE 'SSELECT RSS.FEEDS # "FEEDS"' CAPTURING JUNKþRETURN000196SUB.FEEDS.ITEMþ0c2SUBROUTINE SUB.FEEDS.ITEM(VARS,VALS,F.RSS.FEEDS,FEED.ID,FEED.REC,MAT RSS.DATA)þ*þINCLUDE RSS.BP RSS.DATA.INCþ*þRSS$TITLE = FEED.REC<1>þRSS$LINK = "RSS.MAIN?feed=":FEED.IDþIF FEED.REC<2> # "" THENþ  PARAMS = FEED.REC<2>þ  IF PARAMS[1,1] # "&" THEN PARAMS = "&":PARAMSþ  RSS$LINK := PARAMSþENDþRSS$AUTHOR = "RSS Feed"þRSS$DATE = DATE()þRSS$TIME = TIME()þRSS$DESCRIPTION = FEED.REC<3>þRETURN0007FCSUB.RE.ITEMþ0c2SUBROUTINE SUB.RE.ITEM(VARS,VALS,F.RUNTIME.ERRORS,ITEM.ID,RECORD,MAT RSS.DATA)þ*þINCLUDE RSS.BP RSS.DATA.INCþ*þRSS$TITLE = ""þRSS$LINK = ""þRSS$AUTHOR = ""þRSS$DATE = ""þRSS$TIME = ""þRSS$DESCRIPTION = ""þ*þDATA RECORD<2,1>þEXECUTE "PRINT-ERR DM,MESSAGES, ":RECORD<1>:" (S" CAPTURING ERRþ*þCONVERT @AM TO " " IN ERRþERR = OCONV(ERR,'MCP')þERR = TRIM(ERR)þRSS$TITLE = OCONV(FIELD(ITEM.ID,'*',1),'D0/'):" @ ":OCONV(FIELD(ITEM.ID,'*',2),'MTS'):": ":RECORD<4>:" ":ERRþ*þRSS$AUTHOR=RECORD<3>þ*þRSS$DESCRIPTION = 'Pib /User: ':RECORD<3>:'<br />'þSTACK = ""þFOR N = DCOUNT(RECORD<5>,@VM) TO 1 STEP -1þ  STACK := RECORD<5,N>þ  IF STACK # "" AND N # 1 THEN STACK := ' --> 'þNEXT NþIF RECORD<5> # '' THEN RSS$DESCRIPTION := "Stack: ":STACK:'<hr />'þMD = FIELD( RECORD<3>, ' ', 3 )þ*þ* Try and find the source code to include in the feed.þ*þSREC = ""þOPEN MD:",MD," TO F.MD THENþ  FNAME = ""þ  READ CREC FROM F.MD, RECORD<4> THENþ    IF CREC<1> = "VR" THEN ;* This is a catalog pointer, file name is in field 4þ      FNAME = FIELD(CREC<4>,' ',1)þ    END ELSE IF CREC<1> = "PQ" THENþ      IF FIELD(CREC<2>, ' ', 1 ) = "HRUN" THENþ        FNAME = FIELD( CREC<2>, ' ', 2 )þ      ENDþ    ENDþ  ENDþ  IF FNAME # "" THENþ    OPEN MD:",":FNAME:"," TO SFILE THENþ      READ SREC FROM SFILE, RECORD<4> ELSE SREC = ""þ    ENDþ  ENDþENDþIF SREC # "" THENþ  CALL SWAP(SREC,'&','&amp;')þ  CALL SWAP(SREC,'<','&lt;')þ  CALL SWAP(SREC,'>','&gt;')þ  LINENO = RECORD<2,1>þ  IF LINENO MATCHES "1N0N" THENþ    START.LINE = LINENO - 10þ    IF START.LINE < 0 THEN START.LINE = 1þ  END ELSE LINENO = 1 ; START.LINE = 1þ  END.LINE = LINENO + 10þ  RSS$DESCRIPTION := '<pre>'þ  FOR LINUM = START.LINE TO END.LINEþ    LINE = LINUM "R#4":" ":SREC<LINUM>þ    IF LINUM = LINENO THEN LINE = '</pre><b>':LINE:'</b><pre>'þ    RSS$DESCRIPTION := LINE:CHAR(10)þ  NEXT LINUMþ  RSS$DESCRIPTION := '</pre>'þEND ELSEþ  RSS$DESCRIPTION := 'Unable to open source code for ':RECORD<4>:' in account ':MDþENDþ*þRSS$DATE = FIELD(ITEM.ID,'*',1)þRSS$TIME = FIELD(ITEM.ID,'*',2)þ*þRETURN0000E1SUB.TEMPLATE.ITEMþ0c2SUBROUTINE SUB.XXX.ITEM(VARS,VALS,F.FILE,ITEM.ID,RECORD,MAT RSS.DATA)þ*þINCLUDE RSS.BP RSS.DATA.INCþ*þRSS$TITLE = ""þRSS$LINK = ""þRSS$AUTHOR = ""þRSS$DATE = ""þRSS$TIME = ""þRSS$DESCRIPTION = ""þ*þRETURN006E51DICT_DASHBOARD.BALANCESþ0c0000020*CURRENT.NET.INCOME.STATSþ0c199900001C*LAST.UPDATE.ARþ0c119113113100001F*LAST.UPDATE.SALESþ0c119097194000003E*CURRENT.AP.STATSþ0c142331924þ15903989þ2728093þ1250503þ169201000002ADEBUGþ0c1READþ3þ1422ü3005ü483ü206ü198þ389200001C*LAST.UPDATE.APþ0c119113113100001C*LAST.UPDATE.ALLþ0c1UPDATING000024*LAST.UPDATE.NET.INCOMEþ0c119113113100001E**LAST.UPDATE.ALLþ0c1191131131006CBD*CURRENT.AR.STATSþ0c1145608908þ43071741þ19451042þ2787790þ13834461þ2016ý2017ý2018ý2019ý2020þý360ü1520ü317ü116ü115ý1422ü3005ü483ü206ü198ý1397ü3235ü509ü172ü233ý548ü1013ü95ü38ü5þý164696370ü847879531ü219774039ü141932813ü118439101ý515435988ü1401696726ü227649763ü85961979ü77624339ý573563398ü1366076359ü266443141ü73932137ü108298342ý199762638ü513919157ü76008932ü25799874ü558530þý58791ý100283ý104490ý18020þýüüüüü100ü316ü364ü381ü399ü342ü385ý409ü351ü401ü448ü507ü483ü497ü472ü423ü439ü439ü417ý420ü428ü457ü451ü477ü459ü456ü481ü415ü524ü509ü477ý520ü387ü498ü455þýüüüüü161ü4212ü5826ü6594ü8875ü7142ü7515ý5254ü5881ü5021ü7272ü6122ü8031ü9362ü9216ü5601ü6713ü6903ü5854ý6464ü9433ü7866ü6064ü8167ü8359ü10164ü7202ü4924ü7515ü10322ü6424ý7987ü7124ü11015ü8306þ2896ýDu monde entierý2927ý1134ý1530ý2442ýReal Computersý3018ý2549ýHUNGRY HOWIES PIZZAý2801ý2481ý2761ýBobs Used CyclesýIntercom ProductsýBetter Computingý2622ýDrachenblut Delikatessený1292ý2374ýComp ConsultingýQue DeliciaýElectronic Companyý2891ýBerglunds snabbkopý2589ý1402ý2965ýCyber ProductsýFrankenversandýPiccolo und mehrý1423ý2902ý2704ý2632ý2128ý1619ý1795ý2886ý2871ý1140ý1021ý1122ý3023ýQueen CozinhaýFolies gourmandesýOnes & Zeros Inc.ý1703ý2713ýComputer TechýVictuailles en stockýMemory Capturersý1416ýDisk Productsý2887ý2953ýAjax Computer Electronicsý1660ý2863ý2908ýComp Productsý1123ý2996ýTRGýGaleria del gastronomoýJoe's Computersý2935ýUSA ComputersýGodos Cocina Tipicaý2449ýBottom-Dollar MarketsýBakers Goodsý2552ý1677ý1117ýComputer TipsýEastern ConnectionýAround the HornýData Compý3002ý2335ý2724ý2758ý1608ý2398ý3028ýABC Electronics CorpýHanari CarnesýFranchi S.p.A.ý2997ý2809ýThe Big Cheeseý2915ýWartian HerkkuýChop-suey Chineseý2843ý2969ýWhite Clover MarketsýVins et alcools Chevalierý2970ý2991ý1206ý2727ýFor Computers Inc.ýBills Shoes & Gopedsý2759ý2308ýHILARION-AbastosýWellington Importadoraý2263ý1251ý3015ýClassic ComputersýWolski Zajazdý2710ý2574ý2827ý2937ý3019ý1920ýBetter BytesýBlauer See DelikatessenýData Netý1517ý1012ý2830ý2907ý2959ýSoftware Incý1308ý1599ý1103ý1684ý1544ý2778ý2885ý1381ý1010ý1105ý1434ý1032ýGROSELLA-RestauranteýBon app'ý3009ý2293ý1252ýPericles Comidas clasicasý2854ý1705ý2803ý2947ýLongo ToyotaýBest Computer Companyý1958ý2967ýSpecialites du mondeý2047ý2814ýAlfreds FutterkisteýPrinter Productsý2497ýComputers N Moreý2394ý2722ý1072ý1076ýLogical Computersý2974ýSave-a-lot Marketsý2513ýNet Connectý2882ýBits and Bytes IncýComputer Sittersý1351ý1350ý2560ýDie Wandernde Kuhý2115ý2554ýRichter Supermarktý2056ý2531ý2784ý1344ý2624ý1653ý1799ý1829ý2940ý2901ý2733ý1569ýSupremes delicesý2958ý2966ý2708ý3012ýOttilies KaseladenýWhite HouseýTortuga Restauranteý2607ý2979ý1605ý1219ýGreat Lakes Food Marketý2568ý2465ý2986ý1078ý2648ý2920ý2867ý1152ý2906ý1586ý1106ýFrance restaurationý1058ý1511ý2942ý2516ý2545ý2443ý2982ýGourmet Lanchonetesý2943ý2831ý3029ýComputers Inc.Systemsý3032ý2456ýNorth/Southý2628ýPrincesa Isabel Vinhosý1214ýOld World DelicatessenýErnst Handelý2651ý2950ý1372ý3033ý3014ý2894ý2931ý3031ý2962ý1290ý2596ý2895ý2459ý3004ý2944ý1556ý2113ý2757ý3034ý2035ý2703ý2929ý3035ý1265ý1469ýRicardo Adocicadosý1024ý1054ý1358ý1218ý1564ý2690ý3036ý2521ý2933ý2900ý2532ý3037ýB's Beveragesý3024ý2806ý3041ý3038ý1411ý1307ý1119ý2126ý1238ý2538ý1366ý2744ý2406ý3040ý2793ý1452ý1184ý1780ý2434ýAntonio Moreno Taqueriaý3039ýConsolidated Holdingsý1480ý3007ý2313ý3046ý3047ý3048ý1419ý3050ý3053ý3054ý3055ý3056ý1413ý3057ý3058ý3042ý1030ý2670ýFamilia Arquibaldoý1382ý2558ý1157ý3061ý3063ý3064ý3065ý3067ý3069ý3070ýHungry Coyote Import Storý2837ý1717ý3071ý3075ýData Bitsý3000ý2855ý1155ý1299ý3043ý1592ý2925ý2359ý3044ýModem Productsý3076ý1943ý3078ý3080ýWilman Kalaý1211ý3051ý3082ý3059ý3083ý3086ý1097ý2782ý3087ý2783ý3088ý3089ý1775ý3077ý3068ý1289ý1171ý3092ý3093ý2095ý3072ý3073ý1057ý1388ý3095ý3096ý3097ý3098ý2571ý2960ý3074ý3099ýLet's Stop N Shopý3100ý1034ý1762ý2405ý1965ýABC Computersý3101ý3103ý3104ý3105ý3106ý3107ý3081ý1401ý3108ý3109ý3110ý3111ý2880ý3112ý1099ý3114ý3084ý3085ý1257ý3066ý2856ý2859ý1047ý1541ý3011ýLINO-Delicatesesý3091ý3062ý3121ý3122ý3123ý3124ý3125ý1269ý3127ý3126ý3128ý3129ý2941ý3131ý3132ý3102ý3094ý2089ý3137ý3136ý3113ý3006ý3139ý3140ý1287ý3141ý3142ý1415ý2462ý2600ý1540ý3144ý3145ý2694ý2995ý1083ý3146ý3116ý3149ý3150ý3151ý3117ý3118ýComercio Mineiroý3153ý3154ý3156ý3115ý3157ýCactus Comidas para llevaý3158ý3159ý1391ý3160ý1050ý3119ý3162ý3163ý3164ý3130ý2387ýComputer Fancyý3166ý1293ý1859ý3167ý3120ý1183ý3138ý3168ý3171ý3170ý3174ý3143ý3176ý3180ý3181ý2994ýComputer Towný3148ý3178ý3182ý3183ý3184ý3185ý1453ý1028ý1015ý1651ýLILA-Supermercadoý3188ý3191ý3193ý3195ý3196ý3005ý1334ý3179ý3199ý3200ý3201ý3202ý3208ý3209ý3135ý3211ý3212ý3213ý3214ý3215ý2857ý1040ý3161ý3165ý2877ý3169ý1374ý3172ý2740ý2936ý2656ý3219ý3220ý3221ý3177ý3222ý3223ý1261ýComputers R Usý2800ý3225ý3227ý3228ý3230ý3231ý3232ý3189ý3190ý1199ý3192ý3194ý3197ý3233ý3235ý3238ý3239ý1046ýParis specialitesý3240ý3241ý3204ý3205ý3206ý3207ý3242ý3246ý3210ý3247ý3248ý3198ý3173ý3254ý3257ý3258ý3262ý3216ý3263ý3265ý2865ý3217ý3175ýFISSA Fabrica Inter. Salcý3253ý3267ý3268ý3272ý3273ý1486ý1013ý3274ý3277ýVaffeljernetý2973ý3280ý3224ý2822ý3281ý3282ý3283ý3285ý3286ý3229ý3287ý2993ý3234ý3284ýComputer TrainersýBolido Comidas preparadasý3237ý3243ý3244ý3245ý3249ý3290ý2664ý3250ý3251ý1087ýRomero y tomilloý3292ý3293ý3255ý3256ý3259ý3291ý3294ý1060ý3261ý1745ý3264ý3297ý3298ý3260ý1818ý3269ý3270ý3271ý2873ý3302ýThe Cracker Boxý3186ý3275ý3276ý3303ý3266ý3226ý3278ý3279ý1182ý3305ý3307ý3133ý3312ý3313ý2689ý3315ýLehmanns Marktstandý3316ý3317ý3296ýBetter ConnectionýNumber One in Computingý3318ý3301ý3322ý3295ý2369ý3321ý3323ý2878ý3324ý3325ý3299ý3300ý3306ý2448ý3304ý3326ý3327ý3309ý3329ý3310ý3330ý3331ý3332ý2938ý3311ý3336ý3337ý3340ý3342ý3344ý3345ý3349ý2031ýComp Data Inc.ý3351ý3350ý3352ý3353ý3354ý3320ý3319ý3357ý3358ý3360ý3328ý3359ý3363ý3364ý3365ý3333ý3366ý3367ý3335ý1118ý3368ý3338ý3371ý3343ý3372ý3373ý2491ý3374ý3022ý3375ý3376ý3377ý3379ý1125ý3381ý3382ý1679ý3384ý3386ý3355ý3387ýOceano Atlantico Ltda.ý3383ý2729ýThe Only Computersý3391ý3390ý3362ý3392ý3393ý3395ý3396ý3370ý3397ý3398ý3399ý3369ý3400ý3402ý3378ý3403ý3404ý3380ý3385ý3406ý3407ý2105ý3388ý3408ý3389ýRancho grandeý3412ý3415ý1286ý3417ý3419ý3401ý3394ý2879ý3424ý3425ý1764ý3405ý3427ý1368ý3428ý3429ý3432ý1601ý3435ý3434ý3436ý1074ý3409ý3410ý2774ý3438ý3439ý3440ý3441ý3418ý3443ý1198ý3444ý3445ý3446ý3447ý3414ý3448ýIsland Tradingý3413ý3416ý3420ý2337ý3452ý1006ý3426ý3431ý3453ý3433ý3454ýFuture In Computingý3347ý3455ýSante Gourmetý2644ý1095ý3442ý3462ý3463ý3468ý3469ý3471ý2592ý2677ý3449ý3473ý3450ý2829ý3476ýDisks N Moreý3477ý3479ý3480ý3481ýSplit Rail Beer & Aleý3484ý3485ý3465ý3487ý3489ý3457ý3490ý3467ý2647ý3461ý3459ý3492ý3494ý2817ý3464ý3496ý3499ýSimons bistroý3466ý3500ý3501ý3504ý3474ý3475ýFuture Computersý2155ý3505ý3506ý3482ý3470ý3411ý3508ý3509ý3472ý2701ý2325ý3491ý3510ý1490ýLazy K Kountry Storeý3493ý3514ý3502ýTradicao Hipermercadosý3515ý3516ý3517ý3518ý2819ý3511ý3519ý3521ý3495ý1393ý3503ý3522ý3524ý3526ý3528ý3529ý3530ýReggiani Caseificiý3507ý3422ý3532ýToms Spezialitatený3520ý3534ý3536ý3537ý3540ý3512ý1159ý3543ý3545ý3486ý3513ý3548ýComputers Etc.ý3556ý3551ý3553ý3554ý3558ý3559ý1667ý3560ý3561ýMaison Deweyý3563ý2502ý3564ý3527ý3525ý3566ý3567ý3568ý3016ý3538ý3539ý1270ý3573ý3574ýBlondel pere et filsý3542ý3523ý3547ýQUICK-StopýSeven Seas Importsý3544ý3579ý3580ý3550ý3552ý1243ý3583ý3584ý3588ý3586ý3587ý3590ý3589ý2975ý3592ý3593ý2583ý3555ý3549ý3595ý3596ý3598ý3599ý3600ý3569ý3571ý3572ý3602ý3603ý1476ý3575ý2370ý3565ý3605ý3606ý3607ý3610ý3578ý3582ý3611ý3585ý3576ý3013ý3615ý3616ý3591ý3594ý3597ý3617ý3618ý3622ý1598ý3604ý3601ý3624ý3626ý3627ý3581ýRattlesnake Canyon Grocerý3629ý3630ý3609ý3608ý3612ý3613ý3634ý3635ý3631ý3636ý3639ý3640ý3641ý3642ý3643ý3644ý3645ý3646ý3647ý3648ý3649ý3650ý3621ý3652ý3619ý3637ý3625ý3655ýComputer Portables Inc.ý3658ý3628ýKoniglich Essený3661ý3662ý3665ý2254ý3666ý3667ý3632ý3675ý3676ý3668ý3677ýMere Paillardeý3679ý3680ý3681ý3682ý3683ý3684ý3685ý3686ý3687ý3688ý3689ý3690ý3691ý3692ý3693ý3694ý3695ý3696ý3697ý3698ý3653ý3699ý3700ý3701ý3702ý3704ý3638ý3705ý3706ý3707ý3708ý3709ý3711ý3712ý3713ý3714ý3654ý3716ý3717ý3718ý3719ý3720ý3722ý1407ý3656ý3723ý3726ý3727ý3728ý3729ý3659ý3663ý3664ý3731ý2795ý3734ý3733ý3736ý3738ý3739ý3741ý3742ý3744ý3746ý3743ý3669ý3670ý2000ý3671ý3672ý3673ý3674ý3751ý1082ý3678ý3753ý3754ý3755ý3756ý3757ý3758ý3657ý3710ý3715ý3760ý3761ý3762ý3763ý3764ý3765ý3721ý3725ý3767ý3768ý3769ý3724ý3770ý2912ýMorgenstern Gesundkostý3771ý3772ý3773ýLonesome Pine RestaurantýLa corne d'abondanceý3774ý3737ý3778ý3745ý3748ý3747ý3752ý3780ý3783ý3750ý3784ý3785ý3786ý3788ý3791ý3790ý1114ý2520ý3766ý3794ý3796ý3798ýComputer Warehouseý3793ý3775ý3749ý1291ýMemory Plus Inc.ý3776ý2252ý3801ý3802ý3777ý3804ý3781ý3806ý3807ý3782ý3810ý3787ý3812ý3789ý3813ý3815ý3792ý3821ý3614ý3822ý3759ý3824ý3823ý3795ý3799ý3827ý3828ý3829ý3830ýComputers Galoreý3832ý3833ý3834ý3803ý3835ý3805ý3837ý3836ý3838ý3840ý2099ý3808ý3811ý3841ý2881ý3843ý3844ý3817ý3814ý3740ýLa maison d'Asieý3819ý3816ý3820ý3847ý3848ý3809ý3831ý3826ý3854ý3008ý3825ý3849ý3856ý3857ý3839ý3853ý3860ýLaughing Bacchus Wine Celý3862ý3864ý3800ý3842ý3846ý3845ý3868ý3869ý3850ý3870ý3852ýAna Trujillo Emparedadosý3871ý3872ý3874ý3858ýSecure Computersý3876ý3875ý3859ý3880ý3883ý3884ý3863ý3886ý3887ý3888ý3889ý3891ý3865ý3892ý3873ý3895ý3896ý3877ý3879ý3897ý3881ý3855ý3882ý3898ýFuria Bacalhau e Frutos dýMagazzini Alimentari Riuný1263ý3900ý3901ý3899ý3904ý3905ý3906ý3907ý3909ý3910ý3894ý3890ý1733ý3913ý3912ý3914ý3867ý3866ýHungry Owl All-Night Grocý3893ý3885ý3916ý3918ý3919ý3903ý3920ýCentro comercial Moctezumý3908ý1173ý2706ý3878ý1348ý3917þý250000ýýýýý584774ýýýýýýýý1433950ý510000ýý250000ýýý500000ýý750000ýý436147ýýýý8089200ý158400ýýýýýýýýýýýýýýýý160550ý1608034ýýý485423ýý1045482ýý908400ýýýýýýý2348627ýýýý115315ý1000000ýý748879ý87100ýý335050ýýýýý1069960ý100600ý55043ý699634ýýýýýýýýý65284ý121400ýýýýýý296015ýýýýýýýýý836400ýýýý46500ýýýýý572635ýýýýýýýý1734075ý433519ý715625ýýýýýý4855773ýýýýýýýýýýýýý74000ý390050ýýýýýýýýýý712600ýýýýýý635027ý887500ý25974ý588528ýýýýý2305506ýýýý1110000ýý3254015ý665680ýýýýýýýýýýýýýýýýýýýýýýýýý1788ýýýýýýý76125ýýýýýýýýýýýý148000ýýýýýýýý86560ýýýý2000000ýýý63000ýýýý21000ý206250ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý17568ýýýýý322500ýýýýýýýýýýýýýýýýýýýý443700ýý252192ýýýýýýýýýýýýýýýýýýý203760ýýýýýýýýýýý8900ýýýýý855100ýýýýýýýýýý1579932ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý38400ýýýýýý2284902ýýýýýýýýýýýýýýýýýýýýýýýýýý68300ý9700ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý252500ýýýýýý301635ýýýýýýýýýýýý947550ýýý40700ýýýýýýýýýýýýýý577500ýýýýýýýýýýý17850ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý3200ýýý1000000ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý160600ýýýýýýýýýýýýýýýýýýýýýýýýý547450ý393543ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý56850ýýýý1242250ý1013550ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý1030532ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý98975ý3200ýý712500ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý250000ýýýýýýýýýýýýýýýýýýýýýýýýýýýý30158ýýýýýýýýýýýý2350000ýýýýýýýýýýýýýýýýýýý850000ýýýýýýýýýýýýýýýýýý51000ýýýýýýýýýýýý1020000ýýýýýýýýýýýýýýý69193ýýýý3795ýýýýýýýýýýý185000ýýýýýýýýýýýýýýýýýýýýýýýý2793473ýýýýýýýýýý2300ýýýýýý2300ýýýýýýýýý408000ýýýýýýýýýýýýýýýýýý38600ýýýýýýý39800ýýýýýý152510ýýýýýýýýýýý19900ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý635452ýýý182000ýýýýýýýýýýýý59500ýýýýýýýýýýýýýýýýýýýýý1500ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý13900ýýýýýýýý91463ýýýý8250ý74000ýýýýýýýýýýýýýýýýýýýýýýý3681755ýý222000ýýý1283175ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý484035ýýýýýýýýýýýýýýýýýýýýý118000ýýýýýýýýýýýýýýýýýý29900ýýýýýýýýýýýý481889ýýýýý1703750ýýýýýýýýýýýýýýýýýýýýýýýýý120440ý71960ýýýýýýýýýýýýýýýýýýý7400ýýýýýýý13900ý300000ýý150000þý58ýýýýý33ýýýýýýýý299ý116ýý1043ýýý1041ýý40ýý86ýýýý102ý24ýýýýýýýýýýýýýýýý146ý54ýýý117ýý152ýý24ýýýýýýý8ýýýý24ý29ýý7ý117ýý25ýýýýý23ý179ý33ý20ýýýýýýýýý99ý18ýýýýýý24ýýýýýýýýý29ýýýý25ýýýýý25ýýýýýýýý5ý11ý147ýýýýýý25ýýýýýýýýýýýýý76ý24ýýýýýýýýýý116ýýýýýý40ý55ý4ý22ýýýýý179ýýýý54ýý13ý116ýýýýýýýýýýýýýýýýýýýýýýýýý6ýýýýýýý1ýýýýýýýýýýýý130ýýýýýýýý85ýýýý152ýýý29ýýýý25ý42ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý7ýýýýý23ýýýýýýýýýýýýýýýýýýýý25ýý11ýýýýýýýýýýýýýýýýýýý25ýýýýýýýýýýý55ýýýýý29ýýýýýýýýýý25ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý86ýýýýýý54ýýýýýýýýýýýýýýýýýýýýýýýýýý83ý5ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý330ýýýýýý25ýýýýýýýýýýýý24ýýý24ýýýýýýýýýýýýýý24ýýýýýýýýýýý83ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý22ýýý4ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý24ýýýýýýýýýýýýýýýýýýýýýýýýý54ý147ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý86ýýýý146ý217ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý22ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý25ý22ýý25ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý20ýýýýýýýýýýýýýýýýýýýýýýýýýýýý272ýýýýýýýýýýýý391ýýýýýýýýýýýýýýýýýýý34ýýýýýýýýýýýýýýýýýý23ýýýýýýýýýýýý188ýýýýýýýýýýýýýýý99ýýýý24ýýýýýýýýýýý24ýýýýýýýýýýýýýýýýýýýýýýýý117ýýýýýýýýýý53ýýýýýý22ýýýýýýýýý55ýýýýýýýýýýýýýýýýýý24ýýýýýýý22ýýýýýý24ýýýýýýýýýýý22ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý24ýýý239ýýýýýýýýýýýý42ýýýýýýýýýýýýýýýýýýýýý20ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý18ýýýýýýýý34ýýýý55ý208ýýýýýýýýýýýýýýýýýýýýýýý36ýý34ýýý178ýýýýýýýýýýýýýýýýýýýýýýýýýýýýýý147ýýýýýýýýýýýýýýýýýýýýý131ýýýýýýýýýýýýýýýýýý111ýýýýýýýýýýýý92ýýýýý89ýýýýýýýýýýýýýýýýýýýýýýýýý54ý54ýýýýýýýýýýýýýýýýýýý25ýýýýýýý14ý13ýý5þ1651ý367ý515ý320ý93ý215ý8001ý80ý1915ý5121ý658ý4204ý394ý1027ý7522ý888ý142ý1083ý386ý266ý1041ý1347ý323ý54ý3020ý701ý216ý1533ý3186ý2299ý3105ý1112ý3534ý879ý1196ý732ý3853ý1061ý1094ý2759ý346ý228ý146ý714ý476ý5535ý1566ý174ý1167ý1413ý713ý973ý630ý1964ý581ý404ý714ý809ý1269ý1719ý430ý419ý282ý2193ý1655ý86ý155ý1246ý741ý1567ý2090ý236ý607ý662ý383ý928ý1428ý4725ý2636ý173ý797ý13ý596ý491ý138ý35ý647ý875ý368ý87ý636ý616ý247ý739ý550ý588ý912ý185ý269ý118ý660ý108ý197ý1295ý141ý1355ý303ý1080ý949ý191ý1262ý259ý601ý712ý2137ý166ý94ý572ý101ý242ý1390ý300ý956ý611ý190ý511ý323ý1676ý2491ý167ý155ý411ý22ý133ý48ý77ý277ý757ý22ý284ý458ý159ý2007ý1449ý405ý75ý870ý169ý340ý1754ý493ý2208ý525ý375ý198ý1060ý346ý364ý2409ý2452ý137ý1121ý732ý96ý190ý212ý585ý275ý145ý75ý366ý50ý3715ý1520ý290ý563ý425ý50ý517ý524ý293ý84ý42ý254ý159ý218ý104ý148ý429ý119ý215ý799ý342ý198ý226ý413ý231ý19ý460ý147ý296ý209ý372ý38ý167ý1073ý8ýý201ý264ý317ý296ý47ý21ý392ý858ý166ý279ý9ý88ý71ý342ý72ý1888ý228ý232ý907ý579ý102ý1274ý439ý224ý574ý36ý337ý326ý136ý540ý109ý12ý112ý211ý70ý10ý65ý11ý8ý4ý75ý21ý21ý55ý131ý88ýý162ý41ý283ý88ý10ý138ý11ý74ý151ý593ý69ý27ý76ý463ý94ý39ý144ý46ý13ý48ý16ý291ý128ý45ý117ý11ý105ý376ý202ý222ý163ý35ý400ý78ý93ý661ý84ý286ý145ý105ý16ý420ý87ý106ýý206ý71ý81ý49ý49ý254ý126ý44ý44ý158ý43ý86ý92ý17ý275ý37ý66ý244ý129ý46ý121ý83ý33ý21ý58ý11ý11ý11ý145ý179ýý158ý12ý151ý92ý121ý73ý73ý273ýý15ý11ý22ý1229ý31ý146ý178ý17ý742ý64ý137ý75ý219ý15ý29ý121ý160ý102ý69ý12ý79ý356ýý110ýý916ý39ý87ý11ý405ý12ý407ý204ý12ý21ý12ý12ýýý1734ý11ý475ý20ýýý34ý165ý4210ý19ý28ý19ý19ý778ý15ýý137ý14ý14ý14ý14ý18ý23ý239ý401ý49ý14ý99ý48ýý80ý46ýý91ý1227ý291ý188ý13ý13ý13ý13ý479ý11ý20ý10ý37ý10ý6ý81ý9ýý930ý10ý9ý10ý180ý9ý36ý10ý123ý9ý9ý79ý47ý16ý90ý10ý19ý24ýý485ý224ý892ý12ý12ý12ý32ý25ý703ý15ý12ý11ýý50ý213ý20ý10ý9ý9ý35ý149ý9ý9ý9ý20ý19ý1264ý10ý305ý913ý9ý556ý10ý15ý9ý9ý247ý39ý14ý9ý10ý10ý386ý543ý192ý381ý9ý9ý72ý9ý107ý48ý152ý17ý243ý9ý28ý14ý9ý27ý87ýý40ý9ý18ý9ý9ý9ý9ý477ý18ý9ý9ý25ý9ýý87ý514ý163ý36ý27ýý35ýý29ý34ý11ý11ý19ý24ý87ý9ýý42ý245ý10ý18ý10ý10ý40ý260ýý36ý131ý35ý16ýý255ý9ý9ý9ý83ý3141ý9ý9ý228ýýý28ý40ý10ý55ý9ý18ý70ý68ý9ý35ý9ý10ýý9ý27ý3ý114ý16ý154ý10ý9ý19ý9ý49ýý310ý18ý9ý33ý13ý198ýý13ý9ý9ý37ý9ý100ýý27ý25ýý11ý849ý147ý182ý27ý2ýý14ý21ý20ý60ý152ýý96ý48ý86ý10ý36ý19ý10ý132ýýý25ý13ý9ý18ý79ý44ý13ý22ý9ý18ý9ý607ý376ý56ýý9ý37ý197ý37ý49ý80ý33ý196ý116ý9ý9ý23ý9ý467ý9ý459ýý2501ý299ý71ýý305ý150ýý10ý10ý18ý559ý22ý153ý85ýý104ý3ý72ý9ý3ý10ýý18ý39ý18ý104ý118ý19ý19ý140ý9ý9ý9ý10ý25ý2275ý9ý59ý10ý18ý9ý885ý10ý9ý9ý375ý406ý10ý9ý178ý77ý20ý10ý28ý92ý77ý9ý59ý30ýý37ý9ý9ý9ý63ý9ý9ý9ý12ý26ý60ý19ý31ý9ý9ý9ý9ý414ý325ýý320ý365ý130ý117ý97ý9ý9ý13ý41ý168ý9ý108ý86ý10ý9ý258ý28ý53ýý8ý9ý70ý224ý148ý184ý20ý297ý24ý13ýý9ý9ý400ý33ý114ý40ý18ý100ýý28ý132ý27ý10ý99ý66ý22ý9ý12ýý5ý6ý136ý10ý19ý9ý9ýý9ý75ý9ý9ý9ý28ý101ý30ý1251ý412ý83ý18ý727ý18ý9ý958ýý57ý44ý9ý688ý37ý9ý100ýý103ý35ý30ý9ý9ý9ý9ýý73ý52ý18ý132ý23ý10ý202ý117ý9ý9ý18ý70ý9ý32ý13ý9ý23ý308ý9ý156ý24ý13ý118ý55ý155ýý14ý9ý37ý124ý63ý9ý18ý9ý59ýý336ý188ý9ý9ý318ý30ýý9ý9ý165ý20ý443ý11ý110ý170ý165ý78ý9ý9ý1084ý18ý9ý12ý9ý6ý24ý9ý37ý13ý51ý782ý9ý9ý9ý9ý9ý9ý66ý311ý52ý9ý53ý9ý36ý9ý122ý9ý18ý669ý29ý10ý189ý17ý9ý822ý39ý25ý9ý9ý32ý9ý67ý10ý10ý64ý28ý387ý9ý153ýý74ý9ý9ý102ý111ý110ý73ý9ý9ý57ý34ý15ý174ý106ý152ý296ý9ý9ý23ýýý10ý28ý10ý9ý9ý9ý172ý74ý30ý12ýý156ý11ý62ý9ý9ý34ý9ý52ý43ý66ý10ý61ý28ý80ý360ý28ý14ý21ý9ý33ý23ý25ý9ý13ý10ý436ý41ý20ý31ýý33ý9ý18ý18ýý205ý150ý9ý10ý12ý154ý81ý6ý11ý35ý139ý69ý98ý9ý19ý13ý9ý9ý10ý9ý14ý42ý10ý12ý11ý17ý17ý9ý9ý16ý307ý596ý43ýý9ý305ý9ý132ý512ý18ý9ý11ý86ý15ý9ý54ý41ý18ý13ý9ý42ý13ý9ý18ý19ý9ý28ý20ý13ý9ý19ý33ý20ý10ý10ý9ý9ý9ý9ý9ý15ý229ý9ý15ý9ý9ý10ý24ý9ý27ý20ý13ý12ý10ý10ý10ý10ýý9ý9ý9ý9ý23ý10ý9ý567ý9ý10ý16ý9ý10ý96ý70ý21ý191ý35ý41ý9ý9ý9ý9ý27ý19ý10ý9ý63ýý8ýýý83ýýý9ý8ý8ý19ý75ý9ý10ý9ý78ý56ý29ýý19ý19ý10ý9ý10ý10ý25ý1ý19ý19ý12ý22ý9ýý113ý9ý47ý9ý132ý208ý18ýý18ýýýý99ý9ý54ý4ý9ý9ý51ý87ý9ý36ýýý33ý9ý10ý9ý45ý42ý109ý59ý31ý184ýý7ý9ý9ý9ý10ý14ý9ý9ý10ý9ý27ý9ý8ý9ý54ý35ý24ý98ý13ý36ý9ý47ý104ýý9ý9ý9ý9ý152ý9ý35ý9ý136ý9ý16ý9ý9ý9ý9ýýý23ý18ýý9ý10ýý233ý68ý131ýý131ýý10ý9ý98ý39ý155ý10ýý113ý27ý9ý18ý88ý74ý9ý111ý18ý18ý72ý69ý30ý20ý9ý9ýý10ý85ý219ý9ý9ý9ýý119ý9ý14ý4ý9ý18ý13ý42ý42ý18ý9ý19ý10ý9ý9ýý9ý10ý28ý15ý10ýýý6ý9ý78ý126ý60ý10ý10ý9ý9ý9ý10ý9ý9ý11ý7ý7ý9ý13ý9ý11ýý12ý25ýý9ý9ý9ý9ýý14ý13ýý5þ14ý3ý5ý10ý3ý5ý422ý1ý67ý115ý19ý31ý13ý66ý95ý17ý6ý2ý10ý4ý1ý52ý4ý3ý113ý30ý11ý72ý81ý49ý52ý47ý44ý20ý14ý27ý66ý25ý42ý55ý11ý8ý4ý26ý46ý53ý73ý8ý45ý53ý10ý41ý40ý78ý9ý48ý65ý42ý32ý23ý30ý14ý8ý64ý65ý4ý4ý58ý58ý82ý53ý36ý52ý37ý37ý48ý171ý367ý177ý8ý49ý1ý31ý39ý9ý1ý32ý35ý41ý2ý8ý7ý13ý19ý42ý31ý19ý5ý14ý3ý52ý8ý31ý56ý18ý77ý27ý76ý82ý5ý42ý31ý38ý40ý74ý17ý10ý38ý4ý26ý89ý17ý40ý45ý11ý31ý38ý65ý106ý6ý4ý23ý2ý1ý4ý1ý5ý23ý3ý8ý13ý10ý89ý51ý29ý9ý25ý1ý29ý37ý26ý81ý20ý42ý20ý65ý46ý35ý63ý81ý12ý50ý17ý2ý6ý3ý20ý11ý16ý2ý8ý8ý118ý28ý29ý37ý14ý12ý45ý36ý27ý7ý3ý18ý20ý11ý3ý7ý15ý3ý10ý60ý15ý13ý18ý14ý4ý2ý36ý10ý26ý19ý12ý1ý7ý54ý1ýý17ý7ý11ý12ý5ý1ý62ý12ý3ý6ý1ý3ý6ý6ý11ý55ý13ý8ý28ý49ý3ý25ý6ý2ý12ý3ý7ý11ý4ý18ý6ý1ý4ý4ý2ý2ý10ý1ý1ý1ý2ý1ý3ý1ý4ý4ýý3ý4ý7ý4ý1ý1ý2ý3ý10ý12ý6ý2ý3ý15ý5ý1ý7ý2ý2ý3ý1ý7ý1ý1ý3ý1ý3ý18ý5ý12ý7ý2ý10ý4ý4ý39ý6ý7ý8ý6ý1ý16ý2ý13ýý2ý1ý4ý1ý1ý2ý9ý1ý1ý16ý1ý3ý1ý1ý17ý3ý3ý20ý2ý3ý3ý9ý1ý2ý5ý1ý1ý1ý5ý3ýý8ý1ý7ý5ý2ý1ý5ý17ýý4ý1ý1ý58ý2ý15ý5ý1ý28ý4ý5ý1ý16ý2ý3ý6ý4ý8ý1ý1ý8ý9ýý2ýý25ý4ý6ý1ý8ý1ý8ý9ý1ý2ý1ý1ýýý50ý1ý7ý1ýýý2ý6ý75ý1ý2ý1ý1ý77ý1ýý3ý1ý1ý1ý1ý2ý2ý11ý13ý1ý2ý6ý2ýý8ý2ýý3ý91ý11ý2ý1ý1ý1ý1ý13ý1ý2ý1ý4ý1ý1ý3ý1ýý26ý1ý1ý1ý6ý1ý4ý1ý3ý1ý1ý3ý3ý3ý4ý1ý2ý1ýý23ý7ý14ý1ý1ý1ý1ý1ý8ý1ý1ý1ýý5ý4ý2ý1ý1ý1ý1ý9ý1ý1ý1ý1ý2ý24ý1ý27ý31ý1ý15ý1ý1ý1ý1ý7ý1ý1ý1ý1ý1ý20ý19ý8ý10ý1ý1ý2ý1ý2ý2ý4ý1ý11ý1ý3ý1ý1ý3ý3ýý1ý1ý2ý1ý1ý1ý1ý39ý2ý1ý1ý1ý1ýý3ý25ý5ý4ý1ýý2ýý2ý2ý1ý1ý2ý1ý5ý1ýý3ý10ý1ý2ý1ý1ý3ý6ýý1ý6ý1ý1ýý10ý1ý1ý1ý3ý29ý1ý1ý6ýýý1ý4ý1ý3ý1ý2ý5ý13ý1ý4ý1ý1ýý1ý3ý1ý2ý1ý3ý1ý1ý2ý1ý5ýý9ý2ý1ý3ý2ý3ýý2ý1ý1ý4ý1ý11ýý3ý1ýý1ý27ý1ý3ý1ý1ýý1ý2ý1ý2ý1ýý2ý2ý3ý1ý1ý1ý1ý3ýýý1ý1ý1ý2ý3ý2ý1ý1ý1ý2ý1ý2ý3ý1ýý1ý2ý12ý1ý1ý4ý3ý3ý1ý1ý1ý1ý1ý19ý1ý8ýý32ý6ý4ýý6ý9ýý1ý1ý2ý10ý2ý12ý1ýý1ý1ý8ý1ý1ý1ýý2ý4ý2ý3ý2ý2ý2ý2ý1ý1ý1ý1ý2ý52ý1ý3ý1ý2ý1ý14ý1ý1ý1ý14ý4ý1ý1ý7ý4ý1ý1ý3ý1ý2ý1ý1ý1ýý4ý1ý1ý1ý3ý1ý1ý1ý1ý2ý2ý2ý2ý1ý1ý1ý1ý21ý6ýý14ý3ý4ý1ý1ý1ý1ý1ý1ý4ý1ý2ý16ý1ý1ý4ý3ý2ýý1ý1ý2ý4ý13ý4ý1ý9ý2ý1ýý1ý1ý38ý1ý2ý1ý2ý2ýý3ý2ý3ý1ý11ý3ý2ý1ý1ýý1ý1ý1ý1ý2ý1ý1ýý1ý3ý1ý1ý1ý3ý9ý1ý16ý19ý1ý2ý22ý2ý1ý20ýý2ý1ý1ý4ý3ý1ý2ýý2ý1ý3ý1ý1ý1ý1ýý1ý3ý2ý1ý1ý1ý5ý3ý1ý1ý2ý2ý1ý2ý1ý1ý2ý8ý1ý5ý2ý1ý1ý2ý3ýý1ý1ý2ý2ý2ý1ý2ý1ý3ýý4ý2ý1ý1ý20ý1ýý1ý1ý3ý2ý9ý1ý1ý1ý4ý3ý1ý1ý16ý2ý1ý1ý1ý1ý1ý1ý1ý1ý3ý17ý1ý1ý1ý1ý1ý1ý3ý14ý2ý1ý2ý1ý4ý1ý12ý1ý2ý4ý3ý1ý1ý2ý1ý18ý1ý1ý1ý1ý2ý1ý1ý1ý1ý2ý1ý5ý1ý8ýý2ý1ý1ý3ý1ý1ý1ý1ý1ý2ý2ý1ý13ý5ý2ý12ý1ý1ý1ýýý1ý3ý1ý1ý1ý1ý8ý8ý1ý1ýý14ý1ý3ý1ý1ý1ý1ý3ý4ý4ý1ý6ý2ý1ý12ý1ý1ý1ý1ý2ý1ý1ý1ý1ý1ý3ý3ý2ý1ýý1ý1ý2ý2ýý16ý3ý1ý1ý1ý4ý2ý1ý1ý2ý3ý6ý1ý1ý2ý1ý1ý1ý1ý1ý1ý4ý1ý1ý1ý1ý1ý1ý1ý1ý10ý11ý1ýý1ý17ý1ý10ý10ý2ý1ý1ý6ý1ý1ý4ý4ý2ý1ý1ý1ý1ý1ý2ý2ý1ý3ý2ý1ý1ý1ý1ý2ý1ý1ý1ý1ý1ý1ý1ý1ý9ý1ý1ý1ý1ý1ý1ý1ý1ý1ý1ý1ý1ý1ý1ý1ýý1ý1ý1ý1ý1ý1ý1ý22ý1ý1ý1ý1ý1ý10ý2ý4ý1ý1ý2ý1ý1ý1ý1ý3ý2ý1ý1ý1ýý1ýýý3ýýý1ý1ý1ý2ý1ý1ý1ý1ý4ý5ý1ýý2ý2ý1ý1ý1ý1ý2ý1ý2ý2ý1ý2ý1ýý3ý1ý4ý1ý4ý1ý2ýý2ýýýý1ý1ý5ý1ý1ý1ý1ý1ý1ý1ýýý1ý1ý1ý1ý2ý2ý7ý3ý1ý3ýý1ý1ý1ý2ý1ý1ý1ý1ý1ý1ý3ý1ý1ý1ý6ý1ý2ý2ý1ý5ý1ý1ý7ýý1ý1ý1ý1ý2ý1ý4ý1ý1ý1ý2ý1ý1ý1ý1ýýý1ý1ýý1ý1ýý9ý5ý1ýý4ýý1ý1ý6ý1ý2ý1ýý7ý1ý1ý2ý3ý3ý1ý1ý2ý2ý1ý1ý5ý2ý1ý1ýý1ý1ý4ý1ý1ý1ýý2ý1ý1ý1ý1ý2ý1ý2ý1ý2ý1ý2ý1ý1ý1ýý1ý1ý4ý1ý1ýýý1ý1ý2ý3ý2ý1ý1ý1ý1ý1ý1ý1ý1ý1ý1ý1ý1ý1ý1ý1ýý1ý1ýý1ý1ý1ý1ýý1ý1ýý1þý58ýý22ýýý1067ýýý555ýýýý78ý1436ý140ýý1043ýýý1041ý61ý40ýý354ý24ýý22ý447ý109ý163ý2ý44ý10ýýý4ýýý38ýýýýý48ýý242ýý26ý202ý110ý190ý34ý43ýý16ý36ý8ýýý59ýýý292ý276ý29ýý55ý125ý97ý153ý15ý21ý6ý4ý90ý218ý255ý76ýýýýý9ýýý73ý236ý20ýýý305ýý175ý31ýýý51ý28ýý30ýýý50ý20ý75ýý43ý96ýýý18ý222ý48ý8ý19ýý25ýý4ý41ý63ý416ý32ý11ýý5ý30ý157ýýý3ýýýýýýýýýý76ý483ý70ýýý199ýý5ýý1ý173ý170ý11ý5ý57ý4ýý894ý91ý8ý41ýýýýý62ý23ý16ýý54ýý791ý346ý3ýý15ý12ý18ýý20ýýý4ý6ý21ýýý6ýýý30ý5ý53ýýýýý38ý18ý74ý6ýýýý39ýýýýýýýýý18ýýý130ýýýýýý8ýý163ýýýý344ýýý56ýý122ý26ý25ý123ýýýýýýýýýýýýýýýý14ýýýýýýýýýý58ýýýýýýýý7ýýýýý32ýýýýýý15ý17ýý8ýýýýý42ýýýý13ýý52ýý16ýýýý9ýýýý9ýýý11ýý33ýýýýýý77ýýýýýýýýýýý55ýýýýý29ýýýýýýý1ýýý79ýýýýý36ýýýýýýýý21ýýýýýýýýýýýýýýý40ýýýýýýýý110ýý196ýýýýýý1786ýýýýý37ýýý38ýýýýýýýý21ýýýýýý3ýýýý83ý5ýýýýýýýýýýýýýýýý22ýýýýýýýýýýýý9ý3ý12ýýýýý4ýý328ýýýýýý629ýýýýýý49ýýýýýýýýýýýý24ýý18ý139ýýýýýýý21ýýýýýýý140ýýýýýýýýýýý67ýýýýýýýýýýýýýýý47ýýýýýýýý55ýýýýýýýýýýýýý41ýýý4ýýýýýý11ýýýýýýýý22ýýýýý1083ýýýýýýýýýýýýý10ýý7ýýýýýýýýý24ýýýýýýýýýý17ýýýýýýýýýýýýýýý297ý147ý69ýýýýýýýýýý88ýýýýýýýýýýýýýýýýýýýýý518ýýýýýýýýý2ýýýýýýýý136ýýýý565ý217ýýýýýýýýýýý11ýýýýýýý3ýýýýýýýýýýýýýýýý140ýýýýýý173ýýýýýýýýý10ýýýýýýýýýýýýýý22ýýýýýýýýýýýýý74ý150ýý48ýýýýýýýýýýýý9ýýýýýýý8ýýýý15ýýý201ýýýýýý133ýýýýý20ýýýýýý9ýýýýýýýýýý10ýýýýýýýýý10ýýý505ý83ýýý65ýýý135ýýýýý55ý8ýý90ýýýýýýýýýýýýýýýý89ýýýýý61ýýýýýý24ýýý5ýýýý23ýýýýý109ýýýýý41ýý217ýýýý33ýýýýýýýýýýý99ýýýý326ýýýýýýýýýýý36ýýýýýýý44ý34ý30ýý44ýýýý27ýýý60ý10ýýýýý336ýýýýýýýýýý53ýýýýýý22ýýýýýýýýý55ýýý9ý92ý134ý22ýýýýýýý9ýýýýý40ý40ýýýý31ýý44ýýýýýý32ý2ýýýýý125ýýýýý22ýýýýýýýýýýýýýýýýý28ýýýýýýýýýýýýýýýýýýýýýýýýýýýýý33ý484ýýýý94ýý29ý420ýýýýýýý29ýýýýý42ýýýý10ýýýýýýýýýýýýýýýýý66ýýýýýýýýýýýýýýýýýýýýýýýý211ýýýýýý13ý13ý4ý191ýýýýýýýýýýýýýýýýýýýýýý9ýýýýýý8ýýýýýýýýý18ýýýýýýýý58ýýýý67ý208ýýýýýýýýý26ýýýýýýýýýýýýýý36ý19ý68ý27ýýýýýýýýýýýýýý16ýýýýýýýýý9ýýý80ýýýýýýýýýý136ýýýýýýýýýýýýýýý167ý62ýýý97ýýýý7ýý155ýýý96ýýýýýýý111ý9ý9ý72ý69ý20ý11ýýýýý85ý219ýýýýý119ýýýýý9ýý42ý42ý9ýý10ý10ý9ý9ýý9ý10ý28ý15ý10ýýý6ý9ý78ý126ý60ý10ý10ý9ý9ý9ý10ý9ý9ý11ý7ý7ý9ý13ý9ý11ýý12ý25ýý9ý9ý9ý9ýý14ý13ýý5þý1ýý1ýýý41ýýý12ýýýý4ý9ý2ýý1ýýý1ý1ý1ýý10ý2ýý6ý6ý3ý1ý1ý1ý1ýýý1ýýý4ýýýýý2ýý4ýý2ý4ý1ý3ý3ý2ýý4ý3ý1ýýý7ýýý7ý6ý1ýý7ý3ý7ý4ý2ý2ý2ý1ý4ý16ý20ý9ýýýýý2ýýý3ý4ý2ýýý2ýý3ý2ýýý1ý1ýý3ýýý2ý2ý6ýý3ý6ýýý2ý6ý2ý2ý4ýý2ýý1ý5ý3ý5ý2ý1ýý1ý5ý8ýýý3ýýýýýýýýýý1ý10ý4ýýý2ýý1ýý1ý6ý2ý2ý1ý2ý1ýý14ý7ý2ý2ýýýýý3ý1ý1ýý1ýý15ý5ý1ýý2ý2ý2ýý1ýýý2ý1ý2ýýý1ýýý3ý1ý2ýýýýý5ý1ý4ý1ýýýý3ýýýýýýýýý4ýýý1ýýýýýý2ýý3ýýýý4ýýý2ýý1ý1ý1ý5ýýýýýýýýýýýýýýýý1ýýýýýýýýýý2ýýýýýýýý1ýýýýý2ýýýýýý2ý1ýý1ýýýýý3ýýýý1ýý2ýý2ýýýý1ýýýý1ýýý1ýý1ýýýýýý4ýýýýýýýýýýý1ýýýýý1ýýýýýýý1ýýý3ýýýýý1ýýýýýýýý1ýýýýýýýýýýýýýýý1ýýýýýýýý4ýý2ýýýýýý30ýýýýý4ýýý1ýýýýýýýý2ýýýýýý1ýýýý1ý1ýýýýýýýýýýýýýýýý1ýýýýýýýýýýýý1ý1ý1ýýýýý1ýý4ýýýýýý2ýýýýýý2ýýýýýýýýýýýý1ýý3ý5ýýýýýýý1ýýýýýýý6ýýýýýýýýýýý3ýýýýýýýýýýýýýýý4ýýýýýýýý5ýýýýýýýýýýýýý2ýýý1ýýýýýý1ýýýýýýýý1ýýýýý3ýýýýýýýýýýýýý2ýý1ýýýýýýýýý1ýýýýýýýýýý1ýýýýýýýýýýýýýýý5ý1ý1ýýýýýýýýýý1ýýýýýýýýýýýýýýýýýýýýý1ýýýýýýýýý1ýýýýýýýý2ýýýý7ý1ýýýýýýýýýýý1ýýýýýýý1ýýýýýýýýýýýýýýýý5ýýýýýý3ýýýýýýýýý1ýýýýýýýýýýýýýý1ýýýýýýýýýýýýý4ý2ýý3ýýýýýýýýýýýý2ýýýýýýý1ýýýý2ýýý3ýýýýýý15ýýýýý1ýýýýýý1ýýýýýýýýýý1ýýýýýýýýý1ýýý5ý3ýýý3ýýý3ýýýýý1ý1ýý1ýýýýýýýýýýýýýýýý3ýýýýý1ýýýýýý2ýýý1ýýýý1ýýýýý1ýýýýý2ýý2ýýýý3ýýýýýýýýýýý1ýýýý3ýýýýýýýýýýý3ýýýýýýý1ý3ý1ýý1ýýýý3ýýý1ý1ýýýýý6ýýýýýýýýýý1ýýýýýý1ýýýýýýýýý1ýýý2ý2ý1ý2ýýýýýýý1ýýýýý2ý3ýýýý3ýý2ýýýýýý3ý1ýýýýý3ýýýýý1ýýýýýýýýýýýýýýýýý1ýýýýýýýýýýýýýýýýýýýýýýýýýýýýý2ý6ýýýý5ýý2ý5ýýýýýýý2ýýýýý1ýýýý1ýýýýýýýýýýýýýýýýý3ýýýýýýýýýýýýýýýýýýýýýýýý8ýýýýýý2ý1ý1ý1ýýýýýýýýýýýýýýýýýýýýýý1ýýýýýý2ýýýýýýýýý1ýýýýýýýý2ýýýý2ý1ýýýýýýýýý2ýýýýýýýýýýýýýý1ý1ý4ý1ýýýýýýýýýýýýýý2ýýýýýýýýý2ýýý6ýýýýýýýýýý1ýýýýýýýýýýýýýýý6ý3ýýý2ýýýý2ýý2ýýý4ýýýýýýý1ý1ý1ý1ý1ý3ý1ýýýýý1ý4ýýýýý2ýýýýý1ýý2ý1ý1ýý1ý1ý1ý1ýý1ý1ý4ý1ý1ýýý1ý1ý2ý3ý2ý1ý1ý1ý1ý1ý1ý1ý1ý1ý1ý1ý1ý1ý1ý1ýý1ý1ýý1ý1ý1ý1ýý1ý1ýý1þCyber ProductsýSoftware IncýComputer WarehouseýBits and Bytes IncýComputers Etc.ýFuture In ComputingýComp ProductsýLogical ComputersýABC ComputersýComputers Inc.SystemsýBetter BytesýSecure ComputersýOnes & Zeros Inc.ýModem ProductsýIntercom ProductsýMemory Plus Inc.ýBetter ConnectionýNet ConnectýComputer TipsýMemory CapturersýComp Data Inc.ýFuture ComputersýNumber One in ComputingýComputers R UsýJoe's ComputersýComputer FancyýDisk ProductsýPrinter ProductsýData BitsýDisks N MoreýFor Computers Inc.ýElectronic CompanyýUSA ComputersýData NetýBest Computer CompanyýThe Only ComputersýData CompýComputer SittersýComputer Portables Inc.ýAlfreds FutterkisteýComputers N MoreýReal ComputersýComputer TownýClassic ComputersýComputer TrainersýBetter ComputingýComp ConsultingýComputer TechýComputers GaloreýAna Trujillo EmparedadosýAntonio Moreno TaqueriaýBerglunds snabbkopýBlauer See DelikatessenýBlondel pere et filsýBolido Comidas preparadasýBon app'ýBottom-Dollar MarketsýB's BeveragesýCactus Comidas para llevaýChop-suey ChineseýComercio MineiroýConsolidated HoldingsýDrachenblut DelikatessenýDu monde entierýErnst HandelýFamilia ArquibaldoýFISSA Fabrica Inter. SalcýFolies gourmandesýFrankenversandýFrance restaurationýFranchi S.p.A.ýGaleria del gastronomoýEastern ConnectionýGodos Cocina TipicaýGourmet LanchonetesýGreat Lakes Food MarketýGROSELLA-RestauranteýHanari CarnesýNorth/SouthýAround the HornýHILARION-Abastosý2497ýOttilies Kaseladenþ8089200ý4855773ý3681755ý3254015ý2793473ý2350000ý2348627ý2305506ý2284902ý2000000ý1734075ý1703750ý1608034ý1579932ý1433950ý1283175ý1242250ý1110000ý1069960ý1045482ý1030532ý1020000ý1013550ý1000000ý1000000ý947550ý908400ý887500ý855100ý850000ý836400ý750000ý748879ý715625ý712600ý712500ý699634ý665680ý635452ý635027ý588528ý584774ý577500ý572635ý547450ý510000ý500000ý485423ý484035ý481889ý443700ý436147ý433519ý408000ý393543ý390050ý335050ý322500ý301635ý296015ý252500ý252192ý250000ý250000ý206250ý203760ý160600ý160550ý158400ý148000ý121400ý115315ý100600ý87100ý86560ý76125ý74000ý65284ý63000ý55043ý46500ý25974ý1788þDrachenblut DelikatessenýComp ConsultingýFuture In ComputingýComercio MineiroýIntercom ProductsýIsland TradingýKoniglich EssenýNumber One in ComputingýLa corne d'abondanceýFuture ComputersýLogical ComputersýEastern ConnectionýMemory Plus Inc.ýComputers Inc.SystemsýMemory CapturersýComputers GaloreýBolido Comidas preparadasýData NetýBetter ConnectionýFolies gourmandesýLa maison d'AsieýFrance restaurationýComputers Etc.ýGodos Cocina TipicaýComputer TechýComputer SittersýBest Computer CompanyýBetter ComputingýLaughing Bacchus Wine CelýCyber ProductsýLazy K Kountry StoreýHanari CarnesýAna Trujillo EmparedadosýSecure ComputersýLehmanns MarktstandýLet's Stop N ShopýBerglunds snabbkopýGourmet LanchonetesýLILA-SupermercadoýLINO-DelicatesesýGROSELLA-RestauranteýDu monde entierýLonesome Pine RestaurantýBlondel pere et filsýHungry Coyote Import StorýPrinter ProductsýMagazzini Alimentari RiunýFuria Bacalhau e Frutos dýComputer TrainersýABC ComputersýNet ConnectýOnes & Zeros Inc.ýMaison DeweyýMere PaillardeýErnst HandelýAlfreds FutterkisteýElectronic CompanyýComputer WarehouseýMorgenstern GesundkostýDisks N MoreýAround the HornýReal ComputersýData BitsýNorth/SouthýFor Computers Inc.ýJoe's ComputersýThe Only ComputersýOceano Atlantico Ltda.ýCactus Comidas para llevaýModem ProductsýFamilia ArquibaldoýAntonio Moreno TaqueriaýOld World DelicatessenýSoftware IncýClassic ComputersýHILARION-AbastosýBottom-Dollar MarketsýFISSA Fabrica Inter. SalcýComputer Towný1859ýComputer FancyýBon app'ýChop-suey ChineseýGaleria del gastronomoýDisk ProductsýFrankenversandýB's BeveragesýComputer TipsýComputers N MoreýData CompýFranchi S.p.A.ýBits and Bytes IncýConsolidated HoldingsýBlauer See DelikatessenýComp Productsý2521ýUSA ComputersýOttilies KaseladenýBetter Bytesý2497ýGreat Lakes Food Marketþ1043ý1041ý391ý330ý299ý272ý239ý217ý208ý188ý179ý179ý178ý152ý152ý147ý147ý147ý146ý146ý131ý130ý117ý117ý117ý116ý116ý116ý111ý102ý99ý99ý92ý89ý86ý86ý86ý85ý83ý83ý76ý58ý55ý55ý55ý55ý54ý54ý54ý54ý54ý54ý53ý42ý42ý40ý40ý36ý34ý34ý33ý33ý29ý29ý29ý29ý25ý25ý25ý25ý25ý25ý25ý25ý25ý25ý25ý24ý24ý24ý24ý24ý24ý24ý24ý24ý23ý23ý22ý20ý18ý13ý11ý11ý8ý7ý7ý6ý5ý4ý1þComercio MineiroýParis specialitesýDrachenblut DelikatessenýThe Cracker Boxþ257.9ý233.3ý92.6ý70.7þ31.5ý36.1ý104.3ý51.8þ8.8ý10.8ý54.2ý30.4000257DICT_PORTAL.SALESþ0c0000033CLOSE.DATE.YMOþ0c1Aþ0þþþþþþA;1(DY):1(D2-)(G-1)þRþ1000002BCLOSE.DATE.MMþ0c1Aþ1þCLOSE MONTHþþþþþDMþRþ800002CCLOSE.DATE.YMþ0c1Aþ0þþþþþþA;1(DY):1(DM)þRþ10000028CLOSE.DATEþ0c1Sþ1þCLOSE DATEþþþþD2-þþRþ8000022REP.NAMEþ0c1Aþ5þRep.NameþþþþþþLþ2500002CCLOSE.DATE.YYYYþ0c1Aþ1þCLOSE DATEþþþþþDYþRþ800001APIPEþ0c1Aþ0þ þþþþþF;C|þLþ1000045GROSS.PROFITþ0c1Aþ0þgross profitþþþþMD2þA;N(EXT.AMT)-N(EXT.COST)þRþ10000019BRANCHþ0c1Aþ13þþþþþþþLþ15000019REGIONþ0c1Aþ14þþþþþþþLþ15000026EXT.AMTþ0c1Aþ8þExt.AmountþþþþMD2þþRþ10000025EXT.COSTþ0c1Aþ9þExt.CostþþþþMD2þþRþ10000018CNTþ0c1Aþ0þþþþþþF;C1þRþ50000E2DICT_PORTAL.APþ0c0000026DATE.PAIDþ0c1Aþ8þDate PaidþþþþD2-þþRþ8000029INV.AMOUNTþ0c1Aþ6þInv.AmountþþþþMD2þþRþ13000025DUE.DATEþ0c1Aþ20þDue.DateþþþþD2-þþRþ8000024BALANCEþ0c1Aþ50þBalanceþþþþMD2þþRþ1300001APIPEþ0c1Aþ0þ þþþþþF;C|þLþ100015EDICT_MVDB.WIDGET.TYPESþ0c000001ATYPEþ0c1Aþ1þTYPEþþþþþþLþ15000018SWFþ0c1Aþ2þSWFþþþþþþLþ15000020HANDLERþ0c1Aþ3þHANDLERþþþþþþLþ1500001AICONþ0c1Aþ4þICONþþþþþþLþ2500001ADESCþ0c1Aþ6þDESCþþþþþþLþ300000171þ0c1Aþ1þTYPEþþþþþþLþ150000172þ0c1Aþ6þDESCþþþþþþLþ300000173þ0c1Aþ4þICONþþþþþþLþ2500001CGROUPþ0c1Aþ5þGROUPþþþþþþLþ15000021INACTIVEþ0c1Aþ7þINACTIVEþþþþþþLþ1000C72MVDB.WIDGET.TYPESþ0c0000043FC2DPIEþ0c2FC2DPIEþPie2DþFCPIEþpie_widget_icon.jpgþPIEþ2D Pie Chart00005CSPARKCOLUMNþ0c2SPARKCOLUMNþSparkColumnþFWSPARKþspark_widget_icon.gifþFWþSpark Column Chartþ1000055VBULLETþ0c2VBULLETþVBulletþFWBULLETþbullet_widget_icon.gifþFWþVertical Bullet Chartþ1000054SPARKLINEþ0c2SPARKLINEþSparkLineþFWSPARKþspark_widget_icon.gifþFWþSpark Line Chartþ1000057HBULLETþ0c2HBULLETþHBulletþFWBULLETþbullet_widget_icon.gifþFWþHorizontal Bullet Chartþ100004AFCCOLUMN3Dþ0c2FCCOLUMN3DþColumn3DþSþcol_widget_icon.jpgþLCþ3D Column Chart00005DFCMSCOLUMN3Dþ0c2FCMSCOLUMN3DþMSColumn3DþMþcol_widget_icon.jpgþLCþ3D Multi-Series Column Chart000039TABLEþ0c2TABLEþþTABLEþtable_widget_icon.jpgþþTable Widget000060HLINEARGAUGEþ0c2HLINEARGAUGEþHLinearGaugeþFWGAUGEþlinear_widget_icon.jpgþFWþLinear Gauge Chartþ1000045FUNNELþ0c2FUNNELþFunnelþFWFPþfunnel_widget_icon.gifþFWþFunnel Chartþ1000061SPARKWINLOSSþ0c2SPARKWINLOSSþSparkWinLossþFWSPARKþspark_widget_icon.gifþFWþSpark Win/Loss Chartþ100005BTHERMOMETERþ0c2THERMOMETERþThermometerþFWGAUGEþtherm_widget_icon.jpgþFWþThermometer Chartþ100004APYRAMIDþ0c2PYRAMIDþPyramidþFWFPþpyramid_widget_icon.jpgþFWþPyramid Chartþ1000060ANGULARGAUGEþ0c2ANGULARGAUGEþAngularGaugeþFWGAUGEþangle_widget_icon.jpgþFWþAngular Gauge Chartþ100003AUSAMAPþ0c2MAPþMAPþþmap_widget_icon.jpgþMAPþUSA Map Chartþ1000043FCAREA2Dþ0c2FCAREA2DþArea2DþSþarea_widget_icon.gifþLCþ2D Area Chart000051FCMSBAR2Dþ0c2FCMSBAR2DþMSBar2DþMþbar_widget_icon.gifþLCþ2D Multi-Series Bar Chart000067FCSTACKEDCOLUMN2Dþ0c2FCSTACKEDCOLUMN2DþStackedColumn2DþMþcol_widget_icon.jpgþLCþ2D Stacked Column Chart000059FCDOUGHNUT2Dþ0c2FCDOUGHNUT2DþDoughnut2DþFCPIEþdonut_widget_icon.jpgþPIEþ2D Doughnut Chart00003ATEXTþ0c2TEXTþþTEXTþtext_widget_icon.pngþþPreformatted Text000052CYLINDERþ0c2CYLINDERþCylinderþFWGAUGEþcylinder_widget_icon.jpgþFWþCylinder Chartþ1000054FCMSAREA2Dþ0c2FCMSAREA2DþMSAreaþMþarea_widget_icon.gifþLCþ2D Multi-Series Area Chart000034HTMLþ0c2HTMLþþHTMLþhtml_widget_icon.pngþþHTML Widget00003AFCLINEþ0c2FCLINEþLineþSþline_widget_icon.gifþLCþLine Chart00004DFCMSLINEþ0c2FCMSLINEþMSLineþMþline_widget_icon.gifþLCþMulti-Series Line Chart000043FC3DPIEþ0c2FC3DPIEþPie3DþFCPIEþpie_widget_icon.jpgþPIEþ3D Pie Chart000045VLEDþ0c2VLEDþVLEDþFWGAUGEþled_widget_icon.jpgþFWþVertical LED Gaugeþ1000047HLEDþ0c2HLEDþHLEDþFWGAUGEþled_widget_icon.jpgþFWþHorizontal LED Gaugeþ100004AFCCOLUMN2Dþ0c2FCCOLUMN2DþColumn2DþSþcol_widget_icon.jpgþLCþ2D Column Chart00003EFCBAR2Dþ0c2FCBAR2DþBar2DþSþbar_widget_icon.gifþLCþ2D Bar Chart00005DFCMSCOLUMN2Dþ0c2FCMSCOLUMN2DþMSColumn2DþMþcol_widget_icon.jpgþLCþ2D Multi-Series Column Chart000067FCSTACKEDCOLUMN3Dþ0c2FCSTACKEDCOLUMN3DþStackedColumn3DþMþcol_widget_icon.jpgþLCþ3D Stacked Column Chart00005BFCSTACKEDBAR2Dþ0c2FCSTACKEDBAR2DþStackedBar2DþMþbar_widget_icon.gifþLCþ2D Stacked Bar Chart00003CGANTTþ0c2GANTTþGanttþþgantt_widget_icon.gifþFWþGantt Chartþ1000042FAILEDþ0c2FAILEDþþFAILEDþtext_widget_icon.pngþþPreformatted Textþ1000033MAPþ0c2MAPþMAPþþmap_widget_icon.jpgþMAPþMap Chartþ100003EBULBþ0c2BULBþBulbþFWGAUGEþbulb_widget_icon.jpgþFWþBulb Gaugeþ1000061FCSTACKEDAREA2Dþ0c2FCSTACKEDAREA2DþStackedArea2DþMþarea_widget_icon.gifþLCþ2D Staacked Area Chart0153EBWOBJ.BPþ0c0000B9CWOBJ.PARSEOBJECTþ0c2SUBROUTINE WOBJ.PARSEOBJECT(JSTR,INDEXPOS,PARSEOBJECT)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: parse json objectþ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þIF WOBJ.DEBUG THEN PRINT "PARSEOBJECT - STARTING"þ*þPARSEOBJECT=""þCALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)þ*þIF JSTR[INDEXPOS,1] <> "{" THENþ    PSERRORS<-1> = "Invalid Object at position ":INDEXPOS:" : ":JSTR[INDEXPOS,1]þ    RETURNþENDþ*þLEN.JSTR = LEN(JSTR)þINDEXPOS+=1þ*þ*þJSONOBJECT(JSONOBJECT$NODECNTR)+=1þNODEID=JSONOBJECT(JSONOBJECT$NODECNTR); * WE NEED TO STAY AT THIS NODEID POSITIONþJSONOBJECT(JSONOBJECT$NODETYPE)<1,NODEID>="O"; *SET AS OBJECTþIF WOBJ.DEBUG THENþ    PRINT "PARSEOBJECT: SETTING NODETYPE NODEID:":NODEID:" = O"þENDþ*þLOOPþ    CALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)þ    C=JSTR[INDEXPOS,1]þ    BEGIN CASEþ        CASE C="}"þ            INDEXPOS+=1þ            IF WOBJ.DEBUG > 1 THEN PRINT "PARSEOBJECT: EXIT CHAR }"þ            EXITþ        CASE C=","þ            INDEXPOS+=1þ            CALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)þ        CASE INDEXPOS > LEN.JSTRþ            PSERRORS<-1>="Missing '}': ":JSTR[LEN.JSTR-20,20]þ            EXITþ    END CASEþ    *þ    * ADD KEY/VALUE PAIRþ    *þ    JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEID>+=1þ    PARTPOS=JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEID>þ    IF WOBJ.DEBUG THEN PRINT "PARSEOBJECT: ":NODEID:" PARSEOBJECT CALLING PARSEKEY"þ    CALL WOBJ.PARSEKEY(JSTR,INDEXPOS,SKEY)þ    JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)<1,NODEID,PARTPOS>=SKEYþ    IF WOBJ.DEBUG THEN PRINT "PARSEOBJECT: ":NODEID:" BACK FROM PARSEKEY: ":SKEY[1,10]þ    *þ    IF WOBJ.DEBUG THEN PRINT "PARSEOBJECT: ":NODEID:" CALLING PARSEVALUE"þ    CALL WOBJ.PARSEVALUE(JSTR,INDEXPOS,PARSEVALUE)þ    IF WOBJ.DEBUG THEN PRINT "PARSEOBJECT: ":NODEID:" BACK FROM PARSEVALUE N=":NODEID:" P=":PARTPOS:" T=":PARSEVALUE<1>:" F=":PARSEVALUE<2>þ    BEGIN CASEþ        CASE PARSEVALUE=""þ            PSERRORS<-1>="Invalid value syntax for node ":SKEYþ            RETURNþ        CASE PARSEVALUE<1>="A" OR PARSEVALUE<1>="O"þ            * ARRAYþ            JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,NODEID,PARTPOS>=PARSEVALUE<1>þ            JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,NODEID,PARTPOS>=PARSEVALUE<2>þ        CASE 1þ            JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,NODEID,PARTPOS>=PARSEVALUE<1>þ            V=PARSEVALUE<2>þ            IF INDEX(V,LF,1) OR INDEX(V,CR,1) THENþ                V=OCONV(V,"MX0C")þ                E="H"þ            END ELSEþ                E="A"þ            ENDþ            JSONOBJECT(JSONOBJECT$NODEPARTS.VALUE)<1,NODEID,PARTPOS>=Vþ            JSONOBJECT(JSONOBJECT$NODEPARTS.ENCODING)<1,NODEID,PARTPOS>=Eþ    END CASEþREPEATþPARSEOBJECT="O"þPARSEOBJECT<2>=NODEIDþIF WOBJ.DEBUG THEN PRINT "PARSEOBJECT - END OF ROUTINE"þRETURNþENDþ0003E3WOBJ.INCLUDEþ0c2*þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: WOBJ includes for json libraryþ*þ**********************************************************************þ*þCOMMON /MVIWOBJ/ PSERRORS,JSONOBJECT(20),WOBJ.DEBUG,PRETTIFY,PRETTIFYCR,INDENT.DEPTHþ*þEQU CR TO CHAR(13), LF TO CHAR(10), TB TO CHAR(9), BS TO CHAR(8), FF TO CHAR(12)þNL = CR:LFþ*þEQU INVALID_JSON TO 1þEQU INVALID_OBJECT TO 2þEQU INVALID_ARRAY TO 3þEQU INVALID_BOOLEAN TO 4þEQU INVALID_NULL TO 5þEQU INVALID_KEY TO 6þ*þEQU JSONOBJECT$NODECNTR TO 2þ* ARRAY OF NODESþEQU JSONOBJECT$NODETYPE TO 3þEQU JSONOBJECT$NODELENGTH TO 4þEQU JSONOBJECT$NODEPARTS.KEY TO 5þEQU JSONOBJECT$NODEPARTS.TYPE TO 6þEQU JSONOBJECT$NODEPARTS.FLINK TO 7þEQU JSONOBJECT$NODEPARTS.BLINK TO 8þEQU JSONOBJECT$NODEPARTS.ENCODING TO 9þEQU JSONOBJECT$NODEPARTS.VALUE TO 10þ* END OF ARRAY OF NODES000248WOBJ.NUMBER.TOSTRINGþ0c2SUBROUTINE WOBJ.NUMBER.TOSTRING(JSON,NODEPOS,PARTPOS)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: convert json number to stringþ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þCALL WOBJ.DECODE.PART(NODEPOS,PARTPOS,VALUE)þ*þCALL WOBJ.ENCODE(VALUE,OUT.VALUE)þJSON:=OUT.VALUEþ*þIF WOBJ.DEBUG THEN PRINT "N=":NODEPOS:" P=":PARTPOS:" V=":VALUEþRETURNþEND000797WOBJ.PARSEKEYþ0c2SUBROUTINE WOBJ.PARSEKEY(JSTR,INDEXPOS,PARSEKEY)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: parse json property keyþ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þPARSEKEY=""þIF WOBJ.DEBUG THEN PRINT "PARSEKEY: ENTERING ":INDEXPOSþ*þCALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)þ*þLEN.JSTR = LEN(JSTR)þ*þIFDQUOTE = 0þIFSQUOTE = 0þþLOOPþWHILE INDEXPOS > 0 AND INDEXPOS <= LEN.JSTR DOþ    C = JSTR[INDEXPOS,1]þ    IF WOBJ.DEBUG > 0 THEN PRINT "PARSEKEY: ":INDEXPOS,C,SEQ(C),PARSEKEYþ    BEGIN CASEþ        CASE C = '"'þ            IF NOT(IFDQUOTE) THEN IFDQUOTE=1 ELSE IFDQUOTE=0þ            INDEXPOS+=1þ            IF NOT(IFDQUOTE) THENþ                CALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)þ                IF JSTR[INDEXPOS,1] <> ":" THENþ                    PSERRORS<-1>="Invalid Key at position ":INDEXPOS:" : ":PARSEKEYþ                    EXITþ                ENDþ            ENDþ        CASE C = "'"þ            IF NOT(IFSQUOTE) THEN IFSQUOTE=1 ELSE IFSQUOTE=0þ            INDEXPOS+=1þ            IF NOT(IFSQUOTE) THENþ                CALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)þ                IF JSTR[INDEXPOS,1] <> ":" THENþ                    PSERRORS<-1>="Invalid Key at position ":INDEXPOS:" : ":PARSEKEYþ                    EXITþ                ENDþ            ENDþ        CASE C = ":"þ            INDEXPOS+=1þ            IF NOT(IFDQUOTE) AND NOT(IFSQUOTE) THENþ                IF WOBJ.DEBUG THEN PRINT "EXITING"þ                EXITþ            ENDþ            PARSEKEY:=Cþ        CASE 1þ            IF C=LF OR C=CR OR C=TB OR C=" " THENþ                NULLþ            END ELSEþ                PARSEKEY:=Cþ            ENDþ            INDEXPOS+=1þ    END CASEþREPEATþ*þIF WOBJ.DEBUG THEN PRINT "PARSEKEY: ":PARSEKEYþRETURNþEND00021FWOBJ.SKIPCHARþ0c2SUBROUTINE WOBJ.SKIPCHAR(JSTR,INDEXPOS)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: skip all whitespaceþ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þWS = " ()":TB:CR:LF:@AMþLEN.JSTR=LEN(JSTR)þLOOP WHILE INDEXPOS <= LEN.JSTR DOþ    IF INDEX(WS,JSTR[INDEXPOS,1],1) = 0 THEN EXITþ    INDEXPOS += 1þREPEATþRETURNþEND000836UDO.Hþ0c2******************************************************************************þ*þ*   Header file for UDO BASIC programsþ*þ*þ*    Rocket Software Confidentialþ*    OCO Source Materialsþ*    Copyright Rocket Software, Inc.  2011þþ*****************************************************************************þ* UDO Status codes:þEQU	UDO_SUCCESS			TO 			0þEQU	UDO_ERROR			TO			-1þEQU	UDO_INVALIDHANDLE 		TO			-2þþ* UDO value types: þEQU	UDO_FALSE			TO			0þEQU	UDO_TRUE			TO			1þEQU	UDO_NULL 			TO			2þEQU	UDO_NUMBER			TO			3þEQU	UDO_STRING			TO			4þEQU	UDO_ARRAY			TO			5þEQU	UDO_OBJECT			TO			6þþ* UDO Error codes:þEQU	UDOERROR_OUTOFMEMORY			TO		1þEQU	UDOERROR_INVALIDJSON			TO		2þEQU	UDOERROR_NOTSTANDALONE			TO		3þEQU	UDOERROR_NOTFOUND			TO		4þEQU	UDOERROR_INVALIDNAME			TO		5þEQU	UDOERROR_NOTANOBJECT			TO		6þEQU	UDOERROR_NOTANARRAY			TO		7þEQU	UDOERROR_INVALIDINDEX			TO		8þEQU	UDOERROR_OUTOFBOUND			TO		9þEQU	UDOERROR_INVALIDOPTION			TO		10þEQU	UDOERROR_INVALIDOPTIONVALUE		TO		11þEQU	UDOERROR_OPTIONNOTSET			TO		12þEQU	UDOERROR_INVALIDFORMAT			TO		13þEQU	UDOERROR_INVALIDVALUE			TO		14þEQU	UDOERROR_INVALIDTYPE			TO		15þEQU	UDOERROR_REFERENCECYCLE			TO		16þEQU 	UDOERROR_INVALIDXML			TO		17þEQU 	UDOERROR_DOMAPIFAILURE			TO		18þ	þ* UDO flags:þEQU	UDOFORMAT_JSON				TO		0þEQU	UDOFORMAT_XML				TO		1þþ* UDO options:þEQU	UDOOPTION_UDO2XML_XMLSTYLE		TO	0þEQU	UDOOPTION_UDO2XML_NAMESPACE		TO	1þEQU	UDOOPTION_OUTPUTMODE			TO	2þEQU	UDOOPTION_XML2UDO_INFERNUMBER		TO	3	þEQU	UDOOPTION_XML2UDO_INFERBOOLEAN		TO	4	þEQU	UDOOPTION_XML2UDO_INFERNULL	 	TO	5	þEQU	UDOOPTION_XML2UDO_EMPTY2NULL	 	TO	6	þEQU	UDOOPTION_XML2UDO_TRIMWHITESPACE	TO	7	þEQU	UDOOPTION_XML2UDO_CASEINSENSITIVE	TO	8	þEQU	UDOOPTION_XML2UDO_KEEPROOT		TO	9	þEQU 	UDOOPTION_UDO2XML_ROOTNAME		TO	10	þEQU 	UDOOPTION_UDO2XML_NULL2EMPTY		TO	11þEQU 	UDOOPTION_UDO2XML_NAMESPACEPREFIX	TO	12	þþ* UDO option values:	þEQU	UDO_XMLSTYLE_ATTR			TO		"ATTRIBUTE"þEQU	UDO_XMLSTYLE_ELEM			TO		"ELEMENT"þEQU	UDO_OUTPUT_COMPACT      		TO		"COMPACT"þEQU 	UDO_OUTPUT_FORMATTED    		TO		"FORMATTED"þEQU	UDO_OPTION_ON				TO		"ON"þEQU	UDO_OPTION_OFF				TO		"OFF"00030EWOBJ.PARSENULLþ0c2SUBROUTINE WOBJ.PARSENULL(JSTR,INDEXPOS,PARSESTRING)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: parse json null keywordþ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þPARSESTRING=""þSAVE.INDEXPOS=INDEXPOSþ*þCALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)þIF OCONV(JSTR[INDEXPOS,4],"MCL") = "null" THENþ    INDEXPOS+=4þ    CALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)þ    C=JSTR[INDEXPOS,1]þ    IF INDEX(",]}",C,1)=0 THENþ        * invalid terminator - not nullþ    END ELSEþ        PARSESTRING="null"þ        RETURNþ    ENDþENDþPARSESTRING=""þINDEXPOS=SAVE.INDEXPOSþRETURNþEND000741WOBJ.ARRAY.TOSTRINGþ0c2SUBROUTINE WOBJ.ARRAY.TOSTRING(JSON,POS)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: convert json array to stringþ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þJSON:="["; * START OUR STRINGþINDENT.DEPTH+=1þ*IF PRETTIFY THEN JSON:=NLþNUMBER.PARTS=JSONOBJECT(JSONOBJECT$NODELENGTH)<1,POS>þIF WOBJ.DEBUG THEN PRINT "ARRAY.TOSTRING: POS=":POS:" NUMBER.PARTS=":NUMBER.PARTSþFOR P=1 TO NUMBER.PARTSþ    PART.TYPE=JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,POS,P>þ    IF WOBJ.DEBUG THEN PRINT "ARRAY.TOSTRING: POS=":POS:" P=":P:" T=":PART.TYPEþ    IF PRETTIFY AND P=1 THEN JSON:=NLþ    CALL WOBJ.PRETTIFY.INDENT(JSON,POS)þ    BEGIN CASEþ        CASE PART.TYPE="S"þ            CALL WOBJ.STRING.TOSTRING(JSON,POS,P)þ        CASE PART.TYPE="B"þ            CALL WOBJ.BOOLEAN.TOSTRING(JSON,POS,P)þ        CASE PART.TYPE="D"þ            CALL WOBJ.NUMBER.TOSTRING(JSON,POS,P)þ        CASE PART.TYPE="N"þ            CALL WOBJ.NULL.TOSTRING(JSON,POS,P)þ        CASE PART.TYPE="O"þ            PART.FLINK=JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,POS,P>þ            IF WOBJ.DEBUG THEN PRINT "OBJ FLINK=":PART.FLINKþ            CALL WOBJ.OBJECT.TOSTRING(JSON,PART.FLINK)þ        CASE PART.TYPE="A"þ            PART.FLINK=JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,POS,P>þ            IF WOBJ.DEBUG THEN PRINT "FL=":PART.FLINKþ            CALL WOBJ.ARRAY.TOSTRING(JSON,PART.FLINK)þ    END CASEþ    IF P <> NUMBER.PARTS THENþ        JSON:=", "þ        IF PRETTIFY THEN JSON:=NLþ    ENDþNEXT Pþ*þIF PRETTIFY AND NUMBER.PARTS THENþ    JSON:=NLþ    CALL WOBJ.PRETTIFY.INDENT(JSON,POS)þENDþJSON:="]"þ*IF PRETTIFY THEN JSON:=NLþINDENT.DEPTH-=1þRETURNþEND00068FWOBJ.ENCODEþ0c2SUBROUTINE WOBJ.ENCODE(IN.STR,OUT.STR)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: encode json stringþ*þ**********************************************************************þ***þ* THIS PROGRAM WILL CONVERT ALL BAD CHARACTERS TO AN ESCAPED CHARACTERþ***þINCLUDE WOBJ.INCLUDEþ*þ*OPEN 'RESULT.FILE' TO RFILE ELSE STOPþ* WE NEED TO ENCODEþ* " = \"   (34)þ* \ = \\    (92)þ* / = \/þ* CHAR(7) = \bþ* CHAR(13) = \rþ* char(10) = \nþ* char(12) = \fþ* char(9)  = \tþOUT.STR=''þL=LEN(IN.STR)þ*CONVERT @AM TO LF IN IN.STR; * LETS SWITCH 254 TO LF BE DEFAULTþFOR X=1 TO Lþ    C=IN.STR[X,1]þ    SEQ.C=SEQ(C)þ    ENCODE=0þ    *IF SEQ.C < 32 THEN ENCODE=1; * BELOW SPACEþ    *IF SEQ.C > 32 AND SEQ.C < 48 THEN ENCODE=1; * LETS ENCODE ALL OF THIS !@$%^&*()þ    IF SEQ.C=34 THEN ENCODE=1þ    IF SEQ.C=92 THEN ENCODE=1þ    * IF SEQ.C=47 THEN ENCODE=1þ    *IF SEQ.C > 126 THEN ENCODE = 1; * LETS ENCODE ALL THE HIGH ENTRIESþ    *IF SEQ.C >= 91 AND SEQ.C <= 96 THEN ENCODE=1þ    IF ENCODE THENþ        BEGIN CASEþ            CASE SEQ.C=7; OUT.STR='\b'þ            CASE C='\'; OUT.STR:='\\'þ                *CASE C='/'; OUT.STR:='\/'þ            CASE C='"'; OUT.STR:='\"'þ            CASE SEQ.C=10þ                OUT.STR:='\n'þ                *CANNOT DO THIS*þ                *IF PRETTIFYCR THEN OUT.STR:=NLþ            CASE SEQ.C=13; OUT.STR:='\r'þ            CASE SEQ.C=12; OUT.STR:='\f'þ            CASE 1; OUT.STR:='\u00':OCONV(C,'MX0C')þ        END CASEþ    END ELSEþ        OUT.STR=OUT.STR:Cþ    ENDþNEXT XþRETURNþEND0003B5WOBJ.PARSEBOOLEANþ0c2SUBROUTINE WOBJ.PARSEBOOLEAN(JSTR,INDEXPOS,PARSESTRING)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: parse json boolean valueþ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þPARSESTRING=""þ*þCALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)þSAVE.INDEXPOS=INDEXPOSþBEGIN CASEþ    CASE OCONV(JSTR[INDEXPOS,4],"MCL") = "true"þ        PARSESTRING="true"þ        INDEXPOS+=4þ    CASE OCONV(JSTR[INDEXPOS,5],"MCL") = "false"þ        PARSESTRING="false"þ        INDEXPOS+=5þ    CASE 1þ        * not booleanþ        INDEXPOS=SAVE.INDEXPOSþ        RETURNþEND CASEþCALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)þC=JSTR[INDEXPOS,1]þIF INDEX(",]}",C,1)=0 THENþ    * invalid terminator - not booleanþ    PARSESTRING=""þ    INDEXPOS=SAVE.INDEXPOSþENDþRETURNþEND000873WOBJ.GET.UDOþ0c2SUBROUTINE WOBJ.GET.UDO(ACTION,NODE,VALUE,RERR)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: get json element valueþ*þ* Modified by: Peter Schellenbach, Zumasysþ* Date: January 2018þ* Description: if specified node is an Object or Array, returnþ*   a JSON string representation of the node.þ*þ**********************************************************************þ***þ   INCLUDE UDO.Hþ      þ   þINCLUDE WOBJ.INCLUDEþCOMMON /WUDO.C/ UDO.OBJECTS(100),UDO.OBJECT.METADATAþ*þVALUE=""þþIF 0 THEN; * TODO þIF NODE="" THENþ    CALL WOBJ.OBJECT.TOSTRING(VALUE,1) ; * Root objectþ    RETURNþENDþENDþþ* THIS WILL ACTUALLY RETURN BACK A UDOOBJECT INSTEAD OF A LINK POSITION,  NEED TO DETERMINE HOW TO DO THIS!!!þþCALL WOBJ.FINDNODE.UDO(NODE,NODEPOS,NODETYPE,PARTPOS,JUSTNODE,PARTTYPE,RERR)þþIF WOBJ.DEBUG THEN DEBUGþþIF NODEPOS > 0 AND PARTTYPE # "" THENþ    OBJ.TYPE=PARTTYPEþ    *OBJ.TYPE=JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,NODEPOS,PARTPOS>þ    BEGIN CASEþ        CASE NODETYPE="A"þ            UDOSTATUS=UDOARRAYGETITEM(UDO.OBJECTS(NODEPOS),PARTPOS+1,VALUE,UDOTYPE)þ            * DEBUGþ        CASE 1þ            UDOSTATUS=UDOGETPROPERTY(UDO.OBJECTS(NODEPOS),JUSTNODE,VALUE,UDOTYPE)þ            * THIS IS A DUPLICATE CALL, COULD WE STORE THE STRING INFORMATION INSIDE UDO.OBJECTS???þ            * CALL WOBJ.DECODE.PART(NODEPOS,PARTPOS,VALUE)þ            IF WOBJ.DEBUG THEN DEBUGþ    END CASEþ    GOSUB convert.udoþEND ELSEþ    VALUE="" ; * NODE NOT FOUND!þENDþIF WOBJ.DEBUG THEN PRINT "WOBJ.GET: ":NODE:" NODEPOS=":NODEPOS:" PARTPOS=":PARTPOS:" VALUE=":OBJ.TYPEþRETURNþþconvert.udo: *þBEGIN CASEþ        CASE OBJ.TYPE="T"þ            VALUE="true"þ        CASE OBJ.TYPE="F"þ            VALUE="false"þ        CASE OBJ.TYPE="NULL"þ            VALUE="null"þ            RERR<3>='null'þ      CASE OBJ.TYPE='O' OR OBJ.TYPE='A'þ            STATUS=UDOWRITE(VALUE,UDOFORMAT_JSON,TMP.VALUE)þ            UDOSTATUS=UDOFREE(VALUE); * DESTROY THAT VARIABLEþ            VALUE=TMP.VALUEþEND CASEþRETURNþþEND001292WOBJ.FINDNODEþ0c2SUBROUTINE WOBJ.FINDNODE(INNODE,NODEPOS,PARTPOS,CHILDPOS,LASTNODE,RERR)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: find a json node in parsed object structureþ*þ**********************************************************************þ*þþINCLUDE WOBJ.INCLUDEþ*þ* NEED TO BREAK OUR NODE REQUEST UP INTO IT'S SEPERATE PARTSþ*þRERR=""þLASTNODE=""þ*þOBJECT.SEPERATOR = "."þNODES=INNODEþCONVERT OBJECT.SEPERATOR TO @AM IN NODESþ*þNODEPOS=1; * WE ALWAYS START WITH THE FIRST ONE.þPARTPOS=0; * START AS ZERO 6/19/2017 - PAPþCHILDPOS=0;* SET WHEN OUR NODE IS AN OBJECT OR ARRAYþPARTTYPE=""þ*þNUMBER.NODES=DCOUNT(NODES,@AM)þIF INDEX(NODES,"[",1) THENþ* We need to trick this into seeing an array as another node levelþ    ORIG.NODES=NODESþ    NODES=""þ    FOR A=1 TO NUMBER.NODESþ        NODE=ORIG.NODES<A>þ        IF INDEX(NODE,"[",1) THENþ            NUMBER.ARRAYS = COUNT(NODE,"[")þ            ACTUAL.NODE=FIELD(NODE,"[",1)þ            NODES<-1>=ACTUAL.NODEþ            FOR B=1 TO NUMBER.ARRAYSþ                K=INDEX(NODE,"]",B)þ                NODES<-1>=NODE[1,K]þ            NEXT Bþ        END ELSEþ            NODES<-1>=NODEþ        ENDþ    NEXT AþENDþNUMBER.NODES=DCOUNT(NODES,@AM)þIF WOBJ.DEBUG THEN PRINT "WOBJ.FINDNODE: number of parts in ":INNODE:": ":NUMBER.NODESþFOR A=1 TO NUMBER.NODESþ    NODE=NODES<A>þ    LASTNODE=NODEþ    NODETYPE=JSONOBJECT(JSONOBJECT$NODETYPE)<1,NODEPOS>þ    IF WOBJ.DEBUG THEN PRINT "  part ":A:" key=":NODE:" pos=":NODEPOS:" type=":NODETYPEþ    BEGIN CASEþ        CASE NODETYPE="O"þ            JUSTNODE=FIELD(NODE,"[",1)þ            IF WOBJ.DEBUG THENþ                PRINT "    locating ":JUSTNODEþ                PRINT "          in ":JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)<1,NODEPOS>þ                NUM.SUBS=DCOUNT(JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)<1,NODEPOS>,CHAR(252))þ                PRINT 'NUM.SUBS=':NUM.SUBSþ            ENDþ            LOCATE JUSTNODE IN JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)<1,NODEPOS> SETTING PARTPOS ELSE PARTPOS=0þ            IF NOT(PARTPOS) THENþ                TEMP.NODE=JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)<1,NODEPOS>þ                LOCATE JUSTNODE IN TEMP.NODE<1,1> SETTING PARTPOS ELSE PARTPOS=0þ                IF WOBJ.DEBUG THENþ                    PRINT 'TEMP.NODE=':TEMP.NODEþ                    PRINT 'JUSTNODE=':JUSTNODEþ                    PRINT 'PARTPOS=':PARTPOSþ                ENDþ            ENDþ        CASE NODETYPE="A"þ            NUMBER.ARRAYS=COUNT(NODE,"[")þ            ST=INDEX(NODE,"[",NUMBER.ARRAYS)þ            EN=INDEX(NODE,"]",NUMBER.ARRAYS)þ            IF ST>1 AND EN>ST THENþ                PARTPOS=NODE[ST+1,EN-ST-1]þ            END ELSEþ                PARTPOS=''þ            ENDþ            IF NOT((PARTPOS MATCHES '1N0N') OR (PARTPOS = '-1')) THENþ                RERR=2þ                RERR<2>="Numeric subscript required for array element"þ                IF WOBJ.DEBUG THEN PRINT "WOBJ.FINDNODE: ":RERR<2>þ                RETURNþ            ENDþ            IF PARTPOS<0 THEN PARTPOS=JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS> ;* ALLOW -1, SINCE WOBJ.SET USES THAT TO CREATE NEXT ELEMENTþ            PARTPOS += 1þ            IF PARTPOS > JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS> THENþ                IF WOBJ.DEBUG THEN PRINT "WOBJ.FINDNODE: PARTPOS=":PARTPOS:" LEN=":JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS>:" NODEPOS=":NODEPOSþ                PARTPOS=0þ            ENDþ    END CASEþ    IF NOT(PARTPOS) THENþ        RERR=1þ        RERR<2>="Node ":NODE:" not found at level ":NODEPOSþ        IF WOBJ.DEBUG THEN PRINT "WOBJ.FINDNODE: ":RERR<2>þ        RETURNþ    ENDþ    PARTTYPE=JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,NODEPOS,PARTPOS>þ    IF (PARTTYPE="A" OR PARTTYPE="O") THENþ        IF A=NUMBER.NODES THENþ* RETURN CHILD OBJECT NODE POSITIONþ            CHILDPOS=JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,NODEPOS,PARTPOS>þ        END ELSEþ* FOLLOW FORWARD LINK TO CHILD NODEþ            NODEPOS=JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,NODEPOS,PARTPOS>þ            NODEPOS +=0; * WEIRD FIX NEEDED WHEN D3 IS FLASHCOMPILED.  Not always treating this as a numeric?þ        ENDþ    END ELSEþ        IF A<>NUMBER.NODES THENþ            RERR=1þ            RERR<2>="Node ":NODE:" not found at level ":NODEPOSþ            IF WOBJ.DEBUG THENþ                PRINT "WOBJ.FINDNODE: ":RERR<2>þ                PRINT "    Node type ":PARTTYPE:" cannot have properties or array elements"þ            ENDþ            RETURNþ        ENDþ    ENDþNEXT AþIF WOBJ.DEBUG THEN PRINT "WOBJ.FINDNODE: nodepos=":NODEPOS:" partpos=":PARTPOS:" type=":PARTTYPE:" childpos=":CHILDPOSþRETURNþEND001976WOBJ.SETþ0c2SUBROUTINE WOBJ.SET(ACTION,NODE,VALUE,RERR)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: set json node to valueþ*þ* Modified by: Peter Schellenbach, Zumasysþ* Date: January 2018þ* Description: allow Object and Array properties to be set, passingþ*   a JSON string representation of the node.þ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þIF WOBJ.DEBUG THEN PRINT "WOBJ.SET: NODE=":NODE:" ACTION=":ACTIONþ*þSACTION=FIELD(ACTION,".",2)þIF NODE="" THENþ    IF SACTION <> "OBJECT" THEN    þ        RERR=1þ        RERR<2>="Node cannot be null"þ    END ELSEþ        CALL WOBJ.PARSE(VALUE,NEWOBJ)þ        DEBUGþ        IF PSERRORS#"" THENþ            RERR=2þ            RERR<2> = PSERRORSþ            IF WOBJ.DEBUG THEN PRINT "WOBJ.SET.OBJECT: parse failure: ":RERR<2>þ        ENDþ    END        þ    RETURNþENDþ*þCALL WOBJ.FINDNODE(NODE,NODEPOS,PARTPOS,CHILDPOS,LASTNODE,RERR)þIF WOBJ.DEBUG THEN PRINT "WOBJ.SET: NODEPOS=":NODEPOS:" PARTPOS=":PARTPOS:" CHILDPOS=":CHILDPOS:" LASTNODE=":LASTNODE:" RERROR=":RERR<2>þ*þIF NOT(NODEPOS) THENþ    RERR=1þ    RERR<2>="Node not found"þ    RETURNþENDþ*þ* CHECK THE NODE WE ARE SETTING PROPERTY TOþNODETYPE=JSONOBJECT(JSONOBJECT$NODETYPE)<1,NODEPOS>þIF NODETYPE#"O" AND NODETYPE#"A" THENþ    RERR=1þ    RERR<2>="Parent node must be an object or array"þ    RETURNþENDþ*þIGNORE.RERR=""þIF NODETYPE="O" THEN PARTKEY=LASTNODE ELSE PARTKEY=""þ*þIF NOT(PARTPOS) THENþ* ENSURE PARENT NODE EXISTSþ    NUM.PARTS=DCOUNT(NODE,".")þ    FINAL.NODE=FIELD(NODE,".",NUM.PARTS)þ    IF INDEX(FINAL.NODE,"[",1) THENþ        NUMBER.ARRAYS=COUNT(FINAL.NODE,"[")þ        PARENT.NODE=NODE[1,LEN(NODE)-LEN(FINAL.NODE)+INDEX(FINAL.NODE,"[",NUMBER.ARRAYS)-1]þ    END ELSEþ        NUMBER.ARRAYS=0þ        PARENT.NODE=NODE[1,LEN(NODE)-LEN(FINAL.NODE)-1]þ    ENDþ    IF NUM.PARTS > 1 OR NUMBER.ARRAYS > 0 THENþ        CALL WOBJ.FINDNODE(PARENT.NODE,PARENT.NODEPOS,PARENT.PARTPOS,PARENT.CHILDPOS,PARENT.LASTNODE,"")þ        IF NOT(PARENT.PARTPOS) THENþ            RERR=1þ            RERR<2>="Parent node not found"þ            IF WOBJ.DEBUG THEN PRINT "WOBJ.SET: ":RERR<2>þ            RETURNþ        ENDþ    ENDþ*þ* WE NEED TO ADD A NEW ELEMENTþ    IF NODETYPE="O" THENþ        PARTPOS=JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS>þ        PARTPOS += 1þ        JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS>=PARTPOSþ        CALL WOBJ.SET.PART(NODEPOS,PARTPOS,"N",PARTKEY,"",IGNORE.RERR) ; * DUMMY NULL ELEMENT WILL BE REPLACED IN FINAL WOBJ.SET.PART CALLþ    END ELSEþ        NUMBER.ARRAYS=COUNT(LASTNODE,"[")þ        ST=INDEX(LASTNODE,"[",NUMBER.ARRAYS)þ        EN=INDEX(LASTNODE,"]",NUMBER.ARRAYS)þ        IF ST>1 AND EN>ST THENþ            PARTPOS=LASTNODE[ST+1,EN-ST-1]þ        END ELSEþ            PARTPOS=''þ        ENDþ        IF NOT((PARTPOS MATCHES '1N0N') OR (PARTPOS = '-1')) THENþ            RERR=2þ            RERR<2>="Numeric subscript required for setting array element"þ            IF WOBJ.DEBUG THEN PRINT "WOBJ.SET: ":RERR<2>þ            RETURNþ        ENDþ        IF PARTPOS<0 THENþ            PARTPOS=JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS>+1þ        END ELSEþ            PARTPOS += 1 ; * ZERO-BASED ARRAY INDEX -> 1 BASED PARTPOSþ        ENDþ        LASTPARTPOS=JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS>+1þ        FOR P=LASTPARTPOS TO PARTPOSþ            CALL WOBJ.SET.PART(NODEPOS,P,"N",PARTKEY,"",IGNORE.RERR)þ        NEXT Pþ        IF PARTPOS>JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS> THENþ            JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS>=PARTPOSþ        ENDþ    ENDþENDþ*þPARTTYPE=JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,NODEPOS,PARTPOS>þIF WOBJ.DEBUG THEN PRINT "WOBJ.SET: PARTTYPE=":PARTTYPEþ*þIF PARTTYPE="O" OR PARTTYPE="A" THENþ*þ* DELETE NESTED NODE BEFORE SETTING NEW VALUEþ    IF NODETYPE="A" THENþ*þ* ARRAYS ARE SPECIAL, BECAUSE WE DO NOT WANT TO DELETE THE ARRAY POSITIONþ* THAT WE ARE SETTING, WHICH WILL SLIDE THE ARRAY DOWN BY ONE. INSTEAD,þ* INSERT A NULL ELEMENT AFTER THE ONE WE NEED TO DELETE, THEN AFTERþ* DELETING, WE CAN SIMPLY REPLACE THE NULL NODE.þ*þ        JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)=INSERT(JSONOBJECT(JSONOBJECT$NODEPARTS.KEY),1,NODEPOS,PARTPOS+1,"")þ        JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)=INSERT(JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE),1,NODEPOS,PARTPOS+1,"N")þ        JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)=INSERT(JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK),1,NODEPOS,PARTPOS+1,"")þ        JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK)=INSERT(JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK),1,NODEPOS,PARTPOS+1,"")þ        JSONOBJECT(JSONOBJECT$NODEPARTS.ENCODING)=INSERT(JSONOBJECT(JSONOBJECT$NODEPARTS.ENCODING),1,NODEPOS,PARTPOS+1,"")þ        JSONOBJECT(JSONOBJECT$NODEPARTS.VALUE)=INSERT(JSONOBJECT(JSONOBJECT$NODEPARTS.VALUE),1,NODEPOS,PARTPOS+1,"")þ        JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS> += 1þ    ENDþ*þ    CALL WOBJ.DELETE("DELETE",NODE,"",IGNORE.RERR)þ* BECAUSE DELETING MAY ALTER JSONOBJECT STRUCTURE, REFRESH NODEPOS & PARTPOSþ    CALL WOBJ.FINDNODE(NODE,NODEPOS,PARTPOS,CHILDPOS,LASTNODE,IGNORE.RERR)þ    IF NODETYPE="O" THENþ        IF PARTPOS=0 THENþ            PARTPOS=JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS>þ            PARTPOS += 1þ            JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS>=PARTPOSþ            CALL WOBJ.SET.PART(NODEPOS,PARTPOS,"N",PARTKEY,"",IGNORE.RERR)þ        END ELSEþ            RERR=2þ            RERR<2>="While setting node ":NODE:", existing object was deleted, yet it is still here!"þ            IF WOBJ.DEBUG THEN PRINT "WOBJ.SET: ":RERR<2>þ            RETURNþ        ENDþ    END ELSEþ        IF PARTPOS=0 THENþ            RERR=2þ            RERR<2>="While setting node ":NODE:", existing array element was deleted, but dummy element is missing!"þ            IF WOBJ.DEBUG THEN PRINT "WOBJ.SET: ":RERR<2>þ            RETURNþ        ENDþ    ENDþENDþ*þ* NOW WE ARE SAFE TO SET NEW VALUEþBEGIN CASEþ    CASE SACTION="ARRAY" OR SACTION="OBJECT"þ        PARTTYPE=SACTION[1,1]þ    CASE SACTION="NULL"þ        PARTTYPE="N"þ    CASE SACTION="NUMBER"þ        PARTTYPE="D"þ    CASE SACTION="BOOLEAN"þ        PARTTYPE="B"þ    CASE SACTION="STRING" OR SACTION=""þ        PARTTYPE="S"þ    CASE 1þ        RERR=1þ        RERR<2>="Unknown value type ":SACTION:", assume STRING"þ        PARTTYPE="S"þEND CASEþCALL WOBJ.SET.PART(NODEPOS,PARTPOS,PARTTYPE,PARTKEY,VALUE,RERR)þRETURNþEND001A97WOBJ.FINDNODE.UDOþ0c2      SUBROUTINE WOBJ.FINDNODE.UDO(INNODE,NODEPOS,NODETYPE,PARTPOS,JUSTNODE,PARTTYPE,RERR)þ      **********************************************************************þ      *þ      * Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: December 2017þ      * Description: find a json node in parsed object structureþ      *þ      **********************************************************************þ      ***þ      INCLUDE WOBJ.INCLUDEþ      þ      * FIRST LETS INIT OUR TEMPORARY STORAGE AREA FOR UDO OBJECTSþ      þ      COMMON /WUDO.C/ UDO.OBJECTS(100),UDO.OBJECT.METADATAþ      þ      *MAT UDO.OBJECTS=""þ      *UDO.OBJECT.METADATA=""þ      þ      *þ      * NEED TO BREAK OUR NODE REQUEST UP INTO IT'S SEPERATE PARTSþ      *þ      RERR=""þ      LASTNODE=""þ      *þ      OBJECT.SEPERATOR = "."þ      NODES=INNODEþ      CONVERT OBJECT.SEPERATOR TO @AM IN NODESþ      *þ      NODEPOS=1; * WE ALWAYS START WITH THE FIRST ONE.þ      PARTPOS=0; * START AS ZERO 6/19/2017 - PAPþ      CHILDPOS=0;* SET WHEN OUR NODE IS AN OBJECT OR ARRAYþ      PARTTYPE=""þ      *þ      NUMBER.NODES=DCOUNT(NODES,@AM)þ      IF INDEX(NODES,"[",1) AND 1 THENþ         * We need to trick this into seeing an array as another node levelþ         ORIG.NODES=NODESþ         NODES=""þ         FOR A=1 TO NUMBER.NODESþ            NODE=ORIG.NODES<A>þ            IF INDEX(NODE,"[",1) THENþ               NUMBER.ARRAYS = COUNT(NODE,"[")þ               ACTUAL.NODE=FIELD(NODE,"[",1)þ               NODES<-1>=ACTUAL.NODEþ               FOR B=1 TO NUMBER.ARRAYSþ                  K=INDEX(NODE,"]",B)þ                  NODES<-1>=NODE[1,K]þ               NEXT Bþ            END ELSEþ               NODES<-1>=NODEþ            ENDþ         NEXT Aþ      ENDþ      NUMBER.NODES=DCOUNT(NODES,@AM)þ      IF WOBJ.DEBUG THEN PRINT "WOBJ.FINDNODE.UDO: number of parts in ":INNODE:": ":NUMBER.NODESþ      FOR A=1 TO NUMBER.NODESþ         NODE=NODES<A>þ         LASTNODE=NODEþ         JUSTNODE=FIELD(NODE,"[",1)þ         *NODETYPE=JSONOBJECT(JSONOBJECT$NODETYPE)<1,NODEPOS>þþ         UDOSTATUS=UDOGETTYPE(UDO.OBJECTS(A), UDOTYPE)þ         GOSUB convert.udotypeþ         NODETYPE=UDOTYPEþ         UDO.OBJECT.METADATA<A,2>=NODETYPEþ         UDO.OBJECT.METADATA<A,3>=JUSTNODEþþ         IF WOBJ.DEBUG THEN PRINT "  part ":A:" key=":NODE:" pos=":NODEPOS:" type=":NODETYPEþ         þ         BEGIN CASEþ            CASE NODETYPE="O"þ               JUSTNODE=FIELD(NODE,"[",1)þ               IF WOBJ.DEBUG THENþ                  PRINT "    locating ":JUSTNODEþ                  PRINT "          in ":JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)<1,NODEPOS>þ               ENDþ               UDOSTATUS=UDOGETPROPERTY(UDO.OBJECTS(A),JUSTNODE,TMPOBJECT,UDOTYPE)þ               *UDOSTATUS=UDOGETTYPE(UDO.OBJECTS(A), UDOTYPE)þ               GOSUB convert.udotypeþ               * NEED TO SET PARTPOS AND PARTTYPEþ               PARTTYPE = UDOTYPEþ               IF UDOSTATUS < 0 THEN þ                  PARTPOS=0þ                  TMPOBJECT=""þ               END ELSEþ                  PARTPOS=1þ               ENDþ               UDO.OBJECTS(A+1)=TMPOBJECTþ        IF WOBJ.DEBUG THEN PRINT "udostatus=":UDOSTATUS:" A=":A:" TMPOBJECT=":A; INPUT WAITþ               NODEPOS=Aþ               IF WOBJ.DEBUG THEN DEBUGþ            CASE NODETYPE="A"þ               NUMBER.ARRAYS=COUNT(NODE,"[")þ               ST=INDEX(NODE,"[",NUMBER.ARRAYS)þ               EN=INDEX(NODE,"]",NUMBER.ARRAYS)þ               IF ST>1 AND EN>ST THENþ                  PARTPOS=NODE[ST+1,EN-ST-1]þ               END ELSEþ                  PARTPOS=''þ               ENDþ         þ               IF NOT((PARTPOS MATCHES '1N0N') OR (PARTPOS = '-1')) THENþ                  RERR=2þ                  RERR<2>="Numeric subscript required for array element"þ                  IF WOBJ.DEBUG THEN PRINT "WOBJ.FINDNODE: ":RERR<2>þ                  RETURNþ               ENDþ               *IF WOBJ.DEBUG THEN DEBUGþ               *IF PARTPOS<0 THEN PARTPOS=JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS> ;* ALLOW -1, SINCE WOBJ.SET USES THAT TO CREATE NEXT ELEMENTþ               *PARTPOS += 1þ               *IF PARTPOS > JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS> THENþ               *   IF WOBJ.DEBUG THEN PRINT "WOBJ.FINDNODE.UDO: PARTPOS=":PARTPOS:" LEN=":JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS>:" NODEPOS=":NODEPOSþ               *   PARTPOS=0þ               *ENDþ               NODEPOS=Aþ               IF WOBJ.DEBUG THEN PRINT "WOBJ.FINDNODE.UDO NODEPOS=":NODEPOS:" PARTPOS=":PARTPOSþ               PARTTYPE=""þ               IF PARTPOS # "" THENþ                  UDOSTATUS=UDOARRAYGETITEM(UDO.OBJECTS(A),PARTPOS+1,TMPOBJECT,UDOTYPE)þ                  GOSUB convert.udotypeþ                  PARTTYPE=UDOTYPEþ                  UDO.OBJECTS(A+1)=TMPOBJECTþ                  UDO.OBJECT.METADATA<A+1,2>=PARTTYPEþ                  UDO.OBJECT.METADATA<A+1,3>=JUSTNODEþ                  UDO.OBJECT.METADATA<A+1,4>=PARTPOSþ               ENDþ               *IF WOBJ.DEBUG THEN DEBUGþ         END CASEþ         IF 1 THENþ            IF UDOSTATUS < 0 THENþ               RERR=1þ               RERR<2>="Node ":NODE:" not found at level ":NODEPOSþ               IF WOBJ.DEBUG THEN PRINT "WOBJ.FINDNODE: ":RERR<2>þ               RETURNþ            ENDþ            *PARTTYPE=JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,NODEPOS,PARTPOS>þ            IF 1 THENþ            IF (PARTTYPE="A" OR PARTTYPE="O") THENþ               IF A=NUMBER.NODES THENþ                  * RETURN CHILD OBJECT NODE POSITIONþ                  *CHILDPOS=JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,NODEPOS,PARTPOS>þ               END ELSEþ                  * FOLLOW FORWARD LINK TO CHILD NODEþ                  *NODEPOS=JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,NODEPOS,PARTPOS>þ                  *NODEPOS+=1;**** NEED TO FIGURE OUTþ               ENDþ            END ELSEþ               IF A<>NUMBER.NODES THENþ                  RERR=1þ                  RERR<2>="Node ":NODE:" not found at level ":NODEPOSþ                  IF WOBJ.DEBUG THENþ                     PRINT "WOBJ.FINDNODE: ":RERR<2>þ                     PRINT "    Node type ":PARTTYPE:" cannot have properties or array elements"þ                  ENDþ                  RETURNþ               ENDþ            ENDþ            ENDþ         ENDþ      NEXT Aþ      IF WOBJ.DEBUG THEN PRINT "WOBJ.FINDNODE: nodepos=":NODEPOS:" partpos=":PARTPOS:" type=":PARTTYPE:" childpos=":CHILDPOSþ      RETURNþþconvert.udotype: *þþBEGIN CASEþ   CASE UDOTYPE="0"; UDOTYPE="F"þ   CASE UDOTYPE="1"; UDOTYPE="T"þ   CASE UDOTYPE="2"; UDOTYPE="NULL"þ   CASE UDOTYPE="3"; UDOTYPE="N"þ   CASE UDOTYPE="4"; UDOTYPE="S"þ   CASE UDOTYPE="5"; UDOTYPE="A"þ   CASE UDOTYPE="6"; UDOTYPE="O"þ   CASE 1; UDOTYPE=""þEND CASEþþRETURN000E1FWOBJ.SET.PARTþ0c2SUBROUTINE WOBJ.SET.PART(NODEPOS,PARTPOS,PARTTYPE,PARTKEY,VALUE,RERR)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: set json part valueþ*þ* Modified by: Peter Schellenbach, Zumasysþ* Date: January 2018þ* Description: allow Object and Array properties to be set, passingþ*   a JSON string representation of the node.þ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þENCODING=""þFLINK=""þ* VALIDATE THE VALUE DATAþBEGIN CASEþ    CASE PARTTYPE="O" OR PARTTYPE="A"þ        OUT.VALUE=""þ    CASE PARTTYPE="N"þ        OUT.VALUE=""þ        IF VALUE#"" THENþ            RERR=1þ            RERR<2>="Value ignored for NULL property"þ        ENDþ    CASE PARTTYPE="D"þ        OUT.VALUE=VALUEþ        IF VALUE="" THENþ            OUT.VALUE=0þ        END ELSEþ            IF NOT(NUM(VALUE)) THENþ                RERR=1þ                RERR<2>="Non-numeric value for NUMBER property; zero used"þ                OUT.VALUE=0þ            ENDþ        ENDþ    CASE PARTTYPE="B"þ        OUT.VALUE=OCONV(VALUE,"MCL")þ        IF OUT.VALUE#"true" AND OUT.VALUE#"false" THENþ            RERR=1þ            RERR<2>="Invalid boolean value: must be true or false; false used"þ            OUT.VALUE="false"þ        END        þ    CASE 1þ        ENCODING="H"þ        BEGIN CASEþ            CASE INDEX(VALUE,@AM,1)þ            CASE INDEX(VALUE,@VM,1)þ            CASE INDEX(VALUE,@SVM,1)þ            CASE INDEX(VALUE,LF,1)þ            CASE INDEX(VALUE,CR,1)þ            CASE 1þ                ENCODING="A"þ                OUT.VALUE=VALUEþ        END CASEþ        IF ENCODING="H" THEN OUT.VALUE=OCONV(VALUE,"MX0C")þEND CASEþ*þIF PARTTYPE="O" OR PARTTYPE="A" THENþ* SET UP THE NEW OBJECTþ    FLINK=JSONOBJECT(JSONOBJECT$NODECNTR)+1þ    IF VALUE="" THENþ        JSONOBJECT(JSONOBJECT$NODECNTR)=FLINK ; * UPDATE NODE COUNT FOR NULL OBJECTþ    END ELSEþ* PARSE OBJECT OR ARRAY        þ        MATBUILD SAVEJSONOBJECT FROM JSONOBJECT ; * SAVE CURRENT OBJECT IN CASE OF PARSE FAILUREþ        INDEXPOS=1þ        IF PARTTYPE="O" THENþ            CALL WOBJ.PARSEOBJECT(VALUE,INDEXPOS,PARSERESULT)þ        END ELSEþ            CALL WOBJ.PARSEARRAY(VALUE,INDEXPOS,PARSERESULT)þ        ENDþ        IF PARSERESULT="" THENþ            RERR=2þ            IF PARTTYPE="O" THENþ                RERR<2>="Object parse failure"þ            END ELSEþ                RERR<2>="Array parse failure"þ            ENDþ        END ELSEþ* MAKE SURE WE CONSUMED ENTIRE JSTRþ            CALL WOBJ.SKIPCHAR(VALUE,INDEXPOS)þ            IF INDEXPOS <= LEN(VALUE) THENþ                RERR=2þ                RERR<2>="Extra data (":(LEN(VALUE)-INDEXPOS+1):" characters) after final close brace ignored"þ            END            þ        ENDþ        IF RERR<1> >= 2 THENþ* OBJECT OR ARRAY PARSE ERRORþ            MATPARSE JSONOBJECT FROM SAVEJSONOBJECTþ            PARTTYPE="N"þ            FLINK=""þ        ENDþ    ENDþENDþ* SET THE PART PROPERTIESþJSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,NODEPOS,PARTPOS>        =    PARTTYPEþJSONOBJECT(JSONOBJECT$NODEPARTS.KEY)<1,NODEPOS,PARTPOS>         =    PARTKEYþJSONOBJECT(JSONOBJECT$NODEPARTS.VALUE)<1,NODEPOS,PARTPOS>       =    OUT.VALUEþJSONOBJECT(JSONOBJECT$NODEPARTS.ENCODING)<1,NODEPOS,PARTPOS>    =    ENCODINGþJSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,NODEPOS,PARTPOS>       =    FLINKþIF WOBJ.DEBUG THEN PRINT "WOBJ.SET.PART: T=":PARTTYPE:" K=":PARTKEY:" E=":ENCODING:" OUT.VALUE=":OUT.VALUEþ*þRETURNþEND001BCCWOBJ.UDOþ0c2      SUBROUTINE WOBJ.UV(PASSEDOBJ,ACTION,NODE,VALUE,OPTIONS,RERR)þ      **********************************************************************þ      *þ      * Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: December 2017þ      * Description: WOBJ json library main routineþ      *þ      * Updated: 3/3/2019 by Peter Schellenbach, Zumasysþ      *þ      **********************************************************************þ      *þ      INCLUDE UDO.Hþ      þ      INCLUDE WOBJ.INCLUDEþ      þ      COMMON /WOBJD/ COMMON.WOBJ.DEBUGþ      þ      IF UNASSIGNED(COMMON.WOBJ.DEBUG) THEN COMMON.WOBJ.DEBUG=0þ      þ      * This common is a storage area to store udo objects as weþ      * traverse into a multi-level objectþ      þ      COMMON /WUDO.C/ UDO.OBJECTS(100),UDO.OBJECTS.METADATAþ      þ      MAT UDO.OBJECTS=""þ      UDO.OBJECTS.METADATA=""þ      *þ      IF INDEX(OPTIONS,"PRETTIFY",1) THEN PRETTIFY=1 ELSE PRETTIFY=0þ      IF INDEX(OPTIONS,"PRETTIFYCR",1) THEN PRETTIFYCR=1 ELSE PRETTIFYCR=0þ      IF INDEX(OPTIONS,"DEBUG",1) THEN WOBJ.DEBUG=1 ELSE WOBJ.DEBUG=0þ      *þ      IF COMMON.WOBJ.DEBUG THEN WOBJ.DEBUG=1þ    IF WOBJ.DEBUG THENþ       OPEN "RESULT.FILE" TO RFILE ELSE STOPþ       DREC=ACTIONþ       DREC<2>=NODEþ       WRITE DREC ON RFILE, 'OBJ.DEBUG'þ    ENDþ*PRINT 'WOBJ.DEBUG=':WOBJ.DEBUG:'  ':COMMON.WOBJ.DEBUGþ      þ      PLATFORM='UV'þþ      WOBJ.VERSION='2.0.UDO'þ         *þ      MAT JSONOBJECT = ""þ      RERR=""þ      INDENT.DEPTH=0þ      *þ      BEGIN CASEþ         CASE ACTION="FROMSTRING"þ            * THIS EXISTS EARLIER DUE TO MATPARSE BELOWþ            * UDO WILL FLOW UP IF YOU SEND ANY @AM IN THE DATAþ            CONVERT CHAR(254) TO '' IN VALUEþ            UDOSTATUS=UDOREAD(VALUE, 0, PASSEDOBJ)þ            IF UDOSTATUS # UDO_SUCCESS  "" THENþ               RERR=2þ               RERR<2> = UDOSTATUSþ            ENDþ            IF WOBJ.DEBUG THEN PRINT "WOBJ: FROMSTRING ACTION: VALUE=":VALUE:" RERR=":RERR<2>þ            RETURNþ         CASE ACTION="VERSION"þ            VALUE=WOBJ.VERSIONþ            RETURNþ      END CASEþ      *þ      *MATPARSE JSONOBJECT FROM PASSEDOBJþ      *þ      UDO.OBJECTS(1)=PASSEDOBJþ      UDO.OBJECTS.METADATA<1>="MAIN"þ      IF WOBJ.DEBUG THEN PRINT "ACTION=":ACTION,NODEþ      BEGIN CASEþ         CASE ACTION="TOSTRING"þ            VALUE=""þ            IF NODE # "" THENþ               RERR=1þ               RERR<2>="Node ignored - returning the root node"þ               IF WOBJ.DEBUG THEN PRINT "WOBJ: TOSTRING ACTION: NODE ":NODE:" IGNORED"þ            ENDþ            STATUS=UDOWRITE(PASSEDOBJ,UDOFORMAT_JSON,VALUE)þ         CASE ACTION="GET"þ            GOSUB action.getþ         CASE FIELD(ACTION,".",1)="SET"þ            GOSUB action.setþ         CASE ACTION="DELETE"þ            GOSUB action.deleteþ         CASE ACTION="KEYS"þ            GOSUB action.keysþ         CASE ACTION="LENGTH" OR ACTION="SIZE"þ            GOSUB action.lengthþ         CASE ACTION="TYPE"þ            GOSUB action.typeþ         CASE ACTION="DESTROY"þ            GOSUB action.destroyþ         CASE 1þ            VALUE=""þ            RERR=1þ            RERR<2>="Invalid action '":ACTION:"'"þ            IF WOBJ.DEBUG THEN PRINT "WOBJ: INVALID ACTION: ":ACTIONþ      END CASEþ      *þ      *NUM.ENTRIES=DCOUNT(UDO.OBJECTS.METADATA,@VM)þ      *FOR V=1 TO NUM.ENTRIESþ      *   UDOSTATUS=UDOFREE(UDO.OBJECTS(V))þ      *   IF WOBJ.DEBUG THEN PRINT V,UDOSTATUSþ      *NEXT Vþ      þ      MAT UDO.OBJECTS=""þ      UDO.OBJECTS.METADATA=""þ      þ      þ      þ      *MATBUILD PASSEDOBJ FROM JSONOBJECTþ      *þ      RETURNþ      *þaction.get: *þ      CALL WOBJ.GET.UDO(ACTION,NODE,VALUE,RERR)þ      RETURNþ      *þaction.set: *þ      CALL WOBJ.SET.UDO(ACTION,NODE,VALUE,RERR)þ      RETURNþ      *þaction.delete: *þ      CALL WOBJ.FINDNODE.UDO(NODE,NODEPOS,NODETYPE,PARTPOS,JUSTNODE,PARTTYPE,RERR)þ      UDOSTATUS=""þ      VALUE=""þ      BEGIN CASEþ         CASE NODETYPE='A'þ         CASE NODETYPE='O'þ            UDOSTATUS=UDODELETEPROPERTY(UDO.OBJECTS(NODEPOS), JUSTNODE)þ      END CASEþ      IF WOBJ.DEBUG THEN PRINT "WOBJ: DELETE ACTION: ":NODE:" NODEPOS=":NODEPOS:" ":NODETYPE:" PARTTYPE=":PARTTYPE:" PARTPOS=":PARTPOS:" UDOSTATUS=":UDOSTATUS:" RERR=":RERR<2>þ      þ *     CALL WOBJ.DELETE(ACTION,NODE,VALUE,RERR)þ      RETURNþ      *þaction.keys: *þ      CALL WOBJ.FINDNODE.UDO(NODE,NODEPOS,NODETYPE,PARTPOS,JUSTNODE,PARTTYPE,RERR)þ      UDOSTATUS=""þ      VALUE=""þ      BEGIN CASEþ         CASE PARTTYPE='O'þ            UDOSTATUS=UDOGETPROPERTYNAMES(UDO.OBJECTS(NODEPOS+1),PROPNAMES)þ            IF UDOSTATUS >=0 THENþ               UDOSTATUS2=UDOARRAYGETSIZE(PROPNAMES,NUM.PROPERTIES)þ               FOR S=1 TO NUM.PROPERTIESþ                  UDOSTATUS3=UDOARRAYGETITEM(PROPNAMES,S,PROP.NAME,TEMP.UDO.TYPE)þ                  VALUE<1,1,-1>=PROP.NAMEþ               NEXT Sþ               UDOSTATUS=UDOFREE(PROPNAMES)þ            ENDþ         CASE 1þ            VALUE=1þ      END CASEþ  þ      IF WOBJ.DEBUG THEN PRINT "WOBJ: LENGTH ACTION: ":NODE:" NODEPOS=":NODEPOS:" ":NODETYPE:" PARTTYPE=":PARTTYPE:" PARTPOS=":PARTPOS:" UDOSTATUS=":UDOSTATUS:" LENGTH=":VALUE:" RERR=":RERR<2>þ      RETURNþþ      *þaction.length: *þ      CALL WOBJ.FINDNODE.UDO(NODE,NODEPOS,NODETYPE,PARTPOS,JUSTNODE,PARTTYPE,RERR)þ      UDOSTATUS=""þ      VALUE=1þ      BEGIN CASEþ         CASE PARTTYPE="A"þ            UDOSTATUS=UDOARRAYGETSIZE(UDO.OBJECTS(NODEPOS+1),VALUE); * WE ADD ONE TO GET TO THE ACTUAL ARRAYþ         CASE PARTTYPE='O'þ            UDOSTATUS=UDOGETPROPERTYNAMES(UDO.OBJECTS(NODEPOS+1),PROPNAMES)þ            IF UDOSTATUS >=0 THENþ               UDOSTATUS2=UDOARRAYGETSIZE(PROPNAMES,VALUE)þ               UDOSTATUS=UDOFREE(PROPNAMES)þ            ENDþ         CASE 1þ            VALUE=1þ      END CASEþ  þ      IF WOBJ.DEBUG THEN PRINT "WOBJ: LENGTH ACTION: ":NODE:" NODEPOS=":NODEPOS:" ":NODETYPE:" PARTTYPE=":PARTTYPE:" PARTPOS=":PARTPOS:" UDOSTATUS=":UDOSTATUS:" LENGTH=":VALUE:" RERR=":RERR<2>þ      RETURNþ      *þaction.type: *þ      CALL WOBJ.FINDNODE.UDO(NODE,NODEPOS,NODETYPE,PARTPOS,JUSTNODE,PARTTYPE,RERR)þ      IF PARTPOS THENþ         BEGIN CASEþ            CASE PARTTYPE='O'þ               VALUE='OBJECT'þ            CASE PARTTYPE='A'þ               VALUE='ARRAY'þ            CASE PARTTYPE='D'þ               VALUE='NUMBER'þ            CASE PARTTYPE='S'þ               VALUE='STRING'þ            CASE PARTTYPE='N'þ               VALUE='NULL'þ            CASE PARTTYPE='B'þ               VALUE='BOOLEAN'þ            CASE 1þ               VALUE='UNKNOWN'þ         END CASEþ      END ELSEþ         IF NODE="" THENþ            VALUE="OBJECT"þ         END ELSEþ            VALUE="UNDEFINED" ;* NODE NOT FOUND!þ         ENDþ      ENDþ      IF WOBJ.DEBUG THEN PRINT "WOBJ: TYPE ACTION: ":NODE:" NODEPOS=":NODEPOS:" PARTPOS=":PARTPOS:" TYPE=":VALUE:" RERR=":RERR<2>þ      RETURNþ      *þ      þaction.destroy: *þ   UDOSTATUS=UDOFREE(PASSEDOBJ)þ   IF UDOSTATUS = 0 THEN NULL ELSEþ      RERR<1>=1þ      RERR<2>='Error destroying object (':UDOSTATUS:')'þ   ENDþ   þ   RETURNþENDþþþ001A13WOBJ.DELETEþ0c2SUBROUTINE WOBJ.DELETE(ACTION,NODE,VALUE,RERR)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: delete a json node in parsed object structureþ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þVALUE=""þDONE=0þLOOPþ    CALL WOBJ.FINDNODE(NODE,NODEPOS,PARTPOS,CHILDPOS,LASTNODE,RERR)þ    IF WOBJ.DEBUG THEN PRINT "WOBJ.DELETE: NODEPOS=":NODEPOS:" PARTPOS=":PARTPOS:" CHILDPOS=":CHILDPOS:" RERROR=":RERR<2>þ    IF NOT(NODEPOS) OR NOT(PARTPOS) THENþ        RERR=1þ        RERR<2>="Node not found"þ        RETURNþ    ENDþ    þ    NODETYPE = JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,NODEPOS,PARTPOS>þ    BEGIN CASEþþ        CASE NODETYPE = 'O' AND CHILDPOS > 0þþ* DELETE NESTED OBJECTS BEFORE DELETING PARENT NODEþ            NEST.COUNT = 0þ            NUM.PARTS = JSONOBJECT(JSONOBJECT$NODELENGTH)<1,CHILDPOS>þ            FOR I=1 TO NUM.PARTSþ                PARTTYPE=JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,CHILDPOS,I>þ                IF PARTTYPE = 'O' OR PARTTYPE = 'A' THENþ                    PARTKEY=JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)<1,CHILDPOS,I>þ                    CALL WOBJ.DELETE(ACTION,NODE:".":PARTKEY,VALUE,RERR)þ                    NEST.COUNT += 1þ                    EXIT ;* AFTER MODIFYING THE JSONOBJECT STRUCTURE, NEED TO CALL FINDNODE AGAINþ                ENDþ            NEXT Iþþ            IF NEST.COUNT = 0 THENþ* DELETE OBJECT NODEþ                JSONOBJECT(JSONOBJECT$NODETYPE)=DELETE(JSONOBJECT(JSONOBJECT$NODETYPE),1,CHILDPOS)þ                JSONOBJECT(JSONOBJECT$NODELENGTH)=DELETE(JSONOBJECT(JSONOBJECT$NODELENGTH),1,CHILDPOS)þ                JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.KEY),1,CHILDPOS)þ                JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE),1,CHILDPOS)þ                JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK),1,CHILDPOS)þ                JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK),1,CHILDPOS)þ                JSONOBJECT(JSONOBJECT$NODEPARTS.ENCODING)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.ENCODING),1,CHILDPOS)þ                JSONOBJECT(JSONOBJECT$NODEPARTS.VALUE)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.VALUE),1,CHILDPOS)þ                JSONOBJECT(JSONOBJECT$NODECNTR) -= 1þþ* ADJUST LINKS TO ACCOUNT FOR DELETED NODEþ                NUM.NODES = JSONOBJECT(JSONOBJECT$NODECNTR)þ                FOR I = 1 TO NUM.NODESþ                    NUM.PARTS = JSONOBJECT(JSONOBJECT$NODELENGTH)<1,I>þ                    FOR J = 1 TO NUM.PARTSþ                        FLINK = JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,I,J>þ                        IF FLINK >= CHILDPOS THENþ                            JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,I,J> = FLINK - 1þ                        ENDþ                        BLINK = JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK)<1,I,J>þ                        IF BLINK >= CHILDPOS THENþ                            JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK)<1,I,J> = BLINK - 1þ                        ENDþ                    NEXT Jþ                NEXT Iþ                DONE = 1þ            ENDþþ        CASE NODETYPE = 'A' AND CHILDPOS > 0þþ* DELETE NESTED OBJECTS BEFORE DELETING PARENT NODEþ            NEST.COUNT = 0þ            NUM.ELEMS = JSONOBJECT(JSONOBJECT$NODELENGTH)<1,CHILDPOS>þ            FOR I = 1 TO NUM.ELEMSþ                PARTTYPE = JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,CHILDPOS,I>þ                IF PARTTYPE = 'O' OR PARTTYPE = 'A' THENþ* DELETE NESTED OBJECTS BEFORE DELETING PARENT NODEþ                    CALL WOBJ.DELETE(ACTION,NODE:"[":(I-1):"]",VALUE,RERR)þ                    NEST.COUNT += 1þ                    EXIT ;* AFTER MODIFYING THE JSONOBJECT STRUCTURE, NEED TO CALL FINDNODE AGAINþ                ENDþ            NEXT Iþþ* AFTER MODIFYING THE JSONOBJECT STRUCTURE, NEED TO CALL FINDNODE AGAINþ            IF NEST.COUNT = 0 THENþ* DELETE ARRAY NODEþ                JSONOBJECT(JSONOBJECT$NODETYPE)=DELETE(JSONOBJECT(JSONOBJECT$NODETYPE),1,CHILDPOS)þ                JSONOBJECT(JSONOBJECT$NODELENGTH)=DELETE(JSONOBJECT(JSONOBJECT$NODELENGTH),1,CHILDPOS)þ                JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.KEY),1,CHILDPOS)þ                JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE),1,CHILDPOS)þ                JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK),1,CHILDPOS)þ                JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK),1,CHILDPOS)þ                JSONOBJECT(JSONOBJECT$NODEPARTS.ENCODING)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.ENCODING),1,CHILDPOS)þ                JSONOBJECT(JSONOBJECT$NODEPARTS.VALUE)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.VALUE),1,CHILDPOS)þ                JSONOBJECT(JSONOBJECT$NODECNTR) -= 1þþ* ADJUST LINKS TO ACCOUNT FOR DELETED NODEþ                NUM.NODES = JSONOBJECT(JSONOBJECT$NODECNTR)þ                FOR I = 1 TO NUM.NODESþ                    NUM.PARTS = JSONOBJECT(JSONOBJECT$NODELENGTH)<1,I>þ                    FOR J = 1 TO NUM.PARTSþ                        FLINK = JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,I,J>þ                        IF FLINK >= CHILDPOS THENþ                            JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,I,J> = FLINK - 1þ                        ENDþ                        BLINK = JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK)<1,I,J>þ                        IF BLINK >= CHILDPOS THENþ                            JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK)<1,I,J> = BLINK - 1þ                        ENDþ                    NEXT Jþ                NEXT Iþ                DONE = 1þ            ENDþþ        CASE 1þ            DONE = 1þ    END CASEþUNTIL DONE DO REPEATþþ* DELETE SIMPLE NODEþJSONOBJECT(JSONOBJECT$NODEPARTS.KEY)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.KEY),1,NODEPOS,PARTPOS)þJSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE),1,NODEPOS,PARTPOS)þJSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK),1,NODEPOS,PARTPOS)þJSONOBJECT(JSONOBJECT$NODEPARTS.BLINK)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.BLINK),1,NODEPOS,PARTPOS)þJSONOBJECT(JSONOBJECT$NODEPARTS.ENCODING)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.ENCODING),1,NODEPOS,PARTPOS)þJSONOBJECT(JSONOBJECT$NODEPARTS.VALUE)=DELETE(JSONOBJECT(JSONOBJECT$NODEPARTS.VALUE),1,NODEPOS,PARTPOS)þJSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEPOS> -= 1þ*þRETURNþEND000EB5WOBJ.SET.UDOþ0c2      SUBROUTINE WOBJ.SET.UDO(ACTION,NODE,VALUE,RERR)þ      **********************************************************************þ      *þ      * Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: December 2017þ      * Description: set json node to valueþ      *þ      * Modified by: Peter Schellenbach, Zumasysþ      * Date: January 2018þ      * Description: allow Object and Array properties to be set, passingþ      *   a JSON string representation of the node.þ      *þ      **********************************************************************þ      *þ      INCLUDE WOBJ.INCLUDEþ      *INCLUDE UNIVERSE.INCLUDE UDO.Hþ      þ      *$INCLUDE INCLUDE UDO.Hþ      INCLUDE UDO.Hþ      þ      COMMON /WUDO.C/ UDO.OBJECTS(100),UDO.OBJECT.METADATAþ      *þ      IF WOBJ.DEBUG THEN PRINT "WOBJ.SET.UDO: NODE=":NODE:" ACTION=":ACTIONþ      *þ      SACTION=FIELD(ACTION,".",2)þþ      IF 0 THENþ         IF NODE="" THENþ            IF SACTION <> "OBJECT" THENþ               RERR=1þ               RERR<2>="Node cannot be null"þ            END ELSEþ               CALL WOBJ.PARSE(VALUE,NEWOBJ)þ               IF PSERRORS#"" THENþ                  RERR=2þ                  RERR<2> = PSERRORSþ                  IF WOBJ.DEBUG THEN PRINT "WOBJ.SET.OBJECT: parse failure: ":RERR<2>þ               ENDþ            ENDþ            RETURNþ         ENDþ      ENDþ      *þ      CALL WOBJ.FINDNODE.UDO(NODE,NODEPOS,NODETYPE,PARTPOS,JUSTNODE,PARTTYPE,RERR)þþ      IF WOBJ.DEBUG THEN PRINT "WOBJ.SET.UDO: NODEPOS=":NODEPOS:" PARTPOS=":PARTPOS:" NODETYPE=":NODETYPE:" PARTTYPE=":PARTTYPE:" RERROR=":RERR<2>þ      *þ      LASTNODE=""; * WE MAY NEED THIS!!þþ      IF NOT(NODEPOS) THENþ         RERR=1þ         RERR<2>="Node not found"þ         RETURNþ      ENDþ      *þ      * CHECK THE NODE WE ARE SETTING PROPERTY TOþ      * NODETYPE=JSONOBJECT(JSONOBJECT$NODETYPE)<1,NODEPOS>þ      IF NODETYPE#"O" AND NODETYPE#"A" THENþ         RERR=1þ         RERR<2>="Parent node must be an object or array"þ         RETURNþ      ENDþ      *þ      IGNORE.RERR=""þ      *** THIS MAY BE NEEDED TO IDENTIFY OUR LAST NODE!!!þþþ      *þ      * NOW WE ARE SAFE TO SET NEW VALUEþþ      UDOVALUE=""þþ      BEGIN CASEþ         CASE SACTION="OBJECT"þ            IF VALUE="" THEN VALUE="{}"þ            UDOSTATUS=UDOREAD(VALUE,UDOFORMAT_JSON,UDOVALUE)þ         CASE SACTION="ARRAY"þ            IF VALUE="" THEN VALUE="[]"þ            UDOSTATUS=UDOREAD(VALUE,UDOFORMAT_JSON,UDOVALUE)þ         CASE SACTION="NULL"þ            UDOSTATUS=UDOCREATE(UDO_NULL,UDOVALUE)þ         CASE SACTION="BOOLEAN"þ            IF OCONV(VALUE[1,1],"MCU") = "T" OR VALUE=0 THENþ               UDOSTATUS=UDOCREATE(UDO_TRUE,UDOVALUE)þ            END ELSEþ               UDOSTATUS=UDOCREATE(UDO_FALSE,UDOVALUE)þ            ENDþ         CASE SACTION="STRING" OR SACTION=""þ            UDOVALUE=VALUE:""þ         CASE SACTION="NUMBER"þ            UDOVALUE=VALUE+0þ         CASE 1þ            UDOVALUE=VALUE:""þ      END CASEþþ      UDOSTATUS=UDOGETTYPE(UDOVALUE,THIS.UDOTYPE)þ   þ      IF WOBJ.DEBUG THEN PRINT "WOBJ.SET.UDO: SET PARTTYPE=":PARTTYPE:" JUSTNODE=":JUSTNODE:" SACTION: ":SACTION:" THIS.UDOTYPE=":THIS.UDOTYPE; DEBUGþþ      BEGIN CASEþ         CASE NODETYPE="O"þ            UDOSTATUS=UDOSETPROPERTY(UDO.OBJECTS(NODEPOS),JUSTNODE,UDOVALUE)þ         CASE NODETYPE='A' AND PARTPOS=-1þ            UDOSTATUS=UDOARRAYAPPENDITEM(UDO.OBJECTS(NODEPOS),UDOVALUE)þ         CASE NODETYPE='A'þ            UDOSTATUS=UDOARRAYSETITEM(UDO.OBJECTS(NODEPOS),PARTPOS+1, UDOVALUE)þ      END CASEþþ      IF WOBJ.DEBUG THEN PRINT "WOBJ.SET.UDO: UDOSTATUS=":UDOSTATUSþþ      *CALL WOBJ.SET.PART(NODEPOS,PARTPOS,PARTTYPE,PARTKEY,VALUE,RERR)þþ      RETURNþ      END001C67WOBJ.TESTþ0c2**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: WOBJ.TEST - QC Testing tool for WOBJþ*þ**********************************************************************þ*þ* Build test json to parseþ*þþINCLUDE WOBJ.CHOOSE.WOBJþþJSON =  \{\þJSON := \ "stringtest":"stringtestvalue",\þJSON := \ "numbertest": 100.12,\þJSON := \ "booleantesttrue": True, \þJSON := \ "booleantestfalse": False, \þJSON := \ "nulltest": null \þJSON := \}\þ*þ* Lets build the objþCALL @WOBJ.RTNE(TESTOBJ,"VERSION","",VERSION,"",RERR)þPRINT "VERSION: ":VERSIONþþCALL @WOBJ.RTNE(TESTOBJ,"FROMSTRING","","{}","",RERR)þCALL @WOBJ.RTNE(TESTOBJ,"SET.ARRAY","arraytest","[]","",RERR)þCALL @WOBJ.RTNE(TESTOBJ,"SET.STRING","arraytest[-1]","1","",RERR)þCALL @WOBJ.RTNE(TESTOBJ,"SET.STRING","arraytest[-1]","2","",RERR)þCALL @WOBJ.RTNE(TESTOBJ,"SET.OBJECT","objecttest",'{ "objecttestv1":"ok" }',"",RERR)þCALL @WOBJ.RTNE(TESTOBJ,"SET.STRING","stringtest","stringtestvalue","",RERR)þCALL @WOBJ.RTNE(TESTOBJ,"SET.NUMBER","numbertest",100.12,"",RERR)þCALL @WOBJ.RTNE(TESTOBJ,"SET.BOOLEAN","booleantesttrue","True","",RERR)þCALL @WOBJ.RTNE(TESTOBJ,"SET.BOOLEAN","booleantestfalse","False","",RERR)þCALL @WOBJ.RTNE(TESTOBJ,"SET.NULL","nulltest","NULL","",RERR)þCALL @WOBJ.RTNE(TESTOBJ,"TOSTRING","",JSON,"",RERR)þTESTOBJ=""þ*þ* TEST 1 - PARSEþ*þTEST="parse"þGOSUB start.testþCALL @WOBJ.RTNE(TESTOBJ,"FROMSTRING","",JSON,"",RERR)þGOSUB process.errorþIF NOT(RERR<1>) THENþ   TEST.MSG="Parse ok"þ   TEST.STATUS=1þENDþGOSUB end.testþþ*þ* TEST 2 - GetStringþ*þTEST="GetString"þGOSUB start.testþCALL @WOBJ.RTNE(TESTOBJ,"GET","stringtest",VALUE,"",RERR)þGOSUB process.errorþIF NOT(RERR<1>) THENþ   TEST.MSG="String Found: (":VALUE:")"þ   IF VALUE="stringtestvalue" THENþ      TEST.STATUS=1þ   END ELSEþ       TEST.STATUS=0þ   ENDþENDþGOSUB end.testþ*þ* TEST 3 - GetNumberþ*þTEST="GetNumber"þGOSUB start.testþCALL @WOBJ.RTNE(TESTOBJ,"GET","numbertest",VALUE,"",RERR)þGOSUB process.errorþIF NOT(RERR<1>) THENþ   TEST.MSG="Number Found: (":VALUE:")"þ   BEGIN CASEþ      CASE NOT(NUM(VALUE))þ      CASE VALUE=100.12þ         TEST.STATUS=1þ      CASE 1þ   END CASEþENDþGOSUB end.testþ*þ* TEST 4 - GETBooleanþ*þTEST="GetBooleanTrue"þGOSUB start.testþCALL @WOBJ.RTNE(TESTOBJ,"GET","booleantesttrue",VALUE,"",RERR)þGOSUB process.errorþIF NOT(RERR<1>) THENþ   TEST.MSG="Boolean Found: (":VALUE:")"þ   BEGIN CASEþ      CASE VALUE="true"þ         TEST.STATUS=1þ      CASE 1þ   END CASEþENDþGOSUB end.testþ*þ* TEST 5 - GETBooleanþ*þTEST="GetBooleanFalse"þGOSUB start.testþCALL @WOBJ.RTNE(TESTOBJ,"GET","booleantestfalse",VALUE,"",RERR)þGOSUB process.errorþIF NOT(RERR<1>) THENþ   TEST.MSG="Boolean Found: (":VALUE:")"þ   BEGIN CASEþ      CASE VALUE="false"þ         TEST.STATUS=1þ      CASE 1þ   END CASEþENDþGOSUB end.testþ*þ* TEST 6 - get nullþ*þTEST="GetNull"þGOSUB start.testþCALL @WOBJ.RTNE(TESTOBJ,"GET","nulltest",VALUE,"",RERR)þGOSUB process.errorþIF NOT(RERR<1>) THENþ   TEST.MSG="testnull Found: (":VALUE:")"þ   BEGIN CASEþ      CASE VALUE="null"þ         TEST.STATUS=1þ      CASE 1þ   END CASEþENDþGOSUB end.testþ*þ* TEST 7 - get lengthþ*þTEST="LENGTH"þGOSUB start.testþCALL @WOBJ.RTNE(TESTOBJ,"LENGTH","arraytest",VALUE,"",RERR)þGOSUB process.errorþIF NOT(RERR<1>) THENþ   TEST.MSG="LENGTH(arraytest) Found: (":VALUE:")"þ   BEGIN CASEþ      CASE VALUE="2"þ         TEST.STATUS=1þ      CASE 1þ   END CASEþENDþGOSUB end.testþ*þ* TEST 8 get array sub partþ*þTEST="get array part"þGOSUB start.testþCALL @WOBJ.RTNE(TESTOBJ,"GET","arraytest[1]",VALUE,"",RERR)þGOSUB process.errorþIF NOT(RERR<1>) THENþ   TEST.MSG="arraytest[2] Found: (":VALUE:")"þ   BEGIN CASEþ      CASE VALUE="2"þ         TEST.STATUS=1þ      CASE 1þ   END CASEþENDþGOSUB end.testþ*þ* TEST 9 - get object keysþ*þTEST="KEYS"þGOSUB start.testþCALL @WOBJ.RTNE(TESTOBJ,"KEYS","objecttest",VALUE,"",RERR)þGOSUB process.errorþIF NOT(RERR<1>) THENþ   TEST.MSG="KEYS Found: (":VALUE:")"þ   BEGIN CASEþ      CASE VALUE="objecttestv1"þ         TEST.STATUS=1þ      CASE 1þ   END CASEþENDþGOSUB end.testþþ*þ* TEST 10- add item and retrieveþ*þTEST="addstring2"þGOSUB start.testþCALL @WOBJ.RTNE(TESTOBJ,"SET.STRING","string2","string2","",RERR)þGOSUB process.errorþIF NOT(RERR<1>) THENþ   TEST.MSG="Added string2"þENDþGOSUB end.testþ*þ* TEST 11 - get string2þ*þTEST="getstring2"þGOSUB start.testþCALL @WOBJ.RTNE(TESTOBJ,"GET","string2",VALUE,"",RERR)þGOSUB process.errorþIF NOT(RERR<1>) THENþ   TEST.MSG="string2 Found: (":VALUE:")"þ   BEGIN CASEþ      CASE VALUE="string2"þ         TEST.STATUS=1þ      CASE 1þ   END CASEþENDþGOSUB end.testþ*þ* TEST 12- add item and retrieveþ*þTEST="addnull2"þGOSUB start.testþCALL @WOBJ.RTNE(TESTOBJ,"SET.NULL","null2","null","",RERR)þGOSUB process.errorþIF NOT(RERR<1>) THENþ   TEST.MSG="Add Null2"þENDþGOSUB end.testþþ*þ* TEST 11 - get NULL2þ*þTEST="getnull2"þGOSUB start.testþCALL @WOBJ.RTNE(TESTOBJ,"GET","null2",VALUE,"",RERR)þGOSUB process.errorþIF NOT(RERR<1>) THENþ   TEST.MSG="null2 Found: (":VALUE:")"þ   BEGIN CASEþ      CASE VALUE="null"þ         TEST.STATUS=1þ      CASE 1þ   END CASEþENDþGOSUB end.testþþ*þ* TEST 12 - Add blank Objectþ*þTEST="Add blank object"þGOSUB start.testþCALL @WOBJ.RTNE(TESTOBJ,"SET.OBJECT","nullobject","","",RERR)þCALL @WOBJ.RTNE(TESTOBJ,"SET","nullobject.nullfield","nullvalue","",RERR)þCALL @WOBJ.RTNE(TESTOBJ,"GET","nullobject.nullfield",VALUE,"",RERR)þGOSUB process.errorþIF NOT(RERR<1>) AND VALUE="nullvalue" THENþ   TEST.MSG="nullfield found "þ   TEST.STATUS=1þEND ELSEþ   TEST.MSG="nullfield not found "þENDþTEST.MSG:=' (':VALUE:')'þþGOSUB end.testþþ*þ* TEST 13 - Add blank arrayþ*þTEST="Add blank array"þGOSUB start.testþCALL @WOBJ.RTNE(TESTOBJ,"SET.ARRAY","nullarray","","",RERR)þCALL @WOBJ.RTNE(TESTOBJ,"SET","nullarray[-1]","nullvalue","",RERR)þCALL @WOBJ.RTNE(TESTOBJ,"GET","nullarray[0]",VALUE,"",RERR)þGOSUB process.errorþIF NOT(RERR<1>) AND VALUE="nullvalue" THENþ   TEST.MSG="nullfield found "þ   TEST.STATUS=1þEND ELSEþ   TEST.MSG="nullfield not found "þENDþTEST.MSG:=' (':VALUE:')'þþGOSUB end.testþþ*þ* TEST 14 - Test TOJSONþTEST="Test TOJSON"þGOSUB start.testþCALL @WOBJ.RTNE(TESTOBJ,"TOJSON","",TJSON,"PRETTIFY",RERR)þGOSUB process.errorþTEST.STATUS=0þTEST.MSG="Testing JSON"þIF NOT(RERR<1>) THENþ   IF INDEX(TJSON,"arraytest",1) THENþ   TEST.MSG="nullfield found "þ   TEST.STATUS=1þ   ENDþEND ELSEþ   TEST.MSG=""þENDþþGOSUB end.testþþ*þ* TEST 15 - Test FROMJSONþTEST="Test FROMJSON"þGOSUB start.testþCALL @WOBJ.RTNE(TESTOBJ2,"FROMJSON","",TJSON,"",RERR)þCALL @WOBJ.RTNE(TESTOBJ2,"GET","stringtest",VALUE,"",RERR)þGOSUB process.errorþTEST.MSG="stringtestvalue=(":VALUE:")"þTEST.STATUS=0þIF NOT(RERR<1>) THENþ   IF VALUE="stringtestvalue" THENþ   TEST.STATUS=1þ   ENDþENDþþGOSUB end.testþþþCALL @WOBJ.RTNE(TESTOBJ,"TOSTRING","",OUT.JSON,"PRETTIFY",RERR)þPRINT OUT.JSONþþþSTOPþ*þGOSUB start.testþRETURNþ*þprocess.error: *þIF RERR<1> THENþ   TEST.STATUS=-1þ   TEST.MSG=RERR<1>þENDþRETURNþ*þ*þstart.test: *þTEST.STATUS=0þTEST.MSG="Success"þPRINT "Test: ":TEST[1,20]"L(#20)":þRETURNþ*þend.test: *þPRINT "  ":TEST.MSG[1,60]"L(#60)":þPRINT " ":þIF TEST.STATUS THEN PRINT "[Ok    ]" ELSE PRINT @(-13):"[Failed]":@(-14)þRETURN0009CEWOBJ.OBJECT.TOSTRINGþ0c2SUBROUTINE WOBJ.OBJECT.TOSTRING(JSON,POS)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: convert parsed json object node to stringþ*þ**********************************************************************þ*þþINCLUDE WOBJ.INCLUDEþ*þJSON:="{"; * START OUR STRINGþINDENT.DEPTH+=1þ*IF PRETTIFY THEN JSON:=NLþNUMBER.PARTS=JSONOBJECT(JSONOBJECT$NODELENGTH)<1,POS>þIF WOBJ.DEBUG THEN PRINT "WOBJ.TOSTRING: POS=":POS:" NUMBER.PARTS=":NUMBER.PARTSþ*þ* OPTION TO SORT THISþ*þ*SORTTYPE="NSBASIC"þSORTTYPE=""þBEGIN CASEþ     CASE 1þ        KEYS=JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)<1,POS>þ        CONVERT @SVM TO @AM IN KEYSþ        SORTED.KEYS=KEYSþEND CASEþACTUAL.KEYS=JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)<1,POS>þFOR PP=1 TO NUMBER.PARTSþ    PART.KEY=SORTED.KEYS<PP>þ    LOCATE PART.KEY IN ACTUAL.KEYS<1,1> SETTING P ELSEþ        IF WOBJ.DEBUG THEN PRINT "WOBJ.TOSTRING: COULD NOT LOCATE ":PART.KEY:" IN ":ACTUAL.KEYSþ    ENDþ    PART.TYPE=JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,POS,P>þ    PART.KEY=JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)<1,POS,P>þ    IF WOBJ.DEBUG THEN PRINT "WOBJ.TOSTRING: POS=":POS:" P=":P:" T=":PART.TYPE:" K=":PART.KEYþ    IF PP=1 AND PRETTIFY THEN JSON:=NLþ    CALL WOBJ.ENCODE(PART.KEY,OUT.PART.KEY)þ    CALL WOBJ.PRETTIFY.INDENT(JSON,POS)þ    JSON:='"':OUT.PART.KEY:'": 'þ    BEGIN CASEþ        CASE PART.TYPE="S"þ            CALL WOBJ.STRING.TOSTRING(JSON,POS,P)þ        CASE PART.TYPE="B"þ            CALL WOBJ.BOOLEAN.TOSTRING(JSON,POS,P)þ        CASE PART.TYPE="D"þ            CALL WOBJ.NUMBER.TOSTRING(JSON,POS,P)þ        CASE PART.TYPE="N"þ            CALL WOBJ.NULL.TOSTRING(JSON,POS,P)þ        CASE PART.TYPE="O"þ            PART.FLINK=JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,POS,P>þ            IF WOBJ.DEBUG THEN PRINT "WOBJ.TOSTRING: FL=":PART.FLINKþ            CALL WOBJ.OBJECT.TOSTRING(JSON,PART.FLINK)þ        CASE PART.TYPE="A"þ            PART.FLINK=JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,POS,P>þ            IF WOBJ.DEBUG THEN PRINT "WOBJ.TOSTRING: FL=":PART.FLINKþ            CALL WOBJ.ARRAY.TOSTRING(JSON,PART.FLINK)þ    END CASEþ    IF PP <> NUMBER.PARTS THENþ        JSON:=", "þ        IF PRETTIFY THEN JSON:=NLþ    ENDþNEXT PPþ*þIF PRETTIFY THENþ    JSON:=NLþ    PASS.POS=POS-1þ    CALL WOBJ.PRETTIFY.INDENT(JSON,PASS.POS)þENDþJSON:="}"þ*IF PRETTIFY THEN JSON:=NLþINDENT.DEPTH -= 1þRETURNþEND000459WOBJ.KEYSþ0c2SUBROUTINE WOBJ.KEYS(ACTION,NODE,VALUE,RERR)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: return list of elements in a json node in parsed object structureþ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þVALUE=""þCALL WOBJ.FINDNODE(NODE,NODEPOS,PARTPOS,CHILDPOS,LASTNODE,RERR)þ*þ*IF WOBJ.DEBUG THEN PRINT "WOBJ.KEYS: NODEPOS=":NODEPOS:" PARTPOS=":PARTPOS:" LASTNODE=":LASTNODE:" RERR=":RERR<2>þ*þIF NOT(NODEPOS) THENþ    RERR=1þ    RERR<2>="Node not found" þ    RETURNþENDþIF NODE#"" AND NOT(PARTPOS) THENþ    RERR=1þ    RERR<2>="Node not found" þ    RETURNþENDþIF NODE="" THENþ    NODEPOS=1þ    CHILDPOS=1þENDþIF NOT(CHILDPOS) THENþ   RERR=1þ   RERR<2>="Node is not an object"þ   RETURNþENDþNODETYPE=JSONOBJECT(JSONOBJECT$NODETYPE)<1,CHILDPOS>þIF NODETYPE#"O" THENþ   RERR=1þ   RERR<2>="Node is not an object"þ   RETURNþENDþVALUE=JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)<1,CHILDPOS>þRETURNþEND0002C7WOBJ.TOSTRINGþ0c2SUBROUTINE WOBJ.TOSTRING(JSON)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: internal convert json object to stringþ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þPOS=1þOBJ.TYPE=JSONOBJECT(JSONOBJECT$NODETYPE)<1,POS>þIF OBJ.TYPE="" OR POS > JSONOBJECT$NODECNTR THEN RETURNþIF WOBJ.DEBUG THEN PRINT "FIRST OBJECT=":OBJ.TYPEþBEGIN CASEþ    CASE OBJ.TYPE="A"þ        CALL WOBJ.ARRAY.TOSTRING(JSON,POS)þ    CASE OBJ.TYPE="O"þ        CALL WOBJ.OBJECT.TOSTRING(JSON,POS)þEND CASEþRETURNþEND0002AFWOBJ.DECODE.PARTþ0c2SUBROUTINE WOBJ.DECODE.PART(NODEPOS,PARTPOS,VALUE)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: decode json part valueþ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þPARTENCODING =  JSONOBJECT(JSONOBJECT$NODEPARTS.ENCODING)<1,NODEPOS,PARTPOS>þPARTVALUE    =  JSONOBJECT(JSONOBJECT$NODEPARTS.VALUE)<1,NODEPOS,PARTPOS>þ*þBEGIN CASEþ    CASE PARTENCODING="H"þ        VALUE=ICONV(PARTVALUE,"MX0C"); * UVþ    CASE 1þ        VALUE=PARTVALUEþEND CASEþ*þRETURNþEND000529WOBJ.GETþ0c2SUBROUTINE WOBJ.GET(ACTION,NODE,VALUE,RERR)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: get json element valueþ*þ* Modified by: Peter Schellenbach, Zumasysþ* Date: January 2018þ* Description: if specified node is an Object or Array, returnþ*   a JSON string representation of the node.þ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þVALUE=""þIF NODE="" THENþ    CALL WOBJ.OBJECT.TOSTRING(VALUE,1) ; * Root objectþ    RETURNþENDþ*þCALL WOBJ.FINDNODE(NODE,NODEPOS,PARTPOS,CHILDPOS,LASTNODE,RERR)þIF NODEPOS > 0 AND PARTPOS > 0 THENþ    OBJ.TYPE=JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,NODEPOS,PARTPOS>þ    BEGIN CASEþ        CASE OBJ.TYPE="O"þ            CALL WOBJ.OBJECT.TOSTRING(VALUE,CHILDPOS)þ        CASE OBJ.TYPE="A"þ            CALL WOBJ.ARRAY.TOSTRING(VALUE,CHILDPOS)þ        CASE OBJ.TYPE="N"þ            VALUE="null"; * 4/23/202 - Return null valueþ        CASE 1þ            CALL WOBJ.DECODE.PART(NODEPOS,PARTPOS,VALUE)þ    END CASEþEND ELSEþ    VALUE="" ; * NODE NOT FOUND!þENDþIF WOBJ.DEBUG THEN PRINT "WOBJ.GET: ":NODE:" NODEPOS=":NODEPOS:" PARTPOS=":PARTPOS:" VALUE=":VALUEþRETURNþEND0008BCWOBJ.PARSESTRINGþ0c2SUBROUTINE WOBJ.PARSESTRING(JSTR,INDEXPOS,PARSESTRING)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: parse json string valueþ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þPARSESTRING=""þ*þSAVE.INDEXPOS=INDEXPOSþCALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)þIFQUOTE = JSTR[INDEXPOS,1]þINDEXPOS+=1þLEN.JSTR=LEN(JSTR)þ*þLOOPþWHILE INDEXPOS > 0 AND INDEXPOS < LEN.JSTR DOþ    C = JSTR[INDEXPOS,1]þ    IF WOBJ.DEBUG > 1 THEN PRINT "PARSESTRING: LOOKING AT (":C:")"þ    BEGIN CASEþ        CASE C = "\"þ            INDEXPOS+=1þ            C=JSTR[INDEXPOS,1]þ            BEGIN CASEþ                CASE C = \"\ OR C = "\" OR C= "/" OR C = "'"þ                    PARSESTRING:=Cþ                    INDEXPOS+=1þ                CASE C = "b"þ                    PARSESTRING:=BSþ                    INDEXPOS+=1þ                CASE C = "f"þ                    PARSESTRING:=FFþ                    INDEXPOS+=1þ                CASE C = "n"þ                    PARSESTRING:=LFþ                    INDEXPOS+=1þ                CASE C = "r"þ                    PARSESTRING:=CRþ                    INDEXPOS+=1þ                CASE C = "t"þ                    PARSESTRING:=TBþ                    INDEXPOS+=1þ                CASE C = "u"þ                    INDEXPOS+=1þ                    CODE=JSTR[INDEXPOS,4]þ                    IF CODE[1,2]="00" THENþ                        PARSESTRING:=ICONV(CODE[3,2],"MX0C")þ                    END ELSEþ                        PARSESTRING:="_" ;* Poor substitute for invalid Unicode character!þ                        PSERRORS<-1> = "Invalid Unicode character at position ":INDEXPOS-1:" : u":CODEþ                    ENDþ                    INDEXPOS+=4þ            END CASEþ        CASE C = IFQUOTEþ            INDEXPOS+=1þ            EXITþ        CASE 1þ            PARSESTRING:=Cþ            INDEXPOS+=1þ    END CASEþREPEATþIF C # IFQUOTE THENþ    * string not terminated!þ    PARSESTRING=""þ    INDEXPOS=SAVE.INDEXPOSþENDþIF WOBJ.DEBUG THEN PRINT "PARSESTRING: EXITING: ":PARSESTRINGþRETURNþEND000111WOBJ.UNASSIGNED.INCLUDEþ0c2IF UNASSIGNED(PASSEDOBJ) THEN RERR='PARAM1 BLANK'þIF UNASSIGNED(ACTION) THEN RERR='PARAM2 (ACTION) NOT ASSIGNED'þIF UNASSIGNED(NODE) THEN RERR='PARAM3 (NODE) NOT ASSIGNED'þIF UNASSIGNED(VALUE) THEN VALUE=""þIF UNASSIGNED(OPTIONS) THEN OPTIONS=""þ000258WOBJ.BOOLEAN.TOSTRINGþ0c2SUBROUTINE WOBJ.BOOLEAN.TOSTRING(JSON,NODEPOS,PARTPOS)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: convert json boolean to stringþ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þCALL WOBJ.DECODE.PART(NODEPOS,PARTPOS,VALUE)þ*þCALL WOBJ.ENCODE(VALUE,OUT.VALUE)þJSON:=OCONV(OUT.VALUE,"MCL")þ*þIF WOBJ.DEBUG THEN PRINT "N=":NODEPOS:" P=":PARTPOS:" V=":VALUEþRETURNþEND0001E4WOBJ.NULL.TOSTRINGþ0c2SUBROUTINE WOBJ.NULL.TOSTRING(JSON,NODEPOS,PARTPOS)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: json null to stringþ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þJSON:="null"þ*þIF WOBJ.DEBUG THEN PRINT "N=":NODEPOS:" P=":PARTPOS:" V=null"þRETURNþEND0001E1WOBJ.PRETTIFY.INDENTþ0c2SUBROUTINE WOBJ.PRETTIFY.INDENT(JSON,POS)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: indent json stringþ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þINDENTSTEP=2þ*þIF PRETTIFY THENþ    JSON:=STR(" ",(INDENT.DEPTH*INDENTSTEP))þENDþ*þRETURNþEND00024DWOBJ.STRING.TOSTRINGþ0c2SUBROUTINE WOBJ.STRING.TOSTRING(JSON,NODEPOS,PARTPOS)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: return json node as stringþ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þCALL WOBJ.DECODE.PART(NODEPOS,PARTPOS,VALUE)þ*þCALL WOBJ.ENCODE(VALUE,OUT.VALUE)þJSON:='"':OUT.VALUE:'"'þ*þIF WOBJ.DEBUG THEN PRINT "N=":NODEPOS:" P=":PARTPOS:" V=":VALUEþRETURNþEND000971WOBJ.PARSEVALUEþ0c2SUBROUTINE WOBJ.PARSEVALUE(JSTR,INDEXPOS,PARSEVALUE)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: parse json valueþ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þPARSEVALUE=""þ*þIF WOBJ.DEBUG THEN PRINT "PARSEVALUE - STARTING"þCALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)þ*þC=JSTR[INDEXPOS,1]þLEN.JSTR=LEN(JSTR)þ*þIF WOBJ.DEBUG THEN PRINT "PARSEVALUE LOOKING AT ":Cþ*þ* WE WILL BE ADDING A NEW ITEM TO OUR OBJECT ARRAYþ*þBEGIN CASEþ    CASE C="{"þ        CALL WOBJ.PARSEOBJECT(JSTR,INDEXPOS,PARSEVALUE)þ    CASE C="["þ        IF WOBJ.DEBUG THEN PRINT "PARSEVALUE CALLING PARSEARRAY"þ        CALL WOBJ.PARSEARRAY(JSTR,INDEXPOS,PARSEVALUE)þ    CASE C='"' OR C="'"þ        IF WOBJ.DEBUG THEN PRINT "PARSEVALUE - CALLING PARSESTRING"þ        CALL WOBJ.PARSESTRING(JSTR,INDEXPOS,PARSEVALUE)þ        PARSEVALUE=INSERT(PARSEVALUE,1;"S")þ    CASE 1þ        IF C="t" OR C="T" OR C="f" OR C="F" THENþ            IF WOBJ.DEBUG THEN PRINT "PARSEVALUE - CALLING PARSEBOOLEAN"þ            CALL WOBJ.PARSEBOOLEAN(JSTR,INDEXPOS,PARSEVALUE)þ            IF PARSEVALUE#"" THENþ                PARSEVALUE=INSERT(PARSEVALUE,1;"B")þ            ENDþ        ENDþ        IF PARSEVALUE="" AND (C="n" OR C="N") THENþ            IF WOBJ.DEBUG THEN PRINT "PARSEVALUE - CALLING PARSENULL"þ            CALL WOBJ.PARSENULL(JSTR,INDEXPOS,PARSEVALUE)þ            IF PARSEVALUE#"" THENþ                 PARSEVALUE=INSERT(PARSEVALUE,1;"N")þ            ENDþ        ENDþ        IF PARSEVALUE="" THENþ            IF WOBJ.DEBUG THEN PRINT "PARSEVALUE - CALLING PARSENUMBER"þ            CALL WOBJ.PARSENUMBER(JSTR,INDEXPOS,PARSEVALUE)þ            IF PARSEVALUE#"" THENþ                PARSEVALUE=INSERT(PARSEVALUE,1;"D")þ            ENDþ        ENDþ        IF PARSEVALUE="" THENþ            * Treat unidentified value as stringþ            LOOPþ            WHILE INDEXPOS > 0 AND INDEXPOS < LEN.JSTR DOþ                C = JSTR[INDEXPOS,1]þ                IF INDEX(",]}",C,1) THENþ                    EXITþ                ENDþ                PARSEVALUE:=Cþ                INDEXPOS+=1þ            REPEATþ            PARSEVALUE=INSERT(PARSEVALUE,1;"S")þ        ENDþEND CASEþIF WOBJ.DEBUG THEN PRINT "PARSEVALUE - END OF ROUTINE"þ*þRETURNþEND000180WOBJ.CHOOSE.WOBJþ0c2* Code to determine default wobj library to useþþ* This needs to change for MVDBTOOLKIT build, defaults to WOBJþþWOBJ.RTNE="WOBJ"þþNO.MD.FILE=0þþOPEN "MD" TO FILE.MD ELSEþ    OPEN "VOC" TO FILE.MD ELSE NO.MD.FILE=1þENDþþIF NOT(NO.MD.FILE) THENþ    READ WOBJ.CONF FROM FILE.MD, "WOBJ.CONF" ELSE WOBJ.CONF=""þþ    IF WOBJ.CONF<3> # "" THEN WOBJ.RTNE=WOBJ.CONF<3>þEND0014F3WOBJþ0c2SUBROUTINE WOBJ(PASSEDOBJ,ACTION,NODE,VALUE,OPTIONS,RERR)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: WOBJ json library main routineþ*þ**********************************************************************þ*þWOBJ.VERSION = "2.0"þ*þINCLUDE WOBJ.INCLUDEþ*þþ* 4/21/2020 Merged in udo object supportþþPLATFORM=""þþ* HOW TO DEFINE CONFIGURATION FOR WOBJ??þþNO.MD.FILE=0þþOPEN "MD" TO MD.FILE ELSEþ   OPEN "VOC" TO MD.FILE ELSE NO.MD.FILE=1þENDþþWOBJ.CONF=""þþIF NOT(NO.MD.FILE) THENþ   READ WOBJ.CONF FROM MD.FILE, "WOBJ.CONF" ELSE WOBJ.CONF=""þENDþþþIF WOBJ.CONF="" THENþ   NO.DICT.WOBJ.BP=0þ   OPEN "DICT","WOBJ.BP" TO DICT.WOBJ.BP ELSE NO.DICT.WOBJ.BP=1þ   IF NOT(NO.DICT.WOBJ.BP) THENþ      READ WOBJ.CONF FROM DICT.WOBJ.BP, "WOBJ.CONF" ELSE WOBJ.CONF=""þ   ENDþENDþþPLATFORM=WOBJ.CONF<2>þþ* 5/11/2020 - Moved unassigned check to hereþ*þ* Doing inline include due to Assign/Unassigned (unidata)þ* WOBJ.UNASSIGNED.INCLUDEþþ*$INCLUDE WOBJ.UNASSIGNED.INCLUDEþINCLUDE WOBJ.UNASSIGNED.INCLUDEþþþIF INDEX(OPTIONS,"PRETTIFY",1) THEN PRETTIFY=1 ELSE PRETTIFY=0þIF INDEX(OPTIONS,"PRETTIFYCR",1) THEN PRETTIFYCR=1 ELSE PRETTIFYCR=0þIF INDEX(OPTIONS,"DEBUG",1) THEN WOBJ.DEBUG=1 ELSE WOBJ.DEBUG=0þIF INDEX(OPTIONS,"UDO=1",1) THEN PLATFORM="UDO"þIF INDEX(OPTIONS,"UDO=0",1) AND PLATFORM="UDO" THEN PLATFORM=""þIF INDEX(OPTIONS,"NATIVE",1) THEN PLATFORM=""þþ* 5/11/2020 - pap Patch to allow default setting for a þ*             set.object or set.arrayþ*þþIF ACTION="SET.OBJECT" AND VALUE="" THEN VALUE="{}"þIF ACTION="SET.ARRAY" AND VALUE="" THEN VALUE="[]"þIF ACTION="FROMJSON" THEN ACTION="FROMSTRING"þIF ACTION="TOJSON" THEN ACTION="TOSTRING"þþþBEGIN CASEþ   CASE PLATFORM='UDO'þ      CALL WOBJ.UDO(PASSEDOBJ,ACTION,NODE,VALUE,OPTIONS,RERR)þ      RETURNþ   CASE 1þEND CASEþþ*þMAT JSONOBJECT = ""þRERR=""þINDENT.DEPTH=0þ*þBEGIN CASEþ    CASE ACTION="FROMSTRING"þ* THIS EXISTS EARLIER DUE TO MATPARSE BELOWþ        CALL WOBJ.PARSE(VALUE,NEWOBJ)þ        PASSEDOBJ=NEWOBJþ        IF PSERRORS # "" THENþ            RERR=2þ            RERR<2> = PSERRORSþ        ENDþ        IF WOBJ.DEBUG THEN PRINT "WOBJ: FROMSTRING ACTION: VALUE=":VALUE:" RERR=":RERR<2>þ        RETURNþ    CASE ACTION="VERSION"þ        VALUE=WOBJ.VERSIONþ        RETURNþEND CASEþþRERR=''þþ*IF NOT(ASSIGNED(PASSEDOBJ)) THEN RERR='PARAM1 BLANK'þ*IF NOT(ASSIGNED(ACTION)) THEN RERR='PARAM2 (ACTION) NOT ASSIGNED'þ*IF NOT(ASSIGNED(NODE)) THEN RERR='PARAM3 (NODE) NOT ASSIGNED'þ*IF NOT(ASSIGNED(VALUE)) THEN VALUE=""þ*IF NOT(ASSIGNED(OPTIONS)) THEN OPTIONS=""þþIF RERR <> "" THENþ   RERR<2>=RERRþ   RERR<1>=1þ   PRINT RERR<1>þ   RETURNþENDþþ*þ* MATPARSE JSONOBJECT FROM PASSEDOBJ; * all except unidataþMATPARSE JSONOBJECT FROM PASSEDOBJ, @AM; * Unidataþ*þIF WOBJ.DEBUG THEN PRINT "ACTION=":ACTIONþBEGIN CASEþ    CASE ACTION="TOSTRING"þ        VALUE=""þ        IF NODE # "" THENþ            RERR=1þ            RERR<2>="Node ignored - returning the root node"þ            IF WOBJ.DEBUG THEN PRINT "WOBJ: TOSTRING ACTION: NODE ":NODE:" IGNORED"þ        ENDþ        CALL WOBJ.TOSTRING(VALUE)þ    CASE ACTION="GET"þ        GOSUB action.getþ    CASE FIELD(ACTION,".",1)="SET"þ        GOSUB action.setþ    CASE ACTION="DELETE"þ        GOSUB action.deleteþ    CASE ACTION="KEYS"þ        GOSUB action.keysþ    CASE ACTION="LENGTH"þ        GOSUB action.lengthþ    CASE ACTION="TYPE"þ        GOSUB action.typeþ    CASE 1þ        VALUE=""þ        RERR=1þ        RERR<2>="Invalid action '":ACTION:"'"þ        IF WOBJ.DEBUG THEN PRINT "WOBJ: INVALID ACTION: ":ACTIONþEND CASEþ*þMATBUILD PASSEDOBJ FROM JSONOBJECTþ*þRETURNþ*þaction.get: *þCALL WOBJ.GET(ACTION,NODE,VALUE,RERR)þRETURNþ*þaction.set: *þCALL WOBJ.SET(ACTION,NODE,VALUE,RERR)þRETURNþ*þaction.delete: *þCALL WOBJ.DELETE(ACTION,NODE,VALUE,RERR)þRETURNþ*þaction.keys: *þCALL WOBJ.KEYS(ACTION,NODE,VALUE,RERR)þRETURNþ*þaction.length: *þCALL WOBJ.FINDNODE(NODE,NODEPOS,PARTPOS,CHILDPOS,LASTNODE,RERR)þIF PARTPOS THENþ    IF CHILDPOS THENþ        VALUE=JSONOBJECT(JSONOBJECT$NODELENGTH)<1,CHILDPOS>+0þ    END ELSEþ        VALUE=1 ;* SIMPLE NODE HAS LENGTH OF 1þ    ENDþEND ELSEþ    IF NODE="" THENþ        VALUE=JSONOBJECT(JSONOBJECT$NODELENGTH)<1,1>+0þ    END ELSEþ        VALUE=0 ;* NODE NOT FOUND!þ    ENDþENDþIF WOBJ.DEBUG THEN PRINT "WOBJ: LENGTH ACTION: ":NODE:" NODEPOS=":NODEPOS:" PARTPOS=":PARTPOS:" CHILDPOS=":CHILDPOS:" LENGTH=":VALUE:" RERR=":RERR<2>þRETURNþ*þaction.type: *þCALL WOBJ.FINDNODE(NODE,NODEPOS,PARTPOS,CHILDPOS,LASTNODE,RERR)þIF PARTPOS THENþ    PARTTYPE = JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,NODEPOS,PARTPOS>þ    BEGIN CASEþ        CASE PARTTYPE='O'þ            VALUE='OBJECT'þ        CASE PARTTYPE='A'þ            VALUE='ARRAY'þ        CASE PARTTYPE='D'þ            VALUE='NUMBER'þ        CASE PARTTYPE='S'þ            VALUE='STRING'þ        CASE PARTTYPE='N'þ            VALUE='NULL'þ        CASE PARTTYPE='B'þ            VALUE='BOOLEAN'þ        CASE 1þ            VALUE='UNKNOWN'þ    END CASEþEND ELSEþ    IF NODE="" THENþ        VALUE="OBJECT"þ    END ELSEþ        VALUE="UNDEFINED" ;* NODE NOT FOUND!þ    ENDþENDþIF WOBJ.DEBUG THEN PRINT "WOBJ: TYPE ACTION: ":NODE:" NODEPOS=":NODEPOS:" PARTPOS=":PARTPOS:" CHILDPOS=":CHILDPOS:" TYPE=":VALUE:" RERR=":RERR<2>þRETURNþ*þEND00038DWOBJ.PARSENUMBERþ0c2SUBROUTINE WOBJ.PARSENUMBER(JSTR,INDEXPOS,PARSESTRING)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: parse json numeric valueþ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þPARSESTRING=""þ*þCALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)þSAVE.INDEXPOS=INDEXPOSþ*þJSTR.LENGTH=LEN(JSTR)þ*þLOOP WHILE INDEXPOS > 0 AND INDEXPOS <= JSTR.LENGTH DOþ    C=JSTR[INDEXPOS,1]þ    IF NUM(C) OR C="+" OR C="-" OR C="." OR C="E" OR C="e" THENþ        PARSESTRING:=Cþ        INDEXPOS+=1þ    END ELSEþ        EXITþ    ENDþREPEATþCALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)þC=JSTR[INDEXPOS,1]þIF INDEX(",]}",C,1)=0 THENþ    * invalid terminator - not a numberþ    PARSESTRING=""þ    INDEXPOS=SAVE.INDEXPOSþENDþRETURNþEND000419WOBJ.PARSEþ0c2SUBROUTINE WOBJ.PARSE(JSTR,JSONOBJECTRETURN)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: parse json string into objectþ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þPSERRORS=""þMAT JSONOBJECT=""þJSONOBJECTRETURN=""þ*þINDEXPOS=1þCALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)þC=JSTR[INDEXPOS,1]þIF C # "{" THENþ    IF C # "" THENþ        PSERRORS<-1>="Leading brace for JSON object missing"þ    ENDþ    RETURNþENDþ*þCALL WOBJ.PARSEOBJECT(JSTR,INDEXPOS,PARSERESULT)þIF PARSERESULT="" THENþ    IF PSERRORS="" THEN PSERRORS<-1>="Parse failure"þEND ELSEþ    * MAKE SURE WE CONSUMED ENTIRE JSTRþ    CALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)þ    IF INDEXPOS <= LEN(JSTR) THENþ        PSERRORS<-1>="Extra data (":(LEN(JSTR)-INDEXPOS+1):" characters) after final close brace ignored"þ    ENDþENDþ*þMATBUILD JSONOBJECTRETURN FROM JSONOBJECTþ*þRETURNþEND000A0FWOBJ.PARSEARRAYþ0c2SUBROUTINE WOBJ.PARSEARRAY(JSTR,INDEXPOS,PARSEARRAY)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: parse json arrayþ*þ**********************************************************************þ*þINCLUDE WOBJ.INCLUDEþ*þPARSEVARRAY=""þIF WOBJ.DEBUG THEN PRINT "PARSEARRAY - STARTING"þ*þCALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)þ*þIF JSTR[INDEXPOS,1] <> "[" THENþ    PSERRORS<-1>="Invalid Array at position ":INDEXPOS:" : ":JSTR[INDEXPOS,20]þ    RETURNþENDþ*þLEN.JSTR = LEN(JSTR)þINDEXPOS+=1þ*þJSONOBJECT(JSONOBJECT$NODECNTR)+=1þNODEID=JSONOBJECT(JSONOBJECT$NODECNTR)þJSONOBJECT(JSONOBJECT$NODETYPE)<1,NODEID>="A"; *SET AS OBJECTþ*þLOOPþ    CALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)þ    C=JSTR[INDEXPOS,1]þ    IF WOBJ.DEBUG THEN PRINT "PARSEARRAY: ":NODEID:" - LOOKING AT ":Cþ    BEGIN CASEþ        CASE C = "]"þ            IF WOBJ.DEBUG THEN PRINT "PARSEARRAY: ":NODEID:" EXIT ON ]"þ            INDEXPOS+=1þ            EXITþ        CASE C = ","þ            INDEXPOS+=1þ            CALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)þ        CASE INDEXPOS > LEN.JSTRþ            PSERRORS<-1>="Missing ']': ":JSTR[LEN(JSTR)-20,20]þ            RETURNþ    END CASEþ    *þ    CALL WOBJ.PARSEVALUE(JSTR,INDEXPOS,PARSEVALUE)þ    *þ    JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEID>+=1þ    PARTPOS=JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEID>þ    BEGIN CASEþ        CASE PARSEVALUE=""þ            PSERRORS<-1>="Invalid value syntax for array element ":(PARTPOS-1)þ            IF WOBJ.DEBUG THEN PRINT "PARSEARRAY ":NODEID:" invalid value syntax"þ            RETURNþ        CASE PARSEVALUE<1>="A" OR PARSEVALUE<1>="O"þ            * ARRAY OR OBJECTþ            JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,NODEID,PARTPOS>=PARSEVALUE<1>þ            JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,NODEID,PARTPOS>=PARSEVALUE<2>þ        CASE 1þ            JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,NODEID,PARTPOS>=PARSEVALUE<1>þ            V=PARSEVALUE<2>þ            IF INDEX(V,LF,1) OR INDEX(V,CR,1) THENþ                V=OCONV(V,"MX0C")þ                E="H"þ            END ELSEþ                E="A"þ            ENDþ            JSONOBJECT(JSONOBJECT$NODEPARTS.VALUE)<1,NODEID,PARTPOS>=Vþ            JSONOBJECT(JSONOBJECT$NODEPARTS.ENCODING)<1,NODEID,PARTPOS>=Eþ    END CASEþ    IF WOBJ.DEBUG THEN PRINT "PARSEARRAY ":NODEID:" ":PARSEVALUE<1>:" ":PARSEVALUE<2>þREPEATþPARSEARRAY="A"þPARSEARRAY<2>=NODEIDþIF WOBJ.DEBUG THEN PRINT "PARSEARRAY - EXITING"þRETURNþENDþ000165DICT_PORTAL.ARþ0c000002BINVOICE.AMTþ0c1Aþ6þInvoice.AmtþþþþMD2þþRþ13000025DUE.DATEþ0c1Aþ20þDue.DateþþþþD2-þþRþ8000024BALANCEþ0c1Aþ50þBalanceþþþþMD2þþRþ13000029DATES.PAIDþ0c1Aþ8þCheckýDatesþþþþD2-þþRþ800001APIPEþ0c1Aþ0þ þþþþþF;C|þLþ100001ACUSTþ0c1Aþ1þCustþþþþþþLþ2500001EBIG.CUSTþ0c1Aþ1þCustþþþþþþLþ40000034CUST.NAMEþ0c1Aþ1þCust.NameþþþþþTPORTAL.AR;X;1;1þLþ25000A7FMVDB.WIDGETSþ0c0000025AdminConfigþ0c2SUB.ADMIN.CONFIGþADMIN000025Code Templatesþ0c2SUB.CODE.TEMPLATESþ000014D3 Freeþ0c2SUB.FREEþ00001CD3 LISTPEQSþ0c2SUB.LISTPEQSþ000016D3 LISTUþ0c2SUB.LISTUþ000028D3 Runtime Errorsþ0c2SUB.RUNTIME.ERRORSþ000024D3 Sys Err Chartþ0c2SUB.SYS.ERR.BARþ000021D3 System Errorsþ0c2SUB.SYS.ERRSþ00002DDashboard License Usageþ0c2SUB.TABLE.LIC.USED000038DEMO ANNUAL SALES BY REPþ0c2SUB.DEMO.ANNUAL.SALES.BY.REP000035DEMO AVERAGE DAYS CHARTþ0c2SUB.DEMO.DAYS.TO.PAY.CHART000030DEMO DAYS TO PAY PIEþ0c2SUB.DEMO.DAYS.TO.PAY.PIE00004BDEMO FINANCIAL PICTUREþ0c2DEMO.FINANCIALS.DASHBOARDþþDemo Financial Picture00003ADEMO MONTHLY SALES BY REPþ0c2SUB.DEMO.MONTHLY.SALES.BY.REP000032DEMO NET INCOME CHARTþ0c2SUB.DEMO.NET.INCOME.CHART000036DEMO REV.GP SALES CHARTþ0c2SUB.DEMO.REV.GP.SALES.CHART00002EDEMO SALE TYPES PIEþ0c2SUB.DEMO.SALE.TYPES.PIE000028DEMO SALES CHARTþ0c2SUB.DEMO.SALES.CHART00002EDEMO SALES PERCENTSþ0c2SUB.DEMO.SALES.PERCENTS000044DEMO SINGLE MONTH SALES BY REPþ0c2SUB.DEMO.SINGLE.MONTH.SALES.BY.REP000020Demo- MS Colþ0c2SUB.DEMO.MS.COLþ00001FDemo-Doughnutþ0c2SUB.DEMO.DNUTþ000019Demo-Pieþ0c2SUB.DEMO.PIEþ00001EDemo-SS Colþ0c2SUB.DEMO.SS.COL000021Demo-SS Lineþ0c2SUB.DEMO.SS.LINEþ000025Drilldown Demoþ0c2SUB.DEMO.DRILLDOWNþ000024Emailed Reportþ0c2SUB.EMAILED.REPORT00001EGRID TESTþ0c2SUB.GRID.TESTþSAI000021Icon Galleryþ0c2SUB.ICON.GALLERYþ000022Mobile Managerþ0c2SUB.MOBILE.APPSþ000026MW CodeFactoryþ0c2SUB.MW.CODE.FACTORYþ000021PDFConfigþ0c2SUB.PDF.CONFIGþADMIN000028QM Runtime Errorsþ0c2SUB.RUNTIME.ERRORSþ00001BRSS Feedsþ0c2SUB.RSS.FEEDSþ000028SC-Lines By Lib (Pie)þ0c2SUB.SC.LIB.PIEþ000023SC-Lines By Progþ0c2SUB.SC.LIB.COLþ000028SC-Progs by Lib (Pie)þ0c2SUB.SC.LIB.PIEþ00001BShow Varsþ0c2SUB.SHOW.VARSþ000021Source Viewerþ0c2SUB.SOURCE.VIEWþ000025System - Sessionþ0c2SUB.SHOW.SESSIONþ000028PORTAL DASHBOARDþ0c2SUB.PORTAL.DASHBOARD000030PORTAL SALES REPORTSþ0c2SUB.PORTAL.SALES.REPORTS000034PORTAL AR REPORT SETUPþ0c2SUB.PORTAL.AR.REPORT.SETUP00002APORTAL AR REPORTSþ0c2SUB.PORTAL.AR.REPORTS00002APORTAL AP REPORTSþ0c2SUB.PORTAL.AP.REPORTS000034PORTAL AP REPORT SETUPþ0c2SUB.PORTAL.AP.REPORT.SETUP000024PORTAL MARGINSþ0c2SUB.PORTAL.MARGINS00003APORTAL SALES REPORT SETUPþ0c2SUB.PORTAL.SALES.REPORT.SETUP000040DISPLAY PORTAL AP BALANCE PIE CHARTþ0c2SUB.PORTAL.AP.BALANCE.PIE000040DISPLAY PORTAL AR BALANCE PIE CHARTþ0c2SUB.PORTAL.AR.BALANCE.PIE000034PORTAL DAYS TO PAY PIEþ0c2SUB.PORTAL.DAYS.TO.PAY.PIE00003CPORTAL SETUP DOCUMENTATIONþ0c2SUB.PORTAL.SETUP.DOCUMENTATION000030PORTAL.DOCUMENTATIONþ0c2SUB.PORTAL.DOCUMENTATION000040PORTAL.REPORTS.DOCUMENTATIONþ0c2SUB.PORTAL.REPORTS.DOCUMENTATION000038PORTAL.RUN.DOCUMENTATIONþ0c2SUB.PORTAL.RUN.DOCUMENTATION01BBDCMVDBTOOLKIT.BPþ0c00059B8MVDBTOOLKIT.TESTþ0c2      **********************************************************************þ      *þ      * Copyright (C) 2020 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: March 2020þ      * Description: MVDBTOOLKIT testing programþ      *þ      **********************************************************************þ      *þ      * Change Logþ      * 1/6/2021 - pap - Updated with new includesþ      *þ      **********************************************************************þþ      PRINT @(-1):"MVDBTOOLKIT.TEST"þ      PRINTþþ      INCLUDE MVDBTOOLKIT.TEST.INCLUDEþþ      INCLUDE MVDBTOOLKIT.WOBJ.CHOOSE.WOBJþþ      TEST.PLATFORM=FIELD(CMND,' ',2)þ      TEST.MVTYPE=FIELD(CMND,' ',3)þþ      CALL MVDBTOOLKIT.WPLATFORM(PLATFORM.OBJ)þþ      IF TEST.PLATFORM = "" THENþ         CALL @WOBJ.RTNE(PLATFORM.OBJ,"GET","platform",TEST.PLATFORM,"",RERR)þ      ENDþ      IF TEST.MVTYPE = "" THENþ         CALL @WOBJ.RTNE(PLATFORM.OBJ,"GET","mvtype",TEST.MVTYPE,"",RERR)þ      ENDþþ      IF TEST.PLATFORM = "" THENþ         PRINT "Enter Platform: ":; INPUT TEST.PLATFORMþ      ENDþþ      IF TEST.MVTYPE = "" THENþ         PRINT "Enter MVType: ":; INPUT TEST.MVTYPEþ      ENDþþ      IF TEST.PLATFORM='' OR TEST.MVTYPE='' THENþ         PRINT "Usage: MVDBTOOLKIT PLATFORM MVTYPE"þ         PRINTþ         PRINT "PLATFORM=WINDOWS or LINUX"þ         PRINT "MVTYPE=JBASE,D3,UNIVERSE,UNIDATA"þ         STOPþ      ENDþþ      * GET ENVIRONMENTþ      CALL MVDBTOOLKIT.WPLATFORM(PLATFORM.OBJ)þþ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"GET","curllocation",CURLLOCATION,"",RERR)þþ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"GET","platform",PLATFORM,"",RERR)þ      TEST='platform'; GOSUB start.testþ      TEST.MSG=PLATFORM:"=":TEST.PLATFORMþ      IF PLATFORM # TEST.PLATFORM THEN TEST.STATUS=0 ELSE TEST.STATUS=1þ      GOSUB end.testþþ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"GET","mvtype",RESULT,"",RERR)þþþ      TEST='mvtype'; GOSUB start.testþ      TEST.MSG=RESULT:"=":TEST.MVTYPEþ      IF RESULT # TEST.MVTYPE THEN TEST.STATUS=0 ELSE TEST.STATUS=1þ      GOSUB end.testþ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"GET","tmpdir",TMP.DIR,"",RERR)þ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"GET","filedelim",FILEDELIM,"",RERR)þþ      TEST='filedelim'; GOSUB start.testþ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"GET","filedelim",FILEDELIM,"",RERR)þ      TEST.MSG=FILEDELIMþ      TEST.STATUS=1þ      BEGIN CASEþ         CASE OCONV(PLATFORM,"MCU") = "LINUX" AND FILEDELIM="/"þ         CASE OCONV(PLATFORM,"MCU") = "WINDOWS" AND FILEDELIM="\"þ         CASE 1; TEST.STATUS=0þ      END CASEþ      GOSUB end.testþþ      TEST='tmpdir'; GOSUB start.testþ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"GET","tmpdir",TMP.DIR,"",RERR)þ      TEST.MSG=TMP.DIRþ      TEST.STATUS=1þ      IF TMP.DIR="" THEN TEST.STATUS=0þ      GOSUB end.testþþþ      TEST='MVDBTOOLKIT.SWAP'þ      GOSUB start.testþ      S='TEST LINE TEST LINE'þ      ORIG.STRING=Sþ      CALL MVDBTOOLKIT.SWAP(S,"ES","XX")þ      IF S = "TXXT LINE TXXT LINE" THEN TEST.STATUS=1 ELSE TEST.STATUS=0þ      TEST.MSG=Sþ      GOSUB end.testþþ      * Test 1 Getenvþþ      TEST="getenv"þ      GOSUB start.testþ      CALL MVDBTOOLKIT.WGETENV("PATH",PATH)þ      IF PATH # "" THENþ         TEST.MSG=PATH[1,60]þ         TEST.STATUS=1þ      END ELSEþ         TEST.MSG=""þ         TEST.STATUS=0þ      ENDþ      GOSUB end.testþþ      * Test WEXECUTEþþ      TEST="wexecute"; GOSUB start.testþ      CMND='echo MVDBTOOLKIT.TEST'þþ      CALL @WOBJ.RTNE(COBJ,"FROMSTRING","","{}","",RERR)þ      CALL @WOBJ.RTNE(COBJ,"SET","command",CMND,"",RERR)þ      CALL MVDBTOOLKIT.WEXECUTE(COBJ)þ      CALL @WOBJ.RTNE(COBJ,"GET","result.result",CMND.RESULT,"",RERR)þþ      IF INDEX(CMND.RESULT,"MVDBTOOLKIT.TEST",1) THENþ         TEST.MSG=CMND.RESULTþ         TEST.STATUS=1þ      END ELSEþ         TEST.MSG=CMND.RESULTþ         TEST.STATUS=0þ      ENDþ      CONVERT CHAR(13):CHAR(10) TO '' IN TEST.MSGþ      GOSUB end.testþþþþþ      * Test WFILEIO **********************************************************************þþ      ** UNIX AS TEST DATAþ      NEWLINE.INS='UNIX':@AM:'DOS':@AM:'MV':@AM:'RAW'þ      NEWLINE.OUTS='UNIX':@AM:'DOS':@AM:'MV':@AM:'RAW'þ      NEWLINE.DELS='UNIX':@AM:'DOS':@AM:'MV'þþþ      *NEWLINE.INS='UNIX'þ      *NEWLINE.OUTS='MV'þþ      NUM.NEWLINES.INS = DCOUNT(NEWLINE.INS,@AM)þ      NUM.NEWLINES.OUTS = DCOUNT(NEWLINE.OUTS,@AM)þ      NUM.NEWLINES.DELS=DCOUNT(NEWLINE.DELS,@AM)þ      NUM.COMBINATIONS=0þ      FOR NUM.NEWLINES.INS.CNTR = 1 TO NUM.NEWLINES.INSþ         FOR NUM.NEWLINES.OUTS.CNTR = 1 TO NUM.NEWLINES.OUTSþ            FOR NUM.NEWLINES.DELS.CNTR = 1 TO NUM.NEWLINES.DELSþ               NEWLINE.IN=NEWLINE.INS<NUM.NEWLINES.INS.CNTR>þ               NEWLINE.OUT=NEWLINE.OUTS<NUM.NEWLINES.OUTS.CNTR>þ               TMP.NEWLINE.DEL=NEWLINE.DELS<NUM.NEWLINES.DELS.CNTR>þ               BEGIN CASEþ                  CASE TMP.NEWLINE.DEL='UNIX'; NEWLINE.DEL=CHAR(10)þ                  CASE TMP.NEWLINE.DEL='DOS'; NEWLINE.DEL=CHAR(13):CHAR(10)þ                  CASE TMP.NEWLINE.DEL='MV'; NEWLINE.DEL=CHAR(254)þ                  CASE 1; NEWLINE.DEL=CHAR(254)þ               END CASEþ               *NEWLINE.D=OCONV(TIME(),'MTS')þ               *NEWDATA.IN=NEWLINE.D:CHAR(254):'LINE2'þ               *NEWDATA.RAW=NEWLINE.D:CHAR(10):'LINE2'þ               *NEWDATA.OUT=NEWLINE.D:CHAR(10):'LINE2'þ               NUM.COMBINATIONS+=1þ               GOSUB fileiotestþ            NEXT NUM.NEWLINES.DELS.CNTRþ         NEXT NUM.NEWLINES.OUTS.CNTRþ      NEXT NUM.NEWLINES.INS.CNTRþþ      PRINT 'Number of combinations: ':NUM.COMBINATIONSþþ      * Let get our current directoryþ      TEST="pwd"; GOSUB start.testþ      IF OCONV(PLATFORM,"MCU") = "WINDOWS" THENþ         CMND='echo %CD%'þ      END ELSEþ         CMND='pwd'þ      ENDþþ      CALL @WOBJ.RTNE(COBJ,"FROMSTRING","","{}","",RERR)þ      CALL @WOBJ.RTNE(COBJ,"SET","command",CMND,"",RERR)þ      CALL MVDBTOOLKIT.WEXECUTE(COBJ)þ      CALL @WOBJ.RTNE(COBJ,"GET","result.result",CMND.RESULT,"",RERR)þþ      IF 1 THENþ         TEST.MSG=CMND.RESULTþ         TEST.STATUS=1þ      END ELSEþ         TEST.MSG=CMND.RESULTþ         TEST.STATUS=0þ      ENDþ      CONVERT CHAR(13):CHAR(10) TO '' IN TEST.MSGþ      GOSUB end.testþþ      MVDBTOOLKIT.LOCATION = CMND.RESULTþþ      IF 0 THENþ         * Lets verify we have curl!!!þ         IF CURLLOCATION="" THEN CURLLOCATION="curl"þþ         TEST="default curl"; GOSUB start.testþ         CMND=CURLLOCATION:' -V'þþ         CALL @WOBJ.RTNE(COBJ,"FROMSTRING","","{}","",RERR)þ         CALL @WOBJ.RTNE(COBJ,"SET","command",CMND,"",RERR)þ         CALL MVDBTOOLKIT.WEXECUTE(COBJ)þ         CALL @WOBJ.RTNE(COBJ,"GET","result.result",CMND.RESULT,"",RERR)þþ         BEGIN CASEþ            CASE INDEX(CMND.RESULT,"libcurl",1) AND 0þ               TEST.MSG=CMND.RESULTþ               TEST.STATUS=1þ            CASE OCONV(PLATFORM,"MCU")="WINDOWS"þ               TEST.MSG=CMND.RESULTþ               TEST.STATUS=2þ            CASE 1þ               TEST.MSG=0þ         END CASEþþ         CONVERT CHAR(13):CHAR(10) TO '' IN TEST.MSGþ         GOSUB end.testþþ         * Start looking for curlþ         IF TEST.STATUS=2 THENþ            CURLLOCATION="c:\progra~1\git\mingw64\bin\curl.exe"þ            TEST="git curl"; GOSUB start.testþ            CMND=CURLLOCATION:' -V'þþ            CALL @WOBJ.RTNE(COBJ,"FROMSTRING","","{}","",RERR)þ            CALL @WOBJ.RTNE(COBJ,"SET","command",CMND,"",RERR)þ            CALL MVDBTOOLKIT.WEXECUTE(COBJ)þ            CALL @WOBJ.RTNE(COBJ,"GET","result.result",CMND.RESULT,"",RERR)þþ            BEGIN CASEþ               CASE INDEX(CMND.RESULT,"libcurl",1) AND 0þ                  TEST.MSG=CMND.RESULTþ                  TEST.STATUS=1þ               CASE OCONV(PLATFORM,"MCU")="WINDOWS"þ                  TEST.MSG=CMND.RESULTþ                  TEST.STATUS=2þ               CASE 1þ                  TEST.MSG=CMND.RESULTþ                  TEST.STATUS=0þ            END CASEþþ            CONVERT CHAR(13):CHAR(10) TO '' IN TEST.MSGþ            GOSUB end.testþ         ENDþþ         IF TEST.STATUS=2 THENþ            CURLLOCATION=MVDBTOOLKIT.LOCATION:"\mvdbtoolkit\curl\windows64\curl.exe"þ            TEST="mvdbtoolkit curl"; GOSUB start.testþ            CMND=CURLLOCATION:' -V'þþ            CALL @WOBJ.RTNE(COBJ,"FROMSTRING","","{}","",RERR)þ            CALL @WOBJ.RTNE(COBJ,"SET","command",CMND,"",RERR)þ            CALL MVDBTOOLKIT.WEXECUTE(COBJ)þ            CALL @WOBJ.RTNE(COBJ,"GET","result.result",CMND.RESULT,"",RERR)þþ            BEGIN CASEþ               CASE INDEX(CMND.RESULT,"libcurl",1) AND 0þ                  TEST.MSG=CMND.RESULTþ                  TEST.STATUS=1þ               CASE 1þ                  TEST.STATUS=0þ                  TEST.MSG=CMNDþþ            END CASEþþ            CONVERT CHAR(13):CHAR(10) TO '' IN TEST.MSGþ            GOSUB end.testþ         ENDþ      ENDþþ      TEST="WCALL"þ      GOSUB start.testþþ      CALL @WOBJ.RTNE(OBJ,"FROMSTRING","","{}","",RERR)þþ      CALL @WOBJ.RTNE(OBJ,"SET","method","POST","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET","debug","N","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET","url","https://httpbin.org/anything?field1=value1","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET","insecure","Y","",RERR)þþ      CALL @WOBJ.RTNE(OBJ,"SET.OBJECT","headers","{}","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET","headers.X-TEST-HEADER","headertest","",RERR)þþ      CALL @WOBJ.RTNE(OBJ,"SET.ARRAY","formfields","[]","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET.OBJECT","formfields[-1]","{}","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET","formfields[0].name","field2","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET","formfields[0].value","VALUE2$","",RERR)þþ      CALL @WOBJ.RTNE(SOBJ,"FROMSTRING","","{}","",RERR)þ      CALL @WOBJ.RTNE(SOBJ,"SET","name","field3","",RERR)þ      CALL @WOBJ.RTNE(SOBJ,"SET","value","<EXAMPLE HTML>","",RERR)þ      CALL @WOBJ.RTNE(SOBJ,"TOSTRING","",SJSON,"",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET.OBJECT","formfields[-1]",SJSON,"",RERR)þþ      CALL MVDBTOOLKIT.WCALL(OBJ)þþ      CALL @WOBJ.RTNE(OBJ,"GET","response.data",RESPONSE,"",RERR)þ      *OPEN "MVDBTOOLKIT.BP" TO FILE ELSE STOPþ      *PRINT "RESPONSE=":RESPONSEþ      * WRITE RESPONSE ON FILE, "MVDBTOOLKIT.TEST.JSON"þ      CALL @WOBJ.RTNE(OBJ,"TOSTRING","",OUT.JSON,"PRETTIFY",RERR)þ      * WRITE OUT.JSON ON FILE, "MVDBTOOLKIT.WCALL.JSON"þþþ      CALL @WOBJ.RTNE(OBJ,"GET","response.status",RESPONSE.STATUS,"",RERR)þ      *PRINT 'RESPONSE.STATUS=':RESPONSE.STATUS:'  ':þ      *IF RESPONSE.STATUS="200" THEN PRINT "OK" ELSE PRINT "FAIL"þ      TEST.MSG=RESPONSE.STATUSþ      IF RESPONSE.STATUS="200" THENþ         TEST.STATUS=1þ      END ELSEþ         TEST.STATUS=0þ      ENDþ      GOSUB end.testþþ      TEST='WCALL.HTTPTYPE'þ      GOSUB start.testþ      CALL @WOBJ.RTNE(OBJ,"GET","response.http_type",RESPONSE.HTTP.TYPE,"",RERR)þ      *PRINT 'RESPONSE.HTTP_TYPE=':RESPONSE.HTTP.TYPEþ      TEST.MSG=RESPONSE.HTTP.TYPEþ      IF INDEX(TEST.MSG,'HTTP/',1) THENþ         TEST.STATUS=1þ      END ELSEþ         TEST.STATUS=0þ      ENDþ      HTTP.TYPE=FIELD(TEST.MSG,'/',2)þ      HTTP.TYPE=FIELD(HTTP.TYPE,' ',1)þ      HTTP.TYPE=TRIM(HTTP.TYPE)þ      GOSUB end.testþ      CALL @WOBJ.RTNE(ROBJ,"FROMSTRING","",RESPONSE,"",RERR)þþ      TEST="WCALL.FIELD1"þ      GOSUB start.testþ      CALL @WOBJ.RTNE(ROBJ,"GET","args.field1",VALUE,"",RERR)þ      TEST.MSG=VALUEþ      IF TEST.MSG="value1" THEN TEST.STATUS=1 ELSE TEST.STATUS=0þ      GOSUB end.testþþþ      TEST="WCALL.field2"þ      GOSUB start.testþ      CALL @WOBJ.RTNE(ROBJ,"GET","form.field2",VALUE,"",RERR)þ      TEST.MSG=VALUEþ      IF TEST.MSG="VALUE2$" THEN TEST.STATUS=1 ELSE TEST.STATUS=0þ      GOSUB end.testþþ      TEST="WCALL.field3"þ      GOSUB start.testþ      CALL @WOBJ.RTNE(ROBJ,"GET","form.field3",VALUE,"",RERR)þ      TEST.MSG=VALUEþ      IF TEST.MSG="<EXAMPLE HTML>" THEN TEST.STATUS=1 ELSE TEST.STATUS=0þ      GOSUB end.testþþþ      TEST="WCALL.HEADER"þ      GOSUB start.testþ      CALL @WOBJ.RTNE(ROBJ,"GET","headers.X-Test-Header",VALUE,"",RERR)þ      TEST.MSG=VALUEþ      IF TEST.MSG="headertest" THEN TEST.STATUS=1 ELSE TEST.STATUS=0þ      GOSUB end.testþþ      TEST="WCALL.BODY"þ      GOSUB start.testþþ      CALL @WOBJ.RTNE(OBJ,"FROMSTRING","","{}","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET","method","POST","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET","debug","N","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET","url","https://httpbin.org/anything?field1=value1","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET","insecure","N","",RERR)þþ      CALL @WOBJ.RTNE(OBJ,"SET.OBJECT","headers","{}","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET","Content-Type","application/json","",RERR)þþ      CALL @WOBJ.RTNE(TESTOBJ,"FROMSTRING","","{}","",RERR)þ      CALL @WOBJ.RTNE(TESTOBJ,"SET","test","value","",RERR)þ      CALL @WOBJ.RTNE(TESTOBJ,"TOSTRING","",TESTJSON,"PRETTIFY",RERR)þþ      CALL @WOBJ.RTNE(OBJ,"SET.STRING","body",TESTJSON,"",RERR)þþ      CALL MVDBTOOLKIT.WCALL(OBJ)þþ      CALL @WOBJ.RTNE(OBJ,"GET","response.data",RESPONSE,"",RERR)þþ      * WRITE RESPONSE ON FILE, "MVDBTOOLKIT.TESTBODY.JSON"þ      CALL @WOBJ.RTNE(OBJ,"TOSTRING","",OUT.JSON,"PRETTIFY",RERR)þ      * WRITE OUT.JSON ON FILE, "MVDBTOOLKIT.WCALLBODY.JSON"þþþ      CALL @WOBJ.RTNE(OBJ,"GET","response.status",RESPONSE.STATUS,"",RERR)þ      *PRINT 'RESPONSE.STATUS=':RESPONSE.STATUS:'  ':þ      *IF RESPONSE.STATUS="200" THEN PRINT "OK" ELSE PRINT "FAIL"þ      TEST.MSG=RESPONSE.STATUSþ      IF RESPONSE.STATUS="200" THENþ         TEST.STATUS=1þ      END ELSEþ         TEST.STATUS=0þ      ENDþ      GOSUB end.testþþ      TEST="WCALL.BODY.RESULT"þ      GOSUB start.testþ      * The testing web site does not send raw body back very wellþ      * we will just look for what we expectþ      CONVERT CHAR(254):CHAR(253):CHAR(252):CHAR(10):CHAR(13) TO '' IN RESPONSEþ      POS=INDEX(RESPONSE,'"form"',1)þ      IF POS THEN RESPONSE=RESPONSE[POS,9999]þ      TEST.MSG=RESPONSEþ      IF INDEX(RESPONSE,'"test',1) AND INDEX(RESPONSE,'"value',1) THENþ         TEST.STATUS=1þ      END ELSEþ         TEST.STATUS=0þ      ENDþ      GOSUB end.testþþ      TEST='WCALL Timeout'þ      GOSUB start.testþ      CALL @WOBJ.RTNE(OBJ,"FROMSTRING","","{}","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET","method","GET","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET","debug","N","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET","url","https://httpbin.org/delay/3","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET","insecure","N","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET","timeout",1,"",RERR)þ*      CALL @WOBJ.RTNE(OBJ,"SET","options","--http1.1","",RERR)þþ      CALL MVDBTOOLKIT.WCALL(OBJ)þ      *     CALL MVDBTOOLKIT.WCALL.DEBUG(OBJ)þþ      CALL @WOBJ.RTNE(OBJ,"GET","response.log",RESPONSE.LOG,"",RERR)þþ      CALL @WOBJ.RTNE(OBJ,"GET","response.status",RESPONSE.STATUS,"",RERR)þþ      POS=INDEX(RESPONSE.LOG,"* Operation timed out",1)þþ      IF POS THENþ         TEST.MSG=RESPONSE.LOG[POS,LEN(RESPONSE.LOG)]þ         TEST.MSG=TEST.MSG<1,1,1>þ         TEST.MSG=FIELD(TEST.MSG,CHAR(13),1)þ         TEST.MSG=FIELD(TEST.MSG,CHAR(10),1)þ      END ELSEþ         TEST.MSG=RESPONSE.STATUSþ      ENDþ      IF RESPONSE.STATUS="0" AND INDEX(RESPONSE.LOG,"Operation timed out after",1) THENþ         TEST.STATUS=1þ      END ELSEþ         TEST.STATUS=0þ      ENDþ      GOSUB end.testþþ      TEST='WCALL 100-continue'þ      GOSUB start.testþ      CALL @WOBJ.RTNE(OBJ,"FROMSTRING","","{}","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET","method","GET","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET","debug","N","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET","url","https://httpbin.org/anything?f=v","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET","insecure","N","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET.OBJECT","headers","{}","",RERR)þ      CALL @WOBJ.RTNE(OBJ,"SET","headers.Expect","100-continue","",RERR)þ      IF HTTP.TYPE > 1.1 THENþ         CALL @WOBJ.RTNE(OBJ,"SET","options","--http1.1","",RERR)þ      ENDþþþ      CALL MVDBTOOLKIT.WCALL(OBJ)þ*      CALL MVDBTOOLKIT.WCALL.DEBUG(OBJ)þþ      CALL @WOBJ.RTNE(OBJ,"GET","response.log",RESPONSE.LOG,"",RERR)þþ      CALL @WOBJ.RTNE(OBJ,"GET","response.status",RESPONSE.STATUS,"",RERR)þþ      CALL WOBJ(OBJ,"LENGTH","response.log",LOG.LENGTH,"",RERR)þþ      TEST.MSG='Did not see 100 Continue!'þ      TEST.STATUS=0þ      FOR X=1 TO LOG.LENGTH UNTIL TEST.STATUS # 0þ         CALL WOBJ(OBJ,"GET","response.log[":X-1:"]",LOG.LINE,"",RERR)þ         IF INDEX(LOG.LINE,"100 Continue",1) THENþ            TEST.MSG=LOG.LINEþ            TEST.STATUS=1þ         ENDþ      NEXT Xþþ      GOSUB end.testþþ      STOPþ      *þ      GOSUB start.testþ      RETURNþ      *þprocess.error: *þ      IF RERR<1> THENþ         TEST.STATUS=-1þ         TEST.MSG=RERR<1>þ      ENDþ      RETURNþ      *þ      *þstart.test: *þ      TEST.STATUS=0þ      TEST.MSG="Success"þ      PRINT "":TEST[1,20]"L(#20)":þ      RETURNþ      *þend.test: *þ      PRINT "  ":TEST.MSG[1,50]"L(#45)":þ      PRINT " ":þ      PRE=''; AFT=''þ      BEGIN CASEþ         CASE TEST.STATUS=2; ERROR="Warning"; PRE=''; AFT=''þ         CASE TEST.STATUS; ERROR="Passed"þ         CASE 1; ERROR="Failed"; PRE=@(-13); AFT=@(-14)þ      END CASEþ      PRINT PRE:"[":þ      PRINT ERROR"L(#7)":þ      PRINT "]":AFTþ*      IF NOT(TEST.STATUS) THEN DEBUGþ      RETURNþþþþ      ******************************************************************************þ      * FILEIO TESTþ      ******************************************************************************þþfileiotest: *þþ      * NEWLINE.IN  = WRITE RULEþ      * NEWLINE.OUT = READ RULþ      * NEWLINE.DEL = ACTUAL DATA DELIMITERþ      * NEWDATA.IN  = DATA TO WRITEþ      * NEWDATA.RAW = DATA IN RAW FORMATþ      * NEWDATA.OUT = DATA TO COMPARE TOþþ      BEGIN CASEþ         CASE NEWLINE.IN='UNIX' OR NEWLINE.IN="LF"; NEWLINE.IN.DEL=CHAR(10)þ         CASE NEWLINE.IN='DOS' OR NEWLINE.IN="CRLF"; NEWLINE.IN.DEL=CHAR(13):CHAR(10)þ         CASE NEWLINE.IN='CR'; NEWLINE.IN.DEL=CHAR(13)þ         CASE NEWLINE.IN="MV"; NEWLINE.IN.DEL=CHAR(254)þ         CASE NEWLINE.IN="RAW"; NEWLINE.IN.DEL=NEWLINE.DELþ         CASE NEWLINE.IN="WINDOWS"; NEWLINE.IN.DEL=CHAR(13):CHAR(10)þ         CASE 1; NEWLINE.IN.DEL=CHAR(10)þ      END CASEþþ      BEGIN CASEþ         CASE NEWLINE.OUT='UNIX' OR NEWLINE.OUT="LF"; NEWLINE.OUT.DEL=CHAR(10)þ         CASE NEWLINE.OUT='DOS' OR NEWLINE.OUT="CRLF"; NEWLINE.OUT.DEL=CHAR(13):CHAR(10)þ         CASE NEWLINE.OUT='CR'; NEWLINE.OUT.DEL=CHAR(13)þ         CASE NEWLINE.OUT="MV"; NEWLINE.OUT.DEL=CHAR(254)þ         CASE NEWLINE.OUT="RAW"; NEWLINE.OUT.DEL=NEWLINE.IN.DELþ         CASE NEWLINE.OUT="WINDOWS"; NEWLINE.OUT.DEL=CHAR(13):CHAR(10)þ         CASE 1; NEWLINE.OUT.DEL=CHAR(10)þ      END CASEþþþ      *TMP.D=OCONV(TIME(),'MTS')þ      TMP.D='L1'þ      NEWDATA.IN = TMP.D:NEWLINE.DEL:'L2'þ      NEWDATA.RAW = TMP.D:NEWLINE.IN.DEL:'L2'þ      NEWDATA.OUT = TMP.D:NEWLINE.OUT.DEL:'L2'þþ      * 12/21/2020 PATRICKþ      *þ      * I had a hell of a time with this.  When to add or not to addþ      * a new line is the issue.  When dealing with Raw and MV I hadþ      * to add these weird case statements to handle both the read testþ      * and the raw testþþ      * This is for the read testþþ      BEGIN CASEþ         CASE NEWLINE.OUT='RAW' AND NEWLINE.IN='MV'þ         CASE NEWLINE.OUT='RAW' AND NEWLINE.IN='RAW'þ         CASE NEWLINE.OUT='RAW'; NEWDATA.OUT:=NEWLINE.IN.DELþ      END CASEþþ      * This is for the raw (traw) test.  This is where I read backþ      * in what was written in raw mode.  The above one happens as partþ      * of the loop test and is redundant since Raw already happens.þþ      BEGIN CASEþ         CASE NEWLINE.IN = 'RAW'þ         CASE NEWLINE.IN = 'MV'þ         CASE 1; NEWDATA.RAW:=NEWLINE.IN.DELþ      END CASEþþ      PRINT "Testing Write - Newline->":NEWLINE.IN:' Read->':NEWLINE.OUTþ      TMP.NEWLINE.IN=NEWDATA.INþ      TMP.NEWLINE.OUT=''þ      GOSUB fileio.test.msgþ      PRINT 'Testing data: ':FIELD(TEST.MSG,'-',1)þþ      TEST="WFILEIO-WRITE ":NEWLINE.INþþ      USER.NO=FIELD(OCONV('','U50BB'),' ',1)þ      GOSUB start.testþ      CALL @WOBJ.RTNE(FOBJ,"FROMSTRING","","{}","",RERR)þ      CALL @WOBJ.RTNE(FOBJ,"SET","action","WRITE","",RERR)þ      TMP.NEWLINE.IN=NEWLINE.INþ      CALL @WOBJ.RTNE(FOBJ,"SET","newline",NEWLINE.IN,"",RERR)þþ      TMP.FILE.NAME=TMP.DIR:FILEDELIM:'TMP-':USER.NO:'.txt'þ      *TEST.MSG=TMP.FILE.NAMEþ      CALL @WOBJ.RTNE(FOBJ,"SET","path",TMP.FILE.NAME,"",RERR)þ      SAVE.FOBJ=FOBJþþþ      TMP.DATA = NEWDATA.INþ      TMP.NEWLINE.OUT = TMP.DATAþþ      CALL @WOBJ.RTNE(FOBJ,"SET","data",TMP.DATA,"",RERR)þþ      CALL MVDBTOOLKIT.WFILEIO(FOBJ)þ      CALL @WOBJ.RTNE(FOBJ,"GET","response.status",RESPONSE.STATUS,"",RERR)þ      CALL @WOBJ.RTNE(FOBJ,"GET","response.statusmsg",RESPONSE.STATUS.MSG,"",RERR)þ      TEST.STATUS=RESPONSE.STATUSþþ      IF NOT(RESPONSE.STATUS) THEN TEST.MSG:=RESPONSE.STATUS.MSGþ      GOSUB end.testþþ      IF NOT(TEST.STATUS) THEN STOP "Test Failed, no reason to continue"þþ      TEST='WFILEIO-READ TRAW'þ      GOSUB start.testþþ      * NOW READ IT BACK INþ      CALL @WOBJ.RTNE(FOBJ,"SET","action","READ","",RERR)þ      CALL @WOBJ.RTNE(FOBJ,"SET","newline","RAW","",RERR)þ      CALL MVDBTOOLKIT.WFILEIO(FOBJ)þ      CALL @WOBJ.RTNE(FOBJ,"GET","response.data",RESPONSE.DATA,"",RERR)þ      TMP.NEWLINE.IN = NEWDATA.RAWþ      TMP.NEWLINE.OUT = RESPONSE.DATAþ      GOSUB fileio.test.msgþþ      TEST.STATUS=1þ      IF NEWDATA.RAW # RESPONSE.DATA THEN TEST.STATUS=0þ      GOSUB end.testþþ      TEST='WFILEIO-READ ':NEWLINE.OUTþ      GOSUB start.testþþ      * NOW READ IT BACK INþ      CALL @WOBJ.RTNE(FOBJ,"SET","action","READ","",RERR)þ      CALL @WOBJ.RTNE(FOBJ,"SET","newline",NEWLINE.OUT,"",RERR)þ      CALL MVDBTOOLKIT.WFILEIO(FOBJ)þ      CALL @WOBJ.RTNE(FOBJ,"GET","response.data",RESPONSE.DATA,"",RERR)þ      TMP.NEWLINE.IN = NEWDATA.OUTþ      TMP.NEWLINE.OUT = RESPONSE.DATAþþ      GOSUB fileio.test.msgþþ      TEST.STATUS=1þ      IF NEWDATA.OUT # RESPONSE.DATA THEN TEST.STATUS=0þ      GOSUB end.testþþ      TEST="WFILEIO-DELETE"; GOSUB start.testþ      FOBJ=SAVE.FOBJþ      CALL @WOBJ.RTNE(FOBJ,"SET","action","DELETE","",RERR)þ      CALL MVDBTOOLKIT.WFILEIO(FOBJ)þþ      FOBJ=SAVE.FOBJþ      CALL @WOBJ.RTNE(FOBJ,"SET","action","READ","",RERR)þ      CALL MVDBTOOLKIT.WFILEIO(FOBJ)þ      RESPONSE.DATA=""þþ      CALL @WOBJ.RTNE(FOBJ,"GET","response.data",RESPONSE.DATA,"",RERR)þ      CALL @WOBJ.RTNE(FOBJ,"GET","response.status",RESPONSE.STATUS,"",RERR)þ      CALL @WOBJ.RTNE(FOBJ,"GET","response.statusmsg",RESPONSE.STATUSMSG,"",RERR)þ      TEST.STATUS=1þ      TEST.MSG=TMP.FILE.NAME:' ':RESPONSE.STATUSþ      IF RESPONSE.STATUS=0 AND RESPONSE.DATA="" THEN NULL ELSE TEST.STATUS=0þ      GOSUB end.testþþ      RETURNþþfileio.test.msg: *þþ      CALL MVDBTOOLKIT.SWAP(TMP.NEWLINE.IN,CHAR(254),'(254)')þ      CALL MVDBTOOLKIT.SWAP(TMP.NEWLINE.IN,CHAR(13),'(13)')þ      CALL MVDBTOOLKIT.SWAP(TMP.NEWLINE.IN,CHAR(10),'(10)')þþ      CALL MVDBTOOLKIT.SWAP(TMP.NEWLINE.OUT,CHAR(254),'(254)')þ      CALL MVDBTOOLKIT.SWAP(TMP.NEWLINE.OUT,CHAR(13),'(13)')þ      CALL MVDBTOOLKIT.SWAP(TMP.NEWLINE.OUT,CHAR(10),'(10)')þþ      TEST.MSG=TMP.NEWLINE.IN:'->':TMP.NEWLINE.OUTþþ      RETURN00287CMVDBTOOLKIT.WFILEIOþ0c2      SUBROUTINE MVDBTOOLKIT.WFILEIO(INOBJ)þ      **********************************************************************þ      *þ      * Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: June 7th 2018þ      * Description: WFILEIO MULTI PLATFORM WORKING WITH O/S FILESþ      *þ      **********************************************************************þ      * Change Logþ      *þ      * 1/6/2021 pap Cross platfrom O/S file ioþ      **********************************************************************þ      þ      *þ      * INOBJþ      *þ      * { "ACTION":"READ,WRITE,DELETE",þ      *   "PATH":"PATH TO THE FILE",þ      *   "DATA":"DATA FOR A WRITE",þ      *   "dosletter":"OPTIONAL DOS LETTER TO ADD TO PATH",þ      *   "NEWLINE":"CR,LF,CRLF,DOS,UNIX",þ      *   "PERMISSIONS":"TBD"þ      *   "response": {þ      *       "data":"responsedata",þ      *       "status":1-ok, else no,þ      *       "statusmsg":"statusmsg"þ      *   }þ      * }þ      *þ      * need to know the existing platformþþ      *PLATFORM.DELIM="\"þ      *PLATFORM.TYPE="WINDOWS"þ      *PLATFORM.MV="D3"þþ      CALL MVDBTOOLKIT.WPLATFORM(POBJ)þþ      INCLUDE MVDBTOOLKIT.WOBJ.CHOOSE.WOBJþþ      CALL @WOBJ.RTNE(POBJ,"GET","mvtype",PLATFORM.MV,"",RERR)þ      CALL @WOBJ.RTNE(POBJ,"GET","filedelim",PLATFORM.DELIM,"",RERR)þ      CALL @WOBJ.RTNE(POBJ,"GET","platform",PLATFORM.TYPE,"",RERR)þþ      FSTATUS=1þ      FSTATUSMSG="OK"þþ      CALL @WOBJ.RTNE(INOBJ,"GET","action",FILEIO.ACTION,"",RERR)þ      CALL @WOBJ.RTNE(INOBJ,"GET","path",FILEIO.PATH,"",RERR)þ      CALL @WOBJ.RTNE(INOBJ,"GET","data",FILEIO.DATA,"",RERR)þ      CALL @WOBJ.RTNE(INOBJ,"GET","dosletter",FILEIO.DOSLETTER,"",RERR)þ      CALL @WOBJ.RTNE(INOBJ,"GET","newline",FILEIO.NEWLINE,"",RERR)þ      CALL @WOBJ.RTNE(INOBJ,"GET","permissions",FILEIO.PERMISSIONS,"",RERR)þþ      *CALL @WOBJ.RTNE(OUTOBJ,"FROMSTRING","","{}","",RERR)þ      CALL @WOBJ.RTNE(INOBJ,"SET.OBJECT","response","{}","",RERR)þþ      FILEIO.ACTION=OCONV(FILEIO.ACTION,"MCU")þ      FILEIO.NEWLINE=OCONV(FILEIO.NEWLINE,"MCU")þþ      IF FILEIO.ACTION = "" THENþ         FSTATUS=0þ         FSTATUSMSG="No action defined"þ         GOTO end.of.runþ      ENDþþ      IF FILEIO.PATH = "" THENþ         FSTATUS=0þ         FSTATUSMSG="No path defined"þ         GOTO end.of.runþ      ENDþþ      BEGIN CASEþ         CASE FILEIO.NEWLINE='UNIX' OR FILEIO.NEWLINE="LF"; NL=CHAR(10)þ         CASE FILEIO.NEWLINE='DOS' OR FILEIO.NEWLINE="CRLF"; NL=CHAR(13):CHAR(10)þ         CASE FILEIO.NEWLINE='CR'; NL=CHAR(13)þ         CASE FILEIO.NEWLINE="MV"; NL=CHAR(254)þ         CASE FILEIO.NEWLINE="RAW"; NL=""þ         CASE FILEIO.ACTION="WRITE" AND PLATFORM.MV="JBASE" AND PLATFORM.TYPE="WINDOWS"; NL=CHAR(13):CHAR(10)þ         CASE FILEIO.ACTION="WRITE" AND PLATFORM.MV="JBASE"; NL=CHAR(10)þ         CASE FILEIO.ACTION="WRITE" AND PLATFORM.MV="D3"; NL=CHAR(13):CHAR(10)þ         CASE FILEIO.ACTION="READ" AND PLATFORM.MV="JBASE" AND PLATFORM.TYPE="WINDOWS"; NL=@AMþ         CASE FILEIO.ACTION="READ" AND PLATFORM.MV="JBASE"; NL=@AMþ         CASE FILEIO.ACTION="READ" AND PLATFORM.MV="D3"; NL=@AMþ         CASE PLATFORM.TYPE="WINDOWS"; NL=CHAR(13):CHAR(10)þ         CASE 1; NL=CHAR(10)þ      END CASEþþ      PARSED.FILEIO.PATH=""þ      L=LEN(FILEIO.PATH)þ      FOR X=1 TO Lþ         C=FILEIO.PATH[X,1]þ         IF C=PLATFORM.DELIM THENþ            PARSED.FILEIO.PATH:=@AMþ         END ELSEþ            PARSED.FILEIO.PATH:=Cþ         ENDþ      NEXT Xþþ      *PARSED.FILEIO.PATH=EXCHANGE(FILEIO.PATH,PLATFORM.DELIM,@AM)þ      PARSED.FILEIO.PATH=FILEIO.PATHþ      CONVERT PLATFORM.DELIM TO @AM IN PARSED.FILEIO.PATHþ      PARSED.FILEIO.PARTS=DCOUNT(PARSED.FILEIO.PATH,@AM)þþ      * JBASE DOES NOT APPEAR TO HONOR WINDOWS ENVIROMENT VARIABLES IN THE OPENþ      * THIS IS MAKING %USERPROFILE% NOT WORKþ      *þ      * WE ARE GOING TO LOOP THRU THE THE PARTS AN EXPAND THEM OURSELVESþ      *þ      * THIS HAS BEEN TESTED ON JBASE WINDOWS SO FAR.þ      *þ      FOR P=1 TO PARSED.FILEIO.PARTSþ         THIS.PART=PARSED.FILEIO.PATH<P>þ         IF THIS.PART[1,1]='%' OR THIS.PART[1,1]="$" THENþ            CONVERT '%$' TO '' IN THIS.PARTþ            * 9/4/2019 PAP Modified this to use mvdbtoolkit.wgetenvþþ            *       IF GETENV(THIS.PART,NEW.THIS.PART) THENþ            *           PARSED.FILEIO.PATH<P>=NEW.THIS.PARTþ            *       ENDþ            CALL MVDBTOOLKIT.WGETENV(THIS.PART,NEW.THIS.PART)þ            IF NEW.THIS.PART # "" THEN PARSED.FILEIO.PATH<P>=NEW.THIS.PARTþ         ENDþ      NEXT Pþþþ      PARSED.FILEIO.FILE.NAME=PARSED.FILEIO.PATH<PARSED.FILEIO.PARTS>þ      FILEIO.JUST.PATH=DELETE(PARSED.FILEIO.PATH,PARSED.FILEIO.PARTS)þ      *FILEIO.JUST.PATH=EXCHANGE(FILEIO.JUST.PATH,@AM,PLATFORM.DELIM)þþ      CONVERT @AM TO PLATFORM.DELIM IN FILEIO.JUST.PATHþþþ      CALL @WOBJ.RTNE(INOBJ,"SET.OBJECT","work","{}","",RERR)þ      CALL @WOBJ.RTNE(INOBJ,"SET","work.parsed_fileio_file_name",PARSED.FILEIO.FILE.NAME,"",RERR)þþ      CALL @WOBJ.RTNE(INOBJ,"SET","work.fileio_just_path",FILEIO.JUST.PATH,"",RERR)þ      CALL @WOBJ.RTNE(INOBJ,"SET","work.platform",PLATFORM.TYPE,"",RERR)þ      CALL @WOBJ.RTNE(INOBJ,"SET","work.mvtype",PLATFORM.MV,"",RERR)þ      CALL @WOBJ.RTNE(INOBJ,"SET","work.filedelim",PLATFORM.DELIM,"",RERR)þþ      CALL @WOBJ.RTNE(INOBJ,"SET.OBJECT","response","{}","",RERR)þ      * lets have a seperate routine for each platformþþ      BEGIN CASEþ         CASE FILEIO.ACTION="READ"þ            CALL @WOBJ.RTNE(INOBJ,"SET.STRING","response.data","","",RERR)þ         CASE FILEIO.ACTION="WRITE"þ            BEGIN CASEþ               CASE INDEX(FILEIO.DATA,CHAR(13):CHAR(10),1)þ                  SOURCE.NL=CHAR(13):CHAR(10)þ               CASE INDEX(FILEIO.DATA,CHAR(13),1)þ                  SOURCE.NL=CHAR(13)þ               CASE INDEX(FILEIO.DATA,@AM,1)þ                  SOURCE.NL=@AMþ               CASE 1þ                  SOURCE.NL=CHAR(10)þ            END CASEþ            *DEBUGþ            * IF NL = CHAR(13):CHAR(10) THEN DEBUGþ            DREC=FILEIO.DATA; DT='FILEIODATA'; GOSUB debug.recþ            DREC=NL; DT='nl'; GOSUB debug.recþ            DREC=SOURCE.NL; DT='source.nl'; GOSUB debug.recþ            IF NL # "" AND SOURCE.NL # NL THENþ               *CONVERT SOURCE.NL TO NL IN FILEIO.DATAþ               *CONVERT @AM TO NL IN FILEIO.DATAþ               CALL MVDBTOOLKIT.SWAP(FILEIO.DATA,SOURCE.NL,NL)þ               CALL MVDBTOOLKIT.SWAP(FILEIO.DATA,@AM,NL)þ            ENDþ            IF FILEIO.NEWLINE="RAW" OR FILEIO.NEWLINE="MV" THEN NULL ELSEþ                FILEIO.DATA:=NLþ            ENDþ            CALL @WOBJ.RTNE(INOBJ,"SET.STRING","data",FILEIO.DATA,"",RERR)þ         CASE FILEIO.ACTION="DELETE"þ         CASE 1þ            FSTATUS=0þ            FSTATUSMSG="Invalid action"þ            CALL @WOBJ.RTNE(INOBJ,"SET.NUMBER", "response.status", FSTATUS,"",RERR)þ            CALL @WOBJ.RTNE(INOBJ,"SET.STRING", "response.statusmsg", FSTATUSMSG, "", RERR)þ            GOTO end.of.runþ      END CASEþþ      BEGIN CASEþ         CASE PLATFORM.MV="D3"þ            FILEIO.RTNE="MVDBTOOLKIT.WFILEIO.D3"þ            CALL MVDBTOOLKIT.WFILEIO.D3(INOBJ)þ         CASE PLATFORM.MV="JBASE"þ            FILEIO.RTNE="MVDBTOOLKIT.W.FILEIO.JBASE"þ            CALL MVDBTOOLKIT.WFILEIO.JBASE(INOBJ)þ         CASE PLATFORM.MV="UNIVERSE"þ            FILEIO.RTNE="MVDBTOOLKIT.WFILEIO.UNIVERSE"þ            CALL MVDBTOOLKIT.WFILEIO.UNIVERSE(INOBJ)þ         CASE PLATFORM.MV="UNIDATA"þ            FILEIO.RTNE="MVDBTOOLKIT.WFILEIO.UNIDATA"þ            CALL MVDBTOOLKIT.WFILEIO.UNIDATA(INOBJ)þ         CASE PLATFORM.MV="QM"þ            * QM SUPPORTS OPENPATHþ            CALL MVDBTOOLKIT.WFILEIO.QM(INOBJ)þ         CASE 1þ            DEBUGþ            FSTATUS=0þ            FSTATUSMSG="Invalid Platform ":PLATFORM.MVþ            GOTO end.of.runþ      END CASEþþ      BEGIN CASEþ         CASE FILEIO.ACTION="READ"þ            CALL @WOBJ.RTNE(INOBJ,"GET","response.data",RESPONSE.DATA,"",RERR)þ            BEGIN CASEþ               CASE INDEX(RESPONSE.DATA,CHAR(13):CHAR(10),1)þ                  SOURCE.NL=CHAR(13):CHAR(10)þ               CASE INDEX(RESPONSE.DATA,CHAR(13),1)þ                  SOURCE.NL=CHAR(13)þ               CASE INDEX(RESPONSE.DATA,@AM,1)þ                  SOURCE.NL=@AMþ               CASE 1þ                  SOURCE.NL=CHAR(10)þ            END CASEþþ            *IF NL = "" THEN DEBUGþ            *DREC=NL; PRINT "NL"; GOSUB debug.recþ            *DREC=SOURCE.NL; PRINT "SOURCE.NL"; GOSUB debug.recþ            *DREC=RESPONSE.DATA; PRINT "RESPONSE.DATA: "; GOSUB debug.recþ            IF NL # "" AND NL # SOURCE.NL THENþ               *CONVERT SOURCE.NL TO NL IN RESPONSE.DATAþ               *CONVERT @AM TO NL IN RESPONSE.DATAþ               CALL MVDBTOOLKIT.SWAP(RESPONSE.DATA,SOURCE.NL,NL)þ               *DREC=RESPONSE.DATA; PRINT "AFTER SWAP1: "; GOSUB debug.recþ               CALL MVDBTOOLKIT.SWAP(RESPONSE.DATA,@AM,NL)þ               *DREC=RESPONSE.DATA; PRINT "AFTER SWAP2: ";GOSUB debug.recþ               BEGIN CASEþ                  CASE INDEX(RESPONSE.DATA,CHAR(13):CHAR(10),1)þ                     SOURCE.NL=CHAR(13):CHAR(10)þ                  CASE INDEX(RESPONSE.DATA,CHAR(13),1)þ                     SOURCE.NL=CHAR(13)þ                  CASE INDEX(RESPONSE.DATA,@AM,1)þ                     SOURCE.NL=@AMþ                  CASE 1þ                     SOURCE.NL=CHAR(10)þ               END CASEþþ            ENDþ            IF FILEIO.NEWLINE # "RAW" THENþ               REC.LEN=LEN(RESPONSE.DATA)þ               NL.LEN=LEN(SOURCE.NL)þ               END.OF.FILE=RESPONSE.DATA[REC.LEN-NL.LEN+1,NL.LEN]þ               DREC=END.OF.FILE; DT='END.OF.FILE: '; GOSUB debug.recþ               DREC=SOURCE.NL; DT='NL: '; GOSUB debug.recþ               IF END.OF.FILE = SOURCE.NL THENþ                  RESPONSE.DATA=RESPONSE.DATA[1,REC.LEN-NL.LEN]þ               ENDþ               DREC=RESPONSE.DATA; DT='AFT REC: '; GOSUB debug.recþ            ENDþ            CALL @WOBJ.RTNE(INOBJ,"SET.STRING","response.data",RESPONSE.DATA,"",RERR)þ         CASE FILEIO.ACTION="WRITE"þ         CASE FILEIO.ACTION="DELETE"þ      END CASEþend.of.run: *þþ      RETURNþþdebug.rec:þ      RETURNþ      PRINT; PRINT DTþ      DL=LEN(DREC)þ      FOR DX=1 TO DLþ         DC=DREC[DX,1]þ         PRINT DX,SEQ(DC)þ      NEXT DXþ      INPUT WAITþ      RETURNþ00301BMVDBTOOLKIT.APP.INSTALLERþ0c2*þ* Copyright (C) 2009 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written by: Luke Bucklin, Sierra Bravo Corporationþ* Date: 07/15/2009þ* Description: Application installerþ*þ* Modified By: Dave Bucklin, Nerdery Interactive Labsþ* Date: 02/04/2011þ* Description: Add overwrite flag, clashes handling specific to MVDashboardþ*þ* Modified By: Mike Street, Zumasysþ* Date: 07/22/2015þ* Description: Adapt for UniDataþ*þ* Modified By: Peter Schellenbach, Zumasysþ* Date: 07/28/2015þ* Description: added DATA stacking for EXECUTE commands (UniData CONVERT.DICTS program)þ*þ*þ    BUFFER = ""þ*þ    INSTALL.LOG.ON = 0þ    INSTALL.LOG.ID = "INSTALL*":DATE():"*":TIME()þ    INSTALL.LOG = ""þ    PROCESS.STATUS = 0þ    OVR.FLAG = 0þ    PROMPT ""þ    PRINT "File path: ":    þ    INPUT PACKAGE.FILEþ    IF PACKAGE.FILE = "VERSION" THENþ        PRINTþ        PRINT "Installer Version"þ        PRINT "1.0"þ        STOPþ    ENDþ*þ    returnCode = ""þ*þ    OPENSEQ PACKAGE.FILE TO HANDLE ELSEþ        PRINT "Unable to open sequential file"þ        STOPþ    ENDþ*UD   HANDLE = %OPEN(PACKAGE.FILE,O$RDONLY+O$BINARY)þ*UD   IF NOT(HANDLE) THENþ*UD       PRINT "Unable to open file." ; STOPþ*UD   ENDþ*þ    L = 0þ    PACKET = ""þ    LOOP    þ*UD     L = %READ(HANDLE,BUFFER,10000)þ*UDþ        OSBREAD BUFFER FROM HANDLE LENGTH 10000 þ*UD   IF PACKET = '' THENþ*UD      CRT 'CANT READ BUFFER'þ*UD      STOPþ*UD    ENDþ*UD   BUFFER=''þ*UD ENDþ        L=LEN(BUFFER)þ*END UD*þ    WHILE L > 0 DOþ        PACKET := BUFFERþ    REPEATþ    IF PACKET = "" THENþ        PRINT "No package."þ        STOPþ    ENDþ    INSTALL.ID = TIMEDATE()þ    KEEP.SOURCE = "1"þ*þ    PRINTþ    PRINT "Installing..."þ*þ    OPEN '','MV.PACKED.FILE' TO F.PACKED.FILE ELSEþ        CMD = "CREATE-FILE MV.PACKED.FILE 1 31"þ        GOSUB EXEC.CMDþ        OPEN '','MV.PACKED.FILE' TO F.PACKED.FILE ELSEþ            ERRFILE = "MV.PACKED.FILE"þ            GOSUB OPEN.ERRþ            STOPþ        ENDþ    ENDþ    WRITE PACKET ON F.PACKED.FILE, "PACKAGE"þþ    OPEN '','VOC' TO F.MD ELSEþ        ERRFILE = "VOC"þ        GOSUB OPEN.ERRþ        STOPþ    ENDþ    OPEN "MV.INSTALL" TO F.INSTALL ELSEþ        CMD = "CREATE-FILE MV.INSTALL 1 11"þ        GOSUB EXEC.CMDþ        OPEN "MV.INSTALL" TO F.INSTALL ELSEþ            ERRFILE = "MV.INSTALL"þ            GOSUB OPEN.ERRþ            STOPþ        ENDþ    ENDþ    OPEN "MV.INSTALL.CF" TO F.INSTALL.CF ELSEþ        CMD = "CREATE-FILE MV.INSTALL.CF 1 11"þ        GOSUB EXEC.CMDþ        OPEN "MV.INSTALL.CF" TO F.INSTALL.CF ELSEþ            ERRFILE = "MV.INSTALL.CF"þ            GOSUB OPEN.ERRþ            STOPþ        ENDþ    ENDþ    OPEN "MVAPPS.INSTALLED" TO F.MVAPPS.INSTALLED ELSEþ        CMD = "CREATE-FILE MVAPPS.INSTALLED 3 31"þ        GOSUB EXEC.CMDþ        OPEN "MVAPPS.INSTALLED" TO F.MVAPPS.INSTALLED ELSEþ            ERRFILE = "MVAPPS.INSTALLED"þ            GOSUB OPEN.ERRþ            STOPþ        ENDþ    ENDþ    OPEN "DICT","MVDB.CLASHES" TO FD.MVDB.CLASHES ELSEþ        CMD = "CREATE-FILE DICT MVDB.CLASHES 3"þ        GOSUB EXEC.CMDþ    ENDþ    INSTALL.LOG.ON = 1þ*þ    CLEARFILE F.INSTALLþ    DELETE F.INSTALL.CF, "MVAPPS-PRE-SCRIPT"      ;* Get rid of this just in case one is left overþ    DELETE F.INSTALL.CF, "MVAPPS-POST-SCRIPT"þ    DELETE F.INSTALL.CF, "PACKAGE.INFO"þ    TARGET = F.INSTALLþ    TARGET.NAME = "MV.INSTALL"þ    GOSUB UNPACKþ* All individual file packages are now in INSTALLþ* Unpack the MD scriptsþ    READ PACKET FROM F.INSTALL, "MV.INSTALL.CF" THENþ        TARGET = F.INSTALL.CFþ        TARGET.NAME = "MV.INSTALL.CF"þ        GOSUB UNPACKþ        DELETE F.INSTALL, "MV.INSTALL.CF"þ    ENDþ*þ* Execute scripts that are required prior to compilationþ*þ    READ CMD FROM F.INSTALL.CF, "MVAPPS-PRE-SCRIPT" THENþ        LOG.LINE = TIMEDATE():": Processing PRE-INSTALL commands..."þ        INSTALL.LOG<-1> = LOG.LINEþ* Execute commands that need to be run before the install process beginsþ        GOSUB EXEC.CMDþ        LOG.LINE = TIMEDATE():": Completed PRE-INSTALL commands."þ        INSTALL.LOG<-1> = LOG.LINEþ    ENDþ    READ PACKAGE.INFO FROM F.INSTALL.CF, "PACKAGE.INFO" ELSE PACKAGE.INFO = ""þ    PACKAGE.ID = PACKAGE.INFO<6>þ    PACKAGE.INFO<4> = DATE()þ    PACKAGE.INFO<5> = TIME()þ*þ    SELECT F.INSTALLþ    LOOPþ        READNEXT PKG.ID ELSE EXITþ        IF PKG.ID # "" THENþ            READ PACKET FROM F.INSTALL, PKG.ID THENþ                TARGET.FILE = FIELD(PKG.ID," ",1)þ                IF TARGET.FILE[1,7] = "BINARY:" THEN TARGET.FILE=TARGET.FILE[8,999]        ;*UDþ                DICT.MOD = FIELD( PKG.ID," ",2)þ                DATA.MOD = FIELD( PKG.ID," ",3)þ                DICT = ""þ                IF FIELD( PKG.ID,'_',1 ) = "DICT" THENþ                    TARGET.FILE = FIELD( PKG.ID, '_', 2 )þ                    IF TARGET.FILE[1,7] = "BINARY:" THEN TARGET.FILE=TARGET.FILE[8,999]    ;*UDþ                    DICT = "DICT"þ                ENDþ                OPEN DICT,TARGET.FILE TO F.TARGET ELSEþ                    IF NOT(INDEX(TARGET.FILE,':',1)) THENþ                        IF DICT.MOD = "" THEN DICT.MOD = 3þ                        IF DATA.MOD = "" THEN DATA.MOD = 31þ                        CMD = "CREATE-FILE ":TARGET.FILE:" ":DICT.MOD:" ":DATA.MODþ                        GOSUB EXEC.CMDþ                    ENDþ                    OPEN DICT,TARGET.FILE TO F.TARGET ELSEþ                        PRINT "Unable to create file ":TARGET.FILEþ                        GOSUB CLEANUPþ                        STOPþ                    ENDþ                ENDþ                TARGET = F.TARGETþ                TARGET.NAME = TRIM(DICT:" ":TARGET.FILE)þ                GOSUB UNPACKþ            ENDþ        ENDþ    REPEATþ*þ* Execute script required post compilationþ*þ    READ CMD FROM F.INSTALL.CF, "MVAPPS-POST-SCRIPT" THENþ        LOG.LINE = TIMEDATE():": Processing POST-INSTALL commands..."þ        INSTALL.LOG<-1> = LOG.LINEþ* Use compile options if they are present.þ        OPEN 'MVDB.CONTROL' TO F.MVDB.CONTROL THENþ            READ COMPILE.SETUP FROM F.MVDB.CONTROL, 'COMPILE.SETUP' THENþ                COMPILE.VERB = FIELD(COMPILE.SETUP<1>,' ',1)þ                IF COMPILE.VERB # '' THENþ                    OPTS = FIELD(COMPILE.SETUP<1>,'(',2)þ                    IF OPTS # '' THEN OPTS = "(":OPTSþ                    CMD.CNT = DCOUNT( CMD, @AM )þ                    FOR CMD.XX = 1 TO CMD.CNTþ                        IF FIELD(CMD<CMD.XX>,' ',1) = 'BASIC' OR FIELD(CMD<CMD.XX>,' ',1) = 'COMPILE' THENþ*make sure we use the right verb and options from the compile.setupþ                            CMD<CMD.XX> = COMPILE.VERB:' ':CMD<CMD.XX>[INDEX(CMD<CMD.XX>,' ',1)+1,999]:' ':OPTSþ                        ENDþ                    NEXT CMD.XXþ                ENDþ            ENDþ        ENDþ* Execute commands that need to be run at the end of the install processþ        GOSUB EXEC.CMDþ        LOG.LINE = TIMEDATE():": Completed POST-INSTALL commands."þ        INSTALL.LOG<-1> = LOG.LINEþ    ENDþ*þ*UD*    IF NOT(KEEP.SOURCE) THENþ*UD*        FOR X = 1 TO DCOUNT( SOURCE.FILES, @AM )þ*UD*            CMD = "CLEAR-FILE DATA ":SOURCE.FILES<X>þ*UD*            GOSUB EXEC.CMDþ*UD*        NEXT Xþ*UD*    ENDþ    READ INSTALL.LIST FROM F.INSTALL.CF, "LAST.INSTALL" ELSE INSTALL.LIST = ""þ    INSTALL.LIST = INSERT( INSTALL.LIST, 1, 0, 0, INSTALL.ID )þ    WRITE INSTALL.LIST ON F.INSTALL.CF, "LAST.INSTALL"þ    GOSUB CLEANUPþ    INSTALL.LOG<-1> = TIMEDATE():": Install complete."þ    WRITE INSTALL.LOG ON F.INSTALL.CF, INSTALL.LOG.IDþ    WRITE PACKAGE.INFO ON F.MVAPPS.INSTALLED, PACKAGE.IDþ    PROCESS.STATUS = 1þ    GOSUB SEND.DATAþ    STOPþ*********þUNPACK:   *þ*********þ    PRINT "Unpacking ":TARGET.NAME:"... ":þ*þ    BYTES = 0þ    CNT = 0þ    LOOPþ        PLENGTH = OCONV( PACKET[1,6], 'MCXD' )þ        REC = PACKET[7,PLENGTH]þ        PACKET = PACKET[PLENGTH+7,9999999]þ        ID = REC<1>þ        REC = DELETE( REC, 1, 0, 0 )þ        TYP = REC[1,2]þ        OVR.FLAG = REC[3,1]þ        REC = REC[4,9999999]þ        IF TYP = "0x" THENþ            REC = OCONV( REC, 'MY' )þ            END ELSE IF TYP # "0c" THENþ                REC = TYP:RECþ            ENDþ*þ            CNT += 1þ            BYTES += LEN(REC)þ            IF OVR.FLAG THENþ                IF DICT = "" THENþ*If we're not installing DICT items, compare for CLASHESþ                    READ CLASH FROM TARGET, ID THENþ                        BEGIN CASEþ*Preserve dashboard user passwordsþ                        CASE TARGET.FILE = "MVDB.USERS"þ                            IF CLASH<1> # REC<1> THEN REC<1> = CLASH<1>þ*Preserve dashboard access profileþ                        CASE TARGET.FILE = "MVDB.DEFS"þ                            IF CLASH<5> # REC<5> THEN REC<5> = CLASH<5>þ*Preserve widget access profileþ                        CASE TARGET.FILE = "MVDB.WIDGETS"þ                            IF CLASH<2> # REC<2> THEN REC<2> = CLASH<2>þ*Preserve widget compile optionþ                        CASE TARGET.FILE = "MVDB.CONTROL" AND ID = "COMPILE.SETUP"þ                            IF CLASH<1> # REC<1> THEN REC<1> = CLASH<1>þ                        END CASEþ                        IF CLASH # '' AND REC # CLASH THENþ                            CLASH.NAME = TARGET.NAMEþ                            CONVERT " " TO "_" IN CLASH.NAMEþ                            OPEN 'MVDB.CLASHES,':CLASH.NAME TO F.CLASHES ELSEþ                                *UD* CMD = "CREATE-FILE DATA MVDB.CLASHES,":CLASH.NAME:" 7"þ                                CMD = "CREATE-FILE MULTIFILE MVDB.CLASHES,":CLASH.NAME:" 7" ; *UD*þ                                GOSUB EXEC.CMDþ                                OPEN 'MVDB.CLASHES,':CLASH.NAME TO F.CLASHES ELSEþ                                    PRINT "Unable to create file MVDB.CLASHES,":CLASH.NAMEþ                                    GOSUB CLEANUPþ                                    STOPþ                                ENDþ                            ENDþ                            WRITE CLASH ON F.CLASHES, IDþ                            CLOSE F.CLASHESþ                        ENDþ                    ENDþ                ENDþ                WRITE REC ON TARGET, IDþ            END ELSEþ                READ TST FROM TARGET, ID ELSEþ                    WRITE REC ON TARGET, IDþ                ENDþ            ENDþ            IF NOT(MOD(CNT,500)) THEN PRINT "*":þ        UNTIL PACKET = "" DO REPEATþ        IF CNT # 1 THEN PLURAL = "s" ELSE PLURAL = ""þ        PRINT CNT:" record":PLURAL:"."þ        LOG.LINE = TIMEDATE():": UNPACKED ":CNT:" RECORDS TO ":TARGET.NAMEþ        INSTALL.LOG<-1> = LOG.LINEþ        RETURNþ**********þCLEANUP:  *þ**********þ        CLEARFILE F.INSTALLþ        CLEARFILE F.PACKED.FILEþ        RETURNþ*þEXEC.CMD: *þ*þ        CMD.CNT = DCOUNT( CMD, @AM )þ        FOR CMD.XX = 1 TO CMD.CNTþ            THIS.CMD = CMD<CMD.XX>þ            *UD* Stacked data?þ            IF INDEX(THIS.CMD,@VM,1) THENþ                THIS.DATA = THIS.CMD<1,1>þ                THIS.CMD = THIS.CMD<1,2>þ            END ELSEþ                THIS.DATA = ''þ            ENDþ            LOG.LINE = TIMEDATE():": EXEC: ":THIS.CMDþ            INSTALL.LOG<-1> = LOG.LINEþ            IF FIELD(THIS.DATA,' ',1) NE "SELECT" THENþ            DATA.CNT = DCOUNT(THIS.DATA,@VM)þ            *UD* Use DATA statements for stacked dataþ            FOR DATA.XX = 1 TO DATA.CNTþ                DATA THIS.DATA<1,DATA.XX>þ            NEXT DATA.XXþ            ENDþ            * Run the commandþ            IF FIELD(THIS.DATA,' ',1) = "SELECT" THENþ                IF FIELD(THIS.CMD,' ',1) = "CATALOG" THEN DATA "Y"þ                CRT "Executing   ":THIS.CMDþ                EXECUTE THIS.DATA : @AM : THIS.CMD þ            END ELSEþ                CRT "Executing   ":THIS.CMDþ                EXECUTE THIS.CMDþ            ENDþ            IF INSTALL.LOG.ON THENþ                WRITE INSTALL.LOG ON F.INSTALL.CF, INSTALL.LOG.IDþ            ENDþ        NEXT CMD.XXþ        RETURNþ*þOPEN.ERR: *þ*þ        LOG.LINE = TIMEDATE():": FILE OPEN ERROR: ":ERRFILEþ        INSTALL.LOG<-1> = LOG.LINEþ        PRINT LOG.LINEþ        GOSUB SEND.DATAþ        RETURNþ*þSEND.DATA:*þ*þ        PRINTþ        IF PROCESS.STATUS = 1 THEN INSTALL.STATUS = "Success" ELSE INSTALL.STATUS = "Failed"þ        PRINT "Install process finished. Status: ":INSTALL.STATUSþ        RETURNþ    END000630MVDBTOOLKIT.WCALL.DEBUGþ0c2      SUBROUTINE MVDBTOOLKIT.WCALL.DEBUG(OBJ)þþ      **********************************************************************þ      *þ      * Copyright (C) 2020 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: March 2020þ      * Description: Debug function for wcallþ      *þ      **********************************************************************þ      *þ      * Change Logþ      * 1/6/2021 - pap - MVConnect 2.0þ      *þ      **********************************************************************þþ      CRT "Do you wish to debug wcall? ":; INPUT CONTþ      IF OCONV(CONT,"MCU")[1,1]="Y" THEN NULL ELSE RETURNþþ      * This will do typical debugging workþ      CALL WOBJ(OBJ,"GET","response.status",RESPONSE.STATUS,"",RERR)þ      CALL WOBJ(OBJ,"GET","response.statusmsg",RESPONSE.STATUS.MSG,"",RERR)þþ      CRT "Status = ":RESPONSE.STATUS:' ':RESPONSE.STATUS.MSGþ      * Show the actual Curl commandþþ      CALL WOBJ(OBJ,"GET","response.curl_cmnd",CURL.CMND,"",RERR)þþ      PRINT "Press return to see curl cmnd ":; INPUT CONTþþ      PRINT CURL.CMNDþþ      PRINT "Press return to see response ":; INPUT CONTþ      CALL WOBJ(OBJ,"GET","response.data",RESPONSE.DATA,"",RERR)þþ      PRINT "Response: "þ      PRINT RESPONSE.DATAþþ      PRINT "Press return to see response.log":; INPUT CONTþþ      CALL WOBJ(OBJ,"LENGTH","response.log",LOG.LENGTH,"",RERR)þþ      FOR X=1 TO LOG.LENGTHþ         CALL WOBJ(OBJ,"GET","response.log[":X-1:"]",LOG.LINE,"",RERR)þ         PRINT LOG.LINEþ      NEXT Xþþ      RETURNþþ00042AMVDBTOOLKIT.INCLUDE.CHECK.MVCONNECTþ0c2      **********************************************************************þ      *þ      * Copyright (C) 2020 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: March 2020þ      * Description: Include that validates you are in the MVConnect accountþ      *þ      **********************************************************************þ      *þ      * Change Logþ      * 1/6/2021 - pap - Updated with new includesþ      *þ      **********************************************************************þ      þ       READ MVCONNECT.ACCOUNT FROM F.CONFIG, 'MVCONNECT.ACCOUNT' ELSEþ          PRINT "The MVDB.CONTROL file exists but no MVCONNECT.ACCOUNT"þ          PRINT "item exists."þ          STOPþþ       ENDþþ       CALL MVDBTOOLKIT.USER.INFO(USER.INFO,'MV')þ       þ       THIS.ACCOUNT=USER.INFO<3>þ       þ       IF MVCONNECT.ACCOUNT # THIS.ACCOUNT THENþ          PRINT "This function must be run from the ":MVCONNECT.ACCOUNTþ          PRINT "account."þ          STOPþ       END000275MVDBTOOLKIT.SWAP.DEFAULTþ0c2      SUBROUTINE MVDBTOOLKIT.SWAP.DEFAULT(V,F,T)þþ      **********************************************************************þ      *þ      * Copyright (C) 2020 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: March 2020þ      * Description: Swap for platforms that have swap()þ      *þ      **********************************************************************þ      *þ      * Change Logþ      * 1/6/2021 - pap - MVConnect 2.0þ      *þ      **********************************************************************þþ      V=SWAP(V,F,T)þþ      RETURNþ00059BMVDBTOOLKIT.WGETENVþ0c2      SUBROUTINE MVDBTOOLKIT.WGETENV(VAR.NAME,RETURN.VALUE)þþ      **********************************************************************þ      *þ      * Copyright (C) 2020 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: March 2020þ      * Description: Cross platform Environment Getþ      *þ      **********************************************************************þ      *þ      * Change Logþ      * 1/6/2021 - pap - MVConnect 2.0þ      *þ      **********************************************************************þþ      INCLUDE MVDBTOOLKIT.WOBJ.CHOOSE.WOBJþþ      CALL MVDBTOOLKIT.WPLATFORM(POBJ)þþ      CALL @WOBJ.RTNE(POBJ,"GET","mvtype",PLATFORM.MV,"",RERR)þ      CALL @WOBJ.RTNE(POBJ,"GET","filedelim",PLATFORM.DELIM,"",RERR)þ      CALL @WOBJ.RTNE(POBJ,"GET","platform",PLATFORM.TYPE,"",RERR)þþ      * THIS FUNCTION IS A CROSS PLATFORM WGET VAR FUNCTIONþþþ      BEGIN CASEþ         CASE PLATFORM.MV="D3" AND PLATFORM.TYPE="LINUX"þ            FILEIO.RTNE="MVDBTOOLKIT.WGETENV.D3"þ            CALL MVDBTOOLKIT.WGETENV.D3(VAR.NAME,RETURN.VALUE)þ         CASE PLATFORM.MV="JBASE"þ            FILEIO.RTNE="MVDBTOOLKIT.WGETENV.JBASE"þ            CALL MVDBTOOLKIT.WGETENV.JBASE(VAR.NAME,RETURN.VALUE)þ         CASE 1þ            CALL MVDBTOOLKIT.WGETENV.GENERIC(VAR.NAME,RETURN.VALUE,PLATFORM.MV,PLATFORM.TYPE)þ      END CASEþþend.of.run: *þþ      RETURNþþ00063FMVDBTOOLKIT.VALIDATE.CONFIG.INCLUDEþ0c2      **********************************************************************þ      *þ      * Copyright (C) 2020 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: March 2020þ      * Description: Validator Includeþ      *þ      **********************************************************************þ      *þ      * Change Logþ      * 1/6/2021 - pap - Removed creation part.  This will be depreciatedþ      *þ      **********************************************************************þ      þ      OPEN "MVDB.CONTROL" TO F.INCLUDE.CONFIG ELSEþþ         PRINT "No MVDB.CONTROL file.  You must run this from where you installed"þ         PRINT "MVConnect."þ         STOPþ      ENDþþ      OPEN "MVDB.CONTROL" TO F.INCLUDE.CONFIG ELSEþ         PRINT "Could not open MVDB.CONTROL!"þ         STOPþ      ENDþþ      READ VALIDATE.CONFIG.INCLUDE FROM F.INCLUDE.CONFIG, "MV.PLATFORM.JSON" ELSEþþ         * LETS TRY READING IT FROM THE DICT OF MVDBTOOLKIT.BPþ         F.INCLUDE.USE.DICT=1þþ         OPEN "DICT","MVDBTOOLKIT.BP" TO F.INCLUDE.DICT.MVDBTOOLKIT.BP ELSE F.INCLUDE.USE.DICT=0þþ         IF F.INCLUDE.USE.DICT THENþ            READ VALIDATE.CONFIG.INCLUDE FROM F.INCLUDE.DICT.MVDBTOOLKIT.BP, "MV.PLATFFORM.JSON" ELSE VALIDATE.CONFIG.INCLUDE=''þ            IF VALIDATE.CONFIG.INCLUDE # "" THENþ               WRITE VALIDATE.CONFIG.INCLUDE ON F.INCLUDE.CONFIG, "MV.PLATFROM.JSON"þ            ENDþ            CLOSE F.INCLUDE.DICT.MVDBTOOLKIT.BPþ         ENDþ      ENDþ      þ      CLOSE F.INCLUDE.CONFIGþ      þ      000156MVDBTOOLKIT.WEXECUTE.INCLUDEþ0c2* COMMON FOR EXECUTE *þCOMMON /MVDBWEX/ EXECUTE.COMMANDþCOMMON /MVDBWEX/ EXECUTE.DIRECTORYþCOMMON /MVDBWEX/ EXECUTE.DOCAPTUREþCOMMON /MVDBWEX/ EXECUTE.RETURNINGþCOMMON /MVDBWEX/ EXECUTE.RTNDATAþCOMMON /MVDBWEX/ EXECUTE.PASSLISTþCOMMON /MVDBWEX/ MV.TYPEþCOMMON /MVDBWEX/ PLATFORMþCOMMON /MVDBWEX/ EXECUTE.DEBUGþ000267MVDBTOOLKIT.SETUPþ0c2      **********************************************************************þ      *þ      * Copyright (C) 2020 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: March 2020þ      * Description: MVDBToolkit Setup Programþ      *þ      **********************************************************************þ      *þ      * Change Logþ      * 1/6/2021 - pap - MVConnect 2.0þ      *þ      **********************************************************************þ      þ      PRINT "Not implemented on this platform"þ      STOPþ      ENDþ      þ      0007A1MVDBTOOLKIT.WGETENV.GENERICþ0c2      SUBROUTINE MVDBTOOLKIT.WGETENV.GENERIC(VAR.NAME, RETURN.VALUE, MVTYPE, PLATFORM)þ      **********************************************************************þ      *þ      * Copyright (C) 2020 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: March 2020þ      * Description: Cross Platform generic function for Environment Variablesþ      *þ      **********************************************************************þ      *þ      * Change Logþ      * 1/6/2021 - pap - MVConnect 2.0þ      *þ      **********************************************************************þþ      RETURN.VALUE=""þþ      * WE ARE GOING TO JUST SHELL OUT AND GET THE ENVIRONMENT VARIABLE BASEDþ      * ON THE PLATFORMþþ      BEGIN CASEþ         CASE MVTYPE="UNIVERSE" AND PLATFORM="LINUX"þ            CMND='sh -c "echo $':VAR.NAME:'"'þ         CASE MVTYPE="UNIVERSE" AND PLATFORM="WINDOWS"þ            CMND='dos /c "echo %':VAR.NAME:'%"'þ         CASE (MVTYPE="JBASE" OR MVTYPE="D3") AND PLATFORM="LINUX"þ            CMND='!echo $':VAR.NAMEþ         CASE MVTYPE="JBASE" AND PLATFORM="WINDOWS"þ            CMND='echo %':VAR.NAME:'%'þ         CASE MVTYPE="D3" AND PLATFORM="WINDOWS"þ            CMND='!echo %':VAR.NAME:'%'þ         CASE MVTYPE='UNIDATA' AND PLATFORM="WINDOWS"þ            CMND='!echo %':VAR.NAME:'%'þ         CASE MVTYPE='UNIDATA' AND PLATFORM="LINUX"þ            CMND='!echo $':VAR.NAMEþ         CASE MVTYPE='QM' AND PLATFORM="WINDOWS"þ            * QM DOES HAVE SYSTEM(1025) TO GET ENVIRONMENT STUFFþ            * STICKING WITH THIS FOR NOWþ            CMND='!echo %':VAR.NAME:'%'þ         CASE MVTYPE='QM' AND PLATFORM="LINUX"þ            CMND='!echo $':VAR.NAMEþ         CASE 1þ            CMND=''þ      END CASEþþ      EXECUTE CMND CAPTURING RETURN.VALUEþþ      IF MVTYPE='UNIDATA' THENþ         RETURN.VALUE=RETURN.VALUE[1,LEN(RETURN.VALUE)-1]þ      ENDþþ      RETURNþ000586MVDBTOOLKIT.EXPAND.PATHþ0c2      SUBROUTINE MVDBTOOLKIT.EXPAND.PATH(PASSED.PATH)þþ      **********************************************************************þ      *þ      * Copyright (C) 2020 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: March 2020þ      * Description: Expand Path Function þ      *þ      **********************************************************************þ      *þ      * Change Logþ      * 1/6/2021 - pap - MVConnect 2.0þ      *þ      **********************************************************************þþ      INCLUDE MVDBTOOLKIT.WOBJ.CHOOSE.WOBJþþ      CALL MVDBTOOLKIT.WPLATFORM(POBJ)þþ      CALL @WOBJ.RTNE(POBJ,"GET","mvtype",PLATFORM.MV,"",RERR)þ      CALL @WOBJ.RTNE(POBJ,"GET","filedelim",PLATFORM.DELIM,"",RERR)þ      CALL @WOBJ.RTNE(POBJ,"GET","platform",PLATFORM.TYPE,"",RERR)þþ      PARSED.PATH=PASSED.PATHþ      CONVERT PLATFORM.DELIM TO @AM IN PARSED.PATHþ      PARSED.PARTS=DCOUNT(PARSED.PATH,@AM)þþ      FOR P=1 TO PARSED.PARTSþ         THIS.PART=PARSED.PATH<P>þ         IF THIS.PART[1,1]='%' OR THIS.PART[1,1]="$" THENþ            CONVERT '%$' TO '' IN THIS.PARTþ            CALL MVDBTOOLKIT.WGETENV(THIS.PART,NEW.THIS.PART)þ            IF NEW.THIS.PART # "" THEN PARSED.PATH<P>=NEW.THIS.PARTþ         ENDþ      NEXT Pþþ      CONVERT @AM TO PLATFORM.DELIM IN PARSED.PATHþþ      PASSED.PATH=PARSED.PATHþþ      RETURNþþ00002CMVDBTOOLKIT.TEST.INCLUDEþ0c2CMND = @SENTENCE000430MVDBTOOLKIT.SWAPþ0c2      SUBROUTINE MVDBTOOLKIT.SWAP(V,F,T)þ      **********************************************************************þ      *þ      * Copyright (C) 2020 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: March 2020þ      * Description: Multi Platform SWAP functionþ      *þ      **********************************************************************þ      *þ      * Change Logþ      * 1/6/2021 - pap - MVConnect 2.0þ      *þ      **********************************************************************þþþ      * MVDBTOOLKIT.SWAPþ      INCLUDE MVDBTOOLKIT.WOBJ.CHOOSE.WOBJþþ      * PLATFORM INDEPENDENT SWAP COMMANDþ      CALL MVDBTOOLKIT.WPLATFORM(PLATFORMOBJ)þþ      CALL @WOBJ.RTNE(PLATFORMOBJ,"GET","mvtype",MV.TYPE,"",RERR)þþ      BEGIN CASEþ         CASE MV.TYPE='UNIVERSE'þ            CALL MVDBTOOLKIT.SWAP.UNIVERSE(V,F,T)þ         CASE MV.TYPE='UNIDATA'þ            CALL MVDBTOOLKIT.SWAP.UNIDATA(V,F,T)þ         CASE 1þ            CALL MVDBTOOLKIT.SWAP.DEFAULT(V,F,T)þ      END CASEþþ      RETURNþ000EA3MVDBTOOLKIT.PACKAGE.INSTALLERþ0c2      **********************************************************************þ      *þ      * Copyright (C) 2020 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: March 2020þ      * Description: Package Installerþ      *þ      **********************************************************************þ      *þ      * Change Logþ      * 1/6/2021 - pap - Updated with new includesþ      *þ      **********************************************************************þþ      INCLUDE MVDBTOOLKIT.INCLUDE.TEST.CONFIGUREDþþ      INCLUDE MVDBTOOLKIT.INCLUDE.CHECK.MVCONNECTþþ      CALL WOBJ(COBJ,"FROMJSON","","{}","",RERR)þþ      CALL MVDBTOOLKIT.WPLATFORM(PLATFORM.OBJ)þþ      CALL WOBJ(PLATFORM.OBJ,"GET","packagesurl",PACKAGES.URL,"",RERR)þþ      CALL WOBJ(PLATFORM.OBJ,"GET","mvtype",MVTYPE,"",RERR)þþ      IF PACKAGES.URL = "" THENþ         PACKAGES.URL="https://raw.githubusercontent.com/zumasys/MVConnect/master/packages":OCONV(MVTYPE,"MCL")".json"þ      ENDþþ      MVTYPE=OCONV(MVTYPE,"MCU")þþ      BEGIN CASEþ         CASE MVTYPE="D3"; MVTYPE2="d3"þ         CASE MVTYPE="JBASE"; MVTYPE2="jb"þ         CASE MVTYPE="QM"; MVTYPE2="qm"þ         CASE MVTYPE="UNIVERSE"; MVTYPE2="uv"þ         CASE MVTYPE="UNIDATA"; MVTYPE2="ud"þ         CASE 1þ            PRINT "Platform ":MVTYPE:" not supported"þ            STOPþ      END CASEþþ      CALL WOBJ(PLATFORM.OBJ,"GET","tmpdir",TMP.DIR,"",RERR)þþ      CALL WOBJ(PLATFORM.OBJ,"GET","filedelim",FILEDELIM,"",RERR)þþ      PRINT "Packages url: ":PACKAGES.URLþþ      CALL WOBJ(COBJ,"SET","url",PACKAGES.URL,"",RERR)þ      CALL WOBJ(COBJ,"SET","method","GET","",RERR)þþ      CRT "Getting package list...":þþ      CALL MVDBTOOLKIT.WCALL(COBJ)þþ      *CALL MVDBTOOLKIT.WCALL.DEBUG(COBJ)þþþ      CALL WOBJ(COBJ,"GET","response.status",RESPONSE.STATUS,"",RERR)þþ      CALL WOBJ(COBJ,"GET","response.statusmsg",RESPONSE.STATUS.MSG,"",RERR)þ      CALL WOBJ(COBJ,"GET","response.data",RESPONSE.DATA,"",RERR)þþ      PRINT RESPONSE.STATUS:' ':RESPONSE.STATUS.MSGþþ      CALL WOBJ(POBJ,"FROMJSON","",RESPONSE.DATA,"",RERR)þþ      IF RERR>0 THENþ         PRINT RERR<1>:" Error: ":RERR<2>þ         STOPþ      ENDþþ      CALL WOBJ(POBJ,"LENGTH","packages",NUMBER.PACKAGES,"",RERR)þþ      PRINT "Number packages: ":NUMBER.PACKAGESþþtop.of.packages: *þþ      PACKAGES=""þ      STOP.PACKAGE.LIST=0þ      PACKAGE=""þþ      FOR P=1 TO NUMBER.PACKAGES UNTIL STOP.PACKAGE.LISTþþ         CALL WOBJ(POBJ,"GET","packages[":P-1:"].name",PACKAGE.NAME,"",RERR)þ         CALL WOBJ(POBJ,"GET","packages[":P-1:"].version",PACKAGE.VERSION,"",RERR)þ         CALL WOBJ(POBJ,"GET","packages[":P-1:"].description",PACKAGE.DESCRIPTION,"",RERR)þþ         IF OCONV(PACKAGE.NAME,'MCU') # "MVDB" THENþþ            PRINT PACKAGE.NAME:þ            PACKAGES<P>=PACKAGE.NAMEþþ            PRINT " ":þ            PRINT PACKAGE.VERSIONþ            PRINT "     ":PACKAGE.DESCRIPTIONþ         ENDþþ         IF NOT(MOD(P,10)) OR P=NUMBER.PACKAGES THENþ            PRINT "Package Name to install, return for more, q to quit ":; INPUT PACKAGEþ            IF OCONV(PACKAGE,'MCU')='Q' THEN STOPþ            IF PACKAGE # "" THEN STOP.PACKAGE.LIST=1þ         ENDþ      NEXT Pþþ      IF PACKAGE="" THEN STOPþ      IF NOT(NUM(PACKAGE)) THENþ         LOCATE PACKAGE IN PACKAGES SETTING PACKAGE ELSE STOPþ      ENDþþ      IF PACKAGE < 1 OR PACKAGE > NUMBER.PACKAGES THEN STOPþþ      CALL WOBJ(POBJ,"GET","packages[":PACKAGE-1:"].name",PACKAGE.NAME,"",RERR)þ      CALL WOBJ(POBJ,"GET","packages[":PACKAGE-1:"].version",PACKAGE.VERSION,"",RERR)þþþ      COBJ=""þ      CALL WOBJ(COBJ,"FROMSTRING","","{}","",RERR)þþ      CALL MVDBTOOLKIT.PACKAGE.INSTALLER.SUB(PACKAGE.NAME,RESULT)þþþ      STOP000D28MVDBTOOLKIT.WFILEIO.UNIDATAþ0c2SUBROUTINE MVDBTOOLKIT.WFILEIO.UNIDATA(FOBJ)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: June 7th 2018þ* Description: WFILEIO MULTI PLATFORM WORKING WITH O/S FILESþ*þ**********************************************************************þ*þ* INOBJþ*þ* { "ACTION":"READ,WRTE,DELETE",þ*   "PATH":"PATH TO THE FILE",þ*   "DATA":"DATA FOR A WRITE",þ*   "dosletter":"OPTIONAL DOS LETTER TO ADD TO PATH",þ*   "NEWLINE":"CR,LF,CRLF,DOS,UNIX",þ*   "PERMISSIONS":"TBD",þ*   "debug":"Y or N",þ*   "response": {þ*       "data":"responsedata",þ*       "status":1-ok, else no,þ*       "statusmsg":"statusmsg" þ*   }þ* }þ*þ* need to know the existing platformþþ*PLATFORM.DELIM="\"þ*PLATFORM.TYPE="WINDOWS"þ*PLATFORM.MV="D3"þþINCLUDE MVDBTOOLKIT.WOBJ.CHOOSE.WOBJþþCALL @WOBJ.RTNE(FOBJ,"GET","debug",DO.DEBUG,"",RERR)þIF OCONV(DO.DEBUG[1,1],"MCU") = "Y" OR DO.DEBUG="1" THEN DO.DEBUG=1 ELSE DO.DEBUG=""þþCALL @WOBJ.RTNE(FOBJ,"GET","work.mvtype",PLATFORM.MV,"",RERR)þCALL @WOBJ.RTNE(FOBJ,"GET","work.filedelim",PLATFORM.DELIM,"",RERR)þCALL @WOBJ.RTNE(FOBJ,"GET","work.platform",PLATFORM.TYPE,"",RERR)þþFSTATUS=1þFSTATUSMSG="OK"þþCALL @WOBJ.RTNE(FOBJ,"GET","action",FILEIO.ACTION,"",RERR)þCALL @WOBJ.RTNE(FOBJ,"GET","path",FILEIO.PATH,"",RERR)þCALL @WOBJ.RTNE(FOBJ,"GET","data",FILEIO.DATA,"",RERR)þCALL @WOBJ.RTNE(FOBJ,"GET","dosletter",FILEIO.DOSLETTER,"",RERR)þCALL @WOBJ.RTNE(FOBJ,"GET","newline",FILEIO.NEWLINE,"",RERR)þCALL @WOBJ.RTNE(FOBJ,"GET","permissions",FILEIO.PERMISSIONS,"",RERR)þþ*CALL @WOBJ.RTNE(OUTOBJ,"FROMSTRING","","{}","",RERR)þþFILEIO.ACTION=OCONV(FILEIO.ACTION,"MCU")þFILEIO.NEWLINE=OCONV(FILEIO.NEWLINE,"MCU")þþCALL @WOBJ.RTNE(FOBJ,"GET","work.parsed_fileio_file_name",PARSED.FILEIO.FILE.NAME,"",RERR)þCALL @WOBJ.RTNE(FOBJ,"GET","work.fileio_just_path",FILEIO.JUST.PATH,"",RERR)þCALL @WOBJ.RTNE(FOBJ,"GET","work.platform",PLATFORM.TYPE,"",RERR)þCALL @WOBJ.RTNE(FOBJ,"GET","work.mvtype",PLATFORM.MVTYPE,"",RERR)þCALL @WOBJ.RTNE(FOBJ,"GET","work.filedelim",PLATFORM.FILEDELIM,"",RERR)þþBLOCK.SIZE=10000þIF FILEIO.ACTION='READ' OR FILEIO.ACTION='WRITE' THENþ   IF FILEIO.ACTION='WRITE' THENþ     OSWRITE "" TO FILEIO.PATHþ   ENDþ   OSOPEN FILEIO.PATH TO FI ELSEþ       FSTATUS=0þ       FSTATUSMSG="Could not open ":FILEIO.PATHþ       GOTO end.of.runþ   ENDþENDþþBEGIN CASEþ    CASE FILEIO.ACTION="READ"þ        GOSUB fileio.readþ    CASE FILEIO.ACTION="WRITE"þ        GOSUB fileio.writeþ    CASE FILEIO.ACTION="DELETE"þ        GOSUB fileio.deleteþ    CASE 1þ        FSTATUS=0þ        FSTATUSMSG="Invalid action"þ        GOTO end.of.runþEND CASEþþCLOSE FIþþend.of.run: *þCALL @WOBJ.RTNE(FOBJ,"SET.NUMBER", "response.status", FSTATUS,"",RERR)þCALL @WOBJ.RTNE(FOBJ,"SET.STRING", "response.statusmsg", FSTATUSMSG, "", RERR)þþþRETURNþþfileio.read: *þþREC=""þþLOOPþ   OSBREAD BUFFER FROM FI LENGTH BLOCK.SIZEþ   REC:=BUFFERþ   IF LEN(BUFFER) < BLOCK.SIZE THEN EXITþREPEATþOSCLOSE FIþþCALL @WOBJ.RTNE(FOBJ,"SET.STRING","response.data",REC,"",RERR)þþIF 0 THENþ    PRINT "PATH   :":FILEIO.JUST.PATHþ    PRINT "ID     :":PARSED.FILEIO.FILE.NAMEþ    PRINT "REC    :":RECþENDþþRETURNþþfileio.write: *þþOSBWRITE FILEIO.DATA ON FIþOSCLOSE FIþFSTATUS=1þþRETURNþþfileio.delete: *þþOSDELETE FILEIO.PATHþFSTATUS=1þþRETURN000865MVDBTOOLKIT.WPLATFORMþ0c2      SUBROUTINE MVDBTOOLKIT.WPLATFORM(PLATFORMOBJ)þ      **********************************************************************þ      *þ      * Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: June 12, 2018þ      * Description: WPLATFORM OBJþ      *þ      **********************************************************************þ      * Change Logþ      *þ      * 1/6/2021 pap MVConnect 2.0þ      **********************************************************************þ      þ      *þ      * PLATFORMOBJþ      *þ      * {þ      *   "platform":" WINDOWS OR LINUX",þ      *   "mvtype"  :" JBASE, D3, UNIDATA, UNIVERSE, OPENQM",þ      *   "tmpdir"  :"tmp dir"þ      * }þþ      * nEW lINEþþ      INCLUDE MVDBTOOLKIT.WOBJ.CHOOSE.WOBJþ      þ      USE.DICT=1þ      þ      INCLUDE MVDBTOOLKIT.VALIDATE.CONFIG.INCLUDEþ      þ      OPEN "MVDB.CONTROL" TO F.CONFIG ELSEþ         PRINT "Could not open MVDB.CONTROL"þ         PLATFORMOBJ=''þ         STOPþ      ENDþ      þ      READ PLATFORMOBJ.JSON FROM F.CONFIG, "MV.PLATFORM.JSON"  ELSE PLATFORMOBJ.JSON=''þ      þ      USE.DICT=0þþ      OPEN "MD" TO FI.MD ELSEþ         OPEN "VOC" TO FI.MD ELSE RETURNþ      ENDþþ      * 02/06/2020 - Changed md item name to MV.PLATFORM.JSON to make it not tied to this packageþ      þ      IF PLATFORMOBJ.JSON="" THENþ         CRT "No MV.PLATFORM.JSON IN MD!!!"þ         STOPþ      ENDþþ      CONVERT CHAR(254) TO '' IN PLATFORMOBJ.JSONþ      CALL @WOBJ.RTNE(PLATFORMOBJ,"FROMSTRING","",PLATFORMOBJ.JSON,"",RERR)þþ      * 9/2/2019 PAP - We now figure out filedelim vs passing it in original config filedelimþþ      CALL @WOBJ.RTNE(PLATFORMOBJ,"GET","platform",PLATFORM,"",RERR)þ      CALL @WOBJ.RTNE(PLATFORMOBJ,"GET","mvtype",MV.TYPE,"",RERR)þ      IF PLATFORM="WINDOWS" THEN DELIM = "\" ELSE DELIM = "/"þ      CALL @WOBJ.RTNE(PLATFORMOBJ,"SET","filedelim",DELIM,"",RERR)þ      CALL @WOBJ.RTNE(PLATFORMOBJ,"GET","tmpdir",TMP.DIR,"",RERR)þþ      CALL @WOBJ.RTNE(PLATFORMOBJ,"TOSTRING","",OUT.JSON,"PRETTIFY",RERR)þ      WRITE OUT.JSON ON F.CONFIG, "MV.PLATFORM.JSON"þþ      RETURN00039CMVDBTOOLKIT.GET.CONFIG.ITEMþ0c2      **********************************************************************þ      *þ      * Copyright (C) 2020 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: March 2020þ      * Description: Standalone function to get config itemsþ      *þ      **********************************************************************þ      *þ      * Change Logþ      * 1/6/2021 - pap - MVConnect 2.0þ      *þ      **********************************************************************þþ      * New standalone function that will get a platform config itemþ      * and print it outþ      *þ      * this is to solve for D3 and flash issuesþ      *þ      þ      CMND=SENTENCE()þ      NODE=FIELD(CMND,' ',2)þ      IF NODE='' THEN STOPþ      CALL MVDBTOOLKIT.WPLATFORM(PLATFORMOBJ)þ      CALL WOBJ(PLATFORMOBJ,"GET",NODE,NODE.VALUE,"",RERR)þ      PRINT NODE.VALUEþ0006FDMVDBTOOLKIT.ENCODEþ0c2SUBROUTINE MVDBTOOLKIT.ENCODE(IN.STR,OUT.STR)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2017þ* Description: encode json stringþ*þ**********************************************************************þ***þ* THIS PROGRAM WILL CONVERT ALL BAD CHARACTERS TO AN ESCAPED CHARACTERþ***þEQU CR TO CHAR(13), LF TO CHAR(10), TB TO CHAR(9), BS TO CHAR(8), FF TO CHAR(12)þNL = CR:LFþþPRETTIFYCR=""þ*þ*OPEN 'RESULT.FILE' TO RFILE ELSE STOPþ* WE NEED TO ENCODEþ* " = \"   (34)þ* \ = \\    (92)þ* / = \/þ* CHAR(7) = \bþ* CHAR(13) = \rþ* char(10) = \nþ* char(12) = \fþ* char(9)  = \tþOUT.STR=''þL=LEN(IN.STR)þCONVERT @AM TO LF IN IN.STR; * LETS SWITCH 254 TO LF BE DEFAULTþFOR X=1 TO Lþ    C=IN.STR[X,1]þ    SEQ.C=SEQ(C)þ    ENCODE=0þ    *IF SEQ.C < 32 THEN ENCODE=1; * BELOW SPACEþ    *IF SEQ.C > 32 AND SEQ.C < 48 THEN ENCODE=1; * LETS ENCODE ALL OF THIS !@$%^&*()þ    IF SEQ.C=33 THEN ENCODE=1; * !þ    IF SEQ.C=34 THEN ENCODE=1; * "þ    IF SEQ.C=92 THEN ENCODE=1; * \þ    * IF SEQ.C=47 THEN ENCODE=1þ    *IF SEQ.C > 126 THEN ENCODE = 1; * LETS ENCODE ALL THE HIGH ENTRIESþ    *IF SEQ.C >= 91 AND SEQ.C <= 96 THEN ENCODE=1þ    IF ENCODE THENþ        BEGIN CASEþ            CASE SEQ.C=7; OUT.STR='\b'þ            CASE C='\'; OUT.STR:='\\'þ                *CASE C='/'; OUT.STR:='\/'þ            CASE C='"'; OUT.STR:='\"'þ            CASE SEQ.C=10þ                OUT.STR:='\n'þ                IF PRETTIFYCR THEN OUT.STR:=NLþ            CASE SEQ.C=13; OUT.STR:='\r'þ            CASE SEQ.C=12; OUT.STR:='\f'þ            CASE 1; OUT.STR:='\u00':OCONV(C,'MX0C')þ        END CASEþ    END ELSEþ        OUT.STR=OUT.STR:Cþ    ENDþNEXT XþRETURNþEND00325BMVDBTOOLKIT.WCALLþ0c2      SUBROUTINE MVDBTOOLKIT.WCALL(PASSED.WOBJ)þ      **********************************************************************þ      *þ      * Copyright (C) 2018 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: June 15, 2018þ      * Description: WCALL Libraryþþ      **********************************************************************þ      * Change logþ      *þ      * 1/6/2021 pap MVConnect 2.0þ      **********************************************************************þ      *þ      *þ      * @WOBJ.RTNEþ      * { "method":"GET,PUT,POST,ETC",þ      *    "url":"URL TO CALL",þ      *    "headers": { "HEADERNAME":"VALUE", "HEADERNAME":"VALUE" },þ      *    "outputfile: "Optional output file, wcall will write the output to this file vs response.data",þ      *    "body":"BODY",þ      *    "formfields": [þ      *         {þ      *            "name":"field name",þ      *            "value":"field value",þ      *            "fieldtype":"blank or file" for nowþ      *         }þ      *     ],þ      *    "datafields": [þ      *         {þ      *            "name":"field name",þ      *            "value":"field value",þ      *            "fieldtype":"blank or file" for nowþ      *         }þ      *     ],þ      *    "insecure":"Yes,Y,YES - Sets the -k on curl",þ      *    "timeout": ## (default is 45),þ      *    "options":"options to add to curl command",þ      *    "debug":"Y or N",þ      *    "response": {þ      *        "result":"RESULT",þ      *        "status":"STATUS",þ      *        "statusmsg":"STATUS MSG",þ      *        "http_type": "http type",þ      *        "curl_cmnd":"Actual curl command created",þ      *         "error": "error",þ      *         "log": [ "log output line1", "log output line 2" ],þ      *        "headers": { "headername":"header value","headername2":"headervalue" }þ      *    }þ      *  }þþ      INCLUDE MVDBTOOLKIT.WOBJ.CHOOSE.WOBJþþ      CALL MVDBTOOLKIT.WPLATFORM(POBJ)þþ      CALL @WOBJ.RTNE(POBJ,"GET","mvtype",MV.TYPE,"",RERR)þ      CALL @WOBJ.RTNE(POBJ,"GET","platform",PLATFORM,"",RERR)þ      CALL @WOBJ.RTNE(POBJ,"GET","filedelim",FILE.DELIM,"",RERR)þ      CALL @WOBJ.RTNE(POBJ,"GET","curllocation",CURLLOCATION,"",RERR)   ;* change #19þþ      IF MV.TYPE="" THENþ         CALL @WOBJ.RTNE(POBJ,"GET","error",THIS.ERROR,"",RERR)þ         PRINT "NO MV TYPE: ":THIS.ERRORþ         RETURNþ      ENDþþ      ITEMS.TO.DELETE=""        ;* PATH TO EACH FILE TO DELETEþþ      CALL @WOBJ.RTNE(POBJ,"GET","tmpdir",TMP.DIR,"",RERR)þþ      CALL @WOBJ.RTNE(PASSED.WOBJ,"GET","debug",DO.DEBUG,"",RERR)þ      IF OCONV(DO.DEBUG[1,1],"MCU")="Y" OR DO.DEBUG="1" THEN DO.DEBUG=1 ELSE DO.DEBUG=""þ      CALL @WOBJ.RTNE(PASSED.WOBJ,"GET","method",WEB.METHOD,"",RERR)þ      * 7/22/2020 PAP Set default Methodþ      IF WEB.METHOD="" THEN WEB.METHOD="GET"þþ      CALL @WOBJ.RTNE(PASSED.WOBJ,"GET","url",WEB.URL,"",RERR)þ      CALL @WOBJ.RTNE(PASSED.WOBJ,"GET","body",WEB.BODY,"",RERR)þ      CALL @WOBJ.RTNE(PASSED.WOBJ,"GET","timeout",WEB.TIMEOUT,"",RERR)þ      CALL @WOBJ.RTNE(PASSED.WOBJ,"KEYS","headers",WEB.HEADERS,"",RERR)þ      IF NOT(WEB.TIMEOUT) THEN WEB.TIMEOUT=45þ      CALL @WOBJ.RTNE(PASSED.WOBJ,"GET","insecure",WEB.INSECURE,"",RERR)þ      IF OCONV(WEB.INSECURE[1,1],'MCU') = "Y" THEN WEB.INSECURE=1 ELSE WEB.INSECURE=0þþ      CALL @WOBJ.RTNE(PASSED.WOBJ,"SET.OBJECT","response","{}","",RERR)þþ      IF TMP.DIR="" THENþ         BEGIN CASEþ            CASE PLATFORM="LINUX"þ               TMP.DIR="/tmp"þ            CASE INDEX(PLATFORM,"WINDOWS",1) AND MV.TYPE="JBASE"þ               TMP.DIR="%HOME%"þ            CASE INDEX(PLATFORM,"WINDOWS",1)þ               TMP.DIR="%USERPROFILE%\AppData\Local\Temp"þ            CASE 1þ               TMP.DIR="/tmp"þ         END CASEþ      ENDþþ      CALL MVDBTOOLKIT.EXPAND.PATH(TMP.DIR)þþ      * 4/6/2020 - Change #19.þ      IF CURLLOCATION # "" THENþ         CMND=CURLLOCATIONþ      END ELSEþ         CMND="curl"þ      ENDþ      CMND:=" -s"þ      CMND:=' -m ':WEB.TIMEOUTþ      CMND:=' -X ':WEB.METHODþ      CALL @WOBJ.RTNE(PASSED.WOBJ,"GET","options",WEB.OPTIONS,"",RERR)þ      IF WEB.OPTIONS # "" THENþ         CMND:=' ':WEB.OPTIONSþ      ENDþþ      WEB.NUM.HEADERS=DCOUNT(WEB.HEADERS,@SVM)þþ      FOR H=1 TO WEB.NUM.HEADERSþ         HEADER.NAME=WEB.HEADERS<1,1,H>þ         CALL @WOBJ.RTNE(PASSED.WOBJ,"GET","headers.":HEADER.NAME,HEADER.VALUE,"",RERR)þ         CALL MVDBTOOLKIT.ENCODE(HEADER.VALUE,ENCODED.HEADER.VALUE)þ         CMND:=' -H "':HEADER.NAME:': ':ENCODED.HEADER.VALUE:'"'þ      NEXT Hþþ      USER.NO=FIELD(OCONV('','U50BB'),' ',1)þ      SESSION.ID="WCALL-":USER.NOþþ      TMP.DIR:=FILE.DELIMþþ      * add in dumping of headersþ      CMND:=\ -D "\:TMP.DIR:SESSION.ID:\.headers"\þþ      ITEMS.TO.DELETE<-1>=TMP.DIR:SESSION.ID:'.headers'þþ      * write out stderrþ      CMND:=\ -v --stderr "\:TMP.DIR:SESSION.ID:\.stderr"\þþ      ITEMS.TO.DELETE<-1>=TMP.DIR:SESSION.ID:\.stderr\þþ      CALL @WOBJ.RTNE(FOBJ,"FROMSTRING","","{}","",RERR)þþ      SAVE.FOBJ=FOBJþþ      IF WEB.BODY # "" THENþ         *CALL @WOBJ.RTNE(EOBJ,"SET.ARRAY","data","[]","",RERR)þ         *CALL @WOBJ.RTNE(EOBJ,"SET.STRING","data[0]",WEB.BODY,"",RERR)þþþ         CALL @WOBJ.RTNE(FOBJ,"SET","action","WRITE","",RERR)þ         CALL @WOBJ.RTNE(FOBJ,"SET","data",WEB.BODY,"",RERR)þ         CALL @WOBJ.RTNE(FOBJ,"SET","path",TMP.DIR:SESSION.ID:'.body',"",RERR)þ         ITEMS.TO.DELETE<-1>=TMP.DIR:SESSION.ID:'.body'þþ         CALL MVDBTOOLKIT.WFILEIO(FOBJ)þ         CMND:=' --data-binary "@':TMP.DIR:SESSION.ID:'.body"'þ         *CMND:='  --data-binary @-'þ      ENDþþ      * form fields *þ      CALL @WOBJ.RTNE(PASSED.WOBJ,"LENGTH","formfields",NUM.FORMFIELDS,"",RERR)þþ      FOR X=1 TO NUM.FORMFIELDSþ         P="formfields[":X-1:"]"þ         CALL @WOBJ.RTNE(PASSED.WOBJ,"GET",P:'.name',FIELD.NAME,"",RERR)þ         CALL @WOBJ.RTNE(PASSED.WOBJ,"GET",P:'.value',FIELD.VALUE,"",RERR)þ         CALL @WOBJ.RTNE(PASSED.WOBJ,"GET",P:'.fieldtype',FIELD.TYPE,"",RERR)þ         IF TRIM(FIELD.NAME) # "" THENþ            * < > @ ALL MEAN SPECIAL THINGS WITH A -F.  If that exists in the file you needþ            * to use --form-stringþ            BEGIN CASEþ               CASE INDEX(FIELD.VALUE,CHAR(13),1) OR INDEX(FIELD.VALUE,CHAR(10),1)þ                  * WE NEED TO WRITE THIS OUT!þ                  TMP.CMND="-F "þ                  CALL @WOBJ.RTNE(FOBJ,"SET","action","WRITE","",RERR)þ                  CALL @WOBJ.RTNE(FOBJ,"SET","data",FIELD.VALUE,"",RERR)þ                  CALL @WOBJ.RTNE(FOBJ,"SET","path",TMP.DIR:SESSION.ID:'.field':X-1,"",RERR)þ                  ITEMS.TO.DELETE<-1>=TMP.DIR:SESSION.ID:'.field':X-1þ                  FIELD.VALUE="@":TMP.DIR:SESSION.ID:'.field':X-1þ                  CALL MVDBTOOLKIT.WFILEIO(FOBJ)þ                  * NEED TO WRITE THE CONTENT OUT TO A TMP FILE *þþ               CASE INDEX(FIELD.VALUE,'!',1) OR INDEX(FIELD.VALUE,'<',1) OR INDEX(FIELD.VALUE,'>',1) OR INDEX(FIELD.VALUE,'@',1) OR INDEX(FIELD.VALUE,'$',1) AND FIELD.TYPE # "file"þ                  TMP.CMND="--form-string "þ               CASE 1þ                  TMP.CMND="-F "þ            END CASEþ            TMP.CMND:=FIELD.NAME:'="'þ            TMP.CMND:=FIELD.VALUE:'"'þ            CMND:=' ':TMP.CMNDþ         ENDþ      NEXT Xþþ      * form fields *þ      CALL @WOBJ.RTNE(PASSED.WOBJ,"LENGTH","datafields",NUM.FORMFIELDS,"",RERR)þþ      FOR X=1 TO NUM.FORMFIELDSþ         P="datafields[":X-1:"]"þ         CALL @WOBJ.RTNE(PASSED.WOBJ,"GET",P:'.name',FIELD.NAME,"",RERR)þ         CALL @WOBJ.RTNE(PASSED.WOBJ,"GET",P:'.value',FIELD.VALUE,"",RERR)þ         CALL @WOBJ.RTNE(PASSED.WOBJ,"GET",P:'.fieldtype',FIELD.TYPE,"",RERR)þ         CALL MVDBTOOLKIT.SWAP(FIELD.VALUE,'@','%40')þ         CALL MVDBTOOLKIT.SWAP(FIELD.VALUE,'$','%24')þ         CALL MVDBTOOLKIT.SWAP(FIELD.VALUE,'/','%2F')þ         CALL MVDBTOOLKIT.SWAP(FIELD.VALUE,':','%3A')þþ         IF TRIM(FIELD.NAME) # "" THENþ            TMP.CMND="-d "þ            TMP.CMND:=FIELD.NAME:'="'þ            TMP.CMND:=FIELD.VALUE:'"'þ            CMND:=' ':TMP.CMNDþ         ENDþ      NEXT Xþ      * NOW ADD THE URLþþ      CALL MVDBTOOLKIT.SWAP(WEB.URL,' ','%20')þ      CALL MVDBTOOLKIT.SWAP(WEB.URL,'@','%40')þ      CALL MVDBTOOLKIT.SWAP(WEB.URL,'$','%24')þ      *WEB.URL=SWAP(WEB.URL,'/','%2F')þþ      CMND:=' "':WEB.URL:'"'þþ      * CALL WEXECUTEþþ      CALL @WOBJ.RTNE(EOBJ,"FROMSTRING","","{}","",RERR)þþ      CALL @WOBJ.RTNE(EOBJ,"SET","command",CMND,"",RERR)þ      CALL @WOBJ.RTNE(EOBJ,"SET","debug",DO.DEBUG,"",RERR)    ;* LAY IN DEBUGGING PARAMþþ      IF WEB.BODY # "" THENþ         * CALL @WOBJ.RTNE(EOBJ,"SET","data[0]",WEB.BODY,"",RERR)þ      ENDþþ      CALL MVDBTOOLKIT.WEXECUTE(EOBJ)     ;* DO THE CALLþþ      * READ IN THE HEADERSþþ      CALL @WOBJ.RTNE(FOBJ,"FROMSTRING","","{}","",RERR)þ      CALL @WOBJ.RTNE(FOBJ,"SET","action","READ","",RERR)þ      CALL @WOBJ.RTNE(FOBJ,"SET","path",TMP.DIR:SESSION.ID:".headers","",RERR)þ      CALL @WOBJ.RTNE(FOBJ,"SET","newline","MV","",RERR)þ      CALL MVDBTOOLKIT.WFILEIO(FOBJ)þþ      CALL @WOBJ.RTNE(FOBJ,"GET","response.data",RESPONSE.HEADERS,"",RERR)þþ      *    CALL @WOBJ.RTNE(PASSED.WOBJ,"SET.STRING","response.headers",RESPONSE.HEADERS,"",RERR)þþ      * Lets break the headers down into an arrayþþ      CALL @WOBJ.RTNE(PASSED.WOBJ,"SET.OBJECT","response.headers","{}","",RERR)þþ      NUM.HEADERS=DCOUNT(RESPONSE.HEADERS,@AM)þþ      HTTP.TYPE=''; HTTP.STATUS.CODE=''; HTTP.MSG=''þþ      FOR H=1 TO NUM.HEADERSþ         HEADER.LINE=RESPONSE.HEADERS<H>þ         BEGIN CASEþ            CASE HEADER.LINE[1,4]="HTTP" AND NOT(INDEX(HEADER.LINE,":",1))þ               HTTP.TYPE=FIELD(HEADER.LINE,' ',1)þ               HTTP.STATUS.CODE=FIELD(HEADER.LINE,' ',2)þ               HTTP.STATUS.MSG=FIELD(HEADER.LINE,' ',3,99)þ            CASE TRIM(HEADER.LINE)=''       ;* NOTHINGþ            CASE 1þ               HEADER.NAME=TRIM(FIELD(HEADER.LINE,':',1))þ               CONVERT CHAR(13):CHAR(10) TO '' IN HEADER.NAME  ;* CATCHES BLANK LINESþ               HEADER.VALUE=FIELD(HEADER.LINE,':',2,999999)þ               IF  HEADER.VALUE[1,1]=' ' THEN HEADER.VALUE=HEADER.VALUE[2,LEN(HEADER.VALUE)] ;* messy left trimþ               CONVERT CHAR(13):CHAR(10) TO '' IN HEADER.VALUE ;* STRIP AN NEW LINESþ               IF HEADER.NAME # "" THENþ                  * NOW PUT THE HEADER INTO OUR ARRAYþ                  CALL @WOBJ.RTNE(PASSED.WOBJ,"SET.STRING","response.headers.":HEADER.NAME,HEADER.VALUE,"",RERR)þ               ENDþ         END CASEþ      NEXT Hþþ      CALL @WOBJ.RTNE(PASSED.WOBJ,"SET.NUMBER","response.status",HTTP.STATUS.CODE,"",RERR)þ      CALL @WOBJ.RTNE(PASSED.WOBJ,"SET.STRING","response.http_type",HTTP.TYPE,"",RERR)þ      CALL @WOBJ.RTNE(PASSED.WOBJ,"SET.STRING","response.statusmsg",HTTP.STATUS.MSG,"",RERR)þþ      * READ IN STDERR (LOG) AND POST AS A ARRAYþþ      FOBJ=SAVE.FOBJþ      CALL @WOBJ.RTNE(FOBJ,"SET","action","READ","",RERR)þ      CALL @WOBJ.RTNE(FOBJ,"SET","path",TMP.DIR:SESSION.ID:'.stderr',"",RERR)þ      CALL MVDBTOOLKIT.WFILEIO(FOBJ)þ      CALL @WOBJ.RTNE(FOBJ,"GET","response.data",RESPONSE.STDERR,"",RERR)þþ      CALL @WOBJ.RTNE(PASSED.WOBJ,"SET.ARRAY","response.log","[]","",RERR)þþ      CONVERT CHAR(13) TO @AM IN RESPONSE.STDERRþ      CONVERT CHAR(10) TO "" IN RESPONSE.STDERRþ      NUM.LINES=DCOUNT(RESPONSE.STDERR,@AM)þþ      * 4/2/2020 pap  - Look for bad curl statement!!þþ      GOOD.CURL=1þ      CURL.BAD.MSG=""þþ      FOR L=1 TO NUM.LINESþ         LINE=RESPONSE.STDERR<L>þ         BEGIN CASEþ            CASE INDEX(LINE,'curl:',1)þ               * LETS CAPTURE THE FIRST ONEþ               IF CURL.BAD.MSG = "" THEN CURL.BAD.MSG=TRIM(FIELD(LINE,':',2,999))þ               GOOD.CURL=0þ            CASE INDEX(LINE,'warning:',1)þ         END CASEþ         CALL @WOBJ.RTNE(PASSED.WOBJ,"SET.STRING","response.log[-1]",LINE,"",RERR)þ      NEXT Lþþ      IF NOT(GOOD.CURL) THENþ         CALL @WOBJ.RTNE(PASSED.WOBJ,"SET.NUMBER","response.status","400","",RERR)þ         CALL @WOBJ.RTNE(PASSED.WOBJ,"SET.STRING","response.statusmsg",CURL.BAD.MSG,"",RERR)þ      ENDþþ      *CALL @WOBJ.RTNE(EOBJ,"TOSTRING","",TEST.JSON,"PRETTIFY",RERR)þ      CALL @WOBJ.RTNE(EOBJ,"GET","result.result",EXECUTE.RESULT,"",RERR)þ      CALL @WOBJ.RTNE(PASSED.WOBJ,"SET.STRING","response.data",EXECUTE.RESULT,"",RERR)þþend.of.call: *þþ      * XDELETE REQUIRED FILESþþ      NUM.ITEMS.TO.DELETE=DCOUNT(ITEMS.TO.DELETE,@AM)þþ      FOR I=1 TO NUM.ITEMS.TO.DELETEþ         ITEM.TO.DELETE=ITEMS.TO.DELETE<I>þ         FOBJ=SAVE.FOBJþ         CALL @WOBJ.RTNE(FOBJ,"SET","action","DELETE","",RERR)þ         CALL @WOBJ.RTNE(FOBJ,"SET","path",ITEM.TO.DELETE,"",RERR)þ         IF DO.DEBUG THENþ            CRT "Normally trying to delete: ":ITEM.TO.DELETEþ         END ELSEþ            CALL MVDBTOOLKIT.WFILEIO(FOBJ)þ         ENDþ      NEXT Iþþ      CALL @WOBJ.RTNE(PASSED.WOBJ,"SET.STRING","response.curl_cmnd",CMND,"",RERR)þþ      RETURN000601MVDBTOOLKIT.INCLUDE.TEST.CONFIGUREDþ0c2      **********************************************************************þ      *þ      * Copyright (C) 2020 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: March 2020þ      * Description: Includeþ      *þ      **********************************************************************þ      *þ      * Change Logþ      * 1/6/2021 - pap - Updated with new includesþ      *þ      **********************************************************************þþ      OPEN "MVDB.CONTROL" TO F.CONFIG ELSEþ         PRINT "This account cannot find the MVDB.CONTROL file."þ         PRINTþ         PRINT "If you are trying to run this from a different account"þ         PRINT "than were MVConnect is installed you must create a"þ         PRINT "Q pointer to MVDB.CONTROL."þ         STOPþ      ENDþþ      READ MVCONNECT.ACCOUNT FROM F.CONFIG, "MVCONNECT.ACCOUNT" ELSE MVCONNECT.ACCOUNT=""þ      IF TRIM(MVCONNECT.ACCOUNT<1,1,1>)='' THENþ         READ MVCONNECT.TYPE FROM F.CONFIG, "MVCONNECT.TYPE" ELSE MVCONNECT.TYPE=""þ         IF MVCONNECT.TYPE="CROSSPLATFORM" THENþ            CALL MVDBTOOLKIT.USER.INFO(USER.INFO,'MV')þ            THIS.ACCOUNT=USER.INFO<3>þ            WRITE THIS.ACCOUNT ON F.CONFIG, "MVCONNECT.ACCOUNT"þ         END ELSEþ            PRINT "An error happened.  MVDB.CONTROL MVCONNECT.ACCOUNT should identify"þ            PRINT "what account MVCONNECT is in.  It is currently blank."þ            PRINTþþ            STOPþ         ENDþ      ENDþ0004DAMVDBTOOLKIT.WEXECUTE.UNIDATAþ0c2SUBROUTINE MVDBTOOLKIT.WEXECUTE.UNIDATA(EOBJ)þINCLUDE MVDBTOOLKIT.WEXECUTE.INCLUDEþ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: June 12, 2018þ* Description: Execute library UNIDATA VERSION - CLONED FROM D3 VERSIONþ*þ**********************************************************************þþINCLUDE MVDBTOOLKIT.WOBJ.CHOOSE.WOBJþþE.RESULTS=""þE.RETURNING=""þE.RTNDATA=""þþBEGIN CASEþ    CASE EXECUTE.DOCAPTURE="N"þ        EXECUTE '!':EXECUTE.COMMAND þ    CASE 1þ        EXECUTE '!':EXECUTE.COMMAND CAPTURING E.RESULTþEND CASEþþIF EXECUTE.DEBUG="1" OR OCONV(EXECUTE.DEBUG[1,1],'MCU')='Y' THENþ   WRITE.DEBUG=1þ   OPEN 'RESULT.FILE' TO RFILE ELSE WRITE.DEBUG=0þ   IF WRITE.DEBUG THENþ       WRITE EXECUTE.COMMAND ON RFILE, 'WEXECUTE'þ   ENDþENDþþCONVERT CHAR(0) TO '' IN E.RESULTþCONVERT CHAR(255) TO '' IN E.RESULTþþCALL MVDBTOOLKIT.WPLATFORM(PLATFORMOBJ)þþCALL @WOBJ.RTNE(PLATFORMOBJ,"GET","mvtype",MV.TYPE,"",RERR)þþLC=E.RESULT[LEN(E.RESULT),1]þþIF LC = CHAR(254) THEN E.RESULT=E.RESULT[1,LEN(E.RESULT)-1]þþCALL @WOBJ.RTNE(EOBJ,"SET.STRING","result.result",E.RESULT,"",RERR)þþRETURN0003E0MVDBTOOLKIT.WOBJ.CHOOSE.WOBJþ0c2      **********************************************************************þ      *þ      * Copyright (C) 2020 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: March 2020þ      * Description: Common to determine what WOBJ to use (depreciating)þ      *þ      **********************************************************************þ      *þ      * Change Logþ      * 1/6/2021 - pap - MVConnect 2.0þ      *þ      **********************************************************************þþ      * Code to determine default wobj library to useþþ      * This needs to change for MVDBTOOLKIT build, defaults to WOBJþþ      WOBJ.RTNE="WOBJ"þþ      NO.MD.FILE=0þþ      OPEN "MD" TO FILE.MD ELSEþ         OPEN "VOC" TO FILE.MD ELSE NO.MD.FILE=1þ      ENDþþ      IF NOT(NO.MD.FILE) THENþ         READ WOBJ.CONF FROM FILE.MD, "WOBJ.CONF" ELSE WOBJ.CONF=""þþ         IF WOBJ.CONF<3> # "" THEN WOBJ.RTNE=WOBJ.CONF<3>þ      END001119MVDBTOOLKIT.PACKAGE.INSTALLER.SUBþ0c2      SUBROUTINE MVDBTOOLKIT.PACKAGE.INSTALLER.SUB(PACKAGE,RESULT)þ      **********************************************************************þ      *þ      * Copyright (C) 2020 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: March 2020þ      * Description: Package Installer subroutineþ      *þ      **********************************************************************þ      *þ      * Change Logþ      * 1/6/2021 - pap - MVConnect 2.0þ      *þ      **********************************************************************þþþ      * Install packagesþþ      * first, get a list of packagesþþ      CALL WOBJ(COBJ,"FROMJSON","","{}","",RERR)þþ      CALL MVDBTOOLKIT.WPLATFORM(PLATFORM.OBJ)þþ      CALL WOBJ(PLATFORM.OBJ,"GET","packagesurl",PACKAGES.URL,"",RERR)þþ      IF PACKAGES.URL = "" THENþ         PACKAGES.URL="https://raw.githubusercontent.com/zumasys/MVConnect/master/packages.json"þ      ENDþþ      CALL WOBJ(PLATFORM.OBJ,"GET","mvtype",MVTYPE,"",RERR)þþ      MVTYPE=OCONV(MVTYPE,"MCU")þþ      BEGIN CASEþ         CASE MVTYPE="D3"; MVTYPE2="d3"þ         CASE MVTYPE="JBASE"; MVTYPE2="jb"þ         CASE MVTYPE="QM"; MVTYPE2="qm"þ         CASE MVTYPE="UNIVERSE"; MVTYPE2="uv"þ         CASE MVTYPE="UNIDATA"; MVTYPE2="ud"þ         CASE 1þ            PRINT "Platform ":MVTYPE:" not supported"þ            RETURNþ      END CASEþþ      CALL WOBJ(PLATFORM.OBJ,"GET","tmpdir",TMP.DIR,"",RERR)þþ      CALL WOBJ(PLATFORM.OBJ,"GET","filedelim",FILEDELIM,"",RERR)þþ      *PRINT "Packages url: ":PACKAGES.URLþþ      CALL WOBJ(COBJ,"SET","url",PACKAGES.URL,"",RERR)þ      CALL WOBJ(COBJ,"SET","method","GET","",RERR)þþ      *CRT "Getting package list...":þþ      CALL MVDBTOOLKIT.WCALL(COBJ)þþ      *CALL MVDBTOOLKIT.WCALL.DEBUG(COBJ)þþþ      CALL WOBJ(COBJ,"GET","response.status",RESPONSE.STATUS,"",RERR)þþ      CALL WOBJ(COBJ,"GET","response.statusmsg",RESPONSE.STATUS.MSG,"",RERR)þ      CALL WOBJ(COBJ,"GET","response.data",RESPONSE.DATA,"",RERR)þþ      *PRINT RESPONSE.STATUS:' ':RESPONSE.STATUS.MSGþþ      CALL WOBJ(POBJ,"FROMJSON","",RESPONSE.DATA,"",RERR)þþ      IF RERR>0 THENþ         PRINT RERR<1>:" Error: ":RERR<2>þ         RETURNþ      ENDþþ      CALL WOBJ(POBJ,"LENGTH","packages",NUMBER.PACKAGES,"",RERR)þþ      *PRINT "Number packages: ":NUMBER.PACKAGESþþtop.of.packages: *þþ      PACKAGES=""þþ      FOR P=1 TO NUMBER.PACKAGESþþ         CALL WOBJ(POBJ,"GET","packages[":P-1:"].name",PACKAGE.NAME,"",RERR)þ         CALL WOBJ(POBJ,"GET","packages[":P-1:"].version",PACKAGE.VERSION,"",RERR)þþ         *  PRINT P"MR(#4)":þ         *  PRINT " ":þ         *  PRINT PACKAGE.NAME:þ         PACKAGES<P>=PACKAGE.NAMEþþ         *  PRINT " ":þ         *  PRINT PACKAGE.VERSIONþ      NEXT Pþþ      *PRINT "Package # to install or return to quit ":; INPUT PACKAGEþþ      IF PACKAGE="" THEN STOPþ      IF NOT(NUM(PACKAGE)) THENþ         LOCATE PACKAGE IN PACKAGES SETTING PACKAGE ELSE STOPþ      ENDþþ      IF PACKAGE < 1 OR PACKAGE > NUMBER.PACKAGES THEN STOPþþ      CALL WOBJ(POBJ,"GET","packages[":PACKAGE-1:"].name",PACKAGE.NAME,"",RERR)þ      CALL WOBJ(POBJ,"GET","packages[":PACKAGE-1:"].version",PACKAGE.VERSION,"",RERR)þþ      PRINT "Installing ":PACKAGE.NAME:" ":PACKAGE.VERSIONþþ      PRINT "Platform ":MVTYPE:' ':MVTYPE2þ      PRINT "Temp Directory: ":TMP.DIRþ      PRINT "O/S delim: ":FILEDELIMþþ      COBJ=""þ      CALL WOBJ(COBJ,"FROMSTRING","","{}","",RERR)þþ      PACKAGE.FILE.NAME=PACKAGE.NAME:"-":MVTYPE2:".pkg"þþ      URL="https://raw.githubusercontent.com/zumasys/MVConnect/master/packages/":MVTYPE2þ      URL:="/":PACKAGE.FILE.NAMEþþ      PRINT URLþþ      FULL.PACKAGE.PATH=TMP.DIR:FILEDELIM:PACKAGE.FILE.NAMEþþ      PRINT "Downloading ":URL:" to ":FULL.PACKAGE.PATHþþ      CALL WOBJ(COBJ,"SET","url",URL,"",RERR)þ      CALL WOBJ(COBJ,"SET","method","GET","",RERR)þ      OUTFILE.NAME='"':TMP.DIR:FILEDELIM:PACKAGE.FILE.NAME:'"'þ      CALL WOBJ(COBJ,"SET","options"," -o ":OUTFILE.NAME,"",RERR)þþ      CALL MVDBTOOLKIT.WCALL(COBJ)þ      *CALL MVDBTOOLKIT.WCALL.DEBUG(COBJ)þþ      CALL WOBJ(COBJ,"GET","response.status",RESPONSE.STATUS,"",RERR)þþ      CALL WOBJ(COBJ,"GET","response.statusmsg",RESPONSE.STATUS.MSG,"",RERR)þþ      PRINT "Response: ":RESPONSE.STATUS,RESPONSE.STATUS.MSGþþ      DATA FULL.PACKAGE.PATHþ      EXECUTE 'MVDBTOOLKIT.APP.INSTALLER'þþþ      RETURNþþ00017AMVDBTOOLKIT.SWAP.UNIDATAþ0c2SUBROUTINE MVDBTOOLKIT.SWAP.UNIVERSE(V,F,T)þþIF F=T THEN RETURNþIF F='' THEN RETURNþREMAINING.STRING=VþV=''þþCNTR=0þLOOPþ   CNTR+=1þ   POS=INDEX(REMAINING.STRING,F,1)þUNTIL NOT(POS) DOþ   PRE.STRING=REMAINING.STRING[1,POS-1]þ   REMAINING.STRING=REMAINING.STRING[POS+LEN(F),LEN(REMAINING.STRING)]þ   V:=PRE.STRING:TþREPEATþV:=REMAINING.STRINGþþRETURNþ0000B9MVDBTOOLKIT.USER.INFOþ0c2SUBROUTINE MVDBTOOLKIT.USER.INFO(USERINFO,FORMAT)þþUSERINFO = ''þFORMAT='MV'; * ONLY FORMAT SUPPORTED RIGHT NOWþþINCLUDE MVDBTOOLKIT.USER.INFO.PLATFORMþþRETURNþ00424EMVDBTOOLKIT.CONFIGþ0c2      **********************************************************************þ      *þ      * Copyright (C) 2020 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: March 2020þ      * Description: MVDBTOOLKIT Configuration Toolþ      *þ      **********************************************************************þ      *þ      * Change Logþ      * 1/6/2021 - pap - Updated with new includesþ      *þ      **********************************************************************þþþ      PRINT @(-1):"MVDBTOOLKIT.CONFIG 2.0"þ      PRINTþþ      COMMON /MVMKCOM/ MVMAKE.SUB.COMMON.INFOþþ      MVMAKE.SUB.COMMON.INFO=""; * DO NOT USE FOR THIS VERSIONþþ      IF MVMAKE.SUB.COMMON.INFO="" OR MVMAKE.SUB.COMMON.INFO = "0" THENþ         *    CRT "MVDBTOOLKIT.CONFIG MUST BE CALLED FROM MVMAKE"þ         *    STOPþ      ENDþþ      INCLUDE MVDBTOOLKIT.TEST.INCLUDEþþ      INCLUDE MVDBTOOLKIT.WOBJ.CHOOSE.WOBJþþ      * 9/22/2020 - Changing the location of all config files to MVDB.CONTROLþ      *þ      *             Same rules.  This program will create the file if needed.þþ      * 1/5/2021 - Add checkþ      þ      INCLUDE MVDBTOOLKIT.INCLUDE.TEST.CONFIGUREDþþ      INCLUDE MVDBTOOLKIT.INCLUDE.CHECK.MVCONNECTþ      þ      READ PLATFORM.JSON FROM F.CONFIG, "MV.PLATFORM.JSON" ELSE PLATFORM.JSON="{}"þ      IF TRIM(PLATFORM.JSON) = "" THEN PLATFORM.JSON="{}"þþ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"FROMSTRING","",PLATFORM.JSON,"",RERR)þþ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"GET","platform",PLATFORM,"",RERR)þ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"GET","mvtype",MVTYPE,"",RERR)þþ      IF MVMAKE.SUB.COMMON.INFO<2> # "" THEN PLATFORM=MVMAKE.SUB.COMMON.INFO<2>þ      IF MVMAKE.SUB.COMMON.INFO<3> # "" THEN MVTYPE=MVMAKE.SUB.COMMON.INFO<3>þþ      IF PLATFORM="" OR MVTYPE="" THENþ         ** LETS FIGURE OUT THE PLATFORM **þ         EXECUTE 'jdiag' CAPTURING RESULTþ         RESULT=OCONV(RESULT,"MCU")þ         IF INDEX(RESULT,'JBASE',1) THENþ            MVTYPE="JBASE"þ            OS.POS=INDEX(RESULT,"OS RELEASE",1)þ            OS.TYPE=RESULT[OS.POS,9999]þ            OS.TYPE=OS.TYPE<1,1,1>þ            OS.TYPE=OCONV(OS.TYPE,"MCU")þ            IF INDEX(OS.TYPE,"WINDOWS",1) THENþ               PLATFORM="WINDOWS"þ            END ELSEþ               PLATFORM="LINUX"þ            ENDþ            GOTO end.of.mvtypeþ         ENDþþ         EXECUTE 'WHICH' CAPTURING RESULTþ         RESULT=OCONV(RESULT,"MCU")þ         IF INDEX(RESULT,"D3",1) THENþ            MVTYPE="D3"þ            IF INDEX(RESULT,"WINDOWS",1) THENþ               PLATFORM="WINDOWS"þ            END ELSEþ               PLATFORM="LINUX"þ            ENDþ            GOTO end.of.mvtypeþ         ENDþþ         EXECUTE 'CT ERRMSG 335 (N' CAPTURING RESULTþ         IF INDEX(OCONV(RESULT,"MCU"),"MVBASE",1) THENþ            MVTYPE="MVBASE"; * NOT SUPPORTEDþ            GOTO end.of.mvtypeþ         ENDþþ         EXECUTE "VERSION" CAPTURING RESULTþ         IF INDEX(OCONV(RESULT,"MCU"),"UNIDATA",1) THENþ            MVTYPE="UNIDATA"þ            EXECUTE '!SET' CAPTURING OS.TYPEþ            OS.TYPE=OCONV(OS.TYPE,'MCU')þ            IF INDEX(OS.TYPE,"WINDIR",1) THENþ               PLATFORM="WINDOWS"þ            END ELSEþ               PLATFORM="LINUX"þ            ENDþ            GOTO end.of.mvtypeþ         ENDþþ         EXECUTE "CT VOC QM.ACCOUNTS" CAPTURING RESULTþ         IF INDEX(OCONV(RESULT,"MCU"),"QMSYS",1) THENþ            MVTYPE="QM"þ            EXECUTE '!SET' CAPTURING OS.TYPEþ            OS.TYPE=OCONV(OS.TYPE,'MCU')þ            IF INDEX(OS.TYPE,"WINDIR",1) THENþ               PLATFORM="WINDOWS"þ            END ELSEþ               PLATFORM="LINUX"þ            ENDþ            GOTO end.of.mvtypeþ         ENDþþ         EXECUTE 'CT VOC UVPROMPT' CAPTURING RESULTþ         IF INDEX(OCONV(RESULT,"MCU"),"1 V",1) THENþ            MVTYPE="UNIVERSE"þ            EXECUTE 'sh -c "pwd"' CAPTURING RESULTþ            IF INDEX(OCONV(RESULT,"MCU"),"NOT AVAILABLE",1) THENþ               PLATFORM="WINDOWS"þ            END ELSEþ               PLATFORM="LINUX"þ            ENDþ            GOTO end.of.mvtypeþ         ENDþþend.of.mvtype: *þþ         IF PLATFORM="" THENþ            PRINT "NO PLATFORM FOUND"; STOPþ            PRINT "ENTER PLATFORM (LINUX OR WINDOWS)[":PLATFORM:"]: ":; INPUT TMP.ANSþ            IF TMP.ANS # "" THEN PLATFORM=TMP.ANSþþ            PLATFORM=OCONV(PLATFORM,"MCU")þþ            BEGIN CASEþ               CASE PLATFORM="WINDOWS"þ                  D3.PREFIX="dos"þ                  PLATFORM.DELIM="\"þ               CASE PLATFORM="LINUX"þ                  D3.PREFIX="unix"þ                  PLATFORM.DELIM="/"þ               CASE 1þ                  CRT "Invalid Platform ":PLATFORM; STOPþ            END CASEþ         ENDþþ         IF MVTYPE="" THENþ            PRINT "NO MVTYPE FOUND"; STOPþ            PRINT "ENTER MVTYPE (JBASE, QM, D3, UNIVERSE, UNIDATA)[":MVTYPE:"] ":; INPUT TMP.ANSþ            IF TMP.ANS # "" THEN MVTYPE = TMP.ANSþþ            MVTYPE=OCONV(MVTYPE,"MCU")þþ            BEGIN CASEþ               CASE MVTYPE="JBASE"þ               CASE MVTYPE="QM"þ               CASE MVTYPE="D3"þ               CASE MVTYPE="UNIVERSE"þ               CASE MVTYPE="UNIDATA"þ               CASE 1þ                  CRT "Invalid MVTYPE"; STOPþ            END CASEþ         ENDþþ      ENDþþ      MVMAKE.SUB.COMMON.INFO<1>='REBUILD'þ      MVMAKE.SUB.COMMON.INFO<2>=PLATFORMþ      MVMAKE.SUB.COMMON.INFO<3>=MVTYPEþþ      PRINT "Platform:      ":PLATFORMþ      PRINT "MV type :      ":MVTYPEþ      PRINTþþ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"SET","platform",PLATFORM,"",RERR)þ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"SET","mvtype",MVTYPE,"",RERR)þþ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"SET","platform",MVMAKE.SUB.COMMON.INFO<2>,"",RERR)þ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"SET","mvtype",MVMAKE.SUB.COMMON.INFO<3>,"",RERR)þþ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"TOSTRING","",PLATFORM.JSON,"PRETTIFY",RERR)þ      CONVERT CHAR(13) TO @AM IN PLATFORM.JSONþ      CONVERT CHAR(10) TO '' IN PLATFORM.JSONþ      WRITE PLATFORM.JSON ON F.CONFIG, "MV.PLATFORM.JSON"þþ      CALL MVDBTOOLKIT.WPLATFORM(PLATFORM.OBJ)þþ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"GET","platform",PLATFORM,"",RERR)þ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"GET","mvtype",MVTYPE,"",RERR)þ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"GET","filedelim",FILEDELIM,"",RERR)þþ      IF PLATFORM = "" THENþ         CRT "No platform configured!!!"; STOPþ      ENDþþ      IF MVTYPE = "" THENþ         CRT "No MVType configured!!!"; STOPþ      ENDþþ      * GET ENVIRONMENTþþ      * Let get our current directoryþ      TEST="pwd"; GOSUB start.testþ      IF OCONV(PLATFORM,"MCU") = "WINDOWS" THENþ         CMND='echo %CD%'þ      END ELSEþ         CMND='pwd'þ      ENDþþ      CALL @WOBJ.RTNE(COBJ,"FROMSTRING","","{}","",RERR)þ      CALL @WOBJ.RTNE(COBJ,"SET","command",CMND,"",RERR)þ      CALL MVDBTOOLKIT.WEXECUTE(COBJ)þ      CALL @WOBJ.RTNE(COBJ,"GET","result.result",CMND.RESULT,"",RERR)þ      CONVERT CHAR(13):CHAR(10) TO '' IN CMND.RESULTþ      TEST.STATUS=1þ      TEST.MSG=CMND.RESULTþ      GOSUB end.testþþ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"GET","tmpdir",TMP.PATH,"",RERR)þþ      IF TMP.PATH="" THENþþ         IF MVMAKE.SUB.COMMON.INFO<5>="" THEN MVMAKE.SUB.COMMON.INFO<5>="mvdbtoolkit"þþ         IF MVTYPE="QM" THENþ            EXECUTE '!mkdir TMP'þ         ENDþ         BEGIN CASEþ            CASE MVTYPE="D3" AND PLATFORM="LINUX"þ               * DANG D3 HAS IT'S OWN DANG FILE SYSTEM, LETS JUST CREATE A TMP DIR AND MOVEþ               TMP.PATH="/tmp"þ            CASE MVTYPE="D3" AND PLATFORM="LINUX"þ               TMP.DATH="c:\tmp"þ               EXECUTE '!mkdir c:\tmp'þ            CASE OCONV(MVMAKE.SUB.COMMON.INFO<5>,"MCU") = "MVDBTOOLKIT"þ               * WE HAVE RELATIVE POSITIONINGþ               TMP.PATH=CMND.RESULT:FILEDELIM:"TMP"þ               MVDBTOOLKIT.LOCATION=CMND.RESULTþ            CASE 1þ               TMP.PATH=MVMAKE.SUB.COMMON.INFO<5>:FILEDELIM:"TMP"þ               MVDBTOOLKIT.LOCATION=MVMAKE.SUB.COMMON.INFO<5>þ         END CASEþþ      ENDþþþ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"SET","tmpdir",TMP.PATH,"",RERR)þ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"SET","mvdbtoolkitlocation",MVDBTOOLKIT.LOCATION,"",RERR)þ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"GET","curllocation",CURLLOCATION,"",RERR)þþ      TEST='tmpdir'; GOSUB start.testþ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"GET","tmpdir",TMP.DIR,"",RERR)þ      TEST.MSG=TMP.DIRþ      TEST.STATUS=1þ      IF TMP.DIR="" THEN TEST.STATUS=0þ      GOSUB end.testþþþ      TEST='MVDBTOOLKIT.SWAP'þ      GOSUB start.testþ      S='TEST LINE TEST LINE'þ      ORIG.STRING=Sþ      CALL MVDBTOOLKIT.SWAP(S,"ES","XX")þ      IF S = "TXXT LINE TXXT LINE" THEN TEST.STATUS=1 ELSE TEST.STATUS=0þ      TEST.MSG=Sþ      GOSUB end.testþþ      * Test 1 Getenvþþ      TEST="getenv"þ      GOSUB start.testþ      CALL MVDBTOOLKIT.WGETENV("PATH",PATH)þ      IF PATH # "" THENþ         TEST.MSG=PATH[1,60]þ         TEST.STATUS=1þ      END ELSEþ         TEST.MSG=""þ         TEST.STATUS=0þ      ENDþ      GOSUB end.testþþ      * Test WEXECUTEþþ      TEST="wexecute"; GOSUB start.testþ      CMND='echo MVDBTOOLKIT.TEST'þþ      CALL @WOBJ.RTNE(COBJ,"FROMSTRING","","{}","",RERR)þ      CALL @WOBJ.RTNE(COBJ,"SET","command",CMND,"",RERR)þ      CALL MVDBTOOLKIT.WEXECUTE(COBJ)þ      CALL @WOBJ.RTNE(COBJ,"GET","result.result",CMND.RESULT,"",RERR)þþ      IF INDEX(CMND.RESULT,"MVDBTOOLKIT.TEST",1) THENþ         TEST.MSG=CMND.RESULTþ         TEST.STATUS=1þ      END ELSEþ         TEST.MSG=CMND.RESULTþ         TEST.STATUS=0þ      ENDþ      CONVERT CHAR(13):CHAR(10) TO '' IN TEST.MSGþ      GOSUB end.testþþ      * Test WFILEIOþþ      TEST="WFILEIO-WRITE"þþ      USER.NO=FIELD(OCONV('','U50BB'),' ',1)þ      GOSUB start.testþ      CALL @WOBJ.RTNE(FOBJ,"FROMSTRING","","{}","",RERR)þ      CALL @WOBJ.RTNE(FOBJ,"SET","action","WRITE","",RERR)þ      TMP.FILE.NAME=TMP.DIR:FILEDELIM:'TMP-':USER.NO:'.txt'þ      TEST.MSG=TMP.FILE.NAMEþþ      CALL @WOBJ.RTNE(FOBJ,"SET","path",TMP.FILE.NAME,"",RERR)þ      SAVE.FOBJ=FOBJþ      TMP.DATA=TIMEDATE()þ      CALL @WOBJ.RTNE(FOBJ,"SET","data",TMP.DATA,"",RERR)þ      CALL MVDBTOOLKIT.WFILEIO(FOBJ)þ      CALL @WOBJ.RTNE(FOBJ,"GET","response.status",RESPONSE.STATUS,"",RERR)þ      CALL @WOBJ.RTNE(FOBJ,"GET","response.statusmsg",RESPONSE.STATUS.MSG,"",RERR)þ      TEST.STATUS=RESPONSE.STATUSþ      IF NOT(RESPONSE.STATUS) THEN TEST.MSG:=RESPONSE.STATUS.MSGþ      GOSUB end.testþþ      IF NOT(TEST.STATUS) THEN STOP "Test Failed, no reason to continue"þþ      TEST='WFILEIO-READ'þ      GOSUB start.testþþ      * NOW READ IT BACK INþ      CALL @WOBJ.RTNE(FOBJ,"SET","action","READ","",RERR)þ      CALL MVDBTOOLKIT.WFILEIO(FOBJ)þ      CALL @WOBJ.RTNE(FOBJ,"GET","response.data",RESPONSE.DATA,"",RERR)þþ      TEST.MSG="(":TMP.DATA:')=(':RESPONSE.DATA:")"þ      TEST.STATUS=1þ      IF TMP.DATA # RESPONSE.DATA THEN TEST.STATUS=0þ      GOSUB end.testþþ      TEST="WFILEIO-DELETE"; GOSUB start.testþ      FOBJ=SAVE.FOBJþ      CALL @WOBJ.RTNE(FOBJ,"SET","action","DELETE","",RERR)þ      CALL MVDBTOOLKIT.WFILEIO(FOBJ)þþ      FOBJ=SAVE.FOBJþ      CALL @WOBJ.RTNE(FOBJ,"SET","action","READ","",RERR)þ      CALL MVDBTOOLKIT.WFILEIO(FOBJ)þ      RESPONSE.DATA=""þþ      CALL @WOBJ.RTNE(FOBJ,"GET","response.data",RESPONSE.DATA,"",RERR)þ      CALL @WOBJ.RTNE(FOBJ,"GET","response.status",RESPONSE.STATUS,"",RERR)þ      CALL @WOBJ.RTNE(FOBJ,"GET","response.statusmsg",RESPONSE.STATUSMSG,"",RERR)þ      TEST.STATUS=1þ      TEST.MSG=TMP.FILE.NAME:' ':RESPONSE.STATUSþ      IF RESPONSE.STATUS=0 AND RESPONSE.DATA="" THEN NULL ELSE TEST.STATUS=0þ      GOSUB end.testþþ      * Let get our current directoryþ      TEST="pwd"; GOSUB start.testþ      IF OCONV(PLATFORM,"MCU") = "WINDOWS" THENþ         CMND='echo %CD%'þ      END ELSEþ         CMND='pwd'þ      ENDþþ      CALL @WOBJ.RTNE(COBJ,"FROMSTRING","","{}","",RERR)þ      CALL @WOBJ.RTNE(COBJ,"SET","command",CMND,"",RERR)þ      CALL MVDBTOOLKIT.WEXECUTE(COBJ)þ      CALL @WOBJ.RTNE(COBJ,"GET","result.result",CMND.RESULT,"",RERR)þþ      IF 1 THENþ         TEST.MSG=CMND.RESULTþ         TEST.STATUS=1þ      END ELSEþ         TEST.MSG=CMND.RESULTþ         TEST.STATUS=0þ      ENDþ      CONVERT CHAR(13):CHAR(10) TO '' IN TEST.MSGþ      GOSUB end.testþþ      MVDBTOOLKIT.LOCATION = CMND.RESULTþþ      * Lets verify we have curl!!!þþ      IF CURLLOCATION="" THEN CURLLOCATION="curl"þþ      TEST="default curl"; GOSUB start.testþ      CMND=CURLLOCATION:' -V'þþ      CALL @WOBJ.RTNE(COBJ,"FROMSTRING","","{}","",RERR)þ      CALL @WOBJ.RTNE(COBJ,"SET","command",CMND,"",RERR)þ      CALL MVDBTOOLKIT.WEXECUTE(COBJ)þ      CALL @WOBJ.RTNE(COBJ,"GET","result.result",CMND.RESULT,"",RERR)þþ      BEGIN CASEþ         CASE INDEX(CMND.RESULT,"libcurl",1) AND 1þ            TEST.MSG=CMND.RESULTþ            TEST.STATUS=1þ         CASE OCONV(PLATFORM,"MCU")="WINDOWS"þ            TEST.MSG=CMND.RESULTþ            CURLLOCATION=""þ            TEST.STATUS=2þ         CASE 1þ            TEST.MSG=0þ      END CASEþþ      CONVERT CHAR(13):CHAR(10) TO '' IN TEST.MSGþ      GOSUB end.testþþ      * THIS IS SLOPPY CODEþþ      IF CURLLOCATION="" AND PLATFORM="WINDOWS" THENþ         * Start looking for curlþ         IF TEST.STATUS=2 THENþ            CURLLOCATION="C:\PROGRA~2\Zumasys\MVDASH~1\bin\curl.exe"þ            TEST="curl via mvconnect"; GOSUB start.testþ            CMND=CURLLOCATION:' -V'þþ            CALL @WOBJ.RTNE(COBJ,"FROMSTRING","","{}","",RERR)þ            CALL @WOBJ.RTNE(COBJ,"SET","command",CMND,"",RERR)þ            CALL MVDBTOOLKIT.WEXECUTE(COBJ)þ            CALL @WOBJ.RTNE(COBJ,"GET","result.result",CMND.RESULT,"",RERR)þþ            BEGIN CASEþ               CASE INDEX(CMND.RESULT,"libcurl",1) AND 1þ                  TEST.MSG=CMND.RESULTþ                  TEST.STATUS=1þ               CASE OCONV(PLATFORM,"MCU")="WINDOWS"þ                  TEST.MSG=CMND.RESULTþ                  CURLLLOCATION=""þ                  TEST.STATUS=2þ               CASE 1þ                  TEST.MSG=CMND.RESULTþ                  TEST.STATUS=0þ                  CURLLOCATION=""þ            END CASEþþ            CONVERT CHAR(13):CHAR(10) TO '' IN TEST.MSGþ            GOSUB end.testþ         ENDþþ         IF TEST.STATUS=2 THENþ            CURLLOCATION=MVDBTOOLKIT.LOCATION:'\curlexe\curl.exe'þ            TEST="curl in curlexe directory"; GOSUB start.testþ            CMND=CURLLOCATION:' -V'þþ            CALL @WOBJ.RTNE(COBJ,"FROMSTRING","","{}","",RERR)þ            CALL @WOBJ.RTNE(COBJ,"SET","command",CMND,"",RERR)þ            CALL MVDBTOOLKIT.WEXECUTE(COBJ)þ            CALL @WOBJ.RTNE(COBJ,"GET","result.result",CMND.RESULT,"",RERR)þþ            BEGIN CASEþ               CASE INDEX(CMND.RESULT,"libcurl",1) AND 0þ                  TEST.MSG=CMND.RESULTþ                  TEST.STATUS=1þ               CASE OCONV(PLATFORM,"MCU")="WINDOWS"þ                  TEST.MSG=CMND.RESULTþ                  CURLLLOCATION=""þ                  TEST.STATUS=2þ               CASE 1þ                  TEST.STATUS=0þ                  TEST.MSG=CMNDþ                  CURL.LOCATION=""þþ            END CASEþþ            CONVERT CHAR(13):CHAR(10) TO '' IN TEST.MSGþ            GOSUB end.testþ         ENDþþþ         IF TEST.STATUS=2 THENþ            CURLLOCATION="c:\progra~1\git\mingw64\bin\curl.exe"þþ            TEST="curl via git"; GOSUB start.testþ            CMND=CURLLOCATION:' -V'þþ            CALL @WOBJ.RTNE(COBJ,"FROMSTRING","","{}","",RERR)þ            CALL @WOBJ.RTNE(COBJ,"SET","command",CMND,"",RERR)þ            CALL MVDBTOOLKIT.WEXECUTE(COBJ)þ            CALL @WOBJ.RTNE(COBJ,"GET","result.result",CMND.RESULT,"",RERR)þþ            BEGIN CASEþ               CASE INDEX(CMND.RESULT,"libcurl",1) AND 0þ                  TEST.MSG=CMND.RESULTþ                  TEST.STATUS=1þ               CASE 1þ                  TEST.STATUS=0þ                  TEST.MSG=CMNDþ                  CURL.LOCATION=""þþ            END CASEþþ            CONVERT CHAR(13):CHAR(10) TO '' IN TEST.MSGþ            GOSUB end.testþ         ENDþþ         IF CURLLOCATION # "" THENþ            CALL @WOBJ.RTNE(PLATFORM.OBJ,"SET","curllocation",CURLLOCATION,"",RERR)þ         ENDþþ      ENDþþþ      CALL @WOBJ.RTNE(PLATFORM.OBJ,"TOSTRING","",PLATFORM.JSON,"PRETTIFY",RERR)þ      CONVERT CHAR(13) TO @AM IN PLATFORM.JSONþ      CONVERT CHAR(10) TO '' IN PLATFORM.JSONþþ      WRITE PLATFORM.JSON ON F.CONFIG, "MV.PLATFORM.JSON"þþ      STOPþ      *þ      RETURNþ      *þprocess.error: *þ      IF RERR<1> THENþ         TEST.STATUS=-1þ         TEST.MSG=RERR<1>þ      ENDþ      RETURNþ      *þ      *þstart.test: *þ      TEST.STATUS=0þ      TEST.MSG="Success"þ      PRINT "":TEST[1,15]"L(#15)":þ      RETURNþ      *þend.test: *þ      PRINT "  ":TEST.MSG[1,50]"L(#50)":þ      PRINT " ":þ      PRE=''; AFT=''þ      BEGIN CASEþ         CASE TEST.STATUS=2; ERROR="Warning"; PRE=''; AFT=''þ         CASE TEST.STATUS; ERROR="Passed"þ         CASE 1; ERROR="Failed"; PRE=@(-13); AFT=@(-14)þ      END CASEþ      PRINT PRE:"[":þ      PRINT ERROR"L(#7)":þ      PRINT "]":AFTþ      RETURN0000F0MVDBTOOLKIT.USER.INFO.PLATFORMþ0c2* INCLUDEþþUSERINFO<1>=@LOGNAME;          * User NameþUSERINFO<2>=@LOGNAME;          * O/S User NameþUSERINFO<3>=@WHO;              * AccountþUSERINFO<4>=@USERNO;           * Port NumberþUSERINFO<5>=@PATHþþ0000F1MVDBTOOLKIT.USER.INFO.TESTþ0c2CALL MVDBTOOLKIT.USER.INFO(USERINFO,'')þþPRINT 'USER       = ':USERINFO<1>þPRINT 'o/s user   = ':USERINFO<2>þPRINT 'Account    = ':USERINFO<3>þPRINT 'Port       = ':USERINFO<4>þPRINT 'Path       = ':USERINFO<5>þ000EE2MVDBTOOLKIT.WEXECUTEþ0c2      SUBROUTINE MVDBTOOLKIT.WEXECUTE(EOBJ)þ      þ      INCLUDE MVDBTOOLKIT.WEXECUTE.INCLUDEþ þ      **********************************************************************þ      *þ      * Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: June 12, 2018þ      * Description: Execute libraryþ      *þ      **********************************************************************þ      * Change Logþ      *þ      * 1/6/2021 pap MVConnect 2.0þ      *þ      * EOBJþ      * { "command":"COMMAND TO USE",þ      *    "directory":"OPTIONAL DIRECTORY TO RUN IN",þ      *    "debug":"YES OR NO",þ      *    "docapture":"YES OR NO, DEFAULT YES",þ      *    "returning":"YES OR NO, DEFAULT YES",þ      *    "rtndata":"YES OR NO, DEFAULT NO",þ      *    "passlist":"ACTUAL PASSLIST"þ      *    "data": ["ARRAY OF DATA STATEMENTS"],þ      *    "result: {wþ      *                "result":"RESULT IF CAPTURED",þ      *                "rtndata":"RESULT OF RTNDATA",þ      *                "returning":"RESULT OF RETURNING",þ      *                "debug":"DEBUG INFORMATION IF TURNED ON"þ      *    }þ      *    }þ      þ      INCLUDE MVDBTOOLKIT.WOBJ.CHOOSE.WOBJþþ      * With native objects we cannot do this.  We will needþ      * a platform specific way of recognizing this.þ      * Perhaps changes itself to WOBJ?þþ      IF ''="NEW" THENþ         * CREATE A NEW OBJECT AND RETURN ITþ         EJSON=\{ "command":"",\þ         EJSON:=\ "directory":"",\þ         EJSON:=\ "debug":"NO",\þ         EJSON:=\ "returning":"YES",\þ         EJSON:=\ "rtndata":"YES",\þ         EJSON:=\ "passlist":"",\þ         EJSON:=\ "data: []"\þ         EJSON:=\}\þþ         CALL @WOBJ.RTNE(EOBJ,"FROMSTRING","",EJSON,"",RERR)þ         RETURNþ      ENDþþ      CALL @WOBJ.RTNE(EOBJ,"GET","command"      ,EXECUTE.COMMAND        ,"",RERR)þ      CALL @WOBJ.RTNE(EOBJ,"GET","directory"    ,EXECUTE.DIRECTORY      ,"",RERR)þ      CALL @WOBJ.RTNE(EOBJ,"GET","docapture"    ,EXECUTE.DOCAPTURE      ,"",RERR)þ      CALL @WOBJ.RTNE(EOBJ,"GET","returning"    ,EXECUTE.RETURNING      ,"",RERR)þ      CALL @WOBJ.RTNE(EOBJ,"GET","rtndata"      ,EXECUTE.RTNDATA        ,"",RERR)þ      CALL @WOBJ.RTNE(EOBJ,"GET","passlist"     ,EXECUTE.PASSLIST       ,"",RERR)þ      CALL @WOBJ.RTNE(EOBJ,"GET","debug"        ,EXECUTE.DEBUG          ,"",RERR)þ      IF EXECUTE.DEBUG = "" THENþ         CALL @WOBJ.RTNE(EOBJ,"GET","DEBUG",EXECUTE.DEBUG,"",RERR)þ      ENDþþ      IF OCONV(EXECUTE.DEBUG[1,1],"MCU") = "Y" OR EXECUTE.DEBUG="1" THEN EXECUTE.DEBUG=1 ELSE EXECUTE.DEBUG=0þþ      IF EXECUTE.DEBUG THENþ         *CRT "EXECUTE.COMMAND: ":EXECUTE.COMMANDþ         *CRT "DIRECTORY      : ":EXECUTE.DIRECTORYþ         *CRT "OCAPTURE       : ":EXECUTE.OCAPTUREþ         *CRT "RETURNING      : ":EXECUTE.RETURNINGþ      ENDþþ      CALL @WOBJ.RTNE(EOBJ,"TOSTRING","",TEST.JSON,"",RERR)þþþ      * ERROR HANDLING TODOþþ      CALL @WOBJ.RTNE(EOBJ,"SET.OBJECT","result","{}","",RERR)þþ      CALL MVDBTOOLKIT.WPLATFORM(PLATFORMOBJ)þþ      CALL @WOBJ.RTNE(PLATFORMOBJ,"GET","mvtype",MV.TYPE,"",RERR)þþ      BEGIN CASEþ         CASE MV.TYPE='D3'þ            CALL MVDBTOOLKIT.WEXECUTE.D3(EOBJ)þ         CASE MV.TYPE='UNIDATA'þ            CALL MVDBTOOLKIT.WEXECUTE.UNIDATA(EOBJ)þ         CASE MV.TYPE="QM"þ            CALL MVDBTOOLKIT.WEXECUTE.QM(EOBJ)þ         CASE MV.TYPE="JBASE"þ            CALL MVDBTOOLKIT.WEXECUTE.JBASE(EOBJ)þ         CASE MV.TYPE="UNIVERSE"þ            CALL MVDBTOOLKIT.WEXECUTE.UNIVERSE(EOBJ)þ         CASE 1þ            CALL @WOBJ.RTNE(EOBJ,"SET","result.error","Invalid mvplatform=":MV.TYPE,"",RERR)þ      END CASEþ      *þ      *EXECUTE CHAR(255):'k':CMND CAPTURING RESULTþ      *CONVERT CHAR(0) TO '' IN RESULTþ      *CONVERT CHAR(255) TO '' IN RESULTþ      RETURNþ00049CMVDBTOOLKIT.WPLATFORM.SAVEþ0c2      SUBROUTINE MVDBTOOLKIT.WPLATFORM.SAVE(PLATFORMOBJ)þ      **********************************************************************þ      *þ      * Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: June 12, 2018þ      * Description: WPLATFORM OBJ Saving functionþ      *þ      **********************************************************************þ      * Change Logþ      *þ      * 1/6/2021 pap MVConnect 2.0þ      **********************************************************************þ      þ      *þ      * PLATFORMOBJþ      *þ      * {þ      *   "platform":" WINDOWS OR LINUX",þ      *   "mvtype"  :" JBASE, D3, UNIDATA, UNIVERSE, OPENQM",þ      *   "tmpdir"  :"tmp dir"þ      * }þþ      * nEW lINEþþ      INCLUDE MVDBTOOLKIT.WOBJ.CHOOSE.WOBJþ      þ      OPEN "MVDB.CONTROL" TO F.MVDB.CONTROL ELSEþ         PRINT "NO MVDB.CONTROL"þ         STOPþ      ENDþþ      CALL @WOBJ.RTNE(PLATFORMOBJ,"TOJSON","",OUT.JSON,"PRETTIFY",RERR)þ      þ      CALL MVDBTOOLKIT.SWAP(OUT.JSON,CHAR(13):CHAR(10),@AM)þ      þ      WRITE OUT.JSON ON F.MVDB.CONTROL, "MV.PLATFORM.JSON"þþ      RETURN00012BMVDB.THEMESþ0c0000045Theme 2þ0c2theme2.cssþ#004489þ#e1e1d6þ#d3d9dfþ#989898þ#565656þ#dbdbce000045Theme 3þ0c2theme3.cssþ#557260þ#6A8B92þ#8A9875þ#34626Bþ#eaeeeaþ#3291b100003DTheme 1þ0c2theme1.cssþ#2d3956þ#455372þ#616a7fþ#e7e7e7þ#e0e9e900003DTheme 4þ0c2theme4.cssþ#77bed2þ#d5e1ddþ#999999þ#747e80þ#333333000269WDB.RESOURCEþ0c0000036RSS.MAINTþ0c2PþRSS MaintenanceþMVDB.INITþRSS.MAINTþ1þ1000033MVPKG.MAINþ0c2PþMV PackageþMVDB.INITþMVPKG.MAINþ1þ000003FMVDB.WEB.EDþ0c2PþMV Dashboard EditorþMVDB.INITþMVDB.WEB.EDþ1þ1þ000043MVDB.ADMINþ0c2PþMV Dashboard AdministratorþMVDB.INITþMVDB.ADMINþ1þ100002DRSS.MAINþ0c2PþRSS FeedþMVDB.INITþRSS.MAINþ1þ1000047CONFIGþ0c2CþDEFAULT_HANDLERýDBCþDEFAULT_RESOURCEýMVDB.MAINþAPIKEYý1234500003BAPI*WRESTTESTþ0c2PþSample REST testþWRESTTESTþWRESTTESTþ1þ100003EMVDB.MAINþ0c2PþMV Dashboard ControllerþMVDB.INITþMVDB.MAINþ1þ100004BAPI*REQUESTþ0c2PþRequest program for general end point þREQUESTþREQUESTþ1þ1000120DICT_MVDB.DEFSþ0c0000022TEMPLATEþ0c1Aþ1þTEMPLATEþþþþþþLþ15000022DISPLAYSþ0c1Aþ2þDISPLAYSþþþþþþLþ30000024DISP.AREAþ0c1Aþ3þDISP AREAþþþþþþLþ10000027DISP.ORDERþ0c1Aþ4þDISP ORDERþþþþþþþLþ1000001CUSERSþ0c1Aþ5þUSERSþþþþþþLþ2000001ADESCþ0c1Aþ6þDESCþþþþþþLþ4000001FDB.SORTþ0c1Aþ8þDB.SORTþþþþþþRþ70046DBWBPDþ0c0000151FI.MVDB.DEFSþ0c2DIM DB.ITEM(30)þ*þEQU DB.TEMPLATE         TO DB.ITEM(1)þEQU DB.WIDGETS          TO DB.ITEM(2)þEQU DB.WIDGET.AREA      TO DB.ITEM(3)þEQU DB.WIDGET.ORDER     TO DB.ITEM(4)þEQU DB.USERS.ALLOWED    TO DB.ITEM(5)þEQU DB.DESC             TO DB.ITEM(6)þEQU DB.THEME            TO DB.ITEM(7)þEQU DB.SORT             TO DB.ITEM(8)00012EFI.MVDB.USERSþ0c2DIM USER.ITEM(20)þ*þEQU USER.PASSWORD     TO USER.ITEM(1)þEQU USER.DEFAULT.DB   TO USER.ITEM(2)þEQU USER.NAME         TO USER.ITEM(3)þEQU USER.LAST.LOGIN   TO USER.ITEM(4)þEQU USER.EMAIL        TO USER.ITEM(5)þEQU USER.ROLE         TO USER.ITEM(6)þEQU USER.ALT.LOGO     TO USER.ITEM(7)000100FI.MVDB.WIDGET.TYPESþ0c2DIM WIDGET.TYPES(10)þ*þEQU WT$TYPE     TO WIDGET.TYPES(1)þEQU WT$SWF      TO WIDGET.TYPES(2)þEQU WT$HANDLER  TO WIDGET.TYPES(3)þEQU WT$ICON     TO WIDGET.TYPES(4)þEQU WT$GROUP    TO WIDGET.TYPES(5)þEQU WT$DESC     TO WIDGET.TYPES(6)000070FI.MVDB.WIDGETSþ0c2DIM WIDGET.ITEM(20)þ*þEQU WIDGET.SUB    TO WIDGET.ITEM(1)þEQU WIDGET.USERS  TO WIDGET.ITEM(2)000166FI.WDB.RESOURCEþ0c2DIM RSRC.ITEM(20)þ*þEQU RSRC.TYPE           TO RSRC.ITEM(1)þEQU RSRC.DESCRIPTION    TO RSRC.ITEM(2)þEQU RSRC.CONTROLLER     TO RSRC.ITEM(3)þEQU RSRC.PROGRAM        TO RSRC.ITEM(4)þEQU RSRC.PARSE.CGI      TO RSRC.ITEM(5)þEQU RSRC.ENABLED        TO RSRC.ITEM(6)þEQU RSRC.DEBUG.MODE     TO RSRC.ITEM(7)þEQU RSRC.ACCOUNT        TO RSRC.ITEM(8)000484FI.WDB.DEBUGþ0c2*þ* WDB.DEBUG record layoutþ*þEQU WDBG_DATE                TO 1þEQU WDBG_TIME                TO 2þEQU WDBG_DURATION            TO 3þEQU WDBG_PORT                TO 4þEQU WDBG_HANDLER             TO 5þEQU WDBG_RESOURCE            TO 6þEQU WDBG_CONTROLLER          TO 7þEQU WDBG_PROGRAM             TO 8þEQU WDBG_REQUEST_ID          TO 9þEQU WDBG_REQUEST             TO 10þEQU WDBG_METHOD              TO 11þEQU WDBG_PATH                TO 12þEQU WDBG_REMOTE_ADDR         TO 13þEQU WDBG_STATUS              TO 14þEQU WDBG_HEADER_VARS         TO 15þEQU WDBG_HEADER_VALS         TO 16þEQU WDBG_CGI_VARS            TO 17þEQU WDBG_CGI_VALS            TO 18þEQU WDBG_BODY                TO 19þEQU WDBG_RESPONSE_VARS       TO 20þEQU WDBG_RESPONSE_VALS       TO 21þEQU WDBG_RESPONSE_CONTENT    TO 22þEQU WDBG_RESERVED1           TO 23þEQU WDBG_RESERVED2           TO 24þEQU WDBG_SESSION_ID          TO 25þEQU WDBG_SESSION_VARS        TO 26þEQU WDBG_SESSION_VALS        TO 27þEQU WDBG_SESSION_DATE        TO 28þEQU WDBG_SESSION_TIME        TO 29þEQU WDBG_WARNING             TO 30þEQU WDBG_ERROR               TO 31þEQU WDBG_LINT                TO 3200323EMVDB.INCLUDEþ0c2*þCOMMON /MVDB/ GLOBAL.INFO(100), GLOBAL.USER.DATA(20), GLOBAL.TEMP.DATA(20), WIDGET.INFO(200), WIDGET.USER.DATA(100)þ*þ* GLOBAL.INFO equates. GLOBAL.INFO is a place for variables that are þ* globally accessible to all view subroutines. This information is notþ* written to disk - it is valid only for the duration of the execution.þ*þEQU G$USERID            TO GLOBAL.INFO(1) ;* UserID currently logged inþEQU G$CURRENT.DB        TO GLOBAL.INFO(2) ;* Current dashboard nameþEQU G$LOGIN.DATE        TO GLOBAL.INFO(3) ;* Date user logged in (from session)þEQU G$LOGIN.TIME        TO GLOBAL.INFO(4) ;* Time user logged in (from session)þEQU G$WIDGET.NAME       TO GLOBAL.INFO(5) ;* Current view being executedþEQU G$WIDGET.SUB        TO GLOBAL.INFO(6) ;* Current subruotine being calledþEQU G$WIDGET.NAME.LIST  TO GLOBAL.INFO(7) ;* List of views called/to be calledþEQU G$WIDGET.SUB.LIST   TO GLOBAL.INFO(8) ;* w/ G$WIDGET.NAME.LISTþEQU G$WIDGET.CALL.TIME  TO GLOBAL.INFO(9) ;* w/ G$WIDGET.NAME.LIST (timedate stamp)þEQU G$WIDGET.CALL.DUR   TO GLOBAL.INFO(10) ;* w/ G$WIDGET.NAME.LIST (duration in MS)þEQU G$QUERYMODE         TO GLOBAL.INFO(11) ;* Used to query subroutines without running themþEQU G$SUBMITTED         TO GLOBAL.INFO(12) ;* 1=User clicked submit on input area of this widgetþEQU G$ADMIN.USER        TO GLOBAL.INFO(14) ;* 1=User as an admin; 0=User is not an adminþEQU G$LICENSE.COUNT     TO GLOBAL.INFO(15) ;* Count of licenses (concurrent users)þEQU G$EDITION           TO GLOBAL.INFO(16) ;* Edition NameþEQU G$SYSTEM.ID         TO GLOBAL.INFO(17) ;* System IDþ*þ* GLOBAL.INFO(90...100) reserved for internal use.þ*þEQU G$DRILLDOWN.MODE    TO GLOBAL.INFO(24)þEQU G$DD.REFERRER       TO GLOBAL.INFO(25)þEQU G$DD.FROM.DB        TO GLOBAL.INFO(26)þ*þ* GLOBAL.USER.DATA stores persistent variable data throughout the courseþ* of a dashboard user's login session. This allows for persistent sharingþ* of information between dashboard subroutines.þ*þ* GLOBAL.TEMP.DATA stores temporary variable data for the course of a singleþ* execution. Data is not stored with the session and is destoryed after eachþ* page load.þ*þ* WIDGET.INFO holds the information for a specific dashboard WIDGET.þ*þEQU W$TYPE           TO WIDGET.INFO(1)þEQU W$TITLE          TO WIDGET.INFO(2)þEQU W$LINK.LABEL     TO WIDGET.INFO(3)þEQU W$LINK.LOCATION  TO WIDGET.INFO(4)  ;* Quandrant(s) to show (1-4)þEQU W$LINK.UD.POS    TO WIDGET.INFO(5)  ;* WIDGET.USER.DATA(x)þEQU W$LINK.UD.VAL    TO WIDGET.INFO(6)  ;* ^^ = this_valueþEQU W$LINK.DD.WIDGET TO WIDGET.INFO(7)  ;* Drill-down widget nameþEQU W$LINK.DD.PARAMS TO WIDGET.INFO(8)  ;* Drill down params (UNUSED)þEQU W$LINK.URL       TO WIDGET.INFO(26) ;* Specific URL - UD/DD params ignoredþEQU W$LINK.URL.OPTS  TO WIDGET.INFO(27) ;* Specific URL - UD/DD params ignoredþEQU W$LINK.ICON      TO WIDGET.INFO(28) ;* Icon GIF name ("C" location only)þEQU W$LINK.ICON.TXT  TO WIDGET.INFO(29) ;* Hover text for imageþEQU W$WIDTH          TO WIDGET.INFO(9)  ;* 1, 2 or 3þEQU W$PRINTABLE      TO WIDGET.INFO(24) ;* 1=Add print function/icon to control barþEQU W$EXCELABLE        TO WIDGET.INFO(88) ;* 1=Add EXCEL function/icon to control barþEQU W$PDFABLE        TO WIDGET.INFO(87) ;* 1=Add PDF function/icon to control barþEQU W$HIDDEN         TO WIDGET.INFO(25) ;* 1=Do not display this widgetþ*þ* Pie chart equatesþ*þEQU W$PIE.LABELS     TO WIDGET.INFO(10)þEQU W$PIE.VALUES     TO WIDGET.INFO(11)þEQU W$PIE.COLORS     TO WIDGET.INFO(12) ;* #000000 - #FFFFFFþ* Below settings are Fusion Charts onlyþEQU W$PIE.CAPTION    TO WIDGET.INFO(14)þEQU W$PIE.VALUE.OPTS TO WIDGET.INFO(15)þ*þ* Bar chart equatesþ*þEQU W$BAR.LABELS      TO WIDGET.INFO(10) ;* Labels for each Series (AM)þEQU W$BAR.VALUES      TO WIDGET.INFO(11) ;* Values matrix (AM/VM)þEQU W$BAR.COLORS      TO WIDGET.INFO(12) ;* #000000 - #FFFFFFþEQU W$BAR.XLABELS     TO WIDGET.INFO(13) ;* Labels for each set (X Axis)þEQU W$BAR.XMEMO       TO WIDGET.INFO(14) ;* X-Axis TextþEQU W$BAR.YMEMO       TO WIDGET.INFO(15) ;* Y-Axis TextþEQU W$BAR.TYPE        TO WIDGET.INFO(16) ;* 'clustered', 'stacked', '100% stacked'þ* Below settings are Fusion Charts onlyþEQU W$BAR.TREND.BEG   TO WIDGET.INFO(17) ;* Trendline beginning valueþEQU W$BAR.TREND.END   TO WIDGET.INFO(18) ;* Trendline ending valueþEQU W$BAR.TREND.OPTS  TO WIDGET.INFO(19) ;* Options for the trendlineþEQU W$BAR.VALUE.OPTS  TO WIDGET.INFO(20)þEQU W$BAR.LABEL.OPTS  TO WIDGET.INFO(21)þEQU W$BAR.XLABEL.OPTS TO WIDGET.INFO(22)þEQU W$BAR.CAPTION     TO WIDGET.INFO(23)þ*þ* Table chart equtesþ*þEQU W$TABLE.COL.LABELS     TO WIDGET.INFO(10)þEQU W$TABLE.COL.JUST       TO WIDGET.INFO(11)þEQU W$TABLE.DATA           TO WIDGET.INFO(12)þEQU W$TABLE.TOTALS         TO WIDGET.INFO(13)þ*þ* Text display equatesþ*þEQU W$TEXT.DATA         TO WIDGET.INFO(10)þ*þEQU W$HTML.DATA         TO WIDGET.INFO(10) ;* HTML Blobþ*þ* Global display equatesþ*þEQU W$CHART.OPTIONS  TO WIDGET.INFO(30) ;* Fusion Charts OnlyþEQU W$CHART.HEIGHT   TO WIDGET.INFO(31) ;* Override (in pixels)þ*þ* WIDGET.USER.DATA holds widget-specific user information whichþ* is persistent through the user's session. Values can be set inþ* this by using the LINK.XXXX feature. This feature will create linksþ* on the widget display that, when clicked, will set values inþ* WIDGET.USER.DATA as perscribedþ*þEQU W$INPUT.PROMPT   TO WIDGET.INFO(32) ;* Prompt Text (AM)þEQU W$INPUT.TYPE     TO WIDGET.INFO(33) ;* TEXT or SELECT (AM)þEQU W$INPUT.SELOPTS  TO WIDGET.INFO(34) ;* Text Options for SELECT (AM)(VM)þEQU W$INPUT.SELVALS  TO WIDGET.INFO(35) ;* Select Values for SELECT (AM)(VM)þEQU W$INPUT.DEFAULT  TO WIDGET.INFO(36) ;* Default Value (AM)þEQU W$INPUT.UDPOS    TO WIDGET.INFO(37) ;* User Data Pisition to store answer (AM)þEQU W$INPUT.PARAMS   TO WIDGET.INFO(38) ;* Additonal HTML in <input> or <select> tag (AM)þEQU W$INPUT.BUTTON   TO WIDGET.INFO(39) ;* Button Label for Submit (AM)þ*þEQU W$MAP.IDS         TO WIDGET.INFO(40) ;* ID for associated value. Ex. USA Map, this is a state Abbr.þEQU W$MAP.VALUES      TO WIDGET.INFO(41) ;* Value associtated with the ID (map segment)þEQU W$MAP.VALUE.OPTS  TO WIDGET.INFO(42) ;* Optional parameters to be inserted into the <entity> tag.þEQU W$MAP.RANGE.NAME  TO WIDGET.INFO(43) ;* Display Name of the range/group (VM)þEQU W$MAP.RANGE.LOW   TO WIDGET.INFO(44) ;* Range low limit (VM)þEQU W$MAP.RANGE.HIGH  TO WIDGET.INFO(45) ;* Range high limit (VM)þEQU W$MAP.RANGE.COLOR TO WIDGET.INFO(46) ;* Range color (optional override)þEQU W$MAP.RANGE.OPTS  TO WIDGET.INFO(47) ;* optional parameters to be inserted into the <color> tagþ*þ* The following value is only relevant for map type USA - when the W$MAP.IDS are state abbreviations.þ* For each W$MAP.IDS entry, this value can be set to allow drill-down for this state. When used,þ* it will reload the same widget, providing it with the drill-down state info in WIDGET.USER.INFO(1).þ* The use of this feature precludes the use of the W$MAP.VALUE.LINK feature below.þ*þ* See also the FusionWidgets drill-down feature described later. This can be used to drill-down to aþ* specific widget from a map position when the map drilldown features described here are NOT used.þ*þEQU W$MAP.VALUE.DD    TO WIDGET.INFO(48) ;* "1"=Enable Drill-Down for this State (from USA Map). If used, þ*                                           WIDGET.USER.INFO will contain the state map info:þ*                                           (1) = State Code (2-character)þ*                                           (2) = State Map Name (for use with MVDB.MAP.DATA)þ*þEQU W$MAP.VALUE.LINK  TO WIDGET.INFO(49) ;* Link URL (Ignored if Drill-Down state is used)þEQU W$MAP.LINK.MODE   TO WIDGET.INFO(50) ;* "N" = New Window, Blank = This Windowþ*þ* Fusion Widgetsþ*þEQU W$FW.CAPTION          TO WIDGET.INFO(51) ;* Widget captionþEQU W$FW.SUBCAPTION       TO WIDGET.INFO(52) ;* SubcaptionþEQU W$FW.LABELS           TO WIDGET.INFO(53) ;* (VM) Labels for each sectionþEQU W$FW.VALUES           TO WIDGET.INFO(54) ;* (VM) Values for each sectionþEQU W$FW.VALUE.OPTS       TO WIDGET.INFO(55) ;* (VM) XML attributes to be included in the <set> tagþEQU W$FW.COLORS           TO WIDGET.INFO(56) ;* (VM) Alternate array of colors to useþEQU W$FW.CHART.PALETTE    TO WIDGET.INFO(57) ;* 1-5 - Selects color theme for Spark Charts, Bullet Charts þ*þ* Fusion Widgets - Spark Chartsþ*þEQU W$FW.SPARK.TREND.BEG  TO WIDGET.INFO(58) ;* Trendline begin valueþEQU W$FW.SPARK.TREND.END  TO WIDGET.INFO(59) ;* Trendline end valueþEQU W$FW.SPARK.TREND.OPTS TO WIDGET.INFO(60) ;* Trendline optionsþ*þ* Linear charts (Bullet Charts, Guages)þ*þEQU W$FW.LOWER.LIMIT      TO WIDGET.INFO(61)þEQU W$FW.UPPER.LIMIT      TO WIDGET.INFO(62)þEQU W$FW.COLOR.RANGE      TO WIDGET.INFO(63) ;* <1> Range lower limitþ*                                               <2> Range upper limitþ*                                               <3> Range Color (This seems to be ignored on bullet charts)þ*                                               <4> Range options (attributes to appear in <color> tagþEQU W$FW.METER.VALUE       TO WIDGET.INFO(64) ;* The numeric value of the meter guageþEQU W$FW.METER.VALUE.OPTS  TO WIDGET.INFO(65) ;* Optional attributes to appear in the <value> tagþEQU W$FW.METER.TARGET      TO WIDGET.INFO(66) ;* Target value for the meter (where appropriate) (Bullet)þEQU W$FW.METER.TARGET.OPTS TO WIDGET.INFO(67) ;* Option attributes to appear in the <target> tagþ*þEQU W$FW.NUMBER.PREFIX    TO WIDGET.INFO(68) ;* Such as "$"þEQU W$FW.NUMBER.SUFFIX    TO WIDGET.INFO(69) ;* Such as "K" or "MM"þEQU W$FW.TICKMARKS        TO WIDGET.INFO(70) ;* Tickmark Properties for Bullets, Gaugesþ*                                               <1> 1 or 0 ; Show Tick Marks (1 = default)þ*                                               <2> 1 or 0 ; Show Tick Values next to the marks (1 = default)þ*                                               <3> A or B ; Show Above or Below graph (B = default)þ*                                               <4> Number of major tickmarks (default is calculated)þ*                                               <5> Number of minor tickmarks between major ones (default is none)þ*þEQU W$FW.LOWER.LIMIT.LABEL  TO WIDGET.INFO(71) ;* For gauges, these are the labels asssociated with theþEQU W$FW.UPPER.LIMIT.LABEL  TO WIDGET.INFO(72) ;* lower and upper limitsþEQU W$FW.DIAL.VALUES        TO WIDGET.INFO(73) ;* (VM) value associated with each dial on the gaugeþEQU W$FW.DIAL.OPTS          TO WIDGET.INFO(74) ;* Optional atributes to appear in the <dial> tagþEQU W$FW.TRENDPOINT.VALUES  TO WIDGET.INFO(75) ;* (VM) Trendpoints on gaugesþ*                                               * Optionally, <2> may be used to specify an ending valueþ*                                               * to plot an arc on a gauge between <1,X> and <2,X>þEQU W$FW.TRENDPOINT.LABELS  TO WIDGET.INFO(76) ;* (VM) Associated trendpoint label textþEQU W$FW.TRENDPOINT.OPTS    TO WIDGET.INFO(77) ;* Optional attributes to appear in the <point> tagþ*þEQU W$FW.THERMOMETER.COLOR  TO WIDGET.INFO(78) ;* Fill color for Thermometer and Cylinder chartsþ*þ* The values below allow you to set up drill-down parameters for most FusionWidgets and FusionChartsþ* values. These values correspond with W$FW.VALUES, W$FW.METER.VALUE, W$FW.DIAL.VALUES, W$PIE.VALUES,þ* W$BAR.VALUES and also with W$FW.MAP.IDS when NOT using the built-in drill-down facilities in theþ* USAMAP type. It may be used when a state map is being created.þ* þEQU W$FW.DD.UD.POS          TO WIDGET.INFO(79) ;* WIDGET.USER.DATA(x) location to store the user-defined valueþEQU W$FW.DD.UD.VAL          TO WIDGET.INFO(80) ;* ^^ = this_value - gets stored in WIDGET.USER.DATA(x) positionþEQU W$FW.DD.WIDGET          TO WIDGET.INFO(81) ;* Drill-down widget name to be invokedþEQU W$FW.DD.PARAMS          TO WIDGET.INFO(82) ;* Drill down params (UNUSED)þ*þEQU W$FW.BC.PLOT.COLOR      TO WIDGET.INFO(83) ;* Plot color of bullet-chart plot lineþEQU W$FW.BC.TARGET.COLOR    TO WIDGET.INFO(84) ;* Color of bullet-chart target lineþEQU W$MAP.VALUE.TOOLTEXT    TO WIDGET.INFO(85) ;* toolText value for mapþEQU W$INPUT.PROMPT.PARAMS   TO WIDGET.INFO(86) ;* Prompt text styling options. Goes into label tag.þ*þ* Color Namesþ*þEQU COLOR$RED      TO "#FF0000"þEQU COLOR$MAROON   TO "#800000"þEQU COLOR$FUCHSIA  TO "#FF00FF"þEQU COLOR$MAGENTA  TO "#FF00FF"þEQU COLOR$ORANGE   TO "#FFA500"þEQU COLOR$YELLOW   TO "#FFFF00"þEQU COLOR$LIME     TO "#00FF00"þEQU COLOR$GREEN    TO "#008000"þEQU COLOR$OLIVE    TO "#808000"þEQU COLOR$CYAN     TO "#00FFFF"þEQU COLOR$AQUA     TO "#00FFFF"þEQU COLOR$TEAL     TO "#008080"þEQU COLOR$BLUE     TO "#0000FF"þEQU COLOR$NAVY     TO "#000080"þEQU COLOR$PURPLE   TO "#800080"þEQU COLOR$BLACK    TO "#000000"þEQU COLOR$SILVER   TO "#C0C0C0"þEQU COLOR$GRAY     TO "#808080"þEQU COLOR$GREY     TO "#808080"þEQU COLOR$WHITE    TO "#FFFFFF"000014SOURCE.VIEW.ICONþ0c20005EBWWW.INCLUDEþ0c2*þ* Standard web includeþ*þþCOMMON /WWW/ WWW.INFO(50), F.WEB.SESSIONþþEQU SESSION$ID               TO WWW.INFO(1)þEQU SESSION$CONTENT.TYPE     TO WWW.INFO(2)þEQU SESSION$CONTENT.SENT     TO WWW.INFO(3)þEQU SESSION$OUTBUF           TO WWW.INFO(4)þEQU SESSION$HEADERS          TO WWW.INFO(5)þEQU SESSION$COOKIES          TO WWW.INFO(6)þEQU SESSION$OUTBUF.SIZE      TO WWW.INFO(7)þEQU SESSION$OUTBUF.FLAG      TO WWW.INFO(8)þEQU SESSION$TIME.OUT         TO WWW.INFO(9)þEQU SESSION$GLOBAL.DEBUG     TO WWW.INFO(10)þEQU SESSION$STATUS.CODE      TO WWW.INFO(11)þEQU SESSION$WDEBUG.MODE      TO WWW.INFO(12)þEQU CONFIG$WDB.RESOURCE      TO WWW.INFO(15)þEQU CGI$VARS                 TO WWW.INFO(25)þEQU CGI$VALS                 TO WWW.INFO(26)þEQU CGI$CVARS                TO WWW.INFO(27)þEQU CGI$CVALS                TO WWW.INFO(28)þEQU CGI$SERVER.NAME          TO WWW.INFO(29)þEQU CGI$PATH                 TO WWW.INFO(30)þEQU CGI$SERVER.PORT          TO WWW.INFO(31)þEQU CGI$BODY                 TO WWW.INFO(32)þEQU CGI$HEADERVALS           TO WWW.INFO(33)þEQU CGI$HEADERVARS           TO WWW.INFO(34)þEQU CGI$RESTPARAMS           TO WWW.INFO(35)þEQU CGI$CONFIG               TO WWW.INFO(36)þEQU F.WEB.FORMS              TO WWW.INFO(40)þEQU CGI$APPSVR.ID            TO WWW.INFO(45)þEQU CGI$RESERVED1            TO WWW.INFO(46)þEQU CGI$RESERVED2            TO WWW.INFO(47)þEQU CGI$RESERVED3            TO WWW.INFO(48)þEQU CGI$UNIQUE.ID            TO WWW.INFO(49)þEQU CGI$RESOURCE.NAME        TO WWW.INFO(50)000481WWW.INFOþ0c2*þ* Element index for standard web common /WWW/ WWW.INFO arrayþ*þEQU SESSION_ID               TO 1þEQU SESSION_CONTENT.TYPE     TO 2þEQU SESSION_CONTENT.SENT     TO 3þEQU SESSION_OUTBUF           TO 4þEQU SESSION_HEADERS          TO 5þEQU SESSION_COOKIES          TO 6þEQU SESSION_OUTBUF.SIZE      TO 7þEQU SESSION_OUTBUF.FLAG      TO 8þEQU SESSION_TIME.OUT         TO 9þEQU SESSION_GLOBAL.DEBUG     TO 10þEQU SESSION_STATUS.CODE      TO 11þEQU SESSION_WDEBUG_MODE      TO 12þEQU CONFIG_WDB.RESOURCE      TO 15þEQU CGI_VARS                 TO 25þEQU CGI_VALS                 TO 26þEQU CGI_CVARS                TO 27þEQU CGI_CVALS                TO 28 þEQU CGI_SERVER.NAME          TO 29þEQU CGI_PATH                 TO 30þEQU CGI_SERVER.PORT          TO 31þEQU CGI_BODY                 TO 32þEQU CGI_HEADERVALS           TO 33þEQU CGI_HEADERVARS           TO 34þEQU CGI_RESTPARAMS           TO 35þEQU CGI_CONFIG               TO 36þEQU CGI_APPSVR.ID            TO 45þEQU CGI_RESERVED1            TO 46þEQU CGI_RESERVED2            TO 47þEQU CGI_RESERVED3            TO 48þEQU CGI_UNIQUE.ID            TO 49þEQU CGI_RESOURCE.NAME        TO 500002CFUD.DICT.SALESþ0c0000033CLOSE.DATE.YMOþ0c0Aþ0þþþþþþA;1(DY):1(D2-)(G-1)þRþ10000028CLOSE.DATE.MMþ0c0Dþ1þDMþCLOSE MONTHþ8RþS00002CCLOSE.DATE.YMþ0c0Aþ0þþþþþþA;1(DY):1(DM)þRþ10000016BRANCHþ0c0Dþ13þþþ15LþS000016REGIONþ0c0Dþ14þþþ15LþS000018CNTþ0c0Aþ0þþþþþþF;C1þRþ5000018ATT10þ0c0Dþ10þMD2þþ10RþS00001BCLOSE.DATEþ0c0Dþ1þD2-þþ8RþS00003CCLOSE.DATE.YYYYþ0c0IþOCONV(ATT1,'D4-')[7,4]þþCLOSE YEARþ8LþS000018@IDþ0c0Dþ0þþSALESþ10LþSþ000016ATT8þ0c0Dþ8þMD2þþ10RþS000017REP.NAMEþ0c0Dþ5þþþ25LþS000015PIPEþ0c0Iþ"|"þþ|þ1LþS000016ATT9þ0c0Dþ9þMD2þþ10RþS000018ATT12þ0c0Dþ12þMD2þþ10RþS000012ATT1þ0c0Dþ1þþþ6RþS00001AEXT.COSTþ0c0Dþ9þMD2þþ10RþS00003BGROSS.PROFITþ0c0IþEXT.AMT - EXT.COSTþMD2þGROSS PROFITþ10RþS000023EXT.AMTþ0c0Dþ8þMD2þEXT.AMOUNTþ10RþS0000CDUD.DICT.APþ0c0000023DATE.PAIDþ0c0Dþ8þD2-þDate Paidþ8RþS000026INV.AMOUNTþ0c0Dþ6þMD2þInv.Amountþ13RþS000022DUE.DATEþ0c0Dþ20þD2-þDue.Dateþ8RþS000021BALANCEþ0c0Dþ50þMD2þBalanceþ13RþS000015PIPEþ0c0Iþ"|"þ þþ1LþS00023DUD.DICT.DASHBOARD.CLOSING.STATSþ0c0000026SALESMANþ0c0IþFIELD(@ID,'*',1)þþþ20LþS000024BRANCHþ0c0IþFIELD(@ID,'*',3)þþþ10LþS000023YYYYMMþ0c0IþFIELD(@ID,'*',2)þþþ6LþS000013IDþ0c0Iþ@IDþþþ10LþS000032GROSS.PROFITþ0c0IþAMOUNT - COST.OF.SALEþMD2þþ12RþS000026YYYYþ0c0IþFIELD(@ID,'*',2)[1,4]þþþ4RþS000015PIPEþ0c0Iþ"|"þ þþ1LþS000022YYYYMM*BRANCHþ0c0Iþ@IDþG1*2þþ10LþS000024REGIONþ0c0IþFIELD(@ID,'*',4)þþþ10LþS000018AMOUNTþ0c0Dþ1þMD2þþ12RþS00001ECOST.OF.SALEþ0c0Dþ2þMD2þþ12RþS000040REGION*YYYYMMþ0c0IþFIELD(@ID,"*",4):"*":FIELD(@ID,"*",2)þþþ10LþS000023SALESMAN*YYYYMMþ0c0Iþ@IDþG*2þþ20LþS0000CEDICT_WDB.LOGþ0c000001CDATEþ0c1Aþ2þDATEþþþþD2/þþRþ800001CDURATIONþ0c1Aþ5þMSþþþþþþRþ10000020PROGRAMþ0c1Aþ1þPROGRAMþþþþþþLþ30000020AGEþ0c1Aþ2þAGEþþþþþA;(D)-(2)þRþ8000028TIMEþ0c1Aþ3þTIMEþþþþMTSþA;(3)/"1000"þRþ8000136UD.DICT.ARþ0c0000028INVOICE.AMTþ0c0Dþ6þMD2þInvoice.Amtþ13RþS000022DUE.DATEþ0c0Dþ20þD2-þDue.Dateþ8RþS000021BALANCEþ0c0Dþ50þMD2þBalanceþ13RþS000026DATES.PAIDþ0c0Dþ8þD2-þCheckýDatesþ8RþS000017CUSTþ0c0Dþ1þþCustþ25LþS00001BBIG.CUSTþ0c0Dþ1þþCustþ40LþS000014PIPEþ0c0Iþ"|"þþþ1LþS000021CUST.NAMEþ0c0Dþ1þþCust.Nameþ25LþS000A49MV.INSTALL.CFþ0c000050DMVAPPS-PRE-SCRIPTþ0c0BASICTYPE "P"þCREATE-FILE DICT WDB.LOG 1þCREATE-FILE DICT WDB.DEBUG 1þCREATE-FILE DIR RSS.BPþCREATE-FILE RSS.FEEDS 1,1 11,1þCREATE-FILE MV.WEB.ED.ARCHIVE 3,1 301,1þCREATE-FILE MVDB.CONTROL 1,1 11,1þCREATE-FILE MVDB.DEFS 3,1 17,1þCREATE-FILE MVDB.SUB.TEMPLATES 1,1 17,1þCREATE-FILE DIR MVDB.SUBSþCREATE-FILE MVDB.WIDGET.TYPES 1,1 3,1þCREATE-FILE MVDB.WIDGETS 3,1 31,1þCREATE-FILE MVDB.MAP.DATA 3,1 181,1þCREATE-FILE MVDB.UDATA 3,1 101,1þCREATE-FILE MVDB.USERS 3,1 31,1þCREATE-FILE MVPC.CONTROL 1,1 3,1þCREATE-FILE DIR WBPDþCREATE-FILE DIR WDB.BPþCREATE-FILE WEB.FORMS 1,1 101,1þCREATE-FILE WDB.Q 3,1 31,1þCREATE-FILE WEB.SESSION 3,1 71,1þCREATE-FILE MVAPPS.INSTALLED 3,1 11,1þCREATE-FILE MVBP.FORMS 1,1 11,1þCREATE-FILE MVDB.THEMES 1,1 3,1þCREATE-FILE DIR MVBP.BPþCREATE-FILE MVDB.EMAILED.HTML 1,1 79,1þCREATE-FILE WDB.RESOURCE 1,1 3,1þCREATE-FILE DIR WREST.BPþCREATE-FILE DIR WOBJ.BPþCREATE-FILE DIR MVDBTOOLKIT.BPþCREATE-FILE DIR MVMAKE.BPþCREATE-FILE DASHBOARD.CLOSING.STATS 3,1 97,1þCREATE-FILE DASHBOARD.BALANCES 3,1 97,1þCREATE-FILE PORTAL.SALES 3,1 997,1þCREATE-FILE PORTAL.AR 3,1 997,1þCREATE-FILE PORTAL.AP 3,1 997,1þCREATE-FILE UD.DICT.DASHBOARD.CLOSING.STATS 1,1 7,1þCREATE-FILE UD.DICT.SALES 1,1 1,1þCREATE-FILE UD.DICT.AR 1,1 1,1þCREATE-FILE UD.DICT.AP 1,1 1,10004C7MVAPPS-POST-SCRIPTþ0c0DELETE VOC DOWNLOAD.XLS INIT.WWW MV.COMPILE MVAPPS.STATUS MVDB.ADMIN MVDB.MAIN MVDB.WEB.ED MVPKG.MAIN PACK-FILE RSS.MAIN RSS.MAINT WDB.INIT WDB.TEST WDB.VIEW XML.DATAþSELECT MVDB.SUBS NE "_]"ýBASIC MVDB.SUBSþSELECT MVDB.SUBS NE "_]"ýCATALOG MVDB.SUBS FORCE DIRECTþSELECT RSS.BP NE "_]"ýBASIC RSS.BPþSELECT RSS.BP NE "_]"ýCATALOG RSS.BP FORCE DIRECTþSELECT WDB.BP NE "_]"ýBASIC WDB.BPþSELECT WDB.BP NE "_]"ýCATALOG WDB.BP FORCE DIRECTþBASIC WDB.BP MVDB.DEBUG -DþCATALOG WDB.BP MVDB.DEBUG FORCE DIRECTþ* COMPILE WDB.BP APP.INSTALLER (OWþSELECT MVBP.BP NE "_]"ýBASIC MVBP.BPþSELECT MVBP.BP NE "_]"ýCATALOG MVBP.BP FORCE DIRECTþSELECT WOBJ.BP NE "_]"ýBASIC WOBJ.BP -I -Z2þSELECT WOBJ.BP NE "_]"ýCATALOG WOBJ.BP FORCE DIRECTþSELECT WREST.BP NE "_]"ýBASIC WREST.BP -I -Z2þSELECT WREST.BP NE "_]"ýCATALOG WREST.BP FORCE DIRECTþRUN WDB.BP USER.UPDATEþRUN MVDB.SUBS PURGE.NON.PLATFORM.WIDGETSþMV.WEB.ED.ARCHIVE|MVDB.DEFS|MVDB.MAP.DATA|MVDB.WIDGET.TYPES|MVDB.WIDGETS|RSS.FEEDS|WDB.DEBUG|WDB.LOGýRUN WDB.BP CONVERT.DICTSþSELECT MVDBTOOLKIT.BP NE "_]"ýBASIC MVDBTOOLKIT.BP -I -Z2þSELECT MVDBTOOLKIT.BP NE "_]"ýCATALOG MVDBTOOLKIT.BP FORCE DIRECTþRUN MVDBTOOLKIT.BP MVDBTOOLKIT.CONFIGþ!mkdir TMPþMVDBTOOLKIT.CONFIG000052PACKAGE.INFOþ0c0MultiValue Dashboard/Portal Reports/MVConnectþ2.0.10þdbþþþMVDBþ28000052EDICT_WDB.DEBUGþ0c000001CDATEþ0c1Aþ1þDATEþþþþD2/þþRþ8000019PORTþ0c1Aþ4þPORTþþþþþþRþ4000026REQUEST.IDþ0c1Aþ9þREQUEST IDþþþþþþLþ2500001BPATHþ0c1Aþ12þPATHþþþþþþLþ25000029REMOTE.ADDRþ0c1Aþ13þREMOTE ADDRþþþþþþLþ1400001DTYPEþ0c1Aþ0þTYPEþþþþþG0/1þLþ4000026CONTROLLERþ0c1Aþ7þCONTROLLERþþþþþþLþ12000033RESPONSE.CONTENTþ0c1Aþ22þRESPONSE CONTENTþþþþþþTþ6000002DSESSION.DATEþ0c1Aþ28þSESSION DATEþþþþD2/þþRþ800002BSESSION.VARSþ0c1Aþ26þSESSION VARSþþþþþþLþ1200002BSESSION.VALSþ0c1Aþ27þSESSION VALSþþþþþþLþ20000017DURþ0c1Aþ3þDURþþþþþþRþ7000019REQþ0c1Aþ10þREQþþþþþþLþ40000020AGEþ0c1Aþ1þAGEþþþþþA;(D)-(1)þRþ8000020PROGRAMþ0c1Aþ8þPROGRAMþþþþþþLþ2500001ESTATUSþ0c1Aþ14þSTATUSþþþþþþRþ600001BBODYþ0c1Aþ19þBODYþþþþþþTþ60000027SESSION.IDþ0c1Aþ25þSESSION IDþþþþþþLþ2500001BLINTþ0c1Aþ32þLINTþþþþþþTþ6000001CTIMEþ0c1Aþ2þTIMEþþþþMTSþþRþ8000020HANDLERþ0c1Aþ5þHANDLERþþþþþþLþ10000022RESOURCEþ0c1Aþ6þRESOURCEþþþþþþLþ1200001EMETHODþ0c1Aþ11þMETHODþþþþþþLþ6000029HEADER.VARSþ0c1Aþ15þHEADER VARSþþþþþþLþ12000029HEADER.VALSþ0c1Aþ16þHEADER VALSþþþþþþLþ20000023CGI.VARSþ0c1Aþ17þCGI VARSþþþþþþLþ12000023CGI.VALSþ0c1Aþ18þCGI VALSþþþþþþLþ2000002DRESPONSE.VARSþ0c1Aþ20þRESPONSE VARSþþþþþþLþ1200002DRESPONSE.VALSþ0c1Aþ21þRESPONSE VALSþþþþþþLþ2000002DSESSION.TIMEþ0c1Aþ29þSESSION TIMEþþþþMTSþþRþ8000021WARNINGþ0c1Aþ30þWARNINGþþþþþþTþ6000001DERRORþ0c1Aþ31þERRORþþþþþþTþ6001BD90WEB.FORMSþ0c0000C4DPORTAL.DASHBOARD.SALES.AR.APþ0c2  <br class="brClear" />þ  <div class="widget_content">þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<th width=38% align="left" bgcolor="red">Sales</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% bgcolor="white">&nbsp;</td>þ<td width=31% align="center">MTD ~1~</td>þ<td width=31% align="center">YTD ~2~</td>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% align="left"><a href="/dbc/MVDB.MAIN?dbname=PORTAL SALES REPORTS">Sales</a></td>þ<td width=31% align="right">~3~</td>þ<td width=31% align="right">~4~</td>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="0" cellspacing=".01%" cellpadding=".01%">þ<td width="100%">&nbsp;</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<th width=38% align="left" bgcolor="red"><font color="#FF0000">Financials</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="left"><a href="/dbc/MVDB.MAIN?dbname=DISPLAY PORTAL BALANCE PIE CHART&udview=DISPLAY PORTAL BALANCE PIE CHART">Balances as of ~15~</a></td><td width="25%" align="center">AR Balance</td><td width="25%" align="center">AR Balance %</td><td width="25%" align="center">AP Balance</td>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">Current</td><td width="25%" align="right">~30~</td><td width="25%" align="center">~31~</td><td width="25%" align="right">~32~</td>þ</table>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">1 - 30</td><td width="25%" align="right">~16~</td><td width="25%" align="center">~17~</td><td width="25%" align="right">~18~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">31 - 60</td><td width="25%" align="right">~19~</td><td width="25%" align="center">~20~</td><td width="25%" align="right">~21~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">61 - 90</td><td width="25%" align="right">~22~</td><td width="25%" align="center">~23~</td><td width="25%" align="right">~24~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">90+</td><td width="25%" align="right">~25~</td><td width="25%" align="center">~26~</td><td width="25%" align="right">~27~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">Total</td><td width="25%" align="right">~28~</td><td width="25%" align="center"></td><td width="25%" align="right">~29~</td>þ</table>þ<table width="100%" border="0" cellspacing=".01%" cellpadding=".01%">þ<td width="100%">&nbsp;</td>þ</table>þ</div>000200outerTrackWrapperþ0c2    <div id="outerTrackWrapper">þ		<div id="trackWrapper">þ			<div id="trackMsg" style="width: 165px; height: 34px; float: left;"><div id="dispRate">&nbsp;</div></div>þ			<div id="track1" style="width:200px; height:34px; float: right; margin: 0 10px 0 0; background: url(/db/images/trackSlider.png) 0px center no-repeat;">þ				<div id="handle1" style="width:12px; height:34px; margin: 6px 0 0 0; float: left;"><img src="/db/images/sliderHandle.png" alt="" /></div>þ			</div>þ		</div>þ	</div>0002E9ed_output.htmlþ0c2<div class="ed_error"><!-- HEADER --><!-- FOOTER --></div>þ<div id="compile_output" class="compile_output"><!-- COMPILE_OUTPUT --></div>þ<div id="compile_errline"><!-- COMPILE_ERRLINE --></div>þ<div id="last_compile"><!-- LAST_COMPILE --></div>þ<div id="ed_content"><!-- ED_CONTENT --></div>þ<div id="num_calls"><!-- NUM_OF_CALLS --></div>þ<div id="num_includes"><!-- NUM_OF_INCLUDES --></div>þ<div id="num_files"><!-- NUM_OF_FILES --></div>þ<div id="num_archives"><!-- NUM_OF_FILES --></div>þ<div id="calls_content"><!-- EA_CALLS_CONTENT --></div>þ<div id="includes_content"><!-- EA_INCLUDES_CONTENT --></div>þ<div id="files_content"><!-- EA_FILES_CONTENT --></div>þ<div id="archive_content"><!-- EA_ARCHIVE_CONTENT --></div>þ000253FCF_template.htmlþ0c2<!-- start FC script -->þ        <div id="<!-- chart_div_id -->">þ        </div>þ        <script type="text/javascript">þ        FusionCharts.ready(function () {þ            var myChart = new FusionCharts({þ              "type": "[FCF_MODULE]",þ              "renderAt": "<!-- chart_div_id -->",þ              "width": "<!-- chart_width -->",þ              "height": "<!-- chart_height -->",þ              "dataFormat": "xml",þ              "dataSource": "<!-- CHARTXML -->"þ            });þ          myChart.render();þ        });þ        </script>þ<!-- end of FC script -->000E8DPORTAL.DASHBOARDþ0c2  <br class="brClear" />þ  <div class="widget_content">þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<th width=38% align="left" bgcolor="red">Sales</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% bgcolor="white">&nbsp;</td>þ<td width=31% align="center">MTD ~1~</td>þ<td width=31% align="center">YTD ~2~</td>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% align="left"><a href="/dbc/MVDB.MAIN?dbname=PORTAL SALES REPORTS">Sales</a></td>þ<td width=31% align="right">~3~</td>þ<td width=31% align="right">~4~</td>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% align="left"><a href="/dbc/MVDB.MAIN?dbname=PORTAL SALES REPORTS">Gross Profit (GP$)</a></td>þ<td width=31% align="right">~5~</td>þ<td width=31% align="right">~6~</td>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% align="left"><a href="/dbc/MVDB.MAIN?dbname=PORTAL MARGINS&udview=Portal Margins">Margin (GP%)</a></td>þ<td width=31% align="right">~7~</td>þ<td width=31% align="right">~8~</td>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="0" cellspacing=".01%" cellpadding=".01%">þ<td width="100%">&nbsp;</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<th width=38% align="left" bgcolor="red"><font color="#FF0000">Financials</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="left"><a href="/dbc/MVDB.MAIN?dbname=DISPLAY PORTAL BALANCE PIE CHART&udview=DISPLAY PORTAL BALANCE PIE CHART">Balances as of ~15~</a></td><td width="25%" align="center">AR Balance</td><td width="25%" align="center">AR Balance %</td><td width="25%" align="center">AP Balance</td>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">Current</td><td width="25%" align="right">~30~</td><td width="25%" align="center">~31~</td><td width="25%" align="right">~32~</td>þ</table>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">1 - 30</td><td width="25%" align="right">~16~</td><td width="25%" align="center">~17~</td><td width="25%" align="right">~18~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">31 - 60</td><td width="25%" align="right">~19~</td><td width="25%" align="center">~20~</td><td width="25%" align="right">~21~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">61 - 90</td><td width="25%" align="right">~22~</td><td width="25%" align="center">~23~</td><td width="25%" align="right">~24~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">90+</td><td width="25%" align="right">~25~</td><td width="25%" align="center">~26~</td><td width="25%" align="right">~27~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">Total</td><td width="25%" align="right">~28~</td><td width="25%" align="center"></td><td width="25%" align="right">~29~</td>þ</table>þ<table width="100%" border="0" cellspacing=".01%" cellpadding=".01%">þ<td width="100%">&nbsp;</td>þ</table>þ</div>0010E6admin_template.htmlþ0c2<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">þ<head>þ	<meta http-equiv="Content-Type" content="text/html; charset=<!--CHARACTER_SET-->"/>þ	<script src="/db/javascripts/jquery-1.3.2.min.js" type="text/javascript" charset="utf-8"></script>	þ    <script src="/db/javascripts/jquery-ui-1.7.2.custom.min.js" type="text/javascript" charset="utf-8"></script>            	þ    <script src="/db/javascripts/jquery.form.js" type="text/javascript" charset="utf-8"></script>    	        þ	<script src="/db/javascripts/jquery.url.js" type="text/javascript" charset="utf-8"></script>þ	<script src="/db/javascripts/initAdminTemplate.js" type="text/javascript" charset="utf-8"></script>þ	<script src="/db/javascripts/sortable.js" type="text/javascript" charset="utf-8"></script>þ	<script src="/db/javascripts/tablesort.js" type="text/javascript" charset="utf-8"></script>þ		þ	<link rel="stylesheet" href="/db/css/reset-fonts-grids.css" type="text/css" charset="utf-8" />þ	<link rel="stylesheet" href="/db/css/application.css" type="text/css" charset="utf-8" />þ	<link rel="stylesheet" href="/db/css/ingrid.css" type="text/css" charset="utf-8" />þ    <link rel="StyleSheet" href="/db/css/jquery-ui.css" media="screen" type="text/css" />þ    <!--[if lte IE 7]><link href="/db/css/ie7.css" rel="stylesheet" type="text/css" media="screen" /><![endif]-->þ    <!-- SITE_THEME -->þ	þ	<title>MultiValue Dashboard Admin</title>þ	þ	<script type="text/javascript">þ	<!-- ADMIN_SCRIPTS -->þ	</script>þ</head>þ<body>þ<div id="header">þ<!-- HEADER -->þ</div>þþ	<div id="logo">þ    	<img src="<!-- SITE_LOGO -->" alt="MultiValue Dashboard">þ	</div>þ<div id="mainWrapper">þ<div id="main">þþ<!-- Add new user form -->þ<div id="new-user" title="New user" style="display:none;" >þ<form id="new-user-form" method="get" action="/dbc/MVDB.ADMIN">þ<div id="new-user-messages"></div>þ<table>þ<tbody><tr>þ <td align="right">User ID:</td>þ <td><input id="new-userid" type="text" value="" name="new_userid"/></td>þ</tr>þ<tr>þ <td align="right">Name:</td>þ <td><input id="username" type="text" value="" name="username"/></td>þ</tr>þ<tr id='default-dashboard'>þ <td align="right">Default Dashboard:</td>þ <td id="default-dashboard-container"><!-- default_dashboard --></td>þ <td/>þ</tr>þ<tr>þ <td align="right">Role:</td>þ <td>þ   <select id="user-role" name="user_role">þ      <option value="User">User</option>þ      <option value="Administrator">Administrator</option>þ   </select>þ </td>þ</tr>þ<tr>þ <td align="right">Optional Logo Path:</td>þ <td><input id="opt_logo_path" type="text" value="" name="opt_logo_path"/></td>þ</tr>þ<tr>þ <td align="right">Password:</td>þ <td><input id="user-password" type="password" value="" name="user_password"/></td>þ</tr>þ<tr>þ <td align="right">Confirm Password:</td>þ <td><input id="confirm-password" type="password" value="" name="confirm_password"/></td>þ</tr>þþ</tbody></table>þ<input type="hidden" value="save_user" name="action"/>þ</form>þ</div>þþ<!-- Add new widget form -->þ<div id="new-widget" title="New widget" style="display:none;" >þ<form id="new-widget-form" method="get" action="/dbc/MVDB.ADMIN">þ<div id="widget-messages"></div>þ<table>þ<tbody><tr>þ <td align="right">Widget Name: *</td>þ <td><input id="widget_id" type="text" value="" name="new_widgetid" /></td>þ</tr>þ<tr>þ <td align="right">Subroutine: *</td>þ <td><input id="widget_sub" type="text" value="" name="widget_sub" /><!-- edit_source_link --></td>þ</tr>þ<tr>þ <td align="right">Users:</td>þ <td><input id="widget_users" type="text" value="" name="widget_users" /><br/><font size="1">comma-separated</font></td>þ</tr>þ</tbody></table>þ<!--input type="submit" value="Delete Widget" name="delete_widget"/ -->þ<p>þ<input id="save_widgetid" type="hidden" value="" name="save_widgetid" />þ<input id="widget_action" type="hidden" value="save_widget" name="action" />þ<input id="save_widget" type="hidden" value="Save" name="save_widget" />þ</p>þ</form>þþ</div>þ<a href="edit-sub" id="edit-sub-link" target="_blank" style="display: none;">Edit subroutine</a>þ<!-- ADMIN_MAIN -->þ</div>þ</div>þþ<div id="footer">þ    <div id="signature">MultiValue Dashboard - Copyright &copy; 2020 <a href="http://http://www.zumasys.com/products/multivalue-dashboard">Zumasys</a>þ    </div>þ<!-- FOOTER -->þ</div>þ</body>þ</html>002E52PORTAL.REPORT.DOCUMENTATIONþ0c2<html>þþ<head>þ<meta http-equiv=Content-Type content="text/html; charset=windows-1252">þ<meta name=Generator content="Microsoft Word 15 (filtered)">þ<style>þ<!--þ /* Font Definitions */þ @font-faceþ	{font-family:Wingdings;þ	panose-1:5 0 0 0 0 0 0 0 0 0;}þ@font-faceþ	{font-family:"Cambria Math";þ	panose-1:2 4 5 3 5 4 6 3 2 4;}þ@font-faceþ	{font-family:Calibri;þ	panose-1:2 15 5 2 2 2 4 3 2 4;}þ /* Style Definitions */þ p.MsoNormal, li.MsoNormal, div.MsoNormalþ	{margin:0in;þ	margin-bottom:.0001pt;þ	font-size:11.0pt;þ	font-family:"Calibri",sans-serif;}þp.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraphþ	{margin-top:0in;þ	margin-right:0in;þ	margin-bottom:0in;þ	margin-left:.5in;þ	margin-bottom:.0001pt;þ	font-size:11.0pt;þ	font-family:"Calibri",sans-serif;}þ.MsoChpDefaultþ	{font-family:"Calibri",sans-serif;}þ.MsoPapDefaultþ	{margin-bottom:8.0pt;þ	line-height:107%;}þ@page WordSection1þ	{size:8.5in 11.0in;þ	margin:1.0in 1.0in 1.0in 1.0in;}þdiv.WordSection1þ	{page:WordSection1;}þ /* List Definitions */þ olþ	{margin-bottom:0in;}þulþ	{margin-bottom:0in;}þ-->þ</style>þþ</head>þþ<body lang=EN-US>þþ<div class=WordSection1>þþ<p class=MsoNormal><b><span style='font-size:14.0pt'>Portal Dashboard Reports</span></b></p>þþ<p class=MsoNormal>&nbsp;</p>þþ<p class=MsoNormal><b><span style='font-size:12.0pt'>High level dashboardþsummarizing Sales, Gross Profit, Margin, AR, and AP</span></b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Month to Date and Year to Date numbers</p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>AR Balance amounts and percentages for the aging periods of current,þ1-30, 31-60, 61-90, and 90+</p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>AP Balance amounts for the aging periods of current, 1-30, 31-60,þ61-90, and 90+</p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Drilldown functionality to see detail for Sales, Gross Profit,þMargin, and aging for AR and AP</p>þþ<p class=MsoNormal><b>&nbsp;</b></p>þþ<p class=MsoNormal><b><span style='font-size:12.0pt'>Sales, Gross Profit, andþMargin Reports:</span></b></p>þþ<p class=MsoNormal><b><span style='font-size:12.0pt'>&nbsp;</span></b></p>þþ<p class=MsoNormal><b>MTD Sales</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Bar chart showing daily activity broken out by Sales and GP</p>þþ<p class=MsoNormal><b>YTD Sales</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Bar chart showing each month of the current year broken out by Salesþand GP</p>þþ<p class=MsoNormal><b>Year to Year Sales and GP</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Bar chart showing Sales and GP for each of the past few years</p>þþ<p class=MsoNormal><b>Year to Year Sales by Month</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Bar chart showing Sales by month, comparing each of the past fewþyears.</p>þþ<p class=MsoNormal><b>Year to Year GP by Month</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Bar chart showing GP by month, comparing each of the past fewþyears.</p>þþ<p class=MsoNormal><b>MTD Sales by Salesman</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Bar chart showing Month to Date Sales and GP broken out by Salesperson.</p>þþ<p class=MsoNormal><b>YTD Sales by Salesman</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Bar chart showing Year to Date Sales and GP broken out by Salesperson.</p>þþ<p class=MsoNormal><b>Year to Year Sales by Salesman</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Bar chart showing Year to Year Sales broken out by Salesperson</p>þþ<p class=MsoNormal><b>Year to Year GP by Salesman</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Bar chart showing Year to Year GP broken out by Salesperson</p>þþ<p class=MsoNormal><b>MTD Sales by Branch</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Bar chart showing Month to Date Sales and GP broken out by Branch.</p>þþ<p class=MsoNormal><b>YTD Sales by Branch</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Bar chart showing Year to Date Sales and GP broken out by Branch.</p>þþ<p class=MsoNormal><b>Year to Year Sales by Branch</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Bar chart showing Year to Year Sales broken out by Branch.</p>þþ<p class=MsoNormal><b>Year to Year GP by Branch</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Bar chart showing Year to Year GP broken out by Branch.</p>þþ<p class=MsoNormal><b>MTD Sales by Region</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Bar chart showing Month to Date Sales and GP broken out by Region.</p>þþ<p class=MsoNormal><b>YTD Sales by Region</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Bar chart showing Year to Date Sales and GP broken out by Region.</p>þþ<p class=MsoNormal><b>Year to Year Sales by Region</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Bar chart showing Year to Year Sales broken out by Region.</p>þþ<p class=MsoNormal><b>Year to Year GP by Region</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Bar chart showing Year to Year GP broken out by Region.</p>þþ<p class=MsoListParagraph style='margin-left:0in'>&nbsp;</p>þþ<p class=MsoListParagraph style='margin-left:0in'><b><span style='font-size:þ12.0pt'>AR Reports</span></b></p>þþ<p class=MsoListParagraph style='margin-left:0in'><b><span style='font-size:þ12.0pt'>&nbsp;</span></b></p>þþ<p class=MsoNormal><b>Current AR Aging</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Pie chart breaking out all receivables broken out by current, 0-30,þ31-60, 61-90, and 90+</p>þþ<p class=MsoNormal><b>Average AR Aging Days by Year</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Bar chart comparing the average days to pay for the past fewþyears.</p>þþ<p class=MsoListParagraph style='margin-left:1.0in;text-indent:-.25in'><spanþstyle='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;þ</span></span>Drill down on a year to see a pie chart showing the AR aging forþthe year broken out by 0-30, 31-60, 61-90, and 90+.</p>þþ<p class=MsoNormal><b>Average Days to Pay Last 12 Months</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Bar chart comparing the average days to pay, by month, for theþpast 12 months.</p>þþ<p class=MsoNormal><b>Average Days by Month YYYY</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Bar chart comparing the average days to pay for each month inþyear YYYY. This option will appear for the past few years with YYYY showing theþyear.</p>þþ<p class=MsoNormal><b>Customers Needing Aging Attention</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Table report showing the categories of:</p>þþ<p class=MsoListParagraph style='margin-left:1.0in;text-indent:-.25in'><spanþstyle='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;þ</span></span>50 Customers with the most amount owed</p>þþ<p class=MsoListParagraph style='margin-left:1.0in;text-indent:-.25in'><spanþstyle='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;þ</span></span>50 Customers with the most days aged.</p>þþ<p class=MsoListParagraph style='margin-left:1.0in;text-indent:-.25in'><spanþstyle='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;þ</span></span>50 Customers aged over 30 days where their average aging over theþpast 60 days is longer than it has been over the past 1000 days.</p>þþ<p class=MsoNormal><b><span style='font-size:12.0pt'>&nbsp;</span></b></p>þþ<p class=MsoNormal><b><span style='font-size:12.0pt'>AP Reports</span></b></p>þþ<p class=MsoNormal><b>&nbsp;</b></p>þþ<p class=MsoNormal><b>Current AP Aging</b></p>þþ<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:þSymbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Pie chart breaking out all payables broken out by current, 0-30,þ31-60, 61-90, and 90+</p>þþ<p class=MsoNormal>&nbsp;</p>þþ<p class=MsoNormal>&nbsp;</p>þþ</div>þþ</body>þþ</html>002160web_ed_settings.htmlþ0c2þ<html xmlns="http://www.w3.org/1999/xhtml">þ  <head>þ    <title>D3 Web Editor Settings</title>þ    <meta http-equiv="content-type" content="text/html; charset=<!--CHARACTER_SET-->" />þ    <link rel="stylesheet" type="text/css" href="/db/css/reset.css" media="screen" />þ    <link rel="stylesheet" type="text/css" href="/db/css/screen.css" media="screen" />þ    <!--[if IE]>þ    <link rel="stylesheet" type="text/css" href="/db/css/screen_ie.css" media="screen" />þ    <![endif]-->þ    <script src="/db/javascripts/jquery.tools.min.js" type="text/javascript"></script>þ    <script src="/db/javascripts/global.js" type="text/javascript"></script>þ  </head>þ  <body>þ    <div id="header" class="group">þ      <div id="logo">D3 Web Editor Settings</div>þ    </div>    þ    <div id="main" class="group">þ      <div id="content" class="group">þ        <div id="section" class="group">þ          <ul class="tabs group"> þ            <li><a href="#">General Settings</a></li> þ            <li><a href="#">Accounts</a></li> þ            <li><a href="#">Program Files</a></li> þ          </ul>þ          <div class="panes"> þ            <div class="pane">þ              <form action="/dbc/WEB.ED.SETTINGS" method="POST">þ                <fieldset>þ                  <legend>Compiling Defaults</legend>þ                  <ul class="form">þ                    <li class="enable">þ                      <input type="checkbox" class="checkbox" id="enable_compiling" name="enable_compiling" [ENABLE_COMPILING] />þ                      <label for="enable_compiling">Enable Compiling</label>þ                    </li>þ                    <li>þ                      <label>Compile Verb:</label>þ                      <input type="text" class="text" name="compile_verb" value="[COMPILE_VERB]" />þ                    </li>þ                    <li>þ                      <label>Compile Options:</label>þ                      <input type="text" class="text" name="compile_opts" value="[COMPILE_OPTS]" />þ                    </li>þ                    <li>þ                      <label for="flash">Flash Compile (0 option)</label>þ                      <input type="checkbox" class="checkbox" id="flash" name="flash_compile" [FLASH_COMPILE] />þ                    </li>þ                    <li>þ                      <label for="catalog">Catalog after compile</label>þ                      <input type="checkbox" class="checkbox" id="catalog" name="catalog" [CATALOG] />þ                    </li>þ                  </ul>þ                </fieldset>þ                <fieldset>þ                  <legend>Options</legend>þ                  <ul class="form">þ                    <li>þ                      <label>Text Size:</label>þ                      <select name="text_size">þ                        [TEXT_SIZE_OPTS]þ                      </select>þ                    </li>þ                    <li>þ                      <label>Default Account:</label>þ                      <input type="text" class="text" name="default_account" value="[DEFAULT_ACCOUNT]" />þ                    </li>þ                    <li>þ                      <label>Default File:</label>þ                      <input type="text" class="text" name="default_file" value="[DEFAULT_FILE]"  />þ                    </li>þ                  </ul>þ                </fieldset>þ                <fieldset>þ                  <ul>þ                    <li>þ                      <input type="checkbox" class="checkbox" id="default" name="global_default" [GLOBAL_DEFAULT] />þ                      <label for="default">Set as default settings for all users</label>þ                    </li>þ                  </ul>þ                </fieldset>þ              </form>þ            </div> þ            <div class="pane">þ              <div class="table">þ                <table cellspacing="0">þ                  <thead>þ                    <tr>þ                      <th>Account</th>þ                      <th>Password</th>þ                      <th>Settings</th>þ                      <th>Options</th>þ                    </tr>þ                  </thead>þ                  <tbody>þ                  [ACCOUNT_LIST]þ                  </tbody>þ                </table>þ              </div>þ              <div>þ                <form action="/dbc/WEB.ED.SETTINGS" method="POST">þ                  <fieldset>þ                    <label for="account">Account</label>þ                    <input type="text" class="text" name="add_account" value="" />þ                    <input type="submit" value="Add" class="submit"/>þ                  </fieldset>þ                </form>þ              </div>þ            </div>þ            <div class="pane">þ              <div class="table">þ                <table cellspacing="0">þ                  <thead>þ                    <tr>þ                      <th>Account</th>þ                      <th>File</th>þ                      <th>Settings</th>þ                      <th>Options</th>þ                    </tr>þ                  </thead>þ                  <tbody>þ                  [FILE_LIST]þ                  </tbody>þ                </table>þ              </div>þ              <div class="footer_form">þ                <form action="#">þ                  <fieldset>þ                    <label for="account">Account</label>þ                    <input type="text" class="text" style="margin-right: 10px;"/>þ                    <label for="account">File</label>þ                    <input type="text" class="text"/>þ                    <input type="submit" value="Add" class="submit"/>þ                  </fieldset>þ                </form>þ              </div>þ            </div> þ          </div>þ        </div>þ      </div>þ    </div>þ    <!-- modals --> þ    <div class="modal" id="edit_account_settings"> þ      <form action="#">þ        <fieldset>þ          <legend>Settings for Account: 00000</legend>þ          <ul class="form">þ            <li>þ              <label>Password for LOGTO this account:</label>þ              <input type="password" class="text"/>þ            </li>þ            <li class="enable">þ              <input type="checkbox" class="checkbox" id="enable_compiling_edit_account_settings"/>þ              <label for="enable_compiling_edit_account_settings">Enable Compiling</label>þ            </li>þ            <li>þ              <label>Compile Verb:</label>þ              <input type="text" class="text"/>þ            </li>þ            <li>þ              <label>Compile Options:</label>þ              <input type="text" class="text"/>þ            </li>þ            <li>þ              <label for="flash_edit_account_settings">Flash Compile (0 option)</label>þ              <input type="checkbox" class="checkbox" id="flash_edit_account_settings"/>þ            </li>þ            <li>þ              <label for="catalog_edit_account_settings">Catalog after compile</label>þ              <input type="checkbox" class="checkbox" id="catalog_edit_account_settings"/>þ            </li>þ          </ul>þ        </fieldset>þ        <div class="buttons">þ          <input type="submit" value="Save"/>þ          <input type="submit" value="Cancel" class="close"/>þ        </div>þ      </form>þ    </div>þ    <div class="modal" id="edit_compile_settings"> þ      <form action="#">þ        <fieldset>þ          <legend>Compile Settings for 00000, 00000</legend>þ          <ul class="form">þ            <li class="enable">þ              <input type="checkbox" class="checkbox" id="enable_compiling_edit_compile_settings"/>þ              <label for="enable_compiling_edit_compile_settings">Enable Compiling</label>þ            </li>þ            <li>þ              <label>Compile Verb:</label>þ              <input type="text" class="text"/>þ            </li>þ            <li>þ              <label>Compile Options:</label>þ              <input type="text" class="text"/>þ            </li>þ            <li>þ              <label for="flash_edit_compile_settings">Flash Compile (0 option)</label>þ              <input type="checkbox" class="checkbox" id="flash_edit_compile_settings"/>þ            </li>þ            <li>þ              <label for="catalog_edit_compile_settings">Catalog after compile</label>þ              <input type="checkbox" class="checkbox" id="catalog_edit_compile_settings"/>þ            </li>þ          </ul>þ        </fieldset>þ        <div class="buttons">þ          <input type="submit" value="Save"/>þ          <input type="submit" value="Cancel" class="close"/>þ        </div>þ      </form>þ    </div>þ  </body>þ</html>00110Eadmin_dashboards.htmlþ0c2<!-- Add new dashboard form -->þ<script type="text/javascript">þdashboard_ids = [<!-- list_of_dashboard_ids -->];þþþ</script>þ<div id="dashboard-controls" class="ui-dialog">þ	<div class="button-pane-dialog">þ		<button id="save-dashboard" type="button" class="ui-state-default ui-corner-all">Save</button>þ		<button id="delete-dashboard" type="button" class="ui-state-default ui-corner-all">Delete</button>þ	</div>þ</div>þþ<div id="dashboard-accordion" class="ui-accordion ui-widget ui-helper-reset">þ	<h3 id='dashboard-properties-header' class="ui-accordion-header ui-helper-reset ui-state-active ui-corner-top"><span class="ui-icon ui-icon-triangle-1-s"></span>Properties</h3>þ	<div id='dashboard-properties' title='New Dashboard' class="ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content-active" style="height: 350px;">þ			<div id="dashboard-messages"></div>þ		<form id="new-dashboard-form" method="post" action="/dbc/MVDB.ADMIN">þ		<div>	þ			<input id="old_dbid" type="hidden" value="<!-- save_dbid -->" name="save_dbid" />þ			<input type="hidden" value="save_db" name="action" />	þ			<input type="hidden" value="Save" name="save_db" />þ		</div>þ		þ		<table>þ		<tbody><tr>þ		 <td  align="right">Dashboard ID:</td>þ		 <td id="dbid-container">þ		 <!-- edit_dbid -->þ		 </td>þ		</tr>þ		<tr>þ		 <td align="right">Description:</td>þ		 <td><input id="db_desc" type="text" value="<!-- db_desc -->" name="db_desc" size="63" /></td>þ		</tr>þ		<tr>þ		 <td align="right">Layout:</td>þ		 <td><input type="hidden" id="db_layout" name="db_layout" value="<!-- " />þ		 	<ul class='db-layout'>þ		 	<!-- db_layout_opts -->þ			</ul> 	     	    þ		 </td>þ		</tr>þ		<tr>þ		 <td align="right">Allowed Users:</td>þ		 <td><input id="db_users" type="text" value="<!-- db_users -->" name="db_users" size="63" /></td>þ		</tr>þ		<tr>þ		<td> </td><td>Leave blank to allow all users. Separate user IDs with commas to restrict acces to specific users.</td>þ		</tr>þ		<tr>þ		 <td align="right">Theme:</td>þ		 <td><!-- db_theme --></td>þ		</tr>þ		<tr>þ		 <td align="right">Sort Value:</td>þ		 <td><input id="db_sort" type="text" value="<!-- db_sort -->" name="db_sort" size="8" /></td>þ		</tr>þ		</tbody></table>þ		</form>þ	</div>þ	þ    <h3 class="ui-accordion-header ui-helper-reset ui-state-active ui-corner-top"><span class="ui-icon ui-icon-triangle-1-s"></span> Dashboard</h3>þ    <div id="dashboard-content" class="ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content-active">þ    		<div id="layout-header" class="one-column area">þ    		  <h4>HEADER</h4>þ              <!-- AREA_1_WIDGETS -->þ    		</div>þ	    	<div id="layout-body">þ		    <div class="one-column active">þ		    	<div class="area">þ		    	  <h4>AREA 1</h4>þ                  <!-- AREA_2_WIDGETS -->þ		    	</div>þ		    </div>þ		    <div class="two-column">þ		    	<div class="area first">þ		    	  <h4>AREA 1</h4>þ                  <!-- AREA_2_WIDGETS -->þ		    	</div>þ		   	    <div class="area last">þ		   	      <h4>AREA 2</h4>þ                  <!-- AREA_3_WIDGETS -->þ		   	    </div>        þ		    </div>þ		    <div class="three-column">þ		       	<div class="area first">þ		       	  <h4>AREA 1</h4>þ                  <!-- AREA_2_WIDGETS -->þ		       	</div>þ		    	<div class="area middle">þ		    	  <h4>AREA 2</h4>þ                  <!-- AREA_3_WIDGETS -->þ		    	</div>        þ		       	<div class="area last">þ		       	  <h4>AREA 3</h4>þ                  <!-- AREA_4_WIDGETS -->þ		        </div>    	þ		    </div>            þ	    	</div>þ    		<div id="layout-footer" class="one-column area">þ    		  <h4>FOOTER</h4>þ              <!-- AREA_5_WIDGETS -->þ    		</div>þ    </div>þ</div>    þþ<div id="widget-toolbox" class="ui-accordion">þþ	<h3 class="widget-header ui-accordion-header ui-state-active ui-state-focus"><span class="ui-icon ui-icon-triangle-1-s"></span>Widgets (draggable)</h3>þ		<div id="widget-icons"  class="ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content-active">þ		<!-- widget_list -->þ		</div>þþ</div>þþ<div id='change-layout-message' title="Change layout?" style="display: none; text-align: left;">þ	<p>Your layout areas currently have one or more widgets. Clicking 'Change' will move these widgets to the first column area.</p>þ</div>000621login.htmlþ0c2<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">þ<head>þ	<meta http-equiv="Content-Type" content="text/html; charset=<!--CHARACTER_SET-->"/>þ	<link rel="stylesheet" href="/db/css/reset-fonts-grids.css" type="text/css" charset="utf-8" />þ	<link rel="stylesheet" href="/db/css/application.css" type="text/css" charset="utf-8" />þ	<title>MultiValue Dashboard :: Login</title>þ</head>þþ<body onLoad="document.loginform.loginid.focus();">þþ	<div id="header">þ		<div id="logo">þ		  <BR /><img src="<!-- SITE_LOGO -->" alt="MultiValue Dashboard">þ	   </div>þ	<!-- HEADER -->þ	</div>þþ	<div id="dashboard">þ		<b><!-- ERROR --></b>þþ		<div style="text-align:center;">þ			<h1><img src="/db/images/graphic_lock.gif" style="vertical-align:bottom;"/> Please Login</h1>þ			<div style="width:180px;text-align:left;margin:10px auto" id="loginbox">þ				<form name="loginform" action="<!-- CGI$PATH -->/MVDB.MAIN?dblogin=1" method="post">þþ					<div class="ctrl">þ						<label for="login">Login</label>þ						<input id="getlogin" type="text" name="loginid" value="" class="text">þ					</div>þþ					<div class="ctrl">þ						<label for="password">Password</label>þ						<input type="password" name="password" value="" class="password">þ					</div>þ	þ					<div class="ctrl">þ						<input type="submit" value="Login" style="float:right">þ					</div>þ	þ				</form>þ			</div>þ		</div>þ	þ	</div>þþ	<div id="signature">MultiValue Dashboard - Copyright &copy; 2020 <a href="http://www.zumasys.com/products/multivalue-dashboard">Zumasys</a></div>þ	þ</body>þ</html>000273FCMAP_template.htmlþ0c2<!-- Fusion Chart Script -->þ	<div id="<!-- chart_div_id -->">þ	</div>þ	<input type="hidden" class="chartSource" value="/db/Maps/FCMap_[FCMAP_MODULE].swf" />þ	<input type="hidden" class="chartXML" value="<!-- CHARTXML -->" />þ	<input type="hidden" class="chartClass" value="fcmap" />þ	<script type="text/javascript">þ		// <![CDATA[þ		   var map = new FusionMaps("/db/Maps/FCMap_[FCMAP_MODULE].swf", "ChartId", "<!-- chart_width -->", "<!-- chart_height -->", "0", "1");þ		   map.setDataXML("<!-- CHARTXML -->");		   þ		   map.render("<!-- chart_div_id -->");þ		// ]]>þ	</script>þ<!-- end of FC script -->0010C9SAVE.PORTAL.DASHBOARDþ0c2  <br class="brClear" />þ  <div class="widget_content">þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<th width=38% align="left" bgcolor="red">Sales</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% bgcolor="white">&nbsp;</td>þ<td width=31% align="center">MTD ~1~</td>þ<td width=31% align="center">YTD ~2~</td>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% align="left"><a href="/dbc/MVDB.MAIN?dbname=Portal Sales Reports">Sales</a></td>þ<td width=31% align="right">~3~</td>þ<td width=31% align="right">~4~</td>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% align="left"><a href="/dbc/MVDB.MAIN?dbname=Portal Sales Reports">Gross Profit (GP$)</a></td>þ<td width=31% align="right">~5~</td>þ<td width=31% align="right">~6~</td>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% align="left"><a href="/dbc/MVDB.MAIN?dbname=Portal Margins&udview=Portal Margins">Margin (GP%)</a></td>þ<td width=31% align="right">~7~</td>þ<td width=31% align="right">~8~</td>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="0" cellspacing=".01%" cellpadding=".01%">þ<td width="100%">&nbsp;</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<th width=38% align="left" bgcolor="red">Financials</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="38%" bgcolor="white">&nbsp;</td><td width="31%" align="center">MDT ~9~</td><td width="31%" align="center">YTD ~10~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="38%" align="left"><a href="/dbc/MVDB.MAIN?dbname=DISPLAY NET INCOME CHART">Net Income</a></td><td width="31%" align="right">~11~</td><td width="31%" align="right">~12~</td>þ</table>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="38%" align="left"><a href="/dbc/MVDB.MAIN?dbname=DISPLAY AVERAGE DAYS CHART">Average Days To Pay</a></td><td width="31%" align="center">~13~</td><td width="31%" align="center">~14~</td>þ</table>þ<table width="100%" border="0" cellspacing=".01%" cellpadding=".01%">þ<td width="100%">&nbsp;</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="left"><a href="/dbc/MVDB.MAIN?dbname=Portal Margins&udview=Portal Margins">Balances as of ~15~</a></td><td width="25%" align="center">AR Balance</td><td width="25%" align="center">AR Balance %</td><td width="25%" align="center">AP Balance</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">1 - 30</td><td width="25%" align="right">~16~</td><td width="25%" align="center">~17~</td><td width="25%" align="right">~18~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">31 - 60</td><td width="25%" align="right">~19~</td><td width="25%" align="center">~20~</td><td width="25%" align="right">~21~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">61 - 90</td><td width="25%" align="right">~22~</td><td width="25%" align="center">~23~</td><td width="25%" align="right">~24~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">90+</td><td width="25%" align="right">~25~</td><td width="25%" align="center">~26~</td><td width="25%" align="right">~27~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">Total</td><td width="25%" align="right">~28~</td><td width="25%" align="center"></td><td width="25%" align="right">~29~</td>þ</table>þ<table width="100%" border="0" cellspacing=".01%" cellpadding=".01%">þ<td width="100%">&nbsp;</td>þ</table>þ</div>000251FW_template.htmlþ0c2<!-- start FW script -->þ        <div id="<!-- chart_div_id -->">þ        </div>þ        <script type="text/javascript">þ        FusionCharts.ready(function () {þ            var myChart = new FusionCharts({þ              "type": "[FW_MODULE]",þ              "renderAt": "<!-- chart_div_id -->",þ              "width": "<!-- chart_width -->",þ              "height": "<!-- chart_height -->",þ              "dataFormat": "xml",þ              "dataSource": "<!-- CHARTXML -->"þ            });þ          myChart.render();þ        });þ        </script>þ<!-- end of FW script -->000603PORTAL.DASHBOARD.SALES.GPþ0c2  <br class="brClear" />þ  <div class="widget_content">þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<th width=38% align="left" bgcolor="red">Sales</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% bgcolor="white">&nbsp;</td>þ<td width=31% align="center">MTD ~1~</td>þ<td width=31% align="center">YTD ~2~</td>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% align="left"><a href="/dbc/MVDB.MAIN?dbname=PORTAL SALES REPORTS">Sales</a></td>þ<td width=31% align="right">~3~</td>þ<td width=31% align="right">~4~</td>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% align="left"><a href="/dbc/MVDB.MAIN?dbname=PORTAL SALES REPORTS">Gross Profit (GP$)</a></td>þ<td width=31% align="right">~5~</td>þ<td width=31% align="right">~6~</td>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% align="left"><a href="/dbc/MVDB.MAIN?dbname=PORTAL MARGINS&udview=Portal Margins">Margin (GP%)</a></td>þ<td width=31% align="right">~7~</td>þ<td width=31% align="right">~8~</td>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="0" cellspacing=".01%" cellpadding=".01%">þ<td width="100%">&nbsp;</td>þ</table>þ</div>000163db_inner_templateþ0c2<div id="area1" class="area">þ <!-- AREA1 -->þ</div>þ<div class="content <!-- column_style -->">þ  <div id="area2" class="area">þ   <!-- AREA2 -->þ  </div>þ  <div id="area3" class="area">þ   <!-- AREA3 -->þ  </div>þ  <div id="area4" class="area">þ   <!-- AREA4 -->þ  </div>þ</div>þ<div id="area5" class="area">þ  <!-- AREA5 -->þ</div>000C40PORTAL.DASHBOARD.SALES.ARþ0c2  <br class="brClear" />þ  <div class="widget_content">þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<th width=38% align="left" bgcolor="red">Sales</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% bgcolor="white">&nbsp;</td>þ<td width=31% align="center">MTD ~1~</td>þ<td width=31% align="center">YTD ~2~</td>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% align="left"><a href="/dbc/MVDB.MAIN?dbname=PORTAL SALES REPORTS">Sales</a></td>þ<td width=31% align="right">~3~</td>þ<td width=31% align="right">~4~</td>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="0" cellspacing=".01%" cellpadding=".01%">þ<td width="100%">&nbsp;</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<th width=38% align="left" bgcolor="red"><font color="#FF0000">Financials</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="left"><a href="/dbc/MVDB.MAIN?dbname=DISPLAY PORTAL BALANCE PIE CHART&udview=DISPLAY PORTAL BALANCE PIE CHART">Balances as of ~15~</a></td><td width="25%" align="center">AR Balance</td><td width="25%" align="center">AR Balance %</td><td width="25%" align="center"></td>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">Current</td><td width="25%" align="right">~30~</td><td width="25%" align="center">~31~</td><td width="25%" align="right">~32~</td>þ</table>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">1 - 30</td><td width="25%" align="right">~16~</td><td width="25%" align="center">~17~</td><td width="25%" align="right">~18~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">31 - 60</td><td width="25%" align="right">~19~</td><td width="25%" align="center">~20~</td><td width="25%" align="right">~21~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">61 - 90</td><td width="25%" align="right">~22~</td><td width="25%" align="center">~23~</td><td width="25%" align="right">~24~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">90+</td><td width="25%" align="right">~25~</td><td width="25%" align="center">~26~</td><td width="25%" align="right">~27~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">Total</td><td width="25%" align="right">~28~</td><td width="25%" align="center"></td><td width="25%" align="right">~29~</td>þ</table>þ<table width="100%" border="0" cellspacing=".01%" cellpadding=".01%">þ<td width="100%">&nbsp;</td>þ</table>þ</div>0013E6DEMO.FINANCIALS.DASHBOARDþ0c2  <br class="brClear" />þ  <div class="widget_content">þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<thead>þ<tr>þ<th width=24% align="left" bgcolor="red">Sales</th>þ<th width=19% bgcolor="white">&nbsp;</th>þ<th width=19% bgcolor="white">&nbsp;</th>þ<th width=19% bgcolor="white">&nbsp;</th>þ<th width=19% bgcolor="white">&nbsp;</th>þ</tr>þ</thead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<thead>þ<tr>þ<td width=24% bgcolor="white">&nbsp;</td>þ<td width=19% align="center">YTD~1~</td>þ<td width=19% align="center">YTD~2~</td>þ<td width=19% align="center">%(+/-)</td>þ<td width=19% align="center">FY~3~</td>þ</tr>þ</thead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<thead>þ<tr>þ<td width=24% align="left"><a href="/dbc/MVDB.MAIN?dbname=DEMO REV.GP SALES CHART&udview=DEMO REV.GP SALES CHART&dd=dd&udpos1=1&udval1=REVENUES">Sales</a></td>þ<td width=19% align="right">~4~</td>þ<td width=19% align="right">~5~</td>þ<td width=19% align="right">~6~</td>þ<td width=19% align="right">~7~</td>þ</tr>þ</thead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<thead>þ<tr>þ<td width=24% align="left"><a href="/dbc/MVDB.MAIN?dbname=DEMO REV.GP SALES CHART&udview=DEMO REV.GP SALES CHART&dd=dd&udpos1=1&udval1=GROSSPROFIT">Gross Profit (GP$)</a></td>þ<td width=19% align="right">~8~</td>þ<td width=19% align="right">~9~</td>þ<td width=19% align="right">~10~</td>þ<td width=19% align="right">~11~</td>þ</tr>þ</thead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<thead>þ<tr>þ<td width=24% align="left"><a href="/dbc/MVDB.MAIN?dbname=DEMO SALES CHART&udview=DEMO SALES CHART&dd=dd&udpos1=1&udval1=MARGIN">Margin (GP%)</a></td>þ<td width=19% align="right">~12~</td>þ<td width=19% align="right">~13~</td>þ<td width=19% align="right"></td>þ<td width=19% align="right">~14~</td>þ</tr>þ</thead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<thead>þ<tr>þ<td width=24% align="left"><a href="/dbc/MVDB.MAIN?dbname=DEMO SALES CHART&udview=DEMO SALES CHART&dd=dd&udpos1=1&udval1=PARTS$">Parts Revenue ($)</a></td>þ<td width=19% align="right">~15~</td>þ<td width=19% align="right">~16~</td>þ<td width=19% align="right">~17~</td>þ<td width=19% align="right">~18~</td>þ</tr>þ</thead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<thead>þ<tr>þ<td width=24% align="left"><a href="/dbc/MVDB.MAIN?dbname=DEMO SALES PERCENTS&udview=DEMO SALES PERCENTS&dd=dd&udpos1=1&udval1=PARTSPERCENT">Parts Revenue (%)</a></td>þ<td width=19% align="right">~19~</td>þ<td width=19% align="right">~20~</td>þ<td width=19% align="right"></td>þ<td width=19% align="right">~21~</td>þ</tr>þ</thead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<thead>þ<tr>þ<td width=24% align="left"><a href="/dbc/MVDB.MAIN?dbname=DEMO SALES CHART&udview=DEMO SALES CHART&dd=dd&udpos1=1&udval1=SERVICES$">Services Revenue ($)</a></td>þ<td width=19% align="right">~22~</td>þ<td width=19% align="right">~23~</td>þ<td width=19% align="right">~24~</td>þ<td width=19% align="right">~25~</td>þ</tr>þ</thead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<thead>þ<tr>þ<td width=24% align="left"><a href="/dbc/MVDB.MAIN?dbname=DEMO SALES PERCENTS&udview=DEMO SALES PERCENTS&dd=dd&udpos1=1&udval1=SERVICESPERCENT">Services Revenue (%)</a></td>þ<td width=19% align="right">~26~</td>þ<td width=19% align="right">~27~</td>þ<td width=19% align="right"></td>þ<td width=19% align="right">~28~</td>þ</tr>þ</thead>þ</table>þ<table width="100%" cols="4" border="0">þ<table width="100%" cols="4" border="0">þ<table width="100%" cols="4" border="0">þ<td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<thead>þ<tr>þ<th width=24% align="left" bgcolor="red">Financials</th>þ<th width=25% bgcolor="white">&nbsp;</th>þ<th width=25% bgcolor="white">&nbsp;</th>þ<th width=25% bgcolor="white">&nbsp;</th>þ</tr>þ</thead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" bgcolor="white">&nbsp;</td><td width="25%" align="center">~29~ thru ~30~</td><td width="25%" align="center">~31~</td><td width="25%" align="center">~32~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="left"><a href="/dbc/MVDB.MAIN?dbname=DEMO NET INCOME CHART&udview=DEMO NET INCOME CHART&dd=dd">Net Income</a></td><td width="25%" align="right">~33~</td><td width="25%" align="right">~34~</td><td width="25%" align="right">~35~</td>þ</table>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="left"><a href="/dbc/MVDB.MAIN?dbname=DEMO AVERAGE DAYS CHART&udview=DEMO AVERAGE DAYS CHART&dd=dd">Average Days To Pay</a></td><td width="25%" align="center">~44~</td><td width="25%" align="center">~45~</td><td width="25%" align="center">~46~</td>þ</table>0005A9admin_login.htmlþ0c2þ<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">þ<head>þ	<meta http-equiv="Content-Type" content="text/html; charset=<!--CHARACTER_SET-->"/>þ	<link rel="stylesheet" href="/db/css/reset-fonts-grids.css" type="text/css" charset="utf-8" />þ	<link rel="stylesheet" href="/db/css/application.css" type="text/css" charset="utf-8" />þ    <!-- SITE_THEME -->þ	<title>MultiValue Dashboard :: Administrative Login</title>þ</head>þþ<body onLoad="document.loginform.adminpass.focus();">þþ	<div id="header">þ		<div id="logo">þ			<img src="<!-- SITE_LOGO -->" alt="MultiValue Dashboard">þ	   </div>þ	<!-- HEADER -->þ	</div>þþ	<div id="dashboard">þ		<b><!-- ERROR --></b>þþ		<div style="text-align:center;">þ			<h1><img src="/db/images/graphic_lock.gif" style="vertical-align:bottom;"/> Please Login</h1>þ			<div style="width:180px;text-align:left;margin:10px auto" id="loginbox">þ				<form name="loginform" action="<!-- CGI$PATH -->/MVDB.ADMIN" method="post">þþ					<div class="ctrl">þ						<label for="password">Password</label>þ						<input type="password" name="adminpass" value="" class="password">þ					</div>þ	þ					<div class="ctrl">þ						<input type="submit" value="Login" style="float:right">þ					</div>þ	þ				</form>þ			</div>þ		</div>þ	þ	</div>þþ	<div id="signature">MultiValue Dashboard - copyright &copy; 2020 <a href="http://www.zumasys.com/products/multivalue-dashboard">Zumasys</a></div>þ	þ</body>þ</html>000E90PORTAL.DASHBOARD.SALES.GP.ARþ0c2  <br class="brClear" />þ  <div class="widget_content">þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<th width=38% align="left" bgcolor="red">Sales</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% bgcolor="white">&nbsp;</td>þ<td width=31% align="center">MTD ~1~</td>þ<td width=31% align="center">YTD ~2~</td>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% align="left"><a href="/dbc/MVDB.MAIN?dbname=PORTAL SALES REPORTS">Sales</a></td>þ<td width=31% align="right">~3~</td>þ<td width=31% align="right">~4~</td>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% align="left"><a href="/dbc/MVDB.MAIN?dbname=PORTAL SALES REPORTS">Gross Profit (GP$)</a></td>þ<td width=31% align="right">~5~</td>þ<td width=31% align="right">~6~</td>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% align="left"><a href="/dbc/MVDB.MAIN?dbname=PORTAL MARGINS&udview=Portal Margins">Margin (GP%)</a></td>þ<td width=31% align="right">~7~</td>þ<td width=31% align="right">~8~</td>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="0" cellspacing=".01%" cellpadding=".01%">þ<td width="100%">&nbsp;</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<th width=38% align="left" bgcolor="red"><font color="#FF0000">Financials</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="left"><a href="/dbc/MVDB.MAIN?dbname=DISPLAY PORTAL BALANCE PIE CHART&udview=DISPLAY PORTAL BALANCE PIE CHART">Balances as of ~15~</a></td><td width="25%" align="center">AR Balance</td><td width="25%" align="center">AR Balance %</td><td width="25%" align="center"> </td>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">Current</td><td width="25%" align="right">~30~</td><td width="25%" align="center">~31~</td><td width="25%" align="right">~32~</td>þ</table>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">1 - 30</td><td width="25%" align="right">~16~</td><td width="25%" align="center">~17~</td><td width="25%" align="right">~18~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">31 - 60</td><td width="25%" align="right">~19~</td><td width="25%" align="center">~20~</td><td width="25%" align="right">~21~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">61 - 90</td><td width="25%" align="right">~22~</td><td width="25%" align="center">~23~</td><td width="25%" align="right">~24~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">90+</td><td width="25%" align="right">~25~</td><td width="25%" align="center">~26~</td><td width="25%" align="right">~27~</td>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<td width="25%" align="center">Total</td><td width="25%" align="right">~28~</td><td width="25%" align="center"></td><td width="25%" align="right">~29~</td>þ</table>þ<table width="100%" border="0" cellspacing=".01%" cellpadding=".01%">þ<td width="100%">&nbsp;</td>þ</table>þ</div>000E1Eed_template.htmlþ0c2<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" >þ<head>þ    <meta http-equiv="Content-Type" content="text/html; charset=<!--CHARACTER_SET-->" />þ    <title>Editing <!-- ITEM --></title>þ    <script language="Javascript" type="text/javascript" src="/db/edit_area/edit_area_full.js"></script>þ    <script src="/db/javascripts/jquery-1.3.2.min.js" type="text/javascript" charset="<!--CHARACTER_SET-->"></script>	þ    <!--script src="/db/javascripts/jquery-ui-1.7.2.custom.min.js" type="text/javascript" charset="<!--CHARACTER_SET-->"></script-->þþ<script src="/db/javascripts/jquery-ui-1.7.2.custom.min.js" type="text/javascript" charset="<!--CHARACTER_SET-->"></script>    	    þ    <script src="/db/javascripts/jquery.form.js" type="text/javascript" charset="<!--CHARACTER_SET-->"></script>    	    þ    <!--script src="/db/javascripts/shortcut.js" type="text/javascript" charset="<!--CHARACTER_SET-->"></script-->þ    <script language="Javascript" type="text/javascript">	    þ	    þ    	CALLS = <!-- NUM_OF_CALLS -->;þ        INCLUDES = <!-- NUM_OF_INCLUDES -->;þ        FILES = <!-- NUM_OF_FILES -->;                þ        ARCHIVES = <!-- NUM_OF_ARCHIVES -->;þ        CALLS_CONTENT = '<!-- EA_CALLS_CONTENT -->';þ        INCLUDES_CONTENT = '<!-- EA_INCLUDES_CONTENT -->';þ        FILES_CONTENT = '<!-- EA_FILES_CONTENT -->';þ        ARCHIVE_CONTENT = '<!-- EA_ARCHIVE_CONTENT -->';þ        LAST_COMPILE = '<!-- LAST_COMPILE -->';        þ       	<!-- ED_SCRIPTS -->þþ        // initialisation        þþ	editAreaLoader.init({þ            id: "file_1" // id of the textarea to transformþ            ,start_highlight: true  // if start with highlightþ            ,allow_resize: "both"þ            ,allow_toggle: falseþ            ,word_wrap: trueþ            ,language: "en"þ            ,begin_toolbar: "load, save"þ            ,toolbar: "search, go_to_line, |, undo, redo, |, select_font,|, change_smooth_selection, highlight, reset_highlight, word_wrap, |, help" þ            ,save_callback: 'saveCompileItem'þ            ,EA_load_callback: "editAreaLoadComplete" þ            ,load_callback: 'openItem'þ            ,fullscreen: trueþ            ,closebottomtab_callback: 'closeActiveTab'þ            ,syntax: "<!-- SYNTAX -->"þ        });þ	þ    <!-- WINDOW_HEIGHT - Put this where it needs to go -->þ    </script>    þþ    <script src="/db/javascripts/edit_area_init.js" type="text/javascript" charset="<!--CHARACTER_SET-->"></script> þ    <script language="javascript" type="text/javascript">þ       	<!-- ED_INIT_SCRIPT -->þ    </script>þ       <link rel="StyleSheet" href="/db/css/web_editor.css" media="screen" type="text/css" />þ       <link rel="StyleSheet" href="/db/css/jquery-ui.css" media="screen" type="text/css" />þ       <!--[if lte IE 8]>þ       <link rel="Stylesheet" href="/db/css/ie.css" media="screen" type="text/css" />þ       <![endif]-->þ</head>þ<body>þþ<div id="open-item-container" title="Open Item" style="display:none;">þ<span id="messages"> </span>þ<form id="open-item-form" name="open-item-form" action="" method="post">þ<label>Account:</label>þ<input id="ed_acct" type="text" value="" name="ed_acct" />þ<label>File: </label>þ<input id="ed_file" type="text" value="" name="ed_file"/>þ<label>Item: </label>þ<input id="ed_item" type="text" value="" name="ed_item"/>þ<input id="open-action" type="hidden" name="action" value="open" />þ</form>þ</div>þþ<div id="compile-output-container" title="Compile output">þ<div id="compile-content"></div>þ</div>þ<!-- HEADER -->þ<hr />þ<!-- BODY -->þ<hr />þ<!-- FOOTER -->þ<!-- COMPILE_OUTPUT -->þ<hr />þ</body>þ</html>000082pdf_inner_templateþ0c2<div id="areas" class="area">þ <!-- AREA1 --><!-- AREA2 --><!-- AREA3 --><!-- AREA4 --><!-- AREA5 -->þ</div>002FAFJBASE.PORTAL.SETUP.DOCUMENTATIONþ0c2<html>þþ<head>þ<meta http-equiv=Content-Type content="text/html; charset=windows-1252">þ<meta name=Generator content="Microsoft Word 15 (filtered)">þ<style>þ<!--þ /* Font Definitions */þ @font-faceþ	{font-family:Wingdings;þ	panose-1:5 0 0 0 0 0 0 0 0 0;}þ@font-faceþ	{font-family:"Cambria Math";þ	panose-1:2 4 5 3 5 4 6 3 2 4;}þ@font-faceþ	{font-family:Calibri;þ	panose-1:2 15 5 2 2 2 4 3 2 4;}þ /* Style Definitions */þ p.MsoNormal, li.MsoNormal, div.MsoNormalþ	{margin-top:0in;þ	margin-right:0in;þ	margin-bottom:8.0pt;þ	margin-left:0in;þ	line-height:107%;þ	font-size:11.0pt;þ	font-family:"Calibri",sans-serif;}þp.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraphþ	{margin-top:0in;þ	margin-right:0in;þ	margin-bottom:8.0pt;þ	margin-left:.5in;þ	line-height:107%;þ	font-size:11.0pt;þ	font-family:"Calibri",sans-serif;}þp.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirstþ	{margin-top:0in;þ	margin-right:0in;þ	margin-bottom:0in;þ	margin-left:.5in;þ	margin-bottom:.0001pt;þ	line-height:107%;þ	font-size:11.0pt;þ	font-family:"Calibri",sans-serif;}þp.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddleþ	{margin-top:0in;þ	margin-right:0in;þ	margin-bottom:0in;þ	margin-left:.5in;þ	margin-bottom:.0001pt;þ	line-height:107%;þ	font-size:11.0pt;þ	font-family:"Calibri",sans-serif;}þp.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLastþ	{margin-top:0in;þ	margin-right:0in;þ	margin-bottom:8.0pt;þ	margin-left:.5in;þ	line-height:107%;þ	font-size:11.0pt;þ	font-family:"Calibri",sans-serif;}þ.MsoChpDefaultþ	{font-family:"Calibri",sans-serif;}þ.MsoPapDefaultþ	{margin-bottom:8.0pt;þ	line-height:107%;}þ@page WordSection1þ	{size:8.5in 11.0in;þ	margin:1.0in 1.0in 1.0in 1.0in;}þdiv.WordSection1þ	{page:WordSection1;}þ /* List Definitions */þ olþ	{margin-bottom:0in;}þulþ	{margin-bottom:0in;}þ-->þ</style>þþ</head>þþ<body lang=EN-US>þþ<div class=WordSection1>þþ<p class=MsoNormal><b><span style='font-size:14.0pt;line-height:107%'>PortalþSales Report Setup:</span></b></p>þþ<p class=MsoNormal>This setup process identifies the fields necessary forþderiving sales, gross profit, and margin numbers.  It allows for sales numbersþto be broken out by sales person and, if applicable, by branch and/or region.</p>þþ<p class=MsoNormal><b>Sales File Account Path</b>  Multi-value systems normallyþhave multiple accounts where data may reside. The sales reports will be drivenþby a file of sales.  This field needs the path to the account where that fileþresides.</p>þþ<p class=MsoNormal><b>Name of Sales File</b>  The name of the file containingþthe sales information.</p>þþ<p class=MsoNormal><b>Date of Sale Dict Name</b>  The name of the dictionaryþitem in the sales file that contains the date the sale was complete.</p>þþ<p class=MsoNormal><b>Month of Sale Dict Name</b>  The name of the dictionaryþitem in the sales file that displays the numeric value of the month the saleþwas completed.  If the system doesnt have this dictionary item, there shouldþbe one created using the Date of Sale Dict Name as a guide.</p>þþ<p class=MsoNormal><b>Year of Sale Dict Name </b> The name of the dictionaryþitem in the sales file that displays the 4 digit year the sale was completed.  Ifþthe system doesnt have this dictionary item, there should be one created usingþthe Date of Sale Dict Name as a guide.</p>þþ<p class=MsoNormal><b>Amount of Sale Dict Name</b>  The name of the dictionaryþitem in the sales file that contains the total amount of the sales transaction.þ This dictionary </p>þþ<p class=MsoNormal><b>Cost of Sale Dict Name</b>  The name of the dictionaryþitem in the sales file that contains the cost of the sales transaction.  Thisþis used for determining gross profit and margin.  If this information is notþavailable in the system, the field should be left blank, disabling reportsþassociated with gross profit and margin.</p>þþ<p class=MsoNormal><b>Salesman Dict Name</b>  The name of the dictionary itemþin the sales file that contains the primary salesman on the transaction.  Mostþsystems will have a salesman code in the sales file and another file thatþcontains the actual names of the salesmen.  This dictionary item should be oneþthat displays the actual name.  </p>þþ<p class=MsoNormal><b>Branch Dict Name</b>   The name of the dictionary itemþin the sales file that contains the branch being credited with theþtransaction.  Most systems will have a branch code in the sales file andþanother file that contains the actual names of the branches.  This dictionaryþitem should be one that displays the actual name.  This field only applies ifþsales can be broken out by a branch.  </p>þþ<p class=MsoNormal><b>Region Dict Name</b>   The name of the dictionary itemþin the sales file that contains the region being credited with theþtransaction.  Most systems will have a region code in the sales file andþanother file that contains the actual names of the regions.  This dictionaryþitem should be one that displays the actual name.  This field only applies ifþsales can be broken out by a region.  </p>þþ<p class=MsoNormal><b>Go</b>  No validation is made on Portal Sales ReportþSetup fields until this button is clicked.  When validating, checks are madeþfor:</p>þþ<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Valid account</p>þþ<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Valid file name in the account</p>þþ<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Existence of each of the dictionary names entered</p>þþ<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Salesman Dict Name looking to another file for the actual name ofþthe salesman.  An ignorable warning is issued if that is not the case.</p>þþ<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Branch Dict Name looking to another file for the actual name ofþthe branch.  An ignorable warning is issued if that is not the case.</p>þþ<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Region Dict Name looking to another file for the actual name ofþthe region.  An ignorable warning is issued if that is not the case.</p>þþ<p class=MsoNormal>&nbsp;</p>þþ<p class=MsoNormal><b><span style='font-size:14.0pt;line-height:107%'>Portal ARþReport Setup:</span></b></p>þþ<p class=MsoNormal>This setup process identifies the fields necessary for evaluatingþaccount receivables.  It breaks out statistics by amounts, aging categories, percentages,þand periods for comparison purposes.  It also identifies by customer whenþviewing most amounts owed, most days aged, and accounts with significant changesþin payment patterns.</p>þþ<p class=MsoNormal><b>AR File Account</b>  The AR reports will be driven by aþfile of receivables or invoices.  This field needs the name of the accountþwhere that file resides.</p>þþ<p class=MsoNormal><b>Name of AR File</b>  The name of the file containing theþreceivables with amounts and payment information.</p>þþ<p class=MsoNormal><b>Due Date Dict Name</b>  The name of the dictionary itemþin the AR file showing the due date of the receivable.</p>þþ<p class=MsoNormal><b>Date Paid Dict Name</b>  The name of the dictionary itemþin the AR file showing the date the receivable was paid.</p>þþ<p class=MsoNormal><b>Invoice Amount Dict Name</b>  The name of the dictionaryþitem in the AR file that contains the original amount owed. </p>þþ<p class=MsoNormal><b>Remaining Balance Dict Name</b>  The name of theþdictionary item in the AR file that contains the remaining balance. </p>þþ<p class=MsoNormal><b>Customer Dict Name</b>  The name of the dictionary itemþin the AR file that contains the customer.  Most systems will have a customerþcode in the AR file and another file that contains the actual names of the customers. þThis dictionary item should be one that displays the actual name.  </p>þþ<p class=MsoNormal><b>Go</b>  No validation is made on Portal AR Report Setupþfields until this button is clicked.  When validating, checks are made for:</p>þþ<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Valid account</p>þþ<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Valid file name in the account</p>þþ<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Existence of each of the dictionary names entered</p>þþ<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Customer Dict Name looking to another file for the actual name ofþthe salesman.  An ignorable warning is issued if that is not the case.</p>þþ<p class=MsoNormal>&nbsp;</p>þþ<p class=MsoNormal><b><span style='font-size:14.0pt;line-height:107%'>Portal APþReport Setup:</span></b></p>þþ<p class=MsoNormal>This setup process identifies the fields necessary for evaluatingþaccount payables.  It breaks out statistics by amounts, aging categories, and percentages.</p>þþ<p class=MsoNormal><b>AP File Account</b>  The AP reports will be driven by aþfile of payables.  This field needs the name of the account where that fileþresides.</p>þþ<p class=MsoNormal><b>Name of AP File</b>  The name of the file containing theþpayables with amounts and payment information.</p>þþ<p class=MsoNormal><b>Due Date Dict Name</b>  The name of the dictionary itemþin the AP file showing the due date of the payable.</p>þþ<p class=MsoNormal><b>Date Paid Dict Name</b>  The name of the dictionary itemþin the AP file showing the date the payable was paid.</p>þþ<p class=MsoNormal><b>Invoice Amount Dict Name</b>  The name of the dictionaryþitem in the AP file that contains the original amount owed. </p>þþ<p class=MsoNormal><b>Remaining Balance Dict Name</b>  The name of theþdictionary item in the AP file that contains the remaining balance. </p>þþ<p class=MsoNormal><b>Go</b>  No validation is made on Portal AP Report Setupþfields until this button is clicked.  When validating, checks are made for:</p>þþ<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Valid account</p>þþ<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Valid file name in the account</p>þþ<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Existence of each of the dictionary names entered</p>þþ<p class=MsoNormal>&nbsp;</p>þþ<p class=MsoNormal>&nbsp;</p>þþ<p class=MsoNormal>&nbsp;</p>þþ<p class=MsoNormal>&nbsp;</p>þþ</div>þþ</body>þþ</html>000202WIDGET.DIVþ0c2<div class="widget">þ  <div class="widget_header">þ   <div class="widget_controls"><!-- CONTROLS --></div>þ   <h3 class="title"><!-- TITLE --></h3>þ   <!-- INPUT -->þ   <div class="widget_content_header"><!-- QUAD2 --><!-- QUAD1 -->þ        <div class="clear"></div>þ     </div>þ  </div>þ  <div class="widget_content"><div class="widget_content_padding"><!-- WIDGETDATA --></div></div>þ  <div class="widget_content_footer">þ   <!-- QUAD3 --><!-- QUAD4 -->þ  <div class="clear" ></div>þ </div>þ</div>þ000348PORTAL.DASHBOARD.SALESþ0c2  <br class="brClear" />þ  <div class="widget_content">þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<th width=38% align="left" bgcolor="red">Sales</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ<th width=31% bgcolor="white">&nbsp;</th>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% bgcolor="white">&nbsp;</td>þ<td width=31% align="center">MTD ~1~</td>þ<td width=31% align="center">YTD ~2~</td>þ</tr>þ</tdead>þ</table>þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=38% align="left"><a href="/dbc/MVDB.MAIN?dbname=PORTAL SALES REPORTS">Sales</a></td>þ<td width=31% align="right">~3~</td>þ<td width=31% align="right">~4~</td>þ</tr>þ</tdead>þ</table>þ</div>001A1BPORTAL.REPORT.RUN.DOCUMENTATIONþ0c2<html>þþ<head>þ<meta http-equiv=Content-Type content="text/html; charset=windows-1252">þ<meta name=Generator content="Microsoft Word 15 (filtered)">þ<style>þ<!--þ /* Font Definitions */þ @font-faceþ	{font-family:Wingdings;þ	panose-1:5 0 0 0 0 0 0 0 0 0;}þ@font-faceþ	{font-family:"Cambria Math";þ	panose-1:2 4 5 3 5 4 6 3 2 4;}þ@font-faceþ	{font-family:Calibri;þ	panose-1:2 15 5 2 2 2 4 3 2 4;}þ /* Style Definitions */þ p.MsoNormal, li.MsoNormal, div.MsoNormalþ	{margin-top:0in;þ	margin-right:0in;þ	margin-bottom:8.0pt;þ	margin-left:0in;þ	line-height:107%;þ	font-size:11.0pt;þ	font-family:"Calibri",sans-serif;}þp.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraphþ	{margin-top:0in;þ	margin-right:0in;þ	margin-bottom:8.0pt;þ	margin-left:.5in;þ	line-height:107%;þ	font-size:11.0pt;þ	font-family:"Calibri",sans-serif;}þp.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirstþ	{margin-top:0in;þ	margin-right:0in;þ	margin-bottom:0in;þ	margin-left:.5in;þ	margin-bottom:.0001pt;þ	line-height:107%;þ	font-size:11.0pt;þ	font-family:"Calibri",sans-serif;}þp.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddleþ	{margin-top:0in;þ	margin-right:0in;þ	margin-bottom:0in;þ	margin-left:.5in;þ	margin-bottom:.0001pt;þ	line-height:107%;þ	font-size:11.0pt;þ	font-family:"Calibri",sans-serif;}þp.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLastþ	{margin-top:0in;þ	margin-right:0in;þ	margin-bottom:8.0pt;þ	margin-left:.5in;þ	line-height:107%;þ	font-size:11.0pt;þ	font-family:"Calibri",sans-serif;}þ.MsoChpDefaultþ	{font-family:"Calibri",sans-serif;}þ.MsoPapDefaultþ	{margin-bottom:8.0pt;þ	line-height:107%;}þ@page WordSection1þ	{size:8.5in 11.0in;þ	margin:1.0in 1.0in 1.0in 1.0in;}þdiv.WordSection1þ	{page:WordSection1;}þ /* List Definitions */þ olþ	{margin-bottom:0in;}þulþ	{margin-bottom:0in;}þ-->þ</style>þþ</head>þþ<body lang=EN-US>þþ<div class=WordSection1>þþ<p class=MsoNormal style='margin-bottom:12.0pt'><b><span style='font-size:14.0pt;þline-height:107%'>Running the Portal Dashboard Reports</span></b></p>þþ<p class=MsoListParagraphCxSpFirst style='margin-bottom:12.0pt;text-indent:þ-.25in'><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Run the Portal Reports Setup to configure the elements necessaryþto run the reports.  See the Portal Reports Setup Documentation </p>þþ<p class=MsoListParagraphCxSpMiddle style='margin-bottom:12.0pt;text-indent:þ-.25in'><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Run the Portal Dashboard to view the summary of sales andþfinancials.</p>þþ<p class=MsoListParagraphCxSpMiddle style='margin-top:0in;margin-right:0in;þmargin-bottom:12.0pt;margin-left:1.0in;text-indent:-.25in'><spanþstyle='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;þ</span></span>The dashboard wants to have calculations refreshed within theþpast 15 minutes.  If, when starting the dashboard, it has been over 15 minutesþsince the last calculations, a temporary display will show that figures areþupdating.  After a satisfactory delay of a minute or so, click the Go buttonþand the summary of sales and financials page should display.  If not, repeatþuntil it displays.</p>þþ<p class=MsoListParagraphCxSpMiddle style='margin-top:0in;margin-right:0in;þmargin-bottom:12.0pt;margin-left:1.0in;text-indent:-.25in'><spanþstyle='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;þ</span></span>Leaving the dashboard running with Auto-Refresh slider activated forþabout every 5 minutes will automatically refresh the dashboard display andþtrigger a background recalculation of numbers when necessary.</p>þþ<p class=MsoListParagraphCxSpMiddle style='margin-top:0in;margin-right:0in;þmargin-bottom:12.0pt;margin-left:1.0in;text-indent:-.25in'><spanþstyle='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;þ</span></span>The title section of each dashboard page shows the date and timeþthe last calculations were run.</p>þþ<p class=MsoListParagraphCxSpMiddle style='margin-bottom:12.0pt;text-indent:þ-.25in'><span style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>On the summary of sales and financials, those labels underlinedþand displayed in a color can drilled down on to display additional dashboards.</p>þþ<p class=MsoListParagraphCxSpMiddle style='margin-top:0in;margin-right:0in;þmargin-bottom:12.0pt;margin-left:1.0in;text-indent:-.25in'><spanþstyle='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;þ</span></span>Drill down on <u><span style='color:#C45911'>Sales</span></u> toþinitiate the Portal Sales Reports dashboard</p>þþ<p class=MsoListParagraphCxSpMiddle style='margin-top:0in;margin-right:0in;þmargin-bottom:12.0pt;margin-left:1.0in;text-indent:-.25in'><spanþstyle='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;þ</span></span>Drill down on <u><span style='color:#C45911'>Gross Profit (GP$)</span></u><spanþstyle='color:#C45911'> </span>to initiate the same Portal Sales Reportsþdashboard</p>þþ<p class=MsoListParagraphCxSpMiddle style='margin-top:0in;margin-right:0in;þmargin-bottom:12.0pt;margin-left:1.0in;text-indent:-.25in'><spanþstyle='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;þ</span></span>Drill down on <u><span style='color:#C45911'>Margin (GP%)</span></u><spanþstyle='color:#C45911'> </span>to initiate the Portal Year to Year Marginsþdashboard</p>þþ<p class=MsoListParagraphCxSpMiddle style='margin-top:0in;margin-right:0in;þmargin-bottom:12.0pt;margin-left:1.0in;text-indent:-.25in'><spanþstyle='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;þ</span></span>Drill down on the <u><span style='color:#C45911'>Balances as ofþMM-DD-YY</span></u><span style='color:#C45911'> </span>to initiate the AR andþAP dashboard</p>þþ<p class=MsoListParagraphCxSpLast style='margin-bottom:12.0pt;text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>After doing a drill downs, the browser back button can be used toþnavigate back to the previous dashboard, or simply clicking on the PortalþDashboard tab will re-initialize back to the summary of sales and financials.</p>þþ</div>þþ</body>þþ</html>00015Cadmin_menu.htmlþ0c2<ol class="admin_nav_links">þ  <li><a href="<!-- CGI$PATH -->/MVDB.ADMIN?action=users" class="bullet_link">Users</a>þ  <li><a href="<!-- CGI$PATH -->/MVDB.ADMIN?action=widgets" class="bullet_link">Widgets</a>þ  <li><a href="<!-- CGI$PATH -->/MVDB.ADMIN?action=dashboards" class="bullet_link">Dashboards</a>  þ  <!-- RSS -->þ</ol>000281message.htmlþ0c2<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">þ<head>þ    <meta http-equiv="Content-Type" content="text/html; charset=<!--CHARACTER_SET-->"/>þ    <link rel="stylesheet" href="/db/css/reset-fonts-grids.css" type="text/css" charset="utf-8" />þ    <link rel="stylesheet" href="/db/css/application.css" type="text/css" charset="utf-8" />þ    <title>MultiValue Dashboard :: Login</title>þ</head>þ<body>þ<div id="header">þ<div id="logo">þ  <br /><img src="<!-- SITE_LOGO -->" alt="MultiValue Dashboard">þ</div>þ</div>þ<div id="dashboard">þ<h1><!-- MSG_TITLE --></h1>þ<!-- MSG_CONTENT -->þ</div>þ</body>þ</html>000C78dbtemplateþ0c2<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">þ<head>þ    <meta http-equiv="Content-Type" content="text/html; charset=<!--CHARACTER_SET-->"/>þ    <meta http-equiv="X-UA-Compatible" content="IE=edge,IE=11,IE=10,IE=9,IE=8,IE=7" />þ    <link rel="stylesheet" href="/db/css/reset-fonts-grids.css" type="text/css" charset="utf-8" />þ    <link rel="stylesheet" href="/db/css/application.css" type="text/css" charset="utf-8" />þ    <link rel="stylesheet" href="/db/css/print.css" type="text/css" charset="utf-8" media="print" />þ    <!--[if lte IE 7]><link href="/db/css/ie7.css" rel="stylesheet" type="text/css" media="screen" /><![endif]-->þ        þ    <!-- SITE_THEME -->þ    þ    <!-- end styles -->þ    þ    þ    þ    <script type="text/javascript" src="/db/javascripts/prototype-1.6.1.js"></script>þ    <script type="text/javascript" src="/db/javascripts/jquery-1.3.2.min.js"></script>þ    <script type="text/javascript" src="/db/javascripts/jquery-ui-1.8.custom.min.js"></script>þ    <script type="text/javascript">jQuery.noConflict();</script>þ    <script type="text/javascript" src="/db/fw/fusioncharts.js"></script>þ    <script type="text/javascript" src="/db/javascripts/sortable.js"></script>þ    <script type="text/javascript" src="/db/javascripts/tablesort.js"></script>þ    <script type="text/javascript" src="/db/javascripts/grid-widget.js"></script>þ    <script type="text/javascript" src="/db/javascripts/printing.js"></script>þ    <script type="text/javascript" src="/db/javascripts/slider.js"></script>þ    þ    <link rel="StyleSheet" href="/db/css/jquery-ui.css" media="screen" type="text/css" />þ    <style type="text/css" media="screen" >þ            /* put the left rounded edge on the track */þ            #track1-left {þ                position: absolute;þ                width: 5px;þ                height: 9px;þ                background: transparent url(/db/images/bg_slider_track.png) no-repeat top left;þ            }þ            þ            /* put the track and the right rounded edge on the track */þ            #track1 {þ                background: transparent url(/db/images/bg_slider_track.png) no-repeat top right;þ            }þ    </style>þþ    <script>þ            jQuery(function() {þ                    jQuery(".datepicker").datepicker();þ            });þ    </script>þþ    <title>MultiValue Dashboard</title>þ    <!-- REFRESH -->þþ    þ</head>þ<body>þ<div id="printFrame" class="printme"></div>þ<div id="header">þ<!-- HEADER -->þþ</div>þþ    <div style="clear:both"></div>þ    <div id="logo">þ        <img src="<!-- SITE_LOGO -->" alt="MultiValue Dashboard">þ    </div>þ    þ<!-- RefreshSlider -->þþ<div id="dashboardWrapper">þ    <div id="dashboard">þ        <!-- DASHBOARD -->þ        <div class="clear"></div>þ    </div>þ    <div class="clear"></div>þ    <br/>þ</div>þ<div id="footer">þ    <!-- FOOTER -->þ    <div id="signature">MultiValue Dashboard - Copyright &copy; 2020 <a href="http://www.zumasys.com/products/multivalue-dashboard">Zumasys</a></div>þ</div>þ<script type="text/javascript">þ/*jQuery(document).ready(function(){þ       jQuery('.widgetized').tablesort();þ     });*/þ</script>þþ    þ</body>þ</html>000548rss_edit.htmlþ0c2<form action="<!-- CGI$PATH -->/RSS.MAINT" method="post">þ<input type="hidden" name="id" value="<!-- feed_id -->">þ<input type="hidden" name="action" value="save">þ<table>þ<tr>þ <td align="right">Feed ID:</td>þ <td><!-- edit_feed_id --></td>þ</tr>þ<tr>þ <td align="right">Name:</td>þ <td><input type="text" name="feed_name" value="<!-- feed_name -->"></td>þ</tr>þ<tr>þ <td align="right">Description:</td>þ <td><textarea name="feed_desc" rows="5" cols="50"><!-- feed_desc --></textarea></td>þ</tr>þ<tr>þ <td align="right">Select Subroutine:</td>þ <td><input type="text" name="sel_sub" value="<!-- sel_sub -->"> <!-- sel_sub_msg --> <a target="RSS.BP_<!-- sel_sub -->" href="/dbc/MVDB.WEB.ED?ed_file=RSS.BP&ed_item=<!-- sel_sub -->">Edit Source</a></td>þ</tr>þ<tr>þ <td align="right">Item Subroutine:</td>þ <td><input type="text" name="item_sub" value="<!-- item_sub -->"> <!-- item_sub_msg --> <a target="RSS.BP_<!-- item_sub -->" href="/dbc/MVDB.WEB.ED?ed_file=RSS.BP&ed_item=<!-- item_sub -->">Edit Source</a></td>þ</tr>þ<tr>þ  <td align="right">Modes:</td>þ  <td><textarea name="feed_modes" rows="10" cols="50"><!-- feed_modes --></textarea></td>þ</tr>þ<!-- EXTRA -->þ<tr>þ<td colspan="2"><input type="submit" name="save_feed" value="Save">þ&nbsp;þ<input type="submit" name="cancel_edit" value="Cancel"></td> þ</tr>þ</table>þ</form>þ000B5Frss_admin_template.htmlþ0c2<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">þ<head>þ	<meta http-equiv="Content-Type" content="text/html; charset=<!--CHARACTER_SET-->"/>þ<link rel="stylesheet" href="/db/css/reset-fonts-grids.css" type="text/css" charset="utf-8" /> þ<link rel="stylesheet" href="/db/css/application.css" type="text/css" charset="utf-8" /> þ<link rel="StyleSheet" href="/db/css/jquery-ui.css" media="screen" type="text/css" /> þ þ<script src="/db/javascripts/jquery-1.3.2.min.js" type="text/javascript" charset="utf-8"></script>	þ<script src="/db/javascripts/jquery-ui-1.7.2.custom.min.js" type="text/javascript" charset="utf-8"></script>            	þ<script src="/db/javascripts/jquery.form.js" type="text/javascript" charset="utf-8"></script>    	        þ<script src="/db/javascripts/jquery.url.js" type="text/javascript" charset="utf-8"></script> þ		þ<script src="/db/javascripts/rss_admin.js" type="text/javascript"></script>þ<!--[if lte IE 7]><link href="/db/css/ie7.css" rel="stylesheet" type="text/css" media="screen" /><![endif]-->þ<!-- SITE_THEME -->þ<title>RSS Feed Admin</title>þ</head>þ<body>þ<div id="header">þ<!-- HEADER -->þ  <div id="logo">þ  	<img src="<!-- SITE_LOGO -->" alt="MultiValue Dashboard">þ  </div>þ</div>þþþ<div id="mainWrapper">þ	þ	<div id="rss-dialog" title="New RSS Feed">þ		<div id="rss-messages"></div>þ		<form id="rss-form" method="post" action="/dbc/RSS.MAINT">þ			<input id="feed_id" type="hidden" value="NEW" name="id"/>þ			<input type="hidden" value="save" name="action"/>þ			<input type="hidden" value="Save" name="save_feed"/>			þ			<table>þ			<tbody><tr>þ			 <td align="right">Feed ID:</td>þ			 <td><input id="new_id" type="text" value="" name="new_id"/></td>þ			</tr>þ			<tr>þ			 <td align="right">Name:</td>þ			 <td><input id="feed_name" type="text" value="" name="feed_name"/></td>þ			</tr>þ			<tr>þ			 <td align="right">Description:</td>þ			 <td><textarea id="feed_desc" cols="50" rows="5" name="feed_desc"></textarea></td>þ			</tr>þ			<tr>þ			 <td align="right">Select Subroutine:</td>þ			 <td><input id="select_sub" type="text" value="" name="sel_sub"/>  <a id="edit-sub-link" href="/dbc/MVDB.WEB.ED?ed_file=RSS.BP&amp;ed_item=" target="RSS.BP_">Edit Source</a></td>þ			</tr>þ			<tr>þ			 <td align="right">Item Subroutine:</td>þ			 <td><input id="item_sub" type="text" value="" name="item_sub"/>  <a id="edit-item-link" href="/dbc/MVDB.WEB.ED?ed_file=RSS.BP&amp;ed_item=" target="RSS.BP_">Edit Source</a></td>þ			</tr>þ			<tr>þ			  <td align="right">Modes:</td>þ			  <td><textarea id="feed_modes" cols="50" rows="10" name="feed_modes"></textarea></td>þ			</tr>þ			</tbody></table>þþ		</form>þ	</div>þþ<!-- ADMIN_MAIN -->þ</div>þ<div id="footer">þ    <div id="signature">MultiValue Dashboard - Copyright &copy; 2020 <a href="http://www.zumasys.com/products/multivalue-dashboard/?tldb">Zumasys</a>þ    </div>þ</div>þ</body>þ</html>0008E5RefreshSliderþ0c2<!-- outerTrackWrapper -->þ    þ<script type="text/javascript" language="javascript">þ  // <![CDATA[þ  // horizontal slider controlþ  var slider1 = new Control.Slider('handle1', 'track1', {þ    range: $R(0, 9),þ    values: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],þ    sliderValue: 1, // won't work if set to 0 due to a bug in script.aculo.usþ    onSlide: function(v) { showRefresh(v); },þ    onChange: function(v) { if ($('horizontal-slider')) {þ                    $('horizontal-slider').value = v; $('slider-form').submit(); þ                    }þ    }þ  });þ  function setSliderValue(slider, value) {þ    // due to onChange code above we need this or þ    // a 0 will be put in the text box when you delete the valueþ    //if (value == '') return;þ    if (isNaN(value)) {þ      slider.setValue(0.1);þ    } else {þ      slider.setValue(value);þ    }þ  }þ  function showRefresh(value) {þ    var dispRate = '';þ    switch (value) {þ      case 0:þ        dispRate = 'Auto-Refresh: Off';þ        break ;þ      case 1:þ        dispRate = 'Auto-Refresh: 15 seconds';þ        break ;þ      case 2:þ        dispRate = 'Auto-Refresh: 30 seconds';þ        break ;      þ      case 3:þ        dispRate = 'Auto-Refresh: 1 minute';þ        break ;þ      case 4:þ        dispRate = 'Auto-Refresh: 2 minutes';þ        break ;      þ      case 5:þ        dispRate = 'Auto-Refresh: 5 minutes';þ        break ;      þ      case 6:þ        dispRate = 'Auto-Refresh: 10 minutes';þ        break ;      þ      case 7:þ        dispRate = 'Auto-Refresh: 15 minutes';þ        break ;      þ      case 8:þ        dispRate = 'Auto-Refresh: 30 minutes';þ        break ;      þ      case 9:þ        dispRate = 'Auto-Refresh: 1 hour';þ        break ;      þ      default:þ        dispRate = 'Auto-Refresh: Off';þ        break ;þ    }þ    document.getElementById('dispRate').innerHTML = dispRate;þ  }þ  var refreshRate = '<!-- REFRESH_RATE -->';þ  showRefresh(parseInt(refreshRate));  þ  if (refreshRate != '') {þ    setSliderValue(slider1, refreshRate);þ  } else {þ    setSliderValue(slider1, 0.1);  þ  }þ  // ]]>þ</script>þ<form name="reForm" method="post" action="" id="slider-form">þ  <input type="hidden" id="horizontal-slider" name="refresh" value="<!-- REFRESH_RATE -->" />þ</form>         00026APORTAL.DOCUMENTATIONþ0c2  <br class="brClear" />þ  <div class="widget_content">þ<table width="100%" border="1" cellspacing=".01%" cellpadding=".01%">þ<tdead>þ<tr>þ<td width=100% align="center"><a href="/dbc/MVDB.MAIN?dbname=PORTAL RUN DOCUMENTATION">Running the Portal Dashboard Reports</a></td>þ</tr>þ<tr>þ<td width=100% align="center"><a href="/dbc/MVDB.MAIN?dbname=PORTAL.SETUP.DOCUMENTATION">Portal Reports Setup Documentation</a></td>þ</tr>þ<tr>þ<td width=100% align="center"><a href="/dbc/MVDB.MAIN?dbname=PORTAL.REPORTS.DOCUMENTATION">Glossary of Portal Dashboard Reports</a></td>þ</tr>þ</tdead>þ</table>þ</div>002FA4PORTAL.SETUP.DOCUMENTATIONþ0c2<html>þþ<head>þ<meta http-equiv=Content-Type content="text/html; charset=windows-1252">þ<meta name=Generator content="Microsoft Word 15 (filtered)">þ<style>þ<!--þ /* Font Definitions */þ @font-faceþ	{font-family:Wingdings;þ	panose-1:5 0 0 0 0 0 0 0 0 0;}þ@font-faceþ	{font-family:"Cambria Math";þ	panose-1:2 4 5 3 5 4 6 3 2 4;}þ@font-faceþ	{font-family:Calibri;þ	panose-1:2 15 5 2 2 2 4 3 2 4;}þ /* Style Definitions */þ p.MsoNormal, li.MsoNormal, div.MsoNormalþ	{margin-top:0in;þ	margin-right:0in;þ	margin-bottom:8.0pt;þ	margin-left:0in;þ	line-height:107%;þ	font-size:11.0pt;þ	font-family:"Calibri",sans-serif;}þp.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraphþ	{margin-top:0in;þ	margin-right:0in;þ	margin-bottom:8.0pt;þ	margin-left:.5in;þ	line-height:107%;þ	font-size:11.0pt;þ	font-family:"Calibri",sans-serif;}þp.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirstþ	{margin-top:0in;þ	margin-right:0in;þ	margin-bottom:0in;þ	margin-left:.5in;þ	margin-bottom:.0001pt;þ	line-height:107%;þ	font-size:11.0pt;þ	font-family:"Calibri",sans-serif;}þp.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddleþ	{margin-top:0in;þ	margin-right:0in;þ	margin-bottom:0in;þ	margin-left:.5in;þ	margin-bottom:.0001pt;þ	line-height:107%;þ	font-size:11.0pt;þ	font-family:"Calibri",sans-serif;}þp.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLastþ	{margin-top:0in;þ	margin-right:0in;þ	margin-bottom:8.0pt;þ	margin-left:.5in;þ	line-height:107%;þ	font-size:11.0pt;þ	font-family:"Calibri",sans-serif;}þ.MsoChpDefaultþ	{font-family:"Calibri",sans-serif;}þ.MsoPapDefaultþ	{margin-bottom:8.0pt;þ	line-height:107%;}þ@page WordSection1þ	{size:8.5in 11.0in;þ	margin:1.0in 1.0in 1.0in 1.0in;}þdiv.WordSection1þ	{page:WordSection1;}þ /* List Definitions */þ olþ	{margin-bottom:0in;}þulþ	{margin-bottom:0in;}þ-->þ</style>þþ</head>þþ<body lang=EN-US>þþ<div class=WordSection1>þþ<p class=MsoNormal><b><span style='font-size:14.0pt;line-height:107%'>PortalþSales Report Setup:</span></b></p>þþ<p class=MsoNormal>This setup process identifies the fields necessary forþderiving sales, gross profit, and margin numbers.  It allows for sales numbersþto be broken out by sales person and, if applicable, by branch and/or region.</p>þþ<p class=MsoNormal><b>Sales File Account</b>  Multi-value systems normallyþhave multiple accounts where data may reside. The sales reports will be drivenþby a file of sales.  This field needs the name of the account where that fileþresides.</p>þþ<p class=MsoNormal><b>Name of Sales File</b>  The name of the file containingþthe sales information.</p>þþ<p class=MsoNormal><b>Date of Sale Dict Name</b>  The name of the dictionaryþitem in the sales file that contains the date the sale was complete.</p>þþ<p class=MsoNormal><b>Month of Sale Dict Name</b>  The name of the dictionaryþitem in the sales file that displays the numeric value of the month the saleþwas completed.  If the system doesnt have this dictionary item, there shouldþbe one created using the Date of Sale Dict Name as a guide.</p>þþ<p class=MsoNormal><b>Year of Sale Dict Name </b> The name of the dictionaryþitem in the sales file that displays the 4 digit year the sale was completed.  Ifþthe system doesnt have this dictionary item, there should be one created usingþthe Date of Sale Dict Name as a guide.</p>þþ<p class=MsoNormal><b>Amount of Sale Dict Name</b>  The name of the dictionaryþitem in the sales file that contains the total amount of the sales transaction.þ This dictionary </p>þþ<p class=MsoNormal><b>Cost of Sale Dict Name</b>  The name of the dictionaryþitem in the sales file that contains the cost of the sales transaction.  Thisþis used for determining gross profit and margin.  If this information is notþavailable in the system, the field should be left blank, disabling reportsþassociated with gross profit and margin.</p>þþ<p class=MsoNormal><b>Salesman Dict Name</b>  The name of the dictionary itemþin the sales file that contains the primary salesman on the transaction.  Mostþsystems will have a salesman code in the sales file and another file thatþcontains the actual names of the salesmen.  This dictionary item should be oneþthat displays the actual name.  </p>þþ<p class=MsoNormal><b>Branch Dict Name</b>   The name of the dictionary itemþin the sales file that contains the branch being credited with theþtransaction.  Most systems will have a branch code in the sales file andþanother file that contains the actual names of the branches.  This dictionaryþitem should be one that displays the actual name.  This field only applies ifþsales can be broken out by a branch.  </p>þþ<p class=MsoNormal><b>Region Dict Name</b>   The name of the dictionary itemþin the sales file that contains the region being credited with theþtransaction.  Most systems will have a region code in the sales file andþanother file that contains the actual names of the regions.  This dictionaryþitem should be one that displays the actual name.  This field only applies ifþsales can be broken out by a region.  </p>þþ<p class=MsoNormal><b>Go</b>  No validation is made on Portal Sales ReportþSetup fields until this button is clicked.  When validating, checks are madeþfor:</p>þþ<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Valid account</p>þþ<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Valid file name in the account</p>þþ<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Existence of each of the dictionary names entered</p>þþ<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Salesman Dict Name looking to another file for the actual name ofþthe salesman.  An ignorable warning is issued if that is not the case.</p>þþ<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Branch Dict Name looking to another file for the actual name ofþthe branch.  An ignorable warning is issued if that is not the case.</p>þþ<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Region Dict Name looking to another file for the actual name ofþthe region.  An ignorable warning is issued if that is not the case.</p>þþ<p class=MsoNormal>&nbsp;</p>þþ<p class=MsoNormal><b><span style='font-size:14.0pt;line-height:107%'>Portal ARþReport Setup:</span></b></p>þþ<p class=MsoNormal>This setup process identifies the fields necessary for evaluatingþaccount receivables.  It breaks out statistics by amounts, aging categories, percentages,þand periods for comparison purposes.  It also identifies by customer whenþviewing most amounts owed, most days aged, and accounts with significant changesþin payment patterns.</p>þþ<p class=MsoNormal><b>AR File Account</b>  The AR reports will be driven by aþfile of receivables or invoices.  This field needs the name of the accountþwhere that file resides.</p>þþ<p class=MsoNormal><b>Name of AR File</b>  The name of the file containing theþreceivables with amounts and payment information.</p>þþ<p class=MsoNormal><b>Due Date Dict Name</b>  The name of the dictionary itemþin the AR file showing the due date of the receivable.</p>þþ<p class=MsoNormal><b>Date Paid Dict Name</b>  The name of the dictionary itemþin the AR file showing the date the receivable was paid.</p>þþ<p class=MsoNormal><b>Invoice Amount Dict Name</b>  The name of the dictionaryþitem in the AR file that contains the original amount owed. </p>þþ<p class=MsoNormal><b>Remaining Balance Dict Name</b>  The name of theþdictionary item in the AR file that contains the remaining balance. </p>þþ<p class=MsoNormal><b>Customer Dict Name</b>  The name of the dictionary itemþin the AR file that contains the customer.  Most systems will have a customerþcode in the AR file and another file that contains the actual names of the customers. þThis dictionary item should be one that displays the actual name.  </p>þþ<p class=MsoNormal><b>Go</b>  No validation is made on Portal AR Report Setupþfields until this button is clicked.  When validating, checks are made for:</p>þþ<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Valid account</p>þþ<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Valid file name in the account</p>þþ<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Existence of each of the dictionary names entered</p>þþ<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Customer Dict Name looking to another file for the actual name ofþthe salesman.  An ignorable warning is issued if that is not the case.</p>þþ<p class=MsoNormal>&nbsp;</p>þþ<p class=MsoNormal><b><span style='font-size:14.0pt;line-height:107%'>Portal APþReport Setup:</span></b></p>þþ<p class=MsoNormal>This setup process identifies the fields necessary for evaluatingþaccount payables.  It breaks out statistics by amounts, aging categories, and percentages.</p>þþ<p class=MsoNormal><b>AP File Account</b>  The AP reports will be driven by aþfile of payables.  This field needs the name of the account where that fileþresides.</p>þþ<p class=MsoNormal><b>Name of AP File</b>  The name of the file containing theþpayables with amounts and payment information.</p>þþ<p class=MsoNormal><b>Due Date Dict Name</b>  The name of the dictionary itemþin the AP file showing the due date of the payable.</p>þþ<p class=MsoNormal><b>Date Paid Dict Name</b>  The name of the dictionary itemþin the AP file showing the date the payable was paid.</p>þþ<p class=MsoNormal><b>Invoice Amount Dict Name</b>  The name of the dictionaryþitem in the AP file that contains the original amount owed. </p>þþ<p class=MsoNormal><b>Remaining Balance Dict Name</b>  The name of theþdictionary item in the AP file that contains the remaining balance. </p>þþ<p class=MsoNormal><b>Go</b>  No validation is made on Portal AP Report Setupþfields until this button is clicked.  When validating, checks are made for:</p>þþ<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Valid account</p>þþ<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Valid file name in the account</p>þþ<p class=MsoListParagraphCxSpLast style='text-indent:-.25in'><spanþstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;þ</span></span>Existence of each of the dictionary names entered</p>þþ<p class=MsoNormal>&nbsp;</p>þþ<p class=MsoNormal>&nbsp;</p>þþ<p class=MsoNormal>&nbsp;</p>þþ<p class=MsoNormal>&nbsp;</p>þþ</div>þþ</body>þþ</html>000666pdftemplateþ0c2<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">þ<head>þ    <meta http-equiv="Content-Type" content="text/html; charset=<!--CHARACTER_SET-->"/>þ    <link rel="stylesheet" href="/db/css/reset-fonts-grids.css" type="text/css" charset="utf-8" />þ    <link rel="stylesheet" href="/db/css/application.css" type="text/css" charset="utf-8" />þ    <!--[if lte IE 7]><link href="/db/css/ie7.css" rel="stylesheet" type="text/css" media="screen" /><![endif]-->þ        þ    <!-- SITE_THEME -->þ    þ    <!-- end styles -->þ    þ    þ    þ    <script type="text/javascript" src="/db/javascripts/prototype-1.6.1.js"></script>þ    <script type="text/javascript" src="/db/javascripts/jquery-1.3.2.min.js"></script>þ    <script type="text/javascript">jQuery.noConflict();</script>þ    <script type="text/javascript" src="/db/fw/fusioncharts.js"></script>þ    <script type="text/javascript" src="/db/javascripts/sortable.js"></script>þ    <script type="text/javascript" src="/db/javascripts/tablesort.js"></script>þ    <script type="text/javascript" src="/db/javascripts/grid-widget.js"></script>þ    <script type="text/javascript" src="/db/javascripts/printing.js"></script>þ    <script type="text/javascript" src="/db/javascripts/slider.js"></script>þ    þ    <title>MultiValue Dashboard</title>þ    þ</head>þ<body>þ<div style="clear:both"></div>þ<div id="logo">þ    <img src="<!-- SITE_LOGO -->" alt="MultiValue Dashboard">þ</div>þ<div id="dashboardWrapper">þ    <div id="dashboard">þ        <!-- DASHBOARD -->þ        <div class="clear"></div>þ    </div>þ    <div class="clear"></div>þ    <br/>þ</div>þ</body>þ</html>00022Bwidget_debug.htmlþ0c2<table width="100%">þ<tr><td>Widget Name:</td><td><!-- WIDGET_NAME --></td></tr>þ<tr><td>Widget Subroutine:</td><td><!-- WIDGET_SUB_NAME --> <!-- WIDGET_EDIT_LINK --></td></tr>þ</table>þ<!-- DEBUG_REASON --><br />þ<!-- REMEDY -->þRuntime errors for <!-- WIDGET_SUB_NAME --><br />þ<table width="100%"><tr>þ<th>Date / Time</th><th>User</th><th>Error</th>þ</tr>þ<!-- RUNTIME_ERRORS -->þ<table width="100%">þ<tr><td colspan="2">WIDGET.USER.DATA values:</td></tr>þ<tr><th>Position</th><th>Value</th></tr>þ<!-- WIDGET_USER_DATA -->þ</table>000F48pkg_list_template.htmlþ0c2<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">þ<head>þ<script src="/db/javascripts/jquery-1.3.2.min.js" type="text/javascript" charset="utf-8"></script>	þ    <script src="http://alpha.bravo:83/db/javascripts/jquery-ui-1.7.2.custom.min.js" type="text/javascript" charset="utf-8"></script>            	þ    <script src="http://alpha.bravo:83/db/javascripts/jquery.form.js" type="text/javascript" charset="utf-8"></script>    	        þ	<script src="http://alpha.bravo:83/db/javascripts/jquery.url.js" type="text/javascript" charset="utf-8"></script> þ	<script src="http://alpha.bravo:83/db/javascripts/initAdminTemplate.js" type="text/javascript" charset="utf-8"></script> þ	<script src="http://alpha.bravo:83/db/javascripts/sortable.js" type="text/javascript" charset="utf-8"></script> þ	<script src="http://alpha.bravo:83/db/javascripts/tablesort.js" type="text/javascript" charset="utf-8"></script> þ	þ	<script type="text/javascript"> þ		$(function() {þ			$("#tabs").tabs();þ			$("#accordion").accordion({ autoHeight: false });þ			$('#edit_dialog').dialog({ autoOpen: false, modal: true });þ			$('#edit_form').click(function() {þ				$('#edit_dialog').dialog('open');þ			});þ			$('#delete_dialog').dialog({ autoOpen: false, modal: true });þ			$('#delete_form').click(function() {þ				$('#delete_dialog').dialog('open');þ			});þ		});þ		þ	</script> þ	þ	<link rel="stylesheet" href="http://alpha.bravo:83/db/css/reset-fonts-grids.css" type="text/css" charset="utf-8" /> þ	<link rel="stylesheet" href="http://alpha.bravo:83/db/css/application.css" type="text/css" charset="utf-8" /> þ	<link rel="stylesheet" href="http://alpha.bravo:83/db/css/ingrid.css" type="text/css" charset="utf-8" /> þ    <link rel="StyleSheet" href="http://alpha.bravo:83/db/css/jquery-ui.css" media="screen" type="text/css" /> þ    <!--[if lte IE 7]><link href="/db/css/ie7.css" rel="stylesheet" type="text/css" media="screen" /><![endif]--> þ	 þ<!-- SITE_THEME -->þ<title>Package Management</title>þ</head>þ<body>þ<div id="edit_dialog"><p>þ      <form id="new-file-form" method="get" action="/dbc/MVPKG.MAIN"> þ      <div id="new-file-messages"></div> þ      <table><tbody>þ      <tr> þ        <td colspan="2">File:<input id="file-name" type="text" value="" name="file_name"/></td> þ      </tr>þ      <tr>þ        <td><input type="radio" name="file_dict" value="DICT" id="file-dict"></td><td>DICT</td>þ      </tr>þ      <tr>þ        <td><input type="radio" name="file_dict" value="DATA" id="file-dict"></td><td>DATA</td>þ      </tr>þ      <tr> þ        <td><input type="radio" name="items_type" vaue="savedlist" id="items-type"></td><td>Saved List<br/>þ        file:<input type="text" name="savedlist_file" id="savedlist-file"><br/>þ        list:<input type="text" name="savedlist_id" id="savedlist-id"></td>þ      </tr> þ      <tr> þ        <td><input type="radio" name="items_type" value="all" id="items-type"></td><td>All Items</td>þ      </tr> þ      <tr> þ        <td><input type="radio" name="items_type" value="items" id="items-type"></td> þ        <td>Item: <input type="text" name="items_items" id="items-items"></td> þ      </tr> þ      </tbody></table> þ      <input type="hidden" value="save_user" name="action"/> þ      </form> þ      <div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix">þ        <button type="button" class="ui-state-default ui-corner-all">Cancel</button>þ        <button type="button" class="ui-state-default ui-corner-all">Save</button>þ      </div>þ</p></div>þ<div id="header">þ<!-- HEADER -->þ  <div id="logo">þ  	<img src="<!-- SITE_LOGO -->" alt="MultiValue Dashboard">þ  </div>þ</div>þ<div id="mainWrapper">þ<!-- ADMIN_MAIN -->þ</div>þ</div>þ<div id="footer">þ    <div id="signature">MultiValue Dashboard - Copyright &copy; 2020 <a href="http://www.zumasys.com/products/multivalue-dashboard">Zumasys</a>þ    </div>þ</div>þ</body>þ</html>0007E2MVDB.DEFSþ0c00000B1Administratorþ0c21þAdminConfigýPDFConfigýDashboard License UsageýCode TemplatesýD3 Runtime ErrorsýSystem - SessionýShow Varsýþ1ý1ý1ý2ý2ý5ý5ýþ1ý1ý2ý1ý2ý1ý2ýþADMINýadminþAdminþþ30000091Chart Demoþ0c22þDemo-PieýDemo-SS LineýDemo-DoughnutýDemo-SS ColýDemo- MS Colþ2ý2ý2ý3ý3þ1ý2ý3ý1ý2þADMINýguestýadminþDemonstration ChartsþTheme 1þ1000062Demo Financial Companyþ0c21þDEMO FINANCIAL PICTUREýþ2ýþ1ýþADMINýguestýadminþDemo Financial Company00005CDEMO AVERAGE DAYS CHARTþ0c21þDEMO AVERAGE DAYS CHARTýþ2ýþ1ýþdummyþdisplay average days chart00003DDEMO NET INCOME CHARTþ0c21þDEMO NET INCOME CHARTýþ2ýþ1ýþdummy00005BDEMO REV.GP SALES CHARTþ0c21þDEMO REV.GP SALES CHARTþ2ýþ1ýþdummyþDisplay Rev.Gp Sales Chart000047DEMO SALES CHARTþ0c21þDEMO SALES CHARTýþ2ýþ1ýþdummyþDisplay Sales Chart000050DEMO SALES PERCENTSþ0c21þDEMO SALES PERCENTSýþ2ýþ1ýþdummyþDisplay Sales Percents000055Emailed Reportþ0c21þEmailed Reportýþ2ýþ1ýþþDisplay contents of an emailed report link000041Iconsþ0c21þIcon Galleryýþ1ýþ1ýþADMINýguestýadminþIcon Galleryþþ50000085PORTAL REPORTS SETUPþ0c21þPORTAL SALES REPORT SETUPýPORTAL AR REPORT SETUPýPORTAL AP REPORT SETUPþ2ý2ý2ýþ1ý2ý3ýþþPortal Reports Setup00003DPORTAL MARGINSþ0c21þPORTAL MARGINSþ2ýþ1ýþdummyþPortal Margins000046PORTAL AR REPORTSþ0c22þPORTAL AR REPORTSþ3ýþ1ýþdummyþPortal AR Reports00004FPORTAL SALES REPORTSþ0c21þPORTAL SALES REPORTSþ2ýþ1ýþdummyþPortal Sales Reports00003EPORTAL DASHBOARDþ0c21þPORTAL DASHBOARDþ2ýþ1ýþþPortal Dashboard000061PORTAL.SETUP.DOCUMENTATIONþ0c21þPORTAL SETUP DOCUMENTATIONþ2ýþ1ýþdummyþPortal Setup Documentation000068PORTAL.REPORTS.DOCUMENTATIONþ0c21þPORTAL.REPORTS.DOCUMENTATIONýþ2ýþ1ýþdummyþPortal Reports Documentation00005FPORTAL DASHBOARD DOCUMENTATIONþ0c23þPORTAL.DOCUMENTATIONýþ3ýþ1ýþþPortal Dashboard Documentation00005CPORTAL RUN DOCUMENTATIONþ0c21þPORTAL.RUN.DOCUMENTATIONýþ2ýþ1ýþdummyþPortal Run Documentation00007FDISPLAY PORTAL BALANCE PIE CHARTþ0c21þPORTAL AR REPORTSýPORTAL AP REPORTSþ2ý2ýþ1ý2ýþdummyþPie chart to display AR & AP balances0000B3DICT_MVDB.MAP.DATAþ0c0000022NAMEþ0c1Aþ0þMap NameþþþþþG0*1þLþ4000001FLONGþ0c1Aþ2þLong NameþþþþþþLþ25000023INTERNAL.IDþ0c1Aþ0þIDþþþþþG1*1þLþ10000021SHORTþ0c1Aþ1þShort NameþþþþþþLþ10046BE6MVDB.MAP.DATAþ0c0000023FrenchGuiana#GF.CY.CYþ0c2CYþCayenne000018Fiji#FJ.CE.RWþ0c2RWþRewa00001CMacau#MO.IL.COþ0c2COþColoane00001CChina2#CN.GDþ0c2GDþGuangdong000024FranceDepartment#FR.ESþ0c2ESþEssonne000026FranceDepartment#FR.FIþ0c2FIþFinistere000019Congo#CG.CUþ0c2CUþCuvette000019Algeria#DZ.ARþ0c2ARþAdrar00001AMacedonia#MK.STþ0c2STþStip00001AIndiana#057þ0c2HAþHamilton000016NewYork#029þ0c2ERþErie00001FNorthCarolina#097þ0c2IRþIredell000018Georgia#249þ0c2SCþSchley00001BIreland#017þ0c2MEþM&iacute;00002CNorthAmerica#019þ0c2KNþSt. Kitts &amp; Nevis000016Kansas#051þ0c2ELþEllis00001FSouthCarolina#023þ0c2CSþChester00001AIllinois#087þ0c2JHþJohnson00001AMissouri#007þ0c2AUþAudrain000024WorldwithCountries#146þ0c2IRþIreland00001CNorthDakota#021þ0c2DIþDickey000018Texas#079þ0c2COCþCochran000017Ohio#041þ0c2DLþDelaware000023NewMexico#013þ0c2DAþDo&ntilde;a Ana000018Nebraska#011þ0c2BOþBoone00001AWyoming#033þ0c2SHþSheridan000024Europewithcountries#015þ0c2GRþGreece000018Malaysia#001þ0c2JOþJohor000019Tennessee#101þ0c2LEþLewis00001EScotland#018þ0c2LAþLanarkshire000017NewWorld#191þ0c2IZþIraq000018Oklahoma#053þ0c2GNþGrant000014Iowa#105þ0c2JNþJones00001DAlaska#270þ0c2WHþWade Hampton000017Texas#441þ0c2TAYþTaylor000025NewCaledonia#NC.NO.PTþ0c2PTþPouembout000019Ontario#48þ0c2WAþWaterloo000019Montenegro#19þ0c2TIþTivat000019MiddleEast#14þ0c2SYþSyria000019Switzerland#26þ0c2JUþJura000023SouthEuropeanRegion#12þ0c2CSþSerbia000019NewWorld#39þ0c2DZþAlgeria00003AQuebec#11þ0c2GAþGasp&eacute;sie-&Icirc;les-de-la-Madeleine000014Kenya#02þ0c2COþCoast00001BPuertoRico#57þ0c2GMþGuayama00001ABahamas#15þ0c2HTþHope Town000017Japan#45þ0c2YAþYamagata000024NorwayRegion#13þ0c2OTþ&Oslash;stfold000026PolandCounties#PL.DS.LMþ0c2DLMþLegnica000027MarshallIsland#MH.MH.KWþ0c2KWþKwajalein000021Macedonia#MK.SUþ0c2SUþStudenicani00001FHongKong#HK.KIþ0c2KIþKwai Tsing000019Palau#PW.PEþ0c2PEþPeleliu000018Uganda#UG.BWþ0c2BWþBukwa00001CVietnam#VN.HYþ0c2HYþHung Yen00001EGambia#GM.URþ0c2URþUpper River000034Nigeria#NG.FCþ0c2FCþAbuja(Federal Capital Territory)00001BSenegal#SN.KLþ0c2KLþKaolack000025Morocco#MA.COþ0c2COþChaouia Ouardigha00001DBurma#MM.KNþ0c2KNþKayin State00001CMissouri#189þ0c2SOþSt. Louis000024Ireland#018þ0c2MOþMuineach&aacute;in000020NorthAmerica#020þ0c2LCþSt. Lucia00001DCalifornia#093þ0c2SYþSiskiyou000025Alaska#090þ0c2FAþFairbanks North Star000017Texas#261þ0c2KEDþKenedy00001DLouisiana#005þ0c2ASþAscension000018Georgia#069þ0c2CFþCoffee000022WorldwithCountries#147þ0c2ITþItaly000018Minnesota#121þ0c2POþPope00001AKentucky#105þ0c2HKþHickman000019Michigan#115þ0c2MRþMonroe00001AFlorida#033þ0c2ESþEscambia00001DMississippi#015þ0c2CRþCarroll000025Europewithcountries#016þ0c2HUþHungary000018Malaysia#002þ0c2KEþKedah000019Arkansas#005þ0c2BAþBaxter00001EEngland#001þ0c2BEþBedfordshire00001FWestVirginia#033þ0c2HIþHarrison00001DScotland#019þ0c2MIþMidlothian000019NewWorld#192þ0c2IEþIsrael00001BAsia3#034þ0c2PHþPhilippines000018Virginia#181þ0c2SRþSurry00001AColorado#013þ0c2BOþBoulder00001BSouthDakota#051þ0c2GRþGrant00001AAlabama#029þ0c2CBþCleburne00001ENorwayRegion#14þ0c2ROþRogaland00001BAustralia#VIþ0c2VIþVictoria00001BOntario#49þ0c2WEþWellington00001AMontenegro#20þ0c2ULþUlcinj00001EMiddleEast#15þ0c2TIþTajikistan000022SouthEuropeanRegion#13þ0c2ESþSpain000018NewWorld#40þ0c2AOþAngola00002BQuebec#12þ0c2CAþChaudi&egrave;re-Appalaches000016Kenya#03þ0c2EAþEastern000017Bahamas#16þ0c2INþInagua000018Japan#46þ0c2YMþYamaguchi00001DFiji#FJ.EA.LMþ0c2LMþLomaiviti000027PolandCounties#PL.PK.PMþ0c2PPMþPrzemysl00001CMacedonia#MK.TLþ0c2TLþBitola00001ARwanda#RW.ESþ0c2ESþEastern00001AUganda#UG.TYþ0c2TYþMityana00001BMacedonia#MK.CAþ0c2CAþCaska000026EquatorialGuinea#GQ.BSþ0c2BSþBioko Sur000015Iran#IR.ILþ0c2ILþIlam000021FranceDepartment#FR.EUþ0c2EUþEure000021FranceDepartment#FR.GAþ0c2GAþGard000023Mauritius#MU.PAþ0c2PAþPamplemousses000019Nigeria#NG.ENþ0c2ENþEnugu000022Algeria#DZ.ATþ0c2ATþAin Temouchent00001AAlgeria#DZ.BJþ0c2BJþBejaia000018Texas#443þ0c2TERþTerrell000019Indiana#059þ0c2HNþHancock000017NewYork#031þ0c2ESþEssex00001FNorthCarolina#099þ0c2JAþJackson00001BVirginia#001þ0c2ACþAccomack000019Georgia#251þ0c2SRþScreven000023Ireland#019þ0c2OFþUa F&aacute;ilghe000037NorthAmerica#021þ0c2VCþSt. Vincent &amp; the Grenadines00001AKansas#053þ0c2EWþEllsworth000024SouthCarolina#025þ0c2CTþChesterfield000017Illinois#089þ0c2KAþKane000018Missouri#009þ0c2BYþBarry000023WorldwithCountries#148þ0c2LVþLatvia00001CNorthDakota#023þ0c2DVþDivide000015Texas#081þ0c2COKþCoke000013Ohio#043þ0c2ERþErie000019Spain#001þ0c2ANþAndalucia000018NewMexico#015þ0c2EDþEddy00001CNebraska#013þ0c2BXþBox Butte00001AWyoming#035þ0c2SUþSublette000025Europewithcountries#017þ0c2ISþIceland00001BMalaysia#003þ0c2KLþKelantan00001BEngland#002þ0c2BRþBerkshire00001BTennessee#103þ0c2LIþLincoln000018Scotland#020þ0c2MOþMoray000019NewWorld#193þ0c2JOþJordan000018Oklahoma#055þ0c2GEþGreer000015Iowa#107þ0c2KEþKeokuk00001DColorado#014þ0c2BRþBroomfield000026NorwayRegion#15þ0c2SOþSogn og Fjordane000015Ontario#50þ0c2YOþYork000020Montenegro#21þ0c2ZAþ&#381;abljak00001AMiddleEast#16þ0c2TUþTurkey000023SouthEuropeanRegion#14þ0c2TKþTurkey000026USACentralRegion#46þ0c2SDþSouth Dakota000017NewWorld#41þ0c2BJþBenin000015Quebec#13þ0c2LVþLaval00001EPuertoRico#59þ0c2GLþGuayanilla00001CBahamas#17þ0c2LIþLong Island000018Japan#47þ0c2YNþYamanashi000023MarshallIsland#MH.MH.MEþ0c2MEþMejit000026Philippines#PH.SKþ0c2SKþSultan Kudarat00001FCoteDivoire#CI.SVþ0c2SVþSavanes000020Macedonia#MK.AVþ0c2AVþKavadartsi00001ARussia#RU.IVþ0c2IVþIvanovo000025Russia#RU.KBþ0c2KBþKabardino-Balkaria00001AEurope2#EU.PLþ0c2PLþPoland00001BQatar#QA.DAþ0c2DAþAd Dawhah00001BAlgeria#DZ.TLþ0c2TLþTlemcen000019Panama#PA.PNþ0c2PNþPanama000022Uzbekistan#UZ.QAþ0c2QAþKashkadarya000018Alabama#031þ0c2CFþCoffee000019Vermont#001þ0c2ADþAddison000022Ireland#020þ0c2ROþRos Com&aacute;n00002CNorthAmerica#022þ0c2TTþTrinidad &amp; Tobago00001BCalifornia#095þ0c2SOþSolano000015Texas#263þ0c2KETþKent00001ELouisiana#007þ0c2AUþAssumption00001AGeorgia#071þ0c2CQþColquitt00002AWorldwithCountries#149þ0c2LNþLiechtenstein00001AMinnesota#123þ0c2RMþRamsey00001AKentucky#107þ0c2HOþHopkins00001BMichigan#117þ0c2MNþMontcalm000019Florida#035þ0c2FLþFlagler000016Spain#002þ0c2ARþAragon00001FMississippi#017þ0c2CHþChickasaw000025Europewithcountries#018þ0c2IEþIreland000019Malaysia#004þ0c2MEþMelaka000019Arkansas#007þ0c2BEþBenton000021England#003þ0c2BUþBuckinghamshire00001EWestVirginia#035þ0c2JAþJackson00001DScotland#021þ0c2NAþNairnshire000019NewWorld#194þ0c2KUþKuwait000022Asia3#036þ0c2RUþRussian Federation000019Virginia#183þ0c2SSþSussex00001AColorado#015þ0c2CHþChaffee00001DSouthDakota#053þ0c2GEþGregory00001CWorld#NAþ0c2NAþNorth America000031NorwayRegion#16þ0c2STþS&oslash;r-Tr&oslash;ndelag000024Australia#WAþ0c2WAþWestern Australia000020MiddleEast#17þ0c2TXþTurkmenistan000023SouthEuropeanRegion#15þ0c2CYþCyprus00001ANewWorld#42þ0c2BWþBotswana000021Quebec#14þ0c2LAþLanaudi&egrave;re000016Kenya#05þ0c2NAþNairobi00001DBahamas#18þ0c2MCþMangrove Cay000019Jordan#JO.JAþ0c2JAþJarash000029CentralAfricanRepublic#CF.MBþ0c2MBþMbomou000026Philippines#PH.SLþ0c2SLþSouthern Leyte00001DMongolia#MN.OGþ0c2OGþOmnogovi00001DPhilippines#PH.AKþ0c2AKþAklan00001EPhilippines#PH.BAþ0c2BAþBataan000026Russia#RU.KCþ0c2KCþKarachay-Cherkessia000024Libya#LY.HZþ0c2HZþAl Hizam al Akhdar000020Algeria#DZ.TMþ0c2TMþTamanghasset000019Algeria#DZ.BLþ0c2BLþBlida000016Texas#445þ0c2TEYþTerry00001AIndiana#061þ0c2HRþHarrison00001ANewYork#033þ0c2FRþFranklin000020NorthCarolina#101þ0c2JOþJohnston00001CVirginia#003þ0c2ALþAlbemarle00001AGeorgia#253þ0c2SMþSeminole00001AIreland#021þ0c2SLþSligeach000024NorthAmerica#023þ0c2USþUnited States000017Kansas#055þ0c2FIþFinney000021SouthCarolina#027þ0c2CDþClarendon00001BIllinois#091þ0c2KNþKankakee000019Missouri#011þ0c2BRþBarton000026WorldwithCountries#150þ0c2LTþLithuania00001ANorthDakota#025þ0c2DNþDunn000018Texas#083þ0c2COLþColeman000018Ohio#045þ0c2FAþFairfield000018Spain#003þ0c2ASþAsturias000019NewMexico#017þ0c2GRþGrant000017Nebraska#015þ0c2BYþBoyd00001CWyoming#037þ0c2SWþSweetwater000023Europewithcountries#019þ0c2ITþItaly000022Malaysia#005þ0c2NSþNegeri Sembilan000020England#004þ0c2CAþCambridgeshire00001ATennessee#105þ0c2LOþLoudon000019Scotland#022þ0c2ORþOrkney00001ANewWorld#195þ0c2LBþLebanon000019Oklahoma#057þ0c2HAþHarmon000016Iowa#109þ0c2KOþKossuth00001ENorwayRegion#17þ0c2TEþTelemark000020Moldova#46þ0c2BAþB&#259;l&#355;i000026MiddleEast#18þ0c2AEþUnitedArabEmirates000029SouthEuropeanRegion#16þ0c2VAþVatican City00001FUSACentralRegion#48þ0c2TXþTexas00001ENewWorld#43þ0c2BFþBurkina Faso00001BQuebec#15þ0c2LUþLaurentides00001CKenya#06þ0c2NEþNorth Eastern00001CPuertoRico#61þ0c2GBþGuaynabo00001ABahamas#19þ0c2MGþMayaguana000022Macau#MO.MA.SAþ0c2SAþSanto Antonio000019Fiji#FJ.CE.SRþ0c2SRþSerua00001AMacau#MO.IL.CTþ0c2CTþCotai000019Ghana#GH.AHþ0c2AHþAshanti00001DPhilippines#PH.SMþ0c2SMþSamar000020Mongolia#MN.OHþ0c2OHþOvorkhangai00001EMacedonia#MK.BNþ0c2BNþBrvenica00001DPhilippines#PH.ALþ0c2ALþAlbay00001CRussia#RU.KDþ0c2KDþKrasnodar00001CMicronesia#FM.CHþ0c2CHþChuuk000019Guinea#GN.KAþ0c2KAþKankan000017Benin#BJ.DOþ0c2DOþDonga00001BAlgeria#DZ.TNþ0c2TNþTindouf00001DAlgeria#DZ.BMþ0c2BMþBoumerdes00001CSouthDakota#055þ0c2HAþHaakon000019Alabama#033þ0c2CRþColbert00001CVermont#003þ0c2BEþBennington000021Ireland#022þ0c2TIþTiobraid Arainn000020NorthAmerica#024þ0c2GLþGreenland00001BCalifornia#097þ0c2SMþSonoma000015Texas#265þ0c2KERþKerr00001DLouisiana#009þ0c2AVþAvoyelles00001AGeorgia#073þ0c2CUþColumbia000027WorldwithCountries#151þ0c2LUþLuxembourg00001CMinnesota#125þ0c2RLþRed Lake00001AKentucky#109þ0c2JAþJackson00001EMichigan#119þ0c2MOþMontmorency00001AFlorida#037þ0c2FRþFranklin00002BSpain#004þ0c2BAþBaleares (Balearic Islands)00001DMississippi#019þ0c2COþChoctaw000024Europewithcountries#020þ0c2LVþLatvia000019Malaysia#006þ0c2PAþPahang000018Arkansas#009þ0c2BOþBoone00001AEngland#005þ0c2CHþCheshire000020WestVirginia#037þ0c2JEþJefferson00001FScotland#023þ0c2PBþPeeblesshire000017NewWorld#196þ0c2MUþOman000019Asia3#038þ0c2SGþSingapore00001BVirginia#185þ0c2TAþTazewell00001BColorado#017þ0c2CEþCheyenne000020NewCaledonia#NC.NO.PYþ0c2PYþPoya00001BNorwayRegion#18þ0c2TRþTroms000016Moldova#47þ0c2CAþCahul00001EMiddleEast#19þ0c2UZþUzbekistan000022USASouthWestRegion#15þ0c2HIþHawaii000019NewWorld#44þ0c2BIþBurundi000028Quebec#16þ0c2MOþMont&eacute;r&eacute;gie000015Kenya#07þ0c2NYþNyanza00001FBahamas#20þ0c2MIþMoore's Island00001FLiberia#LR.GBþ0c2GBþGrand Bassa00001CMacedonia#MK.CEþ0c2CEþCentar00001BRussia#RU.KEþ0c2KEþKemerovo000019Guinea#GN.KBþ0c2KBþKoubia00001FCameroon#CM.NWþ0c2NWþNord-Ouest000021Lebanon#LE.JLþ0c2JLþMount Lebanon000021FranceDepartment#FR.GEþ0c2GEþGers000024Cambodia#KH.OCþ0c2OCþOddar Meancheay00001EAlgeria#DZ.TOþ0c2TOþTizi Ouzou000016Tonga#TO.EUþ0c2EUþ'Eua000026Kazakhstan#KZ.WKþ0c2WKþWest Kazakhstan000019Senegal#SN.LGþ0c2LGþLouga00001DTexas#447þ0c2THRþThrockmorton00001BIndiana#063þ0c2HDþHendricks000018NewYork#035þ0c2FUþFulton00001DNorthCarolina#103þ0c2JNþJones00001CVirginia#005þ0c2AEþAlleghany00001AGeorgia#255þ0c2SPþSpalding00001DIreland#023þ0c2WAþPort Lairge000022NorthAmerica#025þ0c2PRþPuerto Rico000015Kansas#057þ0c2FOþFord000020SouthCarolina#029þ0c2CLþColleton00001AIllinois#093þ0c2KDþKendall000018Missouri#013þ0c2BAþBates000026WorldwithCountries#152þ0c2MKþMacedonia00001ANorthDakota#027þ0c2EDþEddy000017Texas#085þ0c2CONþCollin000016Ohio#047þ0c2FYþFayette000015Spain#005þ0c2CEþCeuta00001DNewMexico#019þ0c2GUþGuadalupe000018Nebraska#017þ0c2BRþBrown000017Wyoming#039þ0c2TEþTeton00002BEuropewithcountries#021þ0c2LIþLiechtenstein000018Malaysia#007þ0c2PEþPerak00001AEngland#006þ0c2COþCornwall00001ATennessee#107þ0c2MCþMcMinn00001DScotland#024þ0c2PEþPerthshire000018NewWorld#197þ0c2OMþQatar000019Oklahoma#059þ0c2HRþHarper000012Iowa#111þ0c2LEþLee000019Asia3#039þ0c2LKþSri Lanka000019Wisconsin#001þ0c2ADþAdams000020NorwayRegion#19þ0c2VAþVest-Agder000023Moldova#48þ0c2CUþChi&#351;in&#259;u000019MiddleEast#20þ0c2YMþYemen00001ANewWorld#45þ0c2CMþCameroon000027Quebec#17þ0c2CQþCentre-du-Qu&eacute;bec00001AKenya#08þ0c2RVþRift Valley00001APuertoRico#63þ0c2GRþGurabo00001FBahamas#21þ0c2NWþNew Providence000021Macau#MO.MA.SCþ0c2SCþSao Lourenco000022MarshallIsland#MH.MH.MIþ0c2MIþMili00001CMacedonia#MK.UGþ0c2UGþStruga00001CSudan#SD.UNþ0c2UNþUpper Nile000026Kazakhstan#KZ.EKþ0c2EKþEast Kazakhstan000028Philippines#PH.ANþ0c2ANþAgusan del Norte000026Libya#LY.JIþ0c2JIþAl Jifarah(Al Jfara)00001CBotswana#BW.KWþ0c2KWþKweneng000019China2#CN.HAþ0c2HAþHainan000016Nauru#NR.IJþ0c2IJþIjuw00001AAlgeria#DZ.TPþ0c2TPþTipaza00001CSouthDakota#057þ0c2HMþHamlin000019Alabama#035þ0c2CNþConecuh000020Australia2#QLDþ0c2QLDþQueensland00001BVermont#005þ0c2CAþCaledonia000019Missouri#195þ0c2SAþSaline00001FIreland#024þ0c2WEþIarmh&iacute;000025NorthAmerica#026þ0c2KYþCayman Islands00001FCalifornia#099þ0c2SLþStanislaus000017Texas#267þ0c2KIMþKimble00001ELouisiana#011þ0c2BEþBeauregard000024Virginia#730þ0c2PBþPetersburg (City)000016Georgia#075þ0c2COþCook000022WorldwithCountries#153þ0c2MTþMalta00001BMinnesota#127þ0c2RWþRedwood00001CKentucky#111þ0c2JEþJefferson00001BMichigan#121þ0c2MUþMuskegon000019Florida#039þ0c2GAþGadsden000029Spain#006þ0c2CAþCanarias (Canary Islands)00001FMississippi#021þ0c2CLþClaiborne000027Europewithcountries#022þ0c2LTþLithuania000019Malaysia#008þ0c2PRþPerlis00001AArkansas#011þ0c2BRþBradley000019England#007þ0c2CUþCumbria00001EWestVirginia#039þ0c2KAþKanawha00001FScotland#025þ0c2REþRenfrewshire00001FNewWorld#198þ0c2SAþSaudi Arabia000019Virginia#187þ0c2WAþWarren00001EColorado#019þ0c2CLþClear Creek00001ENorwayRegion#20þ0c2VEþVestfold000027Moldova#49þ0c2SNþSt&acirc;nga Nistrului00001CNewWorld#46þ0c2CVþCape Verde000016Kenya#09þ0c2WEþWestern00001CBahamas#22þ0c2NBþNorth Abaco000025PolandCounties#PL.LU.LMþ0c2LLMþLublin000024MarshallIsland#MH.MH.MJþ0c2MJþMajuro00001FLiberia#LR.GDþ0c2GDþGrand Gedeh00001DGhana#GH.BAþ0c2BAþBrong-Ahafo000027Mauritania#MR.HCþ0c2HCþHodh Ech Chargui00001CMacedonia#MK.TRþ0c2TRþTearce00001AUganda#UG.UUþ0c2UUþKanungu000019Uganda#UG.WAþ0c2WAþWakiso000019Malawi#MW.SAþ0c2SAþSalima000019Russia#RU.KGþ0c2KGþKaluga000019Guinea#GN.KDþ0c2KDþKindia000018China2#CN.HBþ0c2HBþHebei00001AGambia#GM.WEþ0c2WEþWestern000022Bhutan#BT.WPþ0c2WPþWangdi Phodrang00001BWisconsin#003þ0c2ASþAshland000016Texas#449þ0c2TITþTitus000017Indiana#065þ0c2HYþHenry000019NewYork#037þ0c2GEþGenesee00001BNorthCarolina#105þ0c2LEþLee000021Maryland#510þ0c2BAþBaltimore City000019Virginia#007þ0c2AMþAmelia00001AGeorgia#257þ0c2SEþStephens00001DIreland#025þ0c2WXþLoch Garman000019Kansas#059þ0c2FRþFranklin000022SouthCarolina#031þ0c2DAþDarlington000017Illinois#095þ0c2KOþKnox000019Missouri#015þ0c2BTþBenton000024WorldwithCountries#154þ0c2MVþMoldova00001CNorthDakota#029þ0c2EMþEmmons00001ETexas#087þ0c2CSWþCollingsworth000024Virginia#550þ0c2CPþChesapeake (City)000017Ohio#049þ0c2FRþFranklin000019Spain#007þ0c2CNþCantabria00001BNewMexico#021þ0c2HAþHarding00001ANebraska#019þ0c2BFþBuffalo000017Wyoming#041þ0c2UIþUinta000028Europewithcountries#023þ0c2LUþLuxembourg00001FMalaysia#009þ0c2PPþPulau Pinang00001CEngland#008þ0c2DEþDerbyshire00001BTennessee#109þ0c2MYþMcNairy000026Scotland#026þ0c2RCþRoss &amp; Cromarty000018NewWorld#199þ0c2SYþSyria00001AOklahoma#061þ0c2HSþHaskell000013Iowa#113þ0c2LIþLinn00001ENorwayRegion#21þ0c2SVþSvalbard00001CMoldova#50þ0c2EDþEdine&#355;00002ANewWorld#47þ0c2CPþCentral African Republic00001BPuertoRico#65þ0c2HAþHatillo00001DBahamas#23þ0c2NNþNorth Andros000017Macau#MO.MA.SEþ0c2SEþSe00001BFiji#FJ.CE.TLþ0c2TLþTailevu000020Philippines#PH.SQþ0c2SQþSiquijor00001CMacedonia#MK.BRþ0c2BRþBerovo000027Macedonia#MK.CHþ0c2CHþCesinovo Oblesevo00001EPhilippines#PH.APþ0c2APþApayao00001DRussia#RU.KHþ0c2KHþKhabarovsk000019China2#CN.YNþ0c2YNþYunnan000029Guinea#GN.KEþ0c2KEþK&eacute;rouan&eacute;00001ETurkmenistan#TM.LEþ0c2LEþLebap00001AAlgeria#DZ.TRþ0c2TRþTiaret00001ANamibia#NA.ERþ0c2ERþErongo00001AColorado#021þ0c2COþConejos00001ASouthDakota#059þ0c2HNþHand000017Alabama#037þ0c2CSþCoosa00001CVermont#007þ0c2CHþChittenden00001BMissouri#197þ0c2SYþSchuyler000026Ireland#026þ0c2WIþCill Mhant&aacute;in00001BCalifornia#101þ0c2SUþSutter000015Texas#269þ0c2KINþKing00001DLouisiana#013þ0c2BIþBienville000018Georgia#077þ0c2CWþCoweta000023WorldwithCountries#155þ0c2MCþMonaco00001CMinnesota#129þ0c2REþRenville00001CKentucky#113þ0c2JSþJessamine00001AMichigan#123þ0c2NEþNewaygo00001BFlorida#041þ0c2GIþGilchrist000022Spain#008þ0c2CLþCastilla-La Mancha00001CMississippi#023þ0c2CKþClarke000027Europewithcountries#024þ0c2MKþMacedonia000018Malaysia#010þ0c2SAþSabah00001AArkansas#013þ0c2CAþCalhoun000017England#009þ0c2DVþDevon000020SouthAmerica#001þ0c2ARþArgentina00001CWestVirginia#041þ0c2LEþLewis000020Scotland#027þ0c2ROþRoxburghshire000025NewWorld#200þ0c2AEþUnitedArabEmirates000018Asia3#042þ0c2THþThailand000013USA#HIþ0c2HIþHawaii00001FNorwayRegion#22þ0c2JMþJan Mayen000023Moldova#51þ0c2GAþG&#259;g&#259;uzia000016NewWorld#48þ0c2TDþChad000020Bahamas#24þ0c2NEþNorth Eleuthera000017Fiji#FJ.EA.LUþ0c2LUþLau000026MarshallIsland#MH.MH.MLþ0c2MLþMaloelap000019Algeria#DZ.CHþ0c2CHþChlef00001DMauritania#MR.GOþ0c2GOþGorgol000020Philippines#PH.SRþ0c2SRþSorsogon00001EMacedonia#MK.BSþ0c2BSþBosilovo00001AMacedonia#MK.CIþ0c2CIþCair00001FPhilippines#PH.AQþ0c2AQþAntique00001FPhilippines#PH.BGþ0c2BGþBenguet00001ARussia#RU.KIþ0c2KIþKarelia00001BQatar#QA.USþ0c2USþUmm Salal000024FranceDepartment#FR.GIþ0c2GIþGironde00001EAlgeria#DZ.TSþ0c2TSþTissemsilt00002ASaoTomeandPrincipe#ST.AGþ0c2AGþAgua Grande00001AWisconsin#005þ0c2BAþBarron000024Alaska#280þ0c2WPþWrangell-Petersburg00001ATexas#451þ0c2TOGþTom Green000018Indiana#067þ0c2HOþHoward000018NewYork#039þ0c2GRþGreene00001ENorthCarolina#107þ0c2LNþLenoir00001AVirginia#009þ0c2AHþAmherst000019Georgia#259þ0c2STþStewart000022Ireland#027þ0c2NLþNorthern Ireland000016Kansas#061þ0c2GEþGeary00001ESouthCarolina#033þ0c2DIþDillon000017Illinois#097þ0c2LAþLake00001CMissouri#017þ0c2BNþBollinger000027WorldwithCountries#156þ0c2MGþMontenegro00001CNorthDakota#031þ0c2FOþFoster000019Texas#089þ0c2CORþColorado000015Ohio#051þ0c2FUþFulton00001FSpain#009þ0c2CYþCastilla y Leon00001BNewMexico#023þ0c2HIþHidalgo000017Nebraska#021þ0c2BUþBurt00001AWyoming#043þ0c2WAþWashakie000023Europewithcountries#025þ0c2MTþMalta00001AMalaysia#011þ0c2SRþSarawak000018England#010þ0c2DOþDorset000019Tennessee#111þ0c2MAþMacon00001ESouthAmerica#002þ0c2BOþBolivia00001FScotland#028þ0c2SEþSelkirkshire000018NewWorld#201þ0c2YMþYemen000019Oklahoma#063þ0c2HUþHughes000015Iowa#115þ0c2LOþLouisa000030MadagascarRegions#MG.FI.HMþ0c2HMþHaute Matsiatra00001EBahamas#25þ0c2RIþRagged Island00001FGuatemala#01þ0c2AVþAlta Verapaz000022Moldova#52þ0c2LAþL&#259;pu&#351;na00001AVenezuela#01þ0c2ZþAmazonas000019NewWorld#49þ0c2KMþComoros00001FPuertoRico#67þ0c2HOþHormigueros00001AAlgeria#DZ.BSþ0c2BSþBiskra000023Burma#MM.MDþ0c2MDþMandalay Division000018Jordan#JO.IRþ0c2IRþIrbid00001FMacedonia#MK.VAþ0c2VAþValandovo000027Philippines#PH.SSþ0c2SSþSurigao del Sur000017Niger#NE.DFþ0c2DFþDiffa000019China2#CN.XZþ0c2XZþXizang000025CoteDivoire#CI.BSþ0c2BSþBas-Sassandra000018China2#CN.HEþ0c2HEþHenan000022Madagascar#MG.ASþ0c2ASþAntsiranana00001CEurope2#EU.PTþ0c2PTþPortugal00001DVirginia#191þ0c2WSþWashington00001BColorado#023þ0c2CSþCostilla00001CSouthDakota#061þ0c2HSþHanson00001BAlabama#039þ0c2CVþCovington000017Vermont#009þ0c2ESþEssex00001BMissouri#199þ0c2SLþScotland00001BCalifornia#103þ0c2TEþTehama000017Alaska#100þ0c2HAþHaines000017Texas#271þ0c2KIEþKinney00001BLouisiana#015þ0c2BOþBossier00001AGeorgia#079þ0c2CDþCrawford000028WorldwithCountries#157þ0c2NLþNetherlands000018Minnesota#131þ0c2RIþRice00001AKentucky#115þ0c2JOþJohnson00001AMichigan#125þ0c2OKþOakland000018Florida#043þ0c2GLþGlades000019Spain#010þ0c2CTþCatalonia00001AMississippi#025þ0c2CYþClay000025Europewithcountries#026þ0c2MDþMoldova00001BMalaysia#012þ0c2SLþSelangor00001AArkansas#015þ0c2CRþCarroll000018England#011þ0c2DUþDurham00001DSouthAmerica#003þ0c2BRþBrazil00001EWestVirginia#043þ0c2LIþLincoln00001BScotland#029þ0c2SHþShetland00001ENewWorld#202þ0c2PRþPuerto Rico000018Bahamas#26þ0c2RCþRum Cay000011USA#IAþ0c2IAþIowa00001FGuatemala#02þ0c2BVþBaja Verapaz000016Moldova#53þ0c2ORþOrhei000020Mozambique#01þ0c2CDþCabo Delgado000023Venezuela#02þ0c2BþAnzo&aacute;tegui000023USACentralRegion#55þ0c2WIþWisconsin000018Portugal#02þ0c2AVþAveiro00001FNewWorld#50þ0c2CIþCote d Ivoire000019Algeria#DZ.BTþ0c2BTþBatna000025Mauritania#MR.HGþ0c2HGþHodh El Gharbi000029Philippines#PH.STþ0c2STþSurigao del Norte00001EEastTimor#TL.MTþ0c2MTþManatuto00001BMacedonia#MK.BUþ0c2BUþButel00001EMacedonia#MK.DAþ0c2DAþDebartsa000026Philippines#PH.ASþ0c2ASþAgusan del Sur00001FPhilippines#PH.BIþ0c2BIþBiliran00001CRussia#RU.KKþ0c2KKþKhakassia000027EquatorialGuinea#GQ.CSþ0c2CSþCentro Sur00001BQatar#QA.WAþ0c2WAþAl Wakrah00002BIran#IR.KBþ0c2KBþKohgiluyeh and Buyer Ahmed000029FranceDepartment#FR.HAþ0c2HAþHautes Alpes00002AFalklandIsland#NA.FKþ0c2FKþFalkland Island00001ACapeVerde#CV.PAþ0c2PAþPaul00002ABrazilRegion#BR.NEþ0c2NEþNorth East Region000014Iowa#117þ0c2LUþLucas00001CWisconsin#007þ0c2BYþBayfield000018Alaska#282þ0c2YAþYakutat000017Texas#453þ0c2TRAþTravis00001CIndiana#069þ0c2HUþHuntington00001ANewYork#041þ0c2HAþHamilton00001FNorthCarolina#109þ0c2LIþLincoln00001DVirginia#011þ0c2APþAppomattox000018Georgia#261þ0c2SUþSumter000015Kansas#063þ0c2GOþGove000022SouthCarolina#035þ0c2DOþDorchester000022Virginia#735þ0c2PQþPoquoson (City)00001BIllinois#099þ0c2LSþLa Salle000018Missouri#019þ0c2BOþBoone000023WorldwithCountries#158þ0c2NOþNorway000023NorthDakota#033þ0c2GVþGolden Valley000016Texas#091þ0c2COMþComal000015Ohio#053þ0c2GAþGallia000024Spain#011þ0c2CVþCommunidad Valencian000017NewMexico#025þ0c2LEþLea000019Nebraska#023þ0c2BLþButler000018Wyoming#045þ0c2WEþWeston000024Europewithcountries#027þ0c2MCþMonaco00001DMalaysia#013þ0c2TEþTerengganu000017England#012þ0c2ESþEssex00001BTennessee#113þ0c2MDþMadison00001CSouthAmerica#004þ0c2CLþChile000020Scotland#030þ0c2STþStirlingshire000021NewWorld#203þ0c2KYþCayman Islands00001AOklahoma#065þ0c2JAþJackson000029MadagascarRegions#MG.FI.HOþ0c2HOþIhorombe000014World8#01þ0c2ASþAsia00001DBahamas#27þ0c2SSþSan Salvador000020Guatemala#03þ0c2CMþChimaltenango000017Moldova#54þ0c2SOþSoroca000018Mozambique#02þ0c2GAþGaza000017Venezuela#03þ0c2CþApure000020Chile#01þ0c2VSþValpara&iacute;so000016Portugal#03þ0c2BEþBeja000032NewWorld#51þ0c2CDþDemocratic Republic of the Congo00001BPuertoRico#69þ0c2HUþHumacao00001AAlgeria#DZ.BUþ0c2BUþBouira00001EMacedonia#MK.UMþ0c2UMþKumanovo000020Macedonia#MK.VCþ0c2VCþVranestica00001CPhilippines#PH.SUþ0c2SUþSulu000020Tanzania#TZ.PNþ0c2PNþPemba North00001EHongKong#HK.KUþ0c2KUþKwun Tong000029CoteDivoire#CI.VBþ0c2VBþVallee du Bandama00001ALaos#LA.PHþ0c2PHþPhongsali00001BMacedonia#MK.DBþ0c2DBþDebar00001BRussia#RU.KLþ0c2KLþKalmykia000019Uganda#UG.DOþ0c2DOþDokolo00001EMadagascar#MG.TLþ0c2TLþToliara00001EVietnam#VN.KGþ0c2KGþKien Giang000020Mauritius#MU.PLþ0c2PLþPort Louis00001FVirginia#193þ0c2WEþWestmoreland00001AColorado#025þ0c2CRþCrowley00001DSouthDakota#063þ0c2HDþHarding00001AAlabama#041þ0c2CWþCrenshaw00001AVermont#011þ0c2FRþFranklin000018Missouri#201þ0c2SCþScott00001CCalifornia#105þ0c2TRþTrinity000018Texas#273þ0c2KLEþKleberg000019Louisiana#017þ0c2CAþCaddo000017Georgia#081þ0c2CPþCrisp000023WorldwithCountries#159þ0c2PLþPoland000018Minnesota#133þ0c2RCþRock000019Kentucky#117þ0c2KEþKenton000019Michigan#127þ0c2OAþOceana000016Florida#045þ0c2GUþGulf00001BSpain#012þ0c2EXþExtremadura00001DMississippi#027þ0c2CMþCoahoma000028Europewithcountries#028þ0c2MOþMontenegro000019Arkansas#017þ0c2CHþChicot000021England#013þ0c2GLþGloucestershire00001FSouthAmerica#005þ0c2COþColombia00001CWestVirginia#045þ0c2LOþLogan00001DScotland#031þ0c2SUþSutherland000016World8#02þ0c2EUþEurope00001CBahamas#28þ0c2SBþSouth Abaco00001DGuatemala#04þ0c2CQþChiquimula000018Moldova#55þ0c2TIþTighina00001DMozambique#03þ0c2INþInhambane000018Venezuela#04þ0c2DþAragua000045Chile#02þ0c2AIþAis&eacute;n del General Carlos Iba&ntilde;ezdel Campo000017Portugal#04þ0c2BRþBraga00001ANewWorld#52þ0c2DJþDjibouti000021Burma#MM.MGþ0c2MGþMagway Division000018Jordan#JO.KAþ0c2KAþKarak000021Macedonia#MK.VDþ0c2VDþKisela Voda000017Bhutan#BT.GAþ0c2GAþGasa000025CentralAmerica2#CE.GTþ0c2GTþGuatemala00001EPhilippines#PH.AUþ0c2AUþAurora000020Philippines#PH.BKþ0c2BKþBukidnon000021Russia#RU.KMþ0c2KMþKhantia-Mansia000020Madagascar#MG.TMþ0c2TMþToamasina00001BLibya#LY.KFþ0c2KFþAl Kufrah00001ACameroon#CM.OUþ0c2OUþOuest00001AIran#IR.KDþ0c2KDþKordestan000028FranceDepartment#FR.HCþ0c2HCþHaute Corse00001DVietnam#VN.KHþ0c2KHþKhanh Hoa00001CSyria#SY.HAþ0c2HAþAl Hasakah000023Madagascar#MG.AVþ0c2AVþAntananarivo000039DemocraticRepublicoftheCongo#CD.KCþ0c2KCþKasai Occidental00001DKyrgyzstan#KG.BAþ0c2BAþBatken00001COklahoma#067þ0c2JEþJefferson000013Iowa#119þ0c2LYþLyon000017Asia3#047þ0c2VNþVietnam000019Wisconsin#009þ0c2BRþBrown000018Texas#455þ0c2TRIþTrinity000019Indiana#071þ0c2JAþJackson00001ANewYork#043þ0c2HEþHerkimer000020NorthCarolina#111þ0c2MDþMcDowell00001CVirginia#013þ0c2ARþArlington000018Georgia#263þ0c2TBþTalbot000017Kansas#065þ0c2GHþGraham000021SouthCarolina#037þ0c2EDþEdgefield00001BIllinois#101þ0c2LWþLawrence00001BMissouri#021þ0c2BCþBuchanan000025WorldwithCountries#160þ0c2PTþPortugal000021NorthDakota#035þ0c2GFþGrand Forks000019Texas#093þ0c2COAþComanche000015Ohio#055þ0c2GEþGeauga000017Spain#013þ0c2GAþGalicia00001BNewMexico#027þ0c2LIþLincoln000017Nebraska#025þ0c2CAþCass000029Europewithcountries#029þ0c2NLþNetherlands00001FMalaysia#015þ0c2KLþKuala Lumpur00001BEngland#014þ0c2HAþHampshire00001ATennessee#115þ0c2MRþMarion00001ESouthAmerica#006þ0c2ECþEcuador00001FScotland#032þ0c2WEþWest Lothian000016World8#03þ0c2AFþAfrica00001DBahamas#29þ0c2SNþSouth Andros00002FWorldwithCountries#01þ0c2AGþAntigua and Barbuda000012USA#IDþ0c2IDþIdaho00001EGuatemala#05þ0c2PRþEl Progreso000018Moldova#56þ0c2UNþUngheni00001AMozambique#04þ0c2MPþMaputo000019Venezuela#05þ0c2EþBarinas00001AChile#03þ0c2ANþAntofagasta000021Portugal#05þ0c2BAþBragan&ccedil;a000017NewWorld#53þ0c2EGþEgypt000023Australia2#SAþ0c2SAþSouth Australia00001FBarbados#01þ0c2CCþChrist Church00001BPuertoRico#71þ0c2ISþIsabela000028PolandCounties#PL.MZ.OMþ0c2MOMþOstroleka00001DLiberia#LR.GKþ0c2GKþGrand Kru00001BMacedonia#MK.VEþ0c2VEþVeles000025Sudan#SD.WBþ0c2WBþWest Bahr Al Ghazal00001BYemen#YE.MRþ0c2MRþAl Mahrah00001CPhilippines#PH.CBþ0c2CBþCebu00001EGabon#GA.MOþ0c2MOþMoyen-Ogooue00001ERussia#RU.KNþ0c2KNþKaliningrad00001BChina2#CN.ZJþ0c2ZJþZhejiang000022FranceDepartment#FR.YOþ0c2YOþYonne00001EGuinea#GN.LAþ0c2LAþLab&eacute;000018China2#CN.GSþ0c2GSþGansu000017Iran#IR.KEþ0c2KEþKerman00002BFranceDepartment#FR.HDþ0c2HDþHauts-de-Seine00001EPakistan#PK.ISþ0c2ISþIslamabad00001DTurkmenistan#TM.MAþ0c2MAþMary00001FEurope2#EU.RDþ0c2RDþRhodes (Gr)000017Virginia#195þ0c2WIþWise000019Colorado#027þ0c2CUþCuster00001CSouthDakota#065þ0c2HGþHughes000019Alabama#043þ0c2CUþCullman00001CVermont#013þ0c2GIþGrand Isle00001AMissouri#203þ0c2SNþShannon00001BCalifornia#107þ0c2TUþTulare000015Texas#275þ0c2KNOþKnox00001DLouisiana#019þ0c2CLþCalcasieu000016Georgia#083þ0c2DAþDade000024WorldwithCountries#161þ0c2ROþRomania00001AMinnesota#135þ0c2ROþRoseau000018Kentucky#119þ0c2KNþKnott000019Michigan#129þ0c2OGþOgemaw00001AFlorida#047þ0c2HTþHamilton000018Spain#014þ0c2LAþLa Rioja00001ENewMexico#028þ0c2LAþLos Alamos00001CMississippi#029þ0c2CPþCopiah000024Europewithcountries#030þ0c2NOþNorway000019Malaysia#016þ0c2LAþLabuan000018Arkansas#019þ0c2CLþClark00001FEngland#015þ0c2HEþHerefordshire000027SouthAmerica#007þ0c2FKþFalkland Islands00001FWestVirginia#047þ0c2MDþMcDowell00001EScotland#033þ0c2WIþWigtonshire00001DWorld8#04þ0c2NAþNorth America000020Bahamas#30þ0c2SEþSouth Eleuthera000023WorldwithCountries#02þ0c2BSþBahamas00001CGuatemala#06þ0c2ESþEscuintla00001AMozambique#05þ0c2SOþSofala000020Venezuela#06þ0c2FþBol&iacute;var00001FChile#04þ0c2ARþAraucan&iacute;a000020Portugal#06þ0c2CBþCastelo Branco000023NewWorld#54þ0c2GQþEquatorial Guinea00001EBarbados#02þ0c2ANþSaint Andrew000017Fiji#FJ.NO.BUþ0c2BUþBua00001EFiji#FJ.NO.CKþ0c2CKþCakaudrova000019Laos#LA.OUþ0c2OUþOudomxai00001DMacedonia#MK.DEþ0c2DEþDolneni000017Sudan#SD.EBþ0c2EBþLakes000019Serbia#RS.MRþ0c2MRþMorava000017Russia#RU.KOþ0c2KOþKomi000024FranceDepartment#FR.HEþ0c2HEþHerault000025Cambodia#KH.OMþ0c2OMþBanteay Meanchey000019Tonga#TO.HAþ0c2HAþHa'apai00001BOklahoma#069þ0c2JOþJohnston000016Iowa#121þ0c2MAþMadison000016Asia3#049þ0c2TWþTaiwan00001BWisconsin#011þ0c2BUþBuffalo000016Texas#457þ0c2TYLþTyler000018Indiana#073þ0c2JSþJasper00001BNewYork#045þ0c2JEþJefferson00001DNorthCarolina#113þ0c2MAþMacon00001AVirginia#015þ0c2AUþAugusta00001CGeorgia#265þ0c2TAþTaliaferro000016Kansas#067þ0c2GTþGrant000021SouthCarolina#039þ0c2FAþFairfield000016Illinois#103þ0c2LEþLee000019Missouri#023þ0c2BUþButler000027WorldwithCountries#162þ0c2SMþSan Marino00001BNorthDakota#037þ0c2GRþGrant000017Texas#095þ0c2CCHþConcho000015Ohio#057þ0c2GRþGreene000016Spain#015þ0c2MAþMadrid000018NewMexico#029þ0c2LUþLuna000018Nebraska#027þ0c2CEþCedar000017Hawaii#001þ0c2HAþHawaii000024Europewithcountries#031þ0c2PLþPoland00001CMalaysia#017þ0c2PUþPutrajaya00001FEngland#016þ0c2HRþHertfordshire00001CTennessee#117þ0c2MSþMarshall000024SouthAmerica#008þ0c2GFþFrench Guiana00001DWorld8#05þ0c2SAþSouth America00001EBahamas#31þ0c2SWþSpanish Wells000024WorldwithCountries#03þ0c2BBþBarbados00001CGuatemala#07þ0c2GUþGuatemala00001BMozambique#06þ0c2NAþNampula00001AVenezuela#07þ0c2GþCarabobo000016Chile#05þ0c2ATþAtacama000019Portugal#07þ0c2COþCoimbra000019NewWorld#55þ0c2ERþEritrea00001EBarbados#03þ0c2GEþSaint George00001APuertoRico#73þ0c2JYþJayuya000029NewBrunswick#CA.NB.FCþ0c2FCþFundy Coastal00001FAlgeria#DZ.COþ0c2COþConstantine00001DSudan#SD.WDþ0c2WDþWest Darfur000019Gabon#GA.NGþ0c2NGþNgounie000020CoteDivoire#CI.DEþ0c2DEþDenguele00001BChina2#CN.HKþ0c2HKþHongKong00001BVietnam#VN.LAþ0c2LAþLong An000021Pakistan#PK.JKþ0c2JKþAzad Kashmir000024TrinidadandTobago#TT.MAþ0c2MAþMayaro000020SaudiArabia#SA.QSþ0c2QSþAl Qasim000020SaudiArabia#SA.RIþ0c2RIþAr Riyad000019Asia3#050þ0c2HKþHong Kong000018Virginia#197þ0c2WYþWythe000018Colorado#029þ0c2DEþDelta000020SouthDakota#067þ0c2HTþHutchinson000016Alabama#045þ0c2DAþDale00001AVermont#015þ0c2LAþLamoille000019Missouri#205þ0c2SHþShelby00001DCalifornia#109þ0c2TOþTuolumne000016Texas#277þ0c2LAMþLamar00001CLouisiana#021þ0c2CDþCaldwell000024Virginia#740þ0c2PMþPortsmouth (City)000018Georgia#085þ0c2DWþDawson000023WorldwithCountries#163þ0c2CSþSerbia00001DMinnesota#137þ0c2SLþSt. Louis000017Kentucky#121þ0c2KOþKnox00001CMichigan#131þ0c2ONþOntonagon000018Florida#049þ0c2HAþHardee000017Spain#016þ0c2MEþMelilla00001FMississippi#031þ0c2CGþCovington000026Europewithcountries#032þ0c2PTþPortugal000017Arkansas#021þ0c2CYþClay00001DSouthAmerica#009þ0c2GYþGuyana00001DWestVirginia#049þ0c2MAþMarion000022NewCaledonia#NC.SU.LFþ0c2LFþLa Foa000028Saskatchewan#CA.SK.NRþ0c2NRþNorth Region00001FWorld8#06þ0c2CAþCentral America000022Bahamas#32þ0c2WBþWest Grand Bahama000022WorldwithCountries#04þ0c2BZþBelize000020Guatemala#08þ0c2HUþHuehuetenango00001AMozambique#07þ0c2NIþNiassa000019Venezuela#08þ0c2HþCojedes000024Chile#06þ0c2BIþB&iacute;o-B&iacute;o00001EPortugal#08þ0c2EVþ&Eacute;vora00001ANewWorld#56þ0c2ETþEthiopia00001DBarbados#04þ0c2JMþSaint James000025PolandCounties#PL.WP.KMþ0c2WKMþKalisz000021Morocco#MA.FBþ0c2FBþFes-Boulemane00001FMacedonia#MK.VHþ0c2VHþVrapciste000020Sudan#SD.WEþ0c2WEþWest Equatoria00001DBhutan#BT.GEþ0c2GEþGeylegphug000031CentralAfricanRepublic#CF.MPþ0c2MPþOmbella-M'Poko000024CentralAmerica2#CE.HNþ0c2HNþHonduras000020Tanzania#TZ.PSþ0c2PSþPemba South00001DPhilippines#PH.BOþ0c2BOþBohol000019Malawi#MW.RUþ0c2RUþRumphi00001CRussia#RU.KQþ0c2KQþKamchatka00001BGuinea#GN.KNþ0c2KNþKoundara000023Kuwait#KW.MUþ0c2MUþMubarak Al Kabir00001FChina2#CN.HLþ0c2HLþHeilongjiang00002AFranceDepartment#FR.HGþ0c2HGþHaute Garonne00001BNigeria#NG.ZAþ0c2ZAþZamfara000019Togo#TG.MAþ0c2MAþMaritime000016Oklahoma#071þ0c2KAþKay000016Iowa#123þ0c2MHþMahaska000015Asia3#051þ0c2MOþMacau00001BWisconsin#013þ0c2BNþBurnett000017Texas#459þ0c2UPSþUpshur000015Indiana#075þ0c2JYþJay000017NewYork#047þ0c2KIþKings00001FNorthCarolina#115þ0c2MSþMadison000017Virginia#017þ0c2BAþBath00001AGeorgia#267þ0c2TTþTattnall000015Kansas#069þ0c2GYþGray000020SouthCarolina#041þ0c2FLþFlorence00001DIllinois#105þ0c2LIþLivingston00001BMissouri#025þ0c2CAþCaldwell000025WorldwithCountries#164þ0c2SKþSlovakia00001CNorthDakota#039þ0c2GNþGriggs000016Texas#097þ0c2CKEþCooke000027Virginia#560þ0c2CFþClifton Forge (City)000017Ohio#059þ0c2GUþGuernsey000016Spain#017þ0c2MUþMurcia00001CNewMexico#031þ0c2MKþMcKinley000018Nebraska#029þ0c2CHþChase000019Hawaii#003þ0c2HOþHonolulu000025Europewithcountries#033þ0c2ROþRomania000016England#018þ0c2KEþKent000019Tennessee#119þ0c2MUþMaury00001FSouthAmerica#010þ0c2PYþParaguay000017World8#07þ0c2OCþOceania000022WorldwithCountries#05þ0c2CAþCanada000019Guatemala#09þ0c2IZþIzabal000018Mozambique#08þ0c2TEþTete00001FVenezuela#09þ0c2YþDelta Amacuro000017Chile#07þ0c2COþCoquimbo000016Portugal#09þ0c2FAþFaro000017NewWorld#57þ0c2GAþGabon00001DTurkey#02þ0c2ADþAd&#305;yaman00001CBarbados#05þ0c2JNþSaint John000025PuertoRico#75þ0c2JDþJuana D&iacute;az000025MarshallIsland#MH.MH.NKþ0c2NKþNamorik000020Sudan#SD.EEþ0c2EEþEast Equatoria00001CGuinea#GN.KOþ0c2KOþKouroussa000021Guinea#GN.LEþ0c2LEþL&eacute;louma00001BLibya#LY.JUþ0c2JUþAl Jufrah000019Malawi#MW.BAþ0c2BAþBalaka00001FBotswana#BW.NEþ0c2NEþNorth East000027Singapore#SG.CSþ0c2CSþCentral Singapore00001DBurkinaFaso#BF.YGþ0c2YGþYagha000017Virginia#199þ0c2YOþYork000019Colorado#031þ0c2DNþDenver00001CMontana#001þ0c2BEþBeaverhead00001ASouthDakota#069þ0c2HYþHyde000018Alabama#047þ0c2DLþDallas000018Vermont#017þ0c2ORþOrange00001BMissouri#207þ0c2SDþStoddard00001CCalifornia#111þ0c2VEþVentura000015Texas#279þ0c2LABþLamb00001BLouisiana#023þ0c2CMþCameron000019Georgia#087þ0c2DEþDecatur000025WorldwithCountries#165þ0c2SIþSlovenia000019Minnesota#139þ0c2SCþScott000018Kentucky#123þ0c2LAþLarue00001AMichigan#133þ0c2OEþOsceola000018Florida#051þ0c2HEþHendry000017Spain#018þ0c2NAþNavarra00001CMississippi#033þ0c2DEþDeSoto000028Europewithcountries#034þ0c2SMþSan Marino00001BArkansas#023þ0c2CBþCleburne00001CEngland#019þ0c2LAþLancashire00001BSouthAmerica#011þ0c2PEþPeru00001FWestVirginia#051þ0c2MRþMarshall00001BWorld8#08þ0c2MEþMiddle East000026WorldwithCountries#06þ0c2CRþCosta Rica000019Guatemala#10þ0c2JAþJalapa000020Azerbaijan#01þ0c2ARþAb&#351;eron00001CMozambique#09þ0c2ZMþZambezia000018Chile#08þ0c2LIþO'Higgins000017NewWorld#58þ0c2GHþGhana00001ETurkey#03þ0c2AFþAfyonkarahisar00001EBarbados#06þ0c2JSþSaint Joseph000018Bahrain#01þ0c2CAþCapital000024PolandCounties#PL.WP.KOþ0c2WKOþKonin000025PolandCounties#PL.WP.LEþ0c2WLEþLeszno000025Uzbekistan#UZ.QRþ0c2QRþKarakalpakstan00001EBurkinaFaso#BF.GGþ0c2GGþGnagna00001CLiberia#LR.GPþ0c2GPþGbarpolu00001FMacedonia#MK.VJþ0c2VJþBogovinje00001AZambia#ZM.LPþ0c2LPþLuapula00001EPhilippines#PH.TRþ0c2TRþTarlac00001BYemen#YE.MWþ0c2MWþMl Mahwit000023Macedonia#MK.CSþ0c2CSþCucer Sandevo00001FPhilippines#PH.CGþ0c2CGþCagayan000018Russia#RU.KSþ0c2KSþKursk00002ACoteDivoire#CI.DHþ0c2DHþDix-Huit Montagnes000021China2#CN.GXþ0c2GXþGuangxi Zhuang000018China2#CN.HNþ0c2HNþHunan00001FIran#IR.KJþ0c2KJþSouth Khorasan00001CVietnam#VN.LDþ0c2LDþLam Dong00001BCapeVerde#CV.PIþ0c2PIþPraia00001DOklahoma#073þ0c2KIþKingfisher000015Iowa#125þ0c2MRþMarion00001BWisconsin#015þ0c2CAþCalumet00001EAlaska#290þ0c2YKþYukon-Koyukuk000016Texas#461þ0c2UPTþUpton00001BIndiana#077þ0c2JEþJefferson000017NewYork#049þ0c2LEþLewis00001ENorthCarolina#117þ0c2MTþMartin00001AVirginia#019þ0c2BEþBedford000018Georgia#269þ0c2TYþTaylor000018Kansas#071þ0c2GLþGreeley000022SouthCarolina#043þ0c2GEþGeorgetown000018Illinois#107þ0c2LOþLogan00001BMissouri#027þ0c2CWþCallaway000022WorldwithCountries#166þ0c2ESþSpain00001FNorthDakota#041þ0c2HEþHettinger000018Texas#099þ0c2CRYþCoryell000017Ohio#061þ0c2HAþHamilton00002BSpain#019þ0c2PAþPais Vasco (Basque Country)000018NewMexico#033þ0c2MOþMora000019Nebraska#031þ0c2CRþCherry000018Hawaii#005þ0c2KAþKalawao000024Europewithcountries#035þ0c2CSþSerbia000020England#020þ0c2LEþLeicestershire000019Tennessee#121þ0c2MIþMeigs00001FSouthAmerica#012þ0c2SRþSuriname000020WorldwithCountries#07þ0c2CUþCuba00001AGuatemala#11þ0c2JUþJutiapa000026Azerbaijan#02þ0c2ACþA&#287;cab&#601;di00001AMozambique#10þ0c2MNþManica00001FVenezuela#11þ0c2IþFalc&oacute;n000018Chile#09þ0c2LLþLos Lagos000018Portugal#11þ0c2GUþGuarda000018NewWorld#59þ0c2GNþGuinea00001ETurkey#04þ0c2AGþA&#287;r&#305;00001CBarbados#07þ0c2LUþSaint Lucy00001APuertoRico#77þ0c2JCþJuncos000018Bahrain#02þ0c2CEþCentral000024PolandCounties#PL.PD.LMþ0c2PLMþLomza00001CPanama#PA.SBþ0c2SBþKuna Yala000017Sudan#SD.WHþ0c2WHþUnity00001BRussia#RU.KTþ0c2KTþKostroma000018Tunisia#TN.SFþ0c2SFþSfax00001EOman#OM.SHþ0c2SHþAsh Sharqiyah000024Singapore#SG.EAþ0c2EAþEast Singapore000021Cambodia#KH.PHþ0c2PHþPreah Vihear00001CGhana#GH.UEþ0c2UEþUpper East00001AColorado#033þ0c2DOþDolores00001AMontana#003þ0c2BHþBig Horn00001DSouthDakota#071þ0c2JAþJackson000018Alabama#049þ0c2DEþDekalb00001AAsia#001þ0c2AFþAfghanistan000019Vermont#019þ0c2OLþOrleans000018Missouri#209þ0c2STþStone000019California#113þ0c2YOþYolo000017Alaska#110þ0c2JUþJuneau000019Texas#281þ0c2LAPþLampasas00001DLouisiana#025þ0c2CTþCatahoula000018Georgia#089þ0c2DKþDeKalb000023WorldwithCountries#167þ0c2SEþSweden00001DMinnesota#141þ0c2SHþSherburne000019Kentucky#125þ0c2LUþLaurel000019Michigan#135þ0c2OCþOscoda00001AFlorida#053þ0c2HNþHernando00001DMississippi#035þ0c2FOþForrest00001CPennsylvania#001þ0c2ADþAdams000026Europewithcountries#036þ0c2SKþSlovakia00001CArkansas#025þ0c2CVþCleveland00001EEngland#021þ0c2LIþLincolnshire00001ESouthAmerica#013þ0c2UYþUruguay00001CWestVirginia#053þ0c2MSþMason000027Manitoba#CA.MB.NRþ0c2NRþNorthern Region000019Bahrain#03þ0c2MUþMuharraq000024WorldwithCountries#08þ0c2DMþDominica00001FGuatemala#12þ0c2PEþPet&eacute;n00001EAzerbaijan#03þ0c2AMþA&#287;dam000020Mozambique#11þ0c2MTþMaputo(City)000019Venezuela#12þ0c2JþGuarico000037Chile#10þ0c2MAþMagallanes y la Ant&aacute;rtica Chilena00001FNewWorld#60þ0c2GWþGuinea-Bissau000016Turkey#05þ0c2AMþAmasya00001FBarbados#08þ0c2MIþSaint Michael000026PolandCounties#PL.PK.RMþ0c2PRMþRzeszow00001ANamibia#NA.HAþ0c2HAþHardap00001AAlgeria#DZ.DJþ0c2DJþDjelfa00001BBurma#MM.MOþ0c2MOþMon State00001EMacedonia#MK.VLþ0c2VLþVasilevo000021Philippines#PH.TTþ0c2TTþTawi-Tawi00001ATanzania#TZ.PWþ0c2PWþPwani000022Macedonia#MK.DKþ0c2DKþDemir Kapija00001FPhilippines#PH.BSþ0c2BSþBasilan000019Russia#RU.KUþ0c2KUþKurgan000025FranceDepartment#FR.YVþ0c2YVþYvelines00001AChina2#CN.GZþ0c2GZþGuizhou000018Nigeria#NG.YOþ0c2YOþYobe000016Syria#SY.HIþ0c2HIþHoms000025BrazilRegion#BR.NOþ0c2NOþNorth Region000018Oklahoma#075þ0c2KOþKiowa000017Iowa#127þ0c2MSþMarshall00001CWisconsin#017þ0c2CHþChippewa000017Texas#463þ0c2UVAþUvalde000016Asia#002þ0c2AMþArmenia00001AIndiana#079þ0c2JNþJennings00001CNewYork#051þ0c2LIþLivingston000023NorthCarolina#119þ0c2MKþMecklenburg000018Virginia#021þ0c2BLþBland000019Georgia#271þ0c2TFþTelfair00001AKansas#073þ0c2GWþGreenwood000022SouthCarolina#045þ0c2GRþGreenville00001CIllinois#109þ0c2MUþMcDonough000019Missouri#029þ0c2CMþCamden000028WorldwithCountries#168þ0c2CHþSwitzerland00001CNorthDakota#043þ0c2KIþKidder000017Texas#101þ0c2COTþCottle000016Ohio#063þ0c2HNþHancock000019NewMexico#035þ0c2OTþOtero00001BNebraska#033þ0c2CYþCheyenne000016Hawaii#007þ0c2KUþKauai000026Europewithcountries#037þ0c2SLþSlovenia000018England#022þ0c2LOþLondon00001ATennessee#123þ0c2MOþMonroe000020SouthAmerica#014þ0c2VEþVenezuela000019Bahrain#04þ0c2NOþNorthern00002AWorldwithCountries#09þ0c2DOþDominican Rep.000015USA#ILþ0c2ILþIllinois000021Guatemala#13þ0c2QZþQuetzaltenango000023Azerbaijan#04þ0c2ASþA&#287;da&#351;000016Venezuela#13þ0c2KþLara000014Chile#11þ0c2MLþMaule000022USASouthWestRegion#32þ0c2NVþNevada000018Portugal#13þ0c2LEþLeiria000017NewWorld#61þ0c2KEþKenya00001DBarbados#09þ0c2PEþSaint Peter000019PuertoRico#79þ0c2LJþLajas000019Nigeria#NG.GOþ0c2GOþGombe000020Uzbekistan#UZ.SAþ0c2SAþSamarkand000019Zambia#ZM.LSþ0c2LSþLusaka00001DMacedonia#MK.DLþ0c2DLþDelcevo000020Philippines#PH.BTþ0c2BTþBatangas000018Russia#RU.KVþ0c2KVþKirov00001EGuinea#GN.KSþ0c2KSþKissidougou000028FranceDepartment#FR.HLþ0c2HLþHaute Loire00001AColorado#035þ0c2DUþDouglas000018Montana#005þ0c2BLþBlaine00001DSouthDakota#073þ0c2JEþJerauld000018Alabama#051þ0c2ELþElmore000019Asia#003þ0c2AZþAzerbaijan000019Vermont#021þ0c2RUþRutland00001BMissouri#211þ0c2SUþSullivan000019California#115þ0c2YUþYuba000019Texas#283þ0c2LASþLa Salle00001DLouisiana#027þ0c2CBþClaiborne000017Georgia#091þ0c2DOþDodge000024WorldwithCountries#169þ0c2UAþUkraine00001AMinnesota#143þ0c2SBþSibley00001BKentucky#127þ0c2LWþLawrence000019Michigan#137þ0c2OSþOtsego00001BFlorida#055þ0c2HLþHighlands00001EMississippi#037þ0c2FRþFranklin000020Pennsylvania#003þ0c2ALþAllegheny000023Europewithcountries#038þ0c2ESþSpain00001BArkansas#027þ0c2CMþColumbia00001DWestVirginia#055þ0c2MEþMercer000019Bahrain#05þ0c2SOþSouthern000027WorldwithCountries#10þ0c2SVþEl Salvador000020Guatemala#14þ0c2QCþQuich&eacute;000020Azerbaijan#05þ0c2AFþA&#287;stafa000018Venezuela#14þ0c2LþMerida00002BChile#12þ0c2RMþSantiago Metropolitan Region000018Portugal#14þ0c2LIþLisboa000019NewWorld#62þ0c2LSþLesotho000017Turkey#07þ0c2ALþAntalya00001EBarbados#10þ0c2PHþSaint Philip000023WorldwithCountries#11þ0c2GDþGrenada000014USA#INþ0c2INþIndiana00001DGuatemala#15þ0c2REþRetalhuleu00001DNewZealand#E7þ0c2AUKþAuckland00001DAzerbaijan#06þ0c2AUþA&#287;su000019Venezuela#15þ0c2MþMiranda00001EChile#13þ0c2TAþTarapac&aacute;000019NewWorld#63þ0c2LIþLiberia000016Turkey#08þ0c2AVþArtvin00001EBarbados#11þ0c2THþSaint Thomas000019PuertoRico#81þ0c2LRþLares000023PolandCounties#PL.LD.LOþ0c2LLOþLodz00001DAlgeria#DZ.EBþ0c2EBþEl Bayadh00001FSudan#SD.WKþ0c2WKþWest Kurdufan000015Bhutan#BT.HAþ0c2HAþHa000021CentralAmerica2#CE.HTþ0c2HTþHaiti000021Macedonia#MK.DMþ0c2DMþDemir Hisar00001FPhilippines#PH.BUþ0c2BUþBulacan000017Niger#NE.DSþ0c2DSþDosso00001ERussia#RU.MCþ0c2MCþMoscow City000024Singapore#SG.WEþ0c2WEþWest Singapore000028FranceDepartment#FR.HMþ0c2HMþHaute Marne00001CKyrgyzstan#KG.TLþ0c2TLþTalas000025Mauritius#MU.PWþ0c2PWþPlaines Wilhems00001AOklahoma#077þ0c2LAþLatimer000014Iowa#129þ0c2MIþMills000019Wisconsin#019þ0c2CLþClark00001ATexas#465þ0c2VAVþVal Verde000019Indiana#081þ0c2JOþJohnson000019NewYork#053þ0c2MAþMadison000020NorthCarolina#121þ0c2MIþMitchell00001CVirginia#023þ0c2BOþBotetourt000019Georgia#273þ0c2TLþTerrell000019Kansas#075þ0c2HMþHamilton000021SouthCarolina#047þ0c2GWþGreenwood00001AIllinois#111þ0c2MHþMcHenry000021Missouri#031þ0c2CGþCape Girardeau00002BWorldwithCountries#170þ0c2UKþUnited Kingdom00001DNorthDakota#045þ0c2LMþLaMoure000016Texas#103þ0c2CRAþCrane000015Ohio#065þ0c2HRþHardin000018NewMexico#037þ0c2QUþQuay000017Nebraska#035þ0c2CLþClay000015Hawaii#009þ0c2MAþMaui000024Europewithcountries#039þ0c2SEþSweden000019England#024þ0c2NOþNorfolk00001ETennessee#125þ0c2MGþMontgomery000025WorldwithCountries#12þ0c2GTþGuatemala000026Guatemala#16þ0c2SAþSacatep&eacute;quez000022NewZealand#E8þ0c2BOPþBay of Plenty000025Azerbaijan#07þ0c2ABþAli Bayraml&#305;000019Venezuela#16þ0c2NþMonagas000025USASouthWestRegion#35þ0c2NMþNewMexico00001CPortugal#16þ0c2PAþPortalegre000017NewWorld#64þ0c2LRþLibya00001ATurkey#09þ0c2AYþAyd&#305;n000024PolandCounties#PL.MZ.PMþ0c2MPMþPlock000036DemocraticRepublicoftheCongo#CD.KNþ0c2KNþKinshasa City00002FCentralAfricanRepublic#CF.NMþ0c2NMþNana-Mambere000029Philippines#PH.CLþ0c2CLþCompostela Valley000019Malawi#MW.THþ0c2THþThyolo00001ERussia#RU.KXþ0c2KXþKrasnoyarsk00001CRussia#RU.LNþ0c2LNþLeningrad000028FranceDepartment#FR.HNþ0c2HNþHaute Saone00001CVietnam#VN.LIþ0c2LIþLai Chau00001BOman#OM.BAþ0c2BAþAl Batinah000018Syria#SY.HLþ0c2HLþAleppo00001BCambodia#KH.PLþ0c2PLþPailin000020CapeVerde#CV.PNþ0c2PNþPorto Novo000018Colorado#037þ0c2EAþEagle00001CMontana#007þ0c2BRþBroadwater00001BSouthDakota#075þ0c2JOþJones00001AAlabama#053þ0c2ESþEscambia000019Asia#005þ0c2BDþBangladesh00001CVermont#023þ0c2WAþWashington000018Missouri#213þ0c2TAþTaney000017Texas#285þ0c2LAVþLavaca00001DLouisiana#029þ0c2COþConcordia000017Georgia#093þ0c2DLþDooly000029WorldwithCountries#171þ0c2VAþVatican City00001BMinnesota#145þ0c2SAþStearns000016Kentucky#129þ0c2LEþLee000019Michigan#139þ0c2OTþOttawa00001EFlorida#057þ0c2HBþHillsborough00001CMississippi#039þ0c2GOþGeorge000020Pennsylvania#005þ0c2ARþArmstrong000029Europewithcountries#040þ0c2CHþSwitzerland000019Arkansas#029þ0c2CWþConway000022England#025þ0c2NRþNorthamptonshire00001EWestVirginia#057þ0c2MIþMineral000025NewCaledonia#NC.SU.MDþ0c2MDþMont-Dore000028NewCaledonia#NC.IL.OVþ0c2OVþOuv&eacute;a000025PuertoRico#83þ0c2LMþLas Mar&iacute;as000021WorldwithCountries#13þ0c2HTþHaiti00001DGuatemala#17þ0c2SMþSan Marcos00001FNewZealand#E9þ0c2CANþCanterbury00001AAzerbaijan#08þ0c2AAþAstara00001FVenezuela#17þ0c2OþNueva Esparta000017Portugal#17þ0c2POþPorto00001CNewWorld#65þ0c2MSþMadagascar00001ETurkey#10þ0c2BKþBal&#305;kesir000027NovaScotia#CA.NS.STþ0c2STþSunrise Trail000025SaudiArabia#SA.SHþ0c2SHþAsh Sharqiyah00001BEurope2#EU.ADþ0c2ADþAndorra00001EBurkinaFaso#BF.GMþ0c2GMþGourma000024PapuaNewGuinea#PG.MBþ0c2MBþMilne Bay00001DGuineaBissau#GW.GAþ0c2GAþGabu000026EquatorialGuinea#GQ.WNþ0c2WNþWele Nzas000020Philippines#PH.CMþ0c2CMþCamiguin000029Tibet#TI.XPþ0c2XPþXigaz&ecirc; Prefecture00001BRussia#RU.MEþ0c2MEþMariy-El00001DTunisia#TN.TAþ0c2TAþTataouine00001BVietnam#VN.KTþ0c2KTþKon Tum000016Syria#SY.HMþ0c2HMþHama00001BEurope2#EU.ROþ0c2ROþRomania00001AEurope2#EU.SEþ0c2SEþSweden00001BOklahoma#079þ0c2LFþLe Flore000017Iowa#131þ0c2MTþMitchell00001CWisconsin#021þ0c2COþColumbia00001ATexas#467þ0c2VAZþVan Zandt000015Asia#006þ0c2BTþBhutan000016Indiana#083þ0c2KNþKnox000018NewYork#055þ0c2MNþMonroe000022NorthCarolina#123þ0c2MGþMontgomery00001CVirginia#025þ0c2BRþBrunswick000018Georgia#275þ0c2THþThomas000017Kansas#077þ0c2HPþHarper00001FSouthCarolina#049þ0c2HAþHampton000019Illinois#113þ0c2MLþMcLean00001AMissouri#033þ0c2CRþCarroll000023WorldwithCountries#172þ0c2CYþCyprus00001BNorthDakota#047þ0c2LOþLogan000019Texas#105þ0c2CKTþCrockett000017Ohio#067þ0c2HIþHarrison00001ENewMexico#039þ0c2RAþRio Arriba000019Nebraska#037þ0c2COþColfax000025Europewithcountries#041þ0c2UAþUkraine000020England#026þ0c2NTþNorthumberland000019Tennessee#127þ0c2MEþMoore000028NewCaledonia#NC.NO.BEþ0c2BEþB&eacute;lep000024WorldwithCountries#14þ0c2HNþHonduras00001DGuatemala#18þ0c2SRþSanta Rosa000018Azerbaijan#09þ0c2BAþBaki00001CVenezuela#18þ0c2PþPortuguesa000021Portugal#18þ0c2SAþSantar&eacute;m000018NewWorld#66þ0c2MWþMalawi000017Turkey#11þ0c2BCþBilecik00001CSudan#SD.WNþ0c2WNþWhite Nile000021Macedonia#MK.CZþ0c2CZþCentar Zupa000027Philippines#PH.CNþ0c2CNþCamarines Norte000019Serbia#RS.NSþ0c2NSþNisava00001ARussia#RU.LPþ0c2LPþLipetsk00001BTunisia#TN.SLþ0c2SLþSiliana00001AGuinea#GN.MCþ0c2MCþMacenta000020SolomonIsland#SB.ISþ0c2ISþIsabel000018China2#CN.HUþ0c2HUþHubei00001DTunisia#TN.BAþ0c2BAþBen Arous00002CFranceDepartment#FR.HPþ0c2HPþHautes Pyrenees000017Syria#SY.IDþ0c2IDþIdlib000024TrinidadandTobago#TT.NAþ0c2NAþNariva000019Colorado#039þ0c2ELþElbert000018Montana#009þ0c2CAþCarbon00001FSouthDakota#077þ0c2KIþKingsbury000018Alabama#055þ0c2ETþEtowah000015Asia#007þ0c2BNþBrunei000019Vermont#025þ0c2WIþWindham000018Missouri#215þ0c2TEþTexas000014Texas#287þ0c2LEEþLee00001BLouisiana#031þ0c2DSþDe Soto000021Virginia#750þ0c2RAþRadford (City)00001BGeorgia#095þ0c2DUþDougherty000023WorldwithCountries#173þ0c2TKþTurkey00001AMinnesota#147þ0c2SEþSteele000019Kentucky#131þ0c2LSþLeslie00001FMichigan#141þ0c2PRþPresque Isle000018Florida#059þ0c2HMþHolmes00001CMississippi#041þ0c2GRþGreene00001DPennsylvania#007þ0c2BEþBeaver00002CEuropewithcountries#042þ0c2UKþUnited Kingdom00001CArkansas#031þ0c2CIþCraighead000021England#027þ0c2NGþNottinghamshire00001CWestVirginia#059þ0c2MNþMingo00001FPuertoRico#85þ0c2LPþLas Piedras000023WorldwithCountries#15þ0c2JMþJamaica000020Guatemala#19þ0c2SOþSolol&aacute;00001DNewZealand#F1þ0c2GISþGisborne00001BAzerbaijan#10þ0c2BLþBalakan000017Venezuela#19þ0c2RþSucre000020Portugal#19þ0c2SEþSet&uacute;bal000016NewWorld#67þ0c2MLþMali00001BTurkey#12þ0c2BGþBing&ouml;l000017Ghana#GH.TVþ0c2TVþVolta000023Europe2#EU.AFþ0c2AFþAland (Finland)00002CMorocco#MA.GBþ0c2GBþGharb-Chrarda Beni Hssen00001DChad#TD.HDþ0c2HDþHadjer-Lamis000021PapuaNewGuinea#PG.MDþ0c2MDþMadang00001ARussia#RU.MGþ0c2MGþMagadan00001BGuinea#GN.MDþ0c2MDþMandiana00001BCambodia#KH.POþ0c2POþPursat00001AOklahoma#081þ0c2LIþLincoln000015Iowa#133þ0c2MOþMonona00001CWisconsin#023þ0c2CRþCrawford000019Texas#469þ0c2VICþVictoria000016Asia#008þ0c2MMþBurma (00001BIndiana#085þ0c2KOþKosciusko00001CNewYork#057þ0c2MOþMontgomery00001DNorthCarolina#125þ0c2MOþMoore00001BVirginia#027þ0c2BUþBuchanan000016Georgia#277þ0c2TIþTift000017Kansas#079þ0c2HVþHarvey00001DSouthCarolina#051þ0c2HOþHorry000018Illinois#115þ0c2MAþMacon000019Missouri#035þ0c2CTþCarter00001DNorthDakota#049þ0c2MHþMcHenry000017Texas#107þ0c2CSBþCrosby00002AVirginia#570þ0c2COþColonial Heights (City)000014Ohio#069þ0c2HYþHenry00001DNewMexico#041þ0c2RSþRoosevelt000019Nebraska#039þ0c2CUþCuming00002AEuropewithcountries#043þ0c2VAþVatican City00001DEngland#028þ0c2OXþOxfordshire00001ATennessee#129þ0c2MNþMorgan000022WorldwithCountries#16þ0c2MXþMexico000020Guatemala#20þ0c2SUþSuchitepequez000020NewZealand#F2þ0c2HKBþHawke's Bay000020Egypt_346255#01þ0c2ALþAlexandria000019Azerbaijan#11þ0c2BRþBarda000019Venezuela#20þ0c2SþTachira000022Portugal#20þ0c2VCþViana do Castelo00001CNewWorld#68þ0c2MRþMauritania000016Turkey#13þ0c2BTþBitlis000022MarshallIsland#MH.MH.NUþ0c2NUþNamu000025NovaScotia#CA.NS.CBþ0c2CBþCape Breton000037DemocraticRepublicoftheCongo#CD.KRþ0c2KRþKasai Oriental000019Senegal#SN.MTþ0c2MTþMatam000024Morocco#MA.GCþ0c2GCþGrand Casablanca00001EMauritania#MR.INþ0c2INþInchiri00001DMacedonia#MK.DRþ0c2DRþDrugovo00001DPhilippines#PH.CPþ0c2CPþCapiz00001FGabon#GA.OIþ0c2OIþOgooue-Ivindo000017Guinea#GN.LOþ0c2LOþLola000020Swaziland#SZ.SHþ0c2SHþShiselweni00001FIran#IR.KSþ0c2KSþNorth Khorasan000026FranceDepartment#FR.HRþ0c2HRþHaut Rhin00001FCambodia#KH.PPþ0c2PPþPhnom Penh00001AColorado#041þ0c2EPþEl Paso000018Montana#011þ0c2CRþCarter00001ASouthDakota#079þ0c2LAþLake000019Alabama#057þ0c2FAþFayette000017Asia#009þ0c2KHþCambodia000019Vermont#027þ0c2WNþWindsor000019Missouri#217þ0c2VEþVernon000015Texas#289þ0c2LEOþLeon000024Louisiana#033þ0c2EBþEast Baton Rouge000019Georgia#097þ0c2DGþDouglas000026WorldwithCountries#175þ0c2AUþAustralia00001BMinnesota#149þ0c2STþStevens00001AKentucky#133þ0c2LTþLetcher00001CMichigan#143þ0c2ROþRoscommon00001EFlorida#061þ0c2IRþIndian river00001DMississippi#043þ0c2GEþGrenada00001EPennsylvania#009þ0c2BDþBedford000024Europewithcountries#044þ0c2CYþCyprus00001BArkansas#033þ0c2CFþCrawford000021WestVirginia#061þ0c2MLþMonongalia000020PuertoRico#87þ0c2LZþLo&iacute;za000025WorldwithCountries#17þ0c2NIþNicaragua000025Guatemala#21þ0c2TOþTotonicap&aacute;n000026NewZealand#F3þ0c2MWTþManawatu-Wanganui00001BEgypt_346255#02þ0c2ANþAswan000021Azerbaijan#12þ0c2BQþBeyl&#601;qan00001CSanMarino#01þ0c2ACþAcquaviva00001AVenezuela#21þ0c2TþTrujillo00001BPortugal#21þ0c2VRþVila Real000019NewWorld#69þ0c2MAþMorocco000014Turkey#14þ0c2BLþBolu000033NorthWestTerritories#CA.NT.NCþ0c2NCþNahanni Country00001FMacau#MO.MA.SZþ0c2SZþSao Lazaro000028SaoTomeandPrincipe#ST.CGþ0c2CGþCantagalo00001DSaudiArabia#SA.TBþ0c2TBþTabuk00001ASriLanka#LK.GLþ0c2GLþGalle00001FSriLanka#LK.HBþ0c2HBþHambantota000020SaudiArabia#SA.BAþ0c2BAþAl Bahah00001ATanzania#TZ.RKþ0c2RKþRukwa00001BLibya#LY.MBþ0c2MBþAl Margab00001BMalawi#MW.BLþ0c2BLþBlantyre00001ATunisia#TN.ANþ0c2ANþAriana000029FranceDepartment#FR.HSþ0c2HSþHaute Savoie000018Oklahoma#083þ0c2LOþLogan000015Iowa#135þ0c2MNþMonroe000018Wisconsin#025þ0c2DAþDane000017Texas#471þ0c2WAKþWalker000014Asia#010þ0c2CNþChina00001AIndiana#087þ0c2LAþLagrange000018NewYork#059þ0c2NAþNassau00001CNorthCarolina#127þ0c2NAþNash00001DVirginia#029þ0c2BCþBuckingham000018Georgia#279þ0c2TMþToombs000018Kansas#081þ0c2HSþHaskell00001ESouthCarolina#053þ0c2JAþJasper00001BIllinois#117þ0c2MPþMacoupin000017Missouri#037þ0c2CSþCass000021WorldwithCountries#176þ0c2FJþFiji00001ENorthDakota#051þ0c2MIþMcIntosh00001ATexas#109þ0c2CUBþCulberson000017Ohio#071þ0c2HGþHighland00001CNewMexico#043þ0c2SAþSandoval000019Nebraska#041þ0c2CSþCuster000024Europewithcountries#045þ0c2TKþTurkey00001CEngland#030þ0c2SHþShropshire000019Tennessee#131þ0c2OBþObion000026MadagascarRegions#MG.MA.SFþ0c2SFþSofia000022WorldwithCountries#18þ0c2PAþPanama000019Guatemala#22þ0c2ZAþZacapa000020NewZealand#F4þ0c2MBHþMarlborough00001BEgypt_346255#03þ0c2ATþAsyut000022Azerbaijan#13þ0c2BSþBil&#601;suvar00001ESanMarino#02þ0c2CHþChiesanuova000019Venezuela#22þ0c2UþYaracuy000017Portugal#22þ0c2VIþViseu00001CNewWorld#70þ0c2MZþMozambique000016Turkey#15þ0c2BDþBurdur000030DemocraticRepublicoftheCongo#CD.KTþ0c2KTþKatanga00001FUzbekistan#UZ.SIþ0c2SIþSirdaryo000025Morocco#MA.GEþ0c2GEþGuelmim Es Semara000017Sudan#SD.WRþ0c2WRþWarab00001ASamoa #WS.PAþ0c2PAþPalauli000019Serbia#RS.PCþ0c2PCþPcinja00001BVietnam#VN.LOþ0c2LOþLao Cai00001EThailand#TH.KKþ0c2KKþKhon Kaen00001DWestVirginia#063þ0c2MOþMonroe00001EAustralia2#TASþ0c2TASþTasmania00001AColorado#043þ0c2FRþFremont000019Montana#013þ0c2CSþCascade00001ESouthDakota#081þ0c2LWþLawrence00001AAlabama#059þ0c2FRþFranklin000019Missouri#219þ0c2WAþWarren000018Texas#291þ0c2LIBþLiberty000020Louisiana#035þ0c2ECþEast Carroll000017Georgia#099þ0c2EAþEarly000025WorldwithCountries#177þ0c2KIþKiribati000019Minnesota#151þ0c2SWþSwift000018Kentucky#135þ0c2LIþLewis00001AMichigan#145þ0c2SAþSaginaw000019Florida#063þ0c2JSþJackson00001DMississippi#045þ0c2HAþHancock00001CPennsylvania#011þ0c2BRþBerks000024Europewithcountries#046þ0c2RUþRussia00001DArkansas#035þ0c2CTþCrittenden00001AEngland#031þ0c2SOþSomerset000015Turkey#16þ0c2BUþBursa00001CPuertoRico#89þ0c2LQþLuquillo000031WorldwithCountries#19þ0c2KNþSt. Kitts &amp; Nevis00001BNewZealand#F5þ0c2NSNþNelson00001DEgypt_346255#04þ0c2BHþBeheira000026Azerbaijan#14þ0c2CBþC&#601;bray&#305;l00001CSanMarino#03þ0c2DOþDomagnano000017Venezuela#23þ0c2VþZulia000019NewWorld#71þ0c2NAþNamibia00001FBurkinaFaso#BF.YTþ0c2YTþYatenga00001DMacedonia#MK.VVþ0c2VVþVevcani000016Chad#TD.GRþ0c2GRþGuera000025Philippines#PH.CSþ0c2CSþCamarines Sur00001DGabon#GA.OLþ0c2OLþOgooue-Lolo000019Serbia#RS.PDþ0c2PDþDanube000020Iran#IR.KVþ0c2KVþRazavi Khorasan00001CThailand#TH.KLþ0c2KLþKalasin00001DThailand#TH.LBþ0c2LBþLop Buri00001CEurope2#EU.SKþ0c2SKþSlovakia00001AEurope2#EU.RUþ0c2RUþRussia00001DMauritius#MU.SAþ0c2SAþSavanne00001BTennessee#133þ0c2OVþOverton000017Oklahoma#085þ0c2LVþLove000019Iowa#137þ0c2MGþMontgomery000019Wisconsin#027þ0c2DOþDodge000017Texas#473þ0c2WALþWaller000019Asia#012þ0c2TPþEast Timor000016Indiana#089þ0c2LKþLake00001ANewYork#061þ0c2NYþNew York000023NorthCarolina#129þ0c2NHþNew Hanover00001BVirginia#031þ0c2CAþCampbell000017Georgia#281þ0c2TOþTowns000019Kansas#083þ0c2HGþHodgeman00001FSouthCarolina#055þ0c2KEþKershaw00001AIllinois#119þ0c2MIþMadison000018Missouri#039þ0c2CEþCedar00002DWorldwithCountries#178þ0c2MHþMarshall Islands00001ENorthDakota#053þ0c2MKþMcKenzie000017Texas#111þ0c2DALþDallam000016Ohio#073þ0c2HOþHocking00001CNewMexico#045þ0c2SJþSan Juan000019Nebraska#043þ0c2DAþDakota000026Europewithcountries#047þ0c2SCþScotland00001FEngland#032þ0c2STþStaffordshire000022NewCaledonia#NC.NO.CAþ0c2CAþCanala000020Turkey#17þ0c2CKþ&Ccedil;anakkale000025WorldwithCountries#20þ0c2LCþSt. Lucia00001ENewZealand#F6þ0c2NTLþNorthland00001FEgypt_346255#05þ0c2BNþBeni Suef000022Azerbaijan#15þ0c2CLþC&#601;lilabad00001ASanMarino#04þ0c2FAþFaetano000026Venezuela#24þ0c2WþDependencies Federal000017NewWorld#72þ0c2NEþNiger00002AEurope2#EU.BAþ0c2BAþBosnia and Herzegovina00001FUzbekistan#UZ.TAþ0c2TAþTashkent000019Ghana#GH.CPþ0c2CPþCentral00001ALesotho#LS.LEþ0c2LEþLeribe000021Panama#PA.BCþ0c2BCþBocas del Toro00001CTanzania#TZ.SDþ0c2SDþSingida000023Philippines#PH.CTþ0c2CTþCatanduanes000021Gabon#GA.OMþ0c2OMþOgooue-Maritime000018Serbia#RS.PEþ0c2PEþPecki000029FranceDepartment#FR.HVþ0c2HVþHaute Vienne00002BFranceDepartment#FR.ILþ0c2ILþIndre et Loire00001CEurope2#EU.SLþ0c2SLþSlovenia00001DWestVirginia#065þ0c2MGþMorgan00001BColorado#045þ0c2GAþGarfield00001AMontana#015þ0c2CHþChouteau00001DSouthDakota#083þ0c2LIþLincoln000018Alabama#061þ0c2GEþGeneva000016Asia#013þ0c2GEþGeorgia00001DMissouri#221þ0c2WSþWashington000020Alaska#122þ0c2KEþKenai Peninsula00001ATexas#293þ0c2LIMþLimestone000022Louisiana#037þ0c2EFþEast Feliciana000018Georgia#101þ0c2ECþEchols000027WorldwithCountries#179þ0c2FMþMicronesia000018Minnesota#153þ0c2TOþTodd00001AKentucky#137þ0c2LNþLincoln00001CMichigan#147þ0c2SCþSt. Clair00001BFlorida#065þ0c2JEþJefferson00001EMississippi#047þ0c2HRþHarrison00001CPennsylvania#013þ0c2BLþBlair000025Europewithcountries#048þ0c2ENþEngland000018Arkansas#037þ0c2CSþCross000019England#033þ0c2SUþSuffolk000019NewWorld#73þ0c2NGþNigeria000027USANorthEastRegion#09þ0c2CTþConnecticut000021PuertoRico#91þ0c2MTþManat&iacute;00003CWorldwithCountries#21þ0c2VCþSt. Vincent &amp; the Grenadines00001ANewZealand#F7þ0c2OTAþOtago00001BEgypt_346255#06þ0c2CAþCairo00002BAzerbaijan#16þ0c2DSþDa&#351;k&#601;s&#601;n00001DSanMarino#05þ0c2FIþFiorentino000022Venezuela#25þ0c2AþDistrito Capital00001EEurope2#EU.SMþ0c2SMþSan Marino000021Kyrgyzstan#KG.DAþ0c2DAþJalal Abad00001BEurope2#EU.ALþ0c2ALþAlbania000019Jordan#JO.MAþ0c2MAþMafraq00001BRussia#RU.MMþ0c2MMþMurmansk00001ATunisia#TN.SSþ0c2SSþSousse000021Thailand#TH.KNþ0c2KNþKanchanaburi000018England#034þ0c2SRþSurrey000019Tennessee#135þ0c2PEþPerry00001AOklahoma#087þ0c2MCþMcClain000018Iowa#139þ0c2MUþMuscatine000018Wisconsin#029þ0c2DRþDoor000015Texas#475þ0c2WARþWard000014Asia#014þ0c2INþIndia00001AIndiana#091þ0c2LPþLa Porte000019NewYork#063þ0c2NIþNiagara000023NorthCarolina#131þ0c2NTþNorthampton00001BVirginia#033þ0c2CRþCaroline00001AGeorgia#283þ0c2TEþTreutlen000018Kansas#085þ0c2JAþJackson000021SouthCarolina#057þ0c2LAþLancaster000019Illinois#121þ0c2MSþMarion00001BMissouri#041þ0c2CNþChariton000022WorldwithCountries#180þ0c2NRþNauru00001CNorthDakota#055þ0c2MLþMcLean000017Texas#113þ0c2DASþDallas000015Ohio#075þ0c2HLþHolmes00001ENewMexico#047þ0c2SMþSan Miguel000018Nebraska#045þ0c2DWþDawes000023Europewithcountries#049þ0c2WAþWales000034NewfoundlandandLabrador#CA.NF.AVþ0c2AVþAvalon Region000018NewWorld#74þ0c2RWþRwanda00001CTurkey#19þ0c2CMþ&Ccedil;orum000024USANorthEastRegion#10þ0c2DEþDelaware000031WorldwithCountries#22þ0c2TTþTrinidad &amp; Tobago00001ENewZealand#F8þ0c2STLþSouthland00001EEgypt_346255#07þ0c2DAþDakahlia00002BAzerbaijan#17þ0c2DVþD&#601;v&#601;&ccedil;i000021SanMarino#06þ0c2BMþBorgo Maggiore000018Venezuela#26þ0c2XþVargas00001FBurkinaFaso#BF.ZMþ0c2ZMþZondoma00001CSriLanka#LK.GQþ0c2GQþGampaha000019Somalia#SO.MUþ0c2MUþMudug000017Nepal#NP.RAþ0c2RAþRapti000024Kiribati#KI.PIþ0c2PIþPhoenix Islands00001EPhilippines#PH.CVþ0c2CVþCavite000018Gabon#GA.NYþ0c2NYþNyanga000020Lebanon#LE.NAþ0c2NAþAn Nabatiyah000019Iran#IR.LOþ0c2LOþLorestan000022FranceDepartment#FR.INþ0c2INþIndre00001CVietnam#VN.LSþ0c2LSþLang Son000019Thailand#TH.LEþ0c2LEþLoei00002BEuropewithcountries#050þ0c2NIþNorth Ireland000019Arkansas#039þ0c2DAþDallas00001AEngland#035þ0c2ESþE.Sussex00001FWestVirginia#067þ0c2NIþNicholas000019Colorado#047þ0c2GIþGilpin000018Montana#017þ0c2CUþCuster00001BSouthDakota#085þ0c2LYþLyman000018Alabama#063þ0c2GRþGreene000018Asia#015þ0c2IDþIndonesia000018Missouri#223þ0c2WYþWayne000019Texas#295þ0c2LIPþLipscomb00001ELouisiana#039þ0c2EVþEvangeline00001BGeorgia#103þ0c2EFþEffingham000028WorldwithCountries#181þ0c2NZþNew Zealand00001CMinnesota#155þ0c2TRþTraverse00001DKentucky#139þ0c2LGþLivingston00001DMichigan#149þ0c2SJþSt. Joseph00001BFlorida#067þ0c2LYþLafayette00001BMississippi#049þ0c2HIþHinds00001FPennsylvania#015þ0c2BFþBradford000021NewCaledonia#NC.NO.TOþ0c2TOþTouho000027NewWorld#75þ0c2STþSao Tome and Principe000017Turkey#20þ0c2DNþDenizli000030USANorthEastRegion#11þ0c2DCþDistrict of Columbia00001BPuertoRico#93þ0c2MRþMaricao000029WorldwithCountries#23þ0c2USþUnited States00001DNewZealand#F9þ0c2TKIþTaranaki00001EEgypt_346255#08þ0c2DMþDamietta00001FAzerbaijan#18þ0c2FUþF&uuml;zuli00001DSanMarino#07þ0c2SMþSan Marino00001DAsiaGeorgia#01þ0c2ABþAbkhazia00001ABelgium#01þ0c2ANþAntwerpen000016Mali#ML.KDþ0c2KDþKidal000017Guinea#GN.MLþ0c2MLþMali000018Tunisia#TN.BJþ0c2BJþBeja00001AIran#IR.KZþ0c2KZþKhuzestan000023Thailand#TH.KPþ0c2KPþKamphaeng Phet000028Eritrea#ER.SKþ0c2SKþSemenawi Keyih Bahri00001EEngland#036þ0c2WAþWarwickshire00001BTennessee#137þ0c2PIþPickett00001COklahoma#089þ0c2MTþMcCurtain000016Iowa#141þ0c2OBþO'Brien00001BWisconsin#031þ0c2DUþDouglas00001BTexas#477þ0c2WASþWashington000013Asia#016þ0c2IRþIran00001AIndiana#093þ0c2LWþLawrence000018NewYork#065þ0c2ONþOneida00001ENorthCarolina#133þ0c2ONþOnslow00001AVirginia#035þ0c2CLþCarroll000017Georgia#285þ0c2TRþTroup00001AKansas#087þ0c2JFþJefferson00001FSouthCarolina#059þ0c2LUþLaurens00001BIllinois#123þ0c2MNþMarshall00001CMissouri#043þ0c2CHþChristian000022WorldwithCountries#182þ0c2PWþPalau00001CNorthDakota#057þ0c2MEþMercer000017Texas#115þ0c2DAWþDawson000014Ohio#077þ0c2HUþHuron00001CNewMexico#049þ0c2SFþSanta Fe000019Nebraska#047þ0c2DSþDawson000023NewCaledonia#NC.SU.MOþ0c2MOþMoindou000026Manitoba#CA.MB.PMþ0c2PMþPembina Region000019NewWorld#76þ0c2SNþSenegal00001FTurkey#21þ0c2DYþDiyarbak&#305;r000025WorldwithCountries#24þ0c2GLþGreenland00001CEgypt_346255#09þ0c2FYþFaiyum00002AAzerbaijan#19þ0c2GDþG&#601;d&#601;b&#601;y000019Ukraine#01þ0c2CKþCherkasy000020SanMarino#08þ0c2MGþMontegiardino00001BAsiaGeorgia#02þ0c2AJþAdjara000018Belgium#02þ0c2HAþHainaut00001BEurope2#EU.BEþ0c2BEþBelgium00001BAlgeria#DZ.EOþ0c2EOþEl Oued000019Jordan#JO.MDþ0c2MDþMadaba000023CentralAmerica2#CE.JMþ0c2JMþJamaica00001ETanzania#TZ.SHþ0c2SHþShinyanga000034PapuaNewGuinea#PG.NCþ0c2NCþNational Capital District00001EUzbekistan#UZ.ANþ0c2ANþAndijon00001AHongKong#HK.NOþ0c2NOþNorth00001AMicronesia#FM.YAþ0c2YAþYap000018Serbia#RS.PIþ0c2PIþPirot000018Guinea#GN.MMþ0c2MMþMamou00001ALibya#LY.MIþ0c2MIþMisratah00001FBotswana#BW.NWþ0c2NWþNorth West00001BVietnam#VN.NAþ0c2NAþNghe An00001CThailand#TH.LGþ0c2LGþLampang000018Arkansas#041þ0c2DEþDesha00001BWestVirginia#069þ0c2OHþOhio000018Colorado#049þ0c2GRþGrand000019Montana#019þ0c2DAþDaniels00001CSouthDakota#087þ0c2MCþMcCook000016Alabama#065þ0c2HAþHale00001FVirginia#036þ0c2CCþCharles City00001AMissouri#225þ0c2WBþWebster000015Utah#001þ0c2BVþBeaver000019Texas#297þ0c2LIVþLive Oak00001CLouisiana#041þ0c2FRþFranklin000022Virginia#760þ0c2RIþRichmond (City)000018Georgia#105þ0c2ELþElbert00002DWorldwithCountries#183þ0c2PGþPapua New Guinea00001BMinnesota#157þ0c2WBþWabasha000018Kentucky#141þ0c2LOþLogan00001AMichigan#151þ0c2SNþSanilac000016Florida#069þ0c2LAþLake00001CMississippi#051þ0c2HOþHolmes00001CPennsylvania#017þ0c2BUþBucks000035NewfoundlandandLabrador#CA.NF.CEþ0c2CEþCentral Region00001BNewWorld#77þ0c2SCþSeycelles000016Turkey#22þ0c2EDþEdirne00001BPuertoRico#95þ0c2MBþMaunabo000020SaintLucia#01þ0c2ARþAnse-la-Raye000025WorldwithCountries#25þ0c2ARþArgentina00001CNewZealand#G1þ0c2WKOþWaikato00001DEgypt_346255#10þ0c2GHþGharbia000023Azerbaijan#20þ0c2GAþG&#601;nc&#601;00001AUkraine#02þ0c2CHþChernihiv00001DSanMarino#09þ0c2SEþSerravalle00001AAsiaGeorgia#03þ0c2GUþGuria000016Belgium#03þ0c2LIþLiege000022SouthAfrica#02þ0c2NLþKwaZulu-Natal000023Hungary#01þ0c2BKþB&aacute;cs-Kiskun00001ECambodia#KH.PYþ0c2PYþPrey Veng000024CapeVerde#CV.RGþ0c2RGþRibeira Grande00001DCameroon#CM.ADþ0c2ADþAdamaoua00001EKazakhstan#KZ.ZMþ0c2ZMþZhambyl00001DBurkinaFaso#BF.HOþ0c2HOþHouet00001CSaudiArabia#SA.ASþ0c2ASþAsir00002ECentralAfricanRepublic#CF.OPþ0c2OPþOuham-Pende000020PapuaNewGuinea#PG.MNþ0c2MNþManus00001ABurundi#BI.RTþ0c2RTþRutana000026Sudan#SD.GDþ0c2GDþAl Qadarif (Gedarif)000026Philippines#PH.DOþ0c2DOþDavao Oriental00001BRussia#RU.NGþ0c2NGþNovgorod000019Libya#LY.MJþ0c2MJþAl Marj000018China2#CN.JLþ0c2JLþJilin00001DVietnam#VN.NBþ0c2NBþNinh Binh00001AThailand#TH.KRþ0c2KRþKrabi00001BEngland#038þ0c2WIþWiltshire000018Tennessee#139þ0c2POþPolk000017France#002þ0c2ALþAlsace00001BOklahoma#091þ0c2MLþMcIntosh000016Iowa#143þ0c2OSþOsceola000018Wisconsin#033þ0c2DNþDunn000015Texas#479þ0c2WEBþWebb000019Indiana#095þ0c2MAþMadison00001ANewYork#067þ0c2OOþOnondaga00001ENorthCarolina#135þ0c2ORþOrange00001CVirginia#037þ0c2CHþCharlotte000018Georgia#287þ0c2TUþTurner000017Kansas#089þ0c2JWþJewell00001BSouthCarolina#061þ0c2LEþLee000018Illinois#125þ0c2MOþMason000018Missouri#045þ0c2CKþClark000022WorldwithCountries#184þ0c2WSþSamoa00001CNorthDakota#059þ0c2MOþMorton00001BTexas#117þ0c2DESþDeaf Smith000023Virginia#580þ0c2CIþCovington (City)000016Ohio#079þ0c2JAþJackson00001ANewMexico#051þ0c2SIþSierra000018Nebraska#049þ0c2DEþDeuel000020USASouthWestRegion#49þ0c2UTþUtah00001ENewWorld#78þ0c2SLþSierra Leone000020Turkey#23þ0c2EGþElaz&#305;&#287;00001BSaintLucia#02þ0c2DAþDauphin000023WorldwithCountries#26þ0c2BOþBolivia00001FNewZealand#G2þ0c2WGNþWellington00001AEgypt_346255#11þ0c2GZþGiza00001CAzerbaijan#21þ0c2GRþGoranboy00001BUkraine#03þ0c2CVþChernivtsi00001AGreenland#01þ0c2NGþAvannaa00001CAsiaGeorgia#04þ0c2IMþImereti000018Belgium#04þ0c2LMþLimburg00001FSouthAfrica#03þ0c2FSþFree State000018Hungary#02þ0c2BAþBaranya000034NorthWestTerritories#CA.NT.MVþ0c2MVþMackenzie Valley00002AFrenchGuiana#GL.SL.AYþ0c2AYþAwala Yalimapo000028Mauritius#MU.RRþ0c2RRþRiviere Du Rempart00001CGhana#GH.UWþ0c2UWþUpper West00001CEurope2#EU.BGþ0c2BGþBulgaria000022BurkinaFaso#BF.GZþ0c2GZþGanzourgou00001BZambia#ZM.NOþ0c2NOþNorthern00001FMongolia#MN.SBþ0c2SBþSukhbaatar000022CoteDivoire#CI.WRþ0c2WRþWorodougou00001BRussia#RU.MRþ0c2MRþMordovia00001BMalawi#MW.CKþ0c2CKþChikwawa000017Arkansas#043þ0c2DRþDrew000020England#039þ0c2WOþWorcestershire000020WestVirginia#071þ0c2PEþPendleton00001AFrance#003þ0c2AQþAquitaine00001BColorado#051þ0c2GUþGunnison000018Montana#021þ0c2DWþDawson00001FSouthDakota#089þ0c2MPþMcPherson000017Alabama#067þ0c2HEþHenry000014Asia#019þ0c2JPþJapan000018Missouri#227þ0c2WOþWorth000018Utah#003þ0c2BEþBox Elder000016Texas#299þ0c2LANþLlano000019Louisiana#043þ0c2GRþGrant000019Georgia#107þ0c2EMþEmanuel00002CWorldwithCountries#185þ0c2SBþSolomon Islands00001AMinnesota#159þ0c2WDþWadena000017Kentucky#143þ0c2LYþLyon00001EMichigan#153þ0c2SHþSchoolcraft000015Florida#071þ0c2LEþLee00001FMississippi#053þ0c2HUþHumphreys00001DPennsylvania#019þ0c2BTþButler00002BMadagascarRegions#MG.AV.AGþ0c2AGþAnalamanga000019NewWorld#79þ0c2SOþSomalia000018Turkey#24þ0c2ENþErzincan000021PuertoRico#97þ0c2MGþMayag&uuml;ez00001CSaintLucia#03þ0c2CAþCastries000022WorldwithCountries#27þ0c2BRþBrazil00001FNewZealand#G3þ0c2WTCþWest Coast00001EEgypt_346255#12þ0c2ISþIsmailia000026Azerbaijan#22þ0c2GYþG&ouml;y&ccedil;ay00001FUkraine#04þ0c2DPþDnipropetrovsk000017Greenland#02þ0c2EGþTunu00001CAsiaGeorgia#05þ0c2KAþKakheti00001BBelgium#05þ0c2LUþLuxembourg000016Greece#01þ0c2ATþAttica000024Hungary#03þ0c2BEþB&eacute;k&eacute;s000025PolandCounties#PL.PM.SLþ0c2PSLþSlupsk00001CBurkinaFaso#BF.ZRþ0c2ZRþZiro00001FQatar#QA.GHþ0c2GHþAl Ghuwariyah00001AEritrea#ER.ANþ0c2ANþAnseba00001DUK7#UK.NIþ0c2NIþNorth Ireland000019Russia#RU.MSþ0c2MSþMoscow00001ATunisia#TN.TOþ0c2TOþTozeur000017Uganda#UG.GLþ0c2GLþGulu000022FranceDepartment#FR.ISþ0c2ISþIsere00001CVietnam#VN.NDþ0c2NDþNam Dinh00001APalau#PW.AMþ0c2AMþAimeliik00001EEngland#040þ0c2NYþN. Yorkshire00001ATennessee#141þ0c2PUþPutnam000019France#004þ0c2AUþAuvergne000018Oklahoma#093þ0c2MAþMajor000013Iowa#145þ0c2PAþPage00001EWisconsin#035þ0c2ECþEau Claire000018Texas#481þ0c2WHAþWharton000018Indiana#097þ0c2MRþMarion000019NewYork#069þ0c2OTþOntario00001FNorthCarolina#137þ0c2PAþPamlico000018Georgia#289þ0c2TWþTwiggs000018Kansas#091þ0c2JOþJohnson000021SouthCarolina#063þ0c2LXþLexington000019Illinois#127þ0c2MCþMassac000017Missouri#047þ0c2CYþClay000022WorldwithCountries#186þ0c2TOþTonga00001FNorthDakota#061þ0c2MUþMountrail000016Texas#119þ0c2DELþDelta000018Ohio#081þ0c2JEþJefferson00001BNewMexico#053þ0c2SOþSocorro000018Nebraska#051þ0c2DIþDixon00002AMadagascarRegions#MG.MA.BEþ0c2BEþBetsiboka00003APrinceEdwardIsland#CA.PE.NCþ0c2NCþNorth Cape Coastal Drive000027Manitoba#CA.MB.PRþ0c2PRþParkland Region00002BMadagascarRegions#MG.TM.AIþ0c2AIþAtsinanana00001ENewWorld#80þ0c2ZAþSouth Africa000017Turkey#25þ0c2EMþErzurum00001CSaintLucia#04þ0c2CHþChoiseul000021WorldwithCountries#28þ0c2CLþChile000016USA#LAþ0c2LAþLouisiana000024Egypt_346255#13þ0c2KSþKafr el-Sheikh000022Azerbaijan#23þ0c2HAþHac&#305;qabul000018Ukraine#05þ0c2DTþDonetsk00001ALatvia#01þ0c2AIþAizkraukle000018Greenland#03þ0c2VGþKitaa000021AsiaGeorgia#06þ0c2KKþKvemo Kartli000019Haiti#03þ0c2NOþNord-Ouest000016Belgium#06þ0c2NAþNamur00001EGreece#02þ0c2CGþCentral Greece000021SouthAfrica#05þ0c2ECþEastern Cape000033Hungary#04þ0c2BOþBorsod-Aba&uacute;j-Zempl&eacute;n000017Nigeria#NG.IMþ0c2IMþImo00001BTanzania#TZ.RVþ0c2RVþRuvuma00001BTanzania#TZ.TBþ0c2TBþTabora00001CMacedonia#MK.ETþ0c2ETþTetovo00001DSerbia#RS.PMþ0c2PMþPomoravlje00001BBurundi#BI.BBþ0c2BBþBubanza000020Tunisia#TN.SZþ0c2SZþSidi Bou Zid00001APalau#PW.SOþ0c2SOþSonsorol000018Iran#IR.MKþ0c2MKþMarkazi000018Palau#PW.ANþ0c2ANþAngaur00001EPennsylvania#021þ0c2CAþCambria00001BArkansas#045þ0c2FAþFaulkner00001FEngland#041þ0c2TWþTyne And Wear000020WestVirginia#073þ0c2PLþPleasants000019France#005þ0c2BRþBretagne00001BColorado#053þ0c2HIþHinsdale00001CMontana#023þ0c2DLþDeer Lodge00001ESouthDakota#091þ0c2MAþMarshall000019Alabama#069þ0c2HOþHouston000019Asia#021þ0c2KZþKazakhstan000019Missouri#229þ0c2WRþWright000022Alaska#130þ0c2KGþKetchikan Gateway000014Utah#005þ0c2CAþCache000017Texas#301þ0c2LOVþLoving00001ALouisiana#045þ0c2IBþIberia000017Georgia#109þ0c2EVþEvans000023WorldwithCountries#187þ0c2TVþTuvalu00001AMinnesota#161þ0c2WSþWaseca00001CKentucky#145þ0c2MKþMcCracken00001DMichigan#155þ0c2SWþShiawassee000016Florida#073þ0c2LOþLeon00001FMississippi#055þ0c2ISþIssaquena000017NewWorld#81þ0c2SDþSudan00001ETurkey#26þ0c2ESþEski&#351;ehir000018PuertoRico#99þ0c2MCþMoca00001BSaintLucia#05þ0c2DEþDennery000024WorldwithCountries#29þ0c2COþColombia00001CEgypt_346255#14þ0c2MTþMatruh000024Azerbaijan#24þ0c2IMþ&#304;mi&#351;li000020Ukraine#06þ0c2IFþIvano-Frankivsk00001CLatvia#02þ0c2ALþAl&#363;ksne000026AsiaGeorgia#07þ0c2MMþMtskheta-Mtianeti000020Belgium#07þ0c2OVþOost-Vlaanderen000021Greece#03þ0c2CMþCentral Macedonia00001CSouthAfrica#06þ0c2GTþGauteng000019Hungary#05þ0c2BUþBudapest000029PolandCounties#PL.PK.TMþ0c2PTMþTarnobrzeg000018Nauru#NR.MEþ0c2MEþMeneng00001BEurope2#EU.UAþ0c2UAþUkraine00001AEurope2#EU.TKþ0c2TKþTurkey00001BEurope2#EU.ATþ0c2ATþAustria00001BAlgeria#DZ.ETþ0c2ETþEl Tarf000021PapuaNewGuinea#PG.MRþ0c2MRþMorobe000025Philippines#PH.DSþ0c2DSþDavao del Sur00002FHungaryRegions#HU.SGþ0c2SGþSouthern Great Plain000018England#042þ0c2MSþMersey000018Tennessee#143þ0c2RHþRhea00001BMaryland#001þ0c2ALþAllegany00001AFrance#006þ0c2BUþBourgogne00001BOklahoma#095þ0c2MRþMarshall000018Iowa#147þ0c2PLþPalo Alto00001CWisconsin#037þ0c2FLþFlorence000018Texas#483þ0c2WHEþWheeler00001CAsia#022þ0c2KPþKorea (north)00001AIndiana#099þ0c2MSþMarshall000018NewYork#071þ0c2ORþOrange000022NorthCarolina#139þ0c2PSþPasquotank00001FVirginia#041þ0c2CSþChesterfield000017Georgia#291þ0c2UNþUnion000017Kansas#093þ0c2KEþKearny000021SouthCarolina#065þ0c2MCþMcCormick000019Illinois#129þ0c2MDþMenard00001AMissouri#049þ0c2CIþClinton000024WorldwithCountries#188þ0c2VUþVanuatu00001CNorthDakota#063þ0c2NEþNelson000017Texas#121þ0c2DENþDenton000013Ohio#083þ0c2KNþKnox000018NewMexico#055þ0c2TAþTaos000018Nebraska#053þ0c2DOþDodge00001BNewWorld#82þ0c2SZþSwaziland000023USANorthEastRegion#18þ0c2INþIndiana00001ESaintLucia#06þ0c2GIþGros Islet000023WorldwithCountries#30þ0c2ECþEcuador00001BEgypt_346255#15þ0c2MNþMinya00002CAzerbaijan#25þ0c2ISþ&#304;smay&#305;ll&#305;000018Ukraine#07þ0c2KKþKharkiv000015Latvia#03þ0c2BLþBalvi000036AsiaGeorgia#08þ0c2RLþRacha-Lechkhumi and Kvemo Svaneti000020Belgium#08þ0c2WVþWest-Vlaanderen000015Greece#04þ0c2CRþCrete00001FSouthAfrica#07þ0c2MPþMpumalanga000020Hungary#06þ0c2CSþCsongr&aacute;d000025PolandCounties#PL.MA.TMþ0c2MTMþTarnow00001AMali#ML.KKþ0c2KKþKoulikoro000022Uzbekistan#UZ.SUþ0c2SUþSurxondaryo000024Uzbekistan#UZ.TKþ0c2TKþTashkent City000018Panama#PA.CCþ0c2CCþCocle000026PapuaNewGuinea#PG.NIþ0c2NIþNew Ireland00001ABurundi#BI.RYþ0c2RYþRuyigi00001FMacedonia#MK.GBþ0c2GBþGazi Baba00001BRussia#RU.OBþ0c2OBþOrenburg000018Malawi#MW.DEþ0c2DEþDedza00002CFranceDepartment#FR.IVþ0c2IVþIlle et Vilaine00001EPennsylvania#023þ0c2CMþCameron00001BArkansas#047þ0c2FRþFranklin00001EEngland#043þ0c2GMþG.Manchester000021WestVirginia#075þ0c2POþPocahontas000017France#007þ0c2CEþCentre00001BColorado#055þ0c2HUþHuerfano000018Montana#025þ0c2FAþFallon00001BSouthDakota#093þ0c2MEþMeade000019Alabama#071þ0c2JAþJackson00001CAsia#023þ0c2KRþKorea (south)000015Utah#007þ0c2CRþCarbon000018Texas#303þ0c2LUBþLubbock00001DLouisiana#047þ0c2IEþIberville000018Georgia#111þ0c2FAþFannin00002AWorldwithCountries#189þ0c2NCþNew Caledonia00001EMinnesota#163þ0c2WAþWashington00001BKentucky#147þ0c2MRþMcCreary00001AMichigan#157þ0c2TUþTuscola000016Florida#075þ0c2LVþLevy00001EMississippi#057þ0c2ITþItawamba00001ANewWorld#83þ0c2TZþTanzania000017Turkey#28þ0c2GIþGiresun00001BSaintLucia#07þ0c2LBþLaborie00002CWorldwithCountries#31þ0c2FKþFalkland Islands00001DEgypt_346255#16þ0c2MFþMonufia00002BAzerbaijan#26þ0c2KAþK&#601;lb&#601;c&#601;r000018Ukraine#08þ0c2KSþKherson000016Latvia#04þ0c2BUþBauska000024NorthEuropeanRegion#01þ0c2DKþDenmark000027AsiaGeorgia#09þ0c2SJþSamtskhe-Javakheti000019Haiti#06þ0c2ARþArtibonite00001FBelgium#09þ0c2BWþBrabant Wallon000029Greece#05þ0c2EMþEast Macedonia and Thrace000022SouthAfrica#08þ0c2NCþNorthern Cape00001CThailand#TH.LNþ0c2LNþLamphun00001DThailand#TH.MDþ0c2MDþMukdahan000024CapeVerde#CV.SCþ0c2SCþSanta Catarina000023SaoTomeandPrincipe#ST.CUþ0c2CUþCaue00001BKyrgyzstan#KG.CUþ0c2CUþChuy00001CLesotho#LS.MFþ0c2MFþMefeteng00001FZimbabwe#ZW.MAþ0c2MAþManicaland000015Benin#BJ.ZOþ0c2ZOþZou00001BIran#IR.MNþ0c2MNþMazandaran00001CEngland#044þ0c2WMþW.Midlands000019Tennessee#145þ0c2ROþRoane00001FMaryland#003þ0c2ANþAnne Arundel000022France#008þ0c2CHþChampagne-Ardenne000018Oklahoma#097þ0c2MYþMayes000017Iowa#149þ0c2PYþPlymouth00001FWisconsin#039þ0c2FDþFond du Lac000018Texas#485þ0c2WICþWichita000018Indiana#101þ0c2MTþMartin000019NewYork#073þ0c2OLþOrleans00001ENorthCarolina#141þ0c2PEþPender000019Virginia#043þ0c2CKþClarke000017Georgia#293þ0c2UPþUpson000018Kansas#095þ0c2KMþKingman00001ESouthCarolina#067þ0c2MAþMarion000019Illinois#131þ0c2MRþMercer000017Missouri#051þ0c2CLþCole000024WorldwithCountries#190þ0c2BAþBahrain00001CNorthDakota#065þ0c2OLþOliver000017Texas#123þ0c2DEWþDewitt000013Ohio#085þ0c2LAþLake00001CNewMexico#057þ0c2TRþTorrance00001ANebraska#055þ0c2DUþDouglas00001DHungary#08þ0c2FEþFej&eacute;r000016NewWorld#84þ0c2TGþTogo00001ASaintLucia#08þ0c2MIþMicoud000029WorldwithCountries#32þ0c2GFþFrench Guiana000020Egypt_346255#17þ0c2NVþNew Valley000026Azerbaijan#27þ0c2KUþK&uuml;rd&#601;mir00001DUkraine#09þ0c2KMþKhmelnytskyi00001ALatvia#05þ0c2CEþC&#275;sis000024NorthEuropeanRegion#02þ0c2EEþEstonia000021AsiaGeorgia#10þ0c2SKþShida Kartli000015Haiti#07þ0c2CEþCentre000016Greece#06þ0c2EPþEpirus00001CSouthAfrica#09þ0c2LPþLimpopo000024PolandCounties#PL.MZ.RMþ0c2MRMþRadom000024SierraLeone#SL.NO.PLþ0c2PLþPort Loko000017Palau#PW.ARþ0c2ARþAirai00001EOman#OM.DAþ0c2DAþAd Dakhiliyah000022CapeVerde#CV.SDþ0c2SDþSao Domingos000029BurkinaFaso#BF.ZWþ0c2ZWþZoundw&eacute;ogo000030DemocraticRepublicoftheCongo#CD.MNþ0c2MNþManiema00001ASomalia#SO.NUþ0c2NUþNugaal00001CNepal#NP.SAþ0c2SAþSagarmatha000027Philippines#PH.DVþ0c2DVþDavao del Norte00001BRussia#RU.NNþ0c2NNþNenetsia000018Libya#LY.MQþ0c2MQþMurzuq00001AChina2#CN.JSþ0c2JSþJiangsu00001DPennsylvania#025þ0c2CRþCarbon000019Arkansas#049þ0c2FUþFulton000019England#045þ0c2RNþRutland00001EWestVirginia#077þ0c2PRþPreston000016France#009þ0c2COþCorse00001AColorado#057þ0c2JAþJackson000018Montana#027þ0c2FEþFergus00001ESouthDakota#095þ0c2MLþMellette00001BAlabama#073þ0c2JEþJefferson00002BIndia#001þ0c2ANþAndaman and Nicobar Islands000019Asia#025þ0c2KGþKyrgyzstan000016Utah#009þ0c2DAþDaggett000015Texas#305þ0c2LYNþLynn00001BLouisiana#049þ0c2JAþJackson000019Georgia#113þ0c2FYþFayette000021WorldwithCountries#191þ0c2IZþIraq00001CMinnesota#165þ0c2WTþWatonwan000019Kentucky#149þ0c2MLþMcLean00001CMichigan#159þ0c2VBþVan Buren000019Florida#077þ0c2LIþLiberty00001DMississippi#059þ0c2JAþJackson000029NewCaledonia#NC.SU.NOþ0c2NOþNoum&eacute;a00002DMadagascarRegions#MG.TM.ANþ0c2ANþAnalanjirofo000027Hungary#09þ0c2GMþGy&#337;r-Moson-Sopron000019NewWorld#85þ0c2TNþTunisia000024USANorthEastRegion#21þ0c2KYþKentucky000026DominicanRepublic#01þ0c2AZþ&Aacute;zua000024SaintLucia#09þ0c2SOþSoufri&egrave;re000022WorldwithCountries#33þ0c2GYþGuyana000021Egypt_346255#18þ0c2NSþNorth Sinai000025Azerbaijan#28þ0c2LCþLa&ccedil;&#305;n00001BUkraine#10þ0c2KHþKirovohrad00001ALatvia#06þ0c2DAþDaugavpils000024NorthEuropeanRegion#03þ0c2FIþFinland00002BAsiaGeorgia#11þ0c2SZþSamegrelo-Zemo Svaneti00001EGreece#07þ0c2IOþIonian Islands00001FSouthAfrica#10þ0c2NWþNorth West000013Japan#1þ0c2AIþAichi000021Lesotho#LS.MHþ0c2MHþMohale's Hoek000028Zimbabwe#ZW.MCþ0c2MCþMashonaland Central000020Russia#RU.NOþ0c2NOþNorth Ossetia000019Tunisia#TN.TUþ0c2TUþTunis00001DMalawi#MW.CRþ0c2CRþChiradzulu00001FEngland#046þ0c2IWþIsle of Wight00001DTennessee#147þ0c2RBþRobertson00001CMaryland#005þ0c2BLþBaltimore000025France#010þ0c2FRþFranche-Comt&eacute;000019Oklahoma#099þ0c2MUþMurray000019Iowa#151þ0c2PCþPocahontas00001AWisconsin#041þ0c2FOþForest00001ATexas#487þ0c2WIBþWilbarger00001EIndia#002þ0c2APþAndhra Pradesh00001AWashington#001þ0c2ADþAdams000013Asia#026þ0c2LAþLaos000017Indiana#103þ0c2MIþMiami000018NewYork#075þ0c2OSþOswego000022NorthCarolina#143þ0c2PRþPerquimans000018Virginia#045þ0c2CGþCraig000018Georgia#295þ0c2WKþWalker000016Kansas#097þ0c2KWþKiowa000020SouthCarolina#069þ0c2MRþMarlboro000019Illinois#133þ0c2MEþMonroe000019Missouri#053þ0c2COþCooper000023WorldwithCountries#192þ0c2IEþIsrael00001DNorthDakota#067þ0c2PEþPembina000018Texas#125þ0c2DICþDickens000017Ohio#087þ0c2LWþLawrence000019NewMexico#059þ0c2UNþUnion000018Nebraska#057þ0c2DNþDundy00002AYukonTerritory#CA.YT.STþ0c2STþSilver Trail000030MadagascarRegions#MG.TM.AOþ0c2AOþAlaotra-Mangoro000023Hungary#10þ0c2HBþHajd&uacute;-Bihar000018NewWorld#86þ0c2UGþUganda000015Turkey#31þ0c2HTþHatay000023DominicanRepublic#02þ0c2BRþBahoruco00001ESaintLucia#10þ0c2VFþVieux Fort000024WorldwithCountries#34þ0c2PYþParaguay000020Afghanistan#01þ0c2BDSþBadakhshan00001FEgypt_346255#19þ0c2PSþPort Said000026Azerbaijan#29þ0c2LNþL&#601;nk&#601;ran000017Ukraine#11þ0c2KRþCrimea000022Latvia#07þ0c2DGVþDaugavpils (city)000024NorthEuropeanRegion#04þ0c2ISþIceland00001CAsiaGeorgia#12þ0c2TBþTbilisi000013Haiti#09þ0c2NDþNord00001CGreece#08þ0c2NAþNorth Aegean000021SouthAfrica#11þ0c2WCþWestern Cape000013Japan#2þ0c2AKþAkita000023Pakistan#PK.NAþ0c2NAþNorthern Areas000020CapeVerde#CV.SFþ0c2SFþSao Filipe00001ANigeria#NG.JIþ0c2JIþJigawa000017Jordan#JO.MNþ0c2MNþMaan000020Zambia#ZM.NWþ0c2NWþNorth-Western000025CentralAmerica2#CE.LCþ0c2LCþSt. Lucia000018Laos#LA.SLþ0c2SLþSalavan00001DPennsylvania#027þ0c2CEþCentre00001AArkansas#051þ0c2GAþGarland00001AEngland#047þ0c2WSþW.Sussex00001DWestVirginia#079þ0c2PUþPutnam00001EFrance#011þ0c2LLþIle-de-France00001CColorado#059þ0c2JEþJefferson00001AMontana#029þ0c2FLþFlathead00001BSouthDakota#097þ0c2MIþMiner000017Alabama#075þ0c2LAþLamar000021India#003þ0c2ARþArunachal Pradesh000014Utah#011þ0c2DVþDavis00001ATexas#307þ0c2MCUþMcCulloch00001DLouisiana#051þ0c2JEþJefferson000021Virginia#770þ0c2ROþRoanoke (City)000017Georgia#115þ0c2FLþFloyd000023WorldwithCountries#193þ0c2JOþJordan00001AMinnesota#167þ0c2WLþWilkin00001CNevada#510þ0c2CAþCarson City00001AKentucky#151þ0c2MIþMadison00001CMichigan#161þ0c2WAþWashtenaw000019Florida#079þ0c2MSþMadison00001CMississippi#061þ0c2JSþJasper000016Hungary#11þ0c2HEþHeves000020NewWorld#87þ0c2WAþWestern Sahara000016Turkey#32þ0c2ICþMersin000021USANorthEastRegion#23þ0c2MEþMaine000023DominicanRepublic#03þ0c2BHþBarahona00001BSaintLucia#11þ0c2PRþPraslin000020WorldwithCountries#35þ0c2PEþPeru00001DAfghanistan#02þ0c2BDGþBadghis00001EEgypt_346255#20þ0c2QAþQalyubia00002DAzerbaijan#30þ0c2LAþL&#601;nk&#601;ran (City)000016Latvia#08þ0c2DOþDobele000024NorthEuropeanRegion#05þ0c2IEþIreland000017Haiti#10þ0c2NEþNord-Est00001BArmenia#01þ0c2AGþAragatsotn00001BGreece#09þ0c2PEþPeloponnese000014Japan#3þ0c2AOþAomori000021Thailand#TH.MHþ0c2MHþMae Hong Son00001FCambodia#KH.ROþ0c2ROþRatanakiri00001CBurkinaFaso#BF.IOþ0c2IOþIoba00001BPanama#PA.CHþ0c2CHþChiriqui000031CentralAmerica2#CE.KNþ0c2KNþSt. Kitts &amp; Nevis00001BAngola#AO.BGþ0c2BGþBenguela000018Uganda#UG.YUþ0c2YUþYumbe000025Zimbabwe#ZW.MEþ0c2MEþMashonaland East00001AMalawi#MW.CTþ0c2CTþChitipa00001DEngland#048þ0c2EYþE.Yorkshire00001ETennessee#149þ0c2RUþRutherford000025France#012þ0c2LAþLanguedoc-Roussillon00001BOklahoma#101þ0c2MKþMuskogee000013Iowa#153þ0c2POþPolk000019Wisconsin#043þ0c2GRþGrant000018Texas#489þ0c2WIAþWillacy000015India#004þ0c2ASþAssam00001BWashington#003þ0c2ASþAsotin000017Asia#028þ0c2MYþMalaysia000018Indiana#105þ0c2MOþMonroe000018NewYork#077þ0c2OGþOtsego00001ENorthCarolina#145þ0c2POþPerson00001BVirginia#047þ0c2CUþCulpeper000018Georgia#297þ0c2WNþWalton000018Kansas#099þ0c2LBþLabette000020SouthCarolina#071þ0c2NBþNewberry00001DIllinois#135þ0c2MYþMontgomery00001BMissouri#055þ0c2CFþCrawford000023WorldwithCountries#194þ0c2KUþKuwait00001CNorthDakota#069þ0c2PIþPierce000017Texas#127þ0c2DIMþDimmit00001DDenmark#001þ0c2ARþ&Aring;rhus000022Virginia#590þ0c2DAþDanville (City)000016Ohio#089þ0c2LIþLicking00001CNewMexico#061þ0c2VAþValencia00001BNebraska#059þ0c2FIþFillmore000026YukonTerritory#CA.YT.CAþ0c2CAþCampbell000029Hungary#12þ0c2KEþKom&aacute;rom-Esztergom000018NewWorld#88þ0c2ZMþZambia000017Turkey#33þ0c2IPþIsparta000024USANorthEastRegion#24þ0c2MDþMaryland000029DominicanRepublic#04þ0c2DAþDajab&oacute;n000016UAE#01þ0c2AZþAbu Dhabi000024WorldwithCountries#36þ0c2SRþSuriname000013USA#KSþ0c2KSþKansas00001DAfghanistan#03þ0c2BGLþBaghlan00001AEgypt_346255#21þ0c2QEþQena000019Azerbaijan#31þ0c2LEþLerik00001CUkraine#13þ0c2KVþKiev Oblast000017Latvia#09þ0c2GUþGulbene000023NorthEuropeanRegion#06þ0c2LVþLatvia000014Haiti#11þ0c2OUþOuest000017Armenia#02þ0c2ARþArarat00001CGreece#10þ0c2SAþSouth Aegean000026PolandCounties#PL.WN.OMþ0c2WOMþOlsztyn000013Japan#4þ0c2CHþChiba00001BSriLanka#LK.JAþ0c2JAþJaffna00001ELesotho#LS.MKþ0c2MKþMokhotlong000016Nepal#NP.SEþ0c2SEþSeti000023PapuaNewGuinea#PG.NOþ0c2NOþNorthern00001CMongolia#MN.SLþ0c2SLþSelenge00001BTanzania#TZ.ASþ0c2ASþArusha00001EPennsylvania#029þ0c2CHþChester000018Arkansas#053þ0c2GRþGrant00001DEngland#049þ0c2SYþS.Yorkshire00001EWestVirginia#081þ0c2RAþRaleigh000019France#013þ0c2LIþLimousin000018Colorado#061þ0c2KIþKiowa00001AMontana#031þ0c2GAþGallatin00001FSouthDakota#099þ0c2MNþMinnehaha00001CAlabama#077þ0c2LUþLauderdale000015India#005þ0c2BIþBihar000017Utah#013þ0c2DUþDuchesne000019Texas#309þ0c2MCLþMcLennan000023Louisiana#053þ0c2JDþJefferson Davis000019Georgia#117þ0c2FOþForsyth000024WorldwithCountries#195þ0c2LBþLebanon00001AMinnesota#169þ0c2WIþWinona00001ADenmark#002þ0c2BOþBornholm00001BKentucky#153þ0c2MGþMagoffin000018Michigan#163þ0c2WYþWayne000019Florida#081þ0c2MNþManatee00001FMississippi#063þ0c2JEþJefferson000026MadagascarRegions#MG.MA.BOþ0c2BOþBoeny00001ANewWorld#89þ0c2ZWþZimbabwe00001DTurkey#34þ0c2IBþ&#304;stanbul000029USANorthEastRegion#25þ0c2MAþMassachusetts000012UAE#02þ0c2AJþAjman000023WorldwithCountries#37þ0c2UYþUruguay00001ECentralAmerica#01þ0c2BHþBelize00001DEgypt_346255#22þ0c2RSþRed Sea000020Azerbaijan#32þ0c2MAþMasall&#305;000018Ukraine#14þ0c2LHþLuhansk00001ELatvia#10þ0c2JKþJ&#275;kabpils000026NorthEuropeanRegion#07þ0c2LTþLithuania000012Haiti#12þ0c2SDþSud000018Armenia#03þ0c2AVþArmavir000018Greece#11þ0c2THþThessaly000013Japan#5þ0c2EHþEhime00001AChina2#CN.JXþ0c2JXþJiangxi00001FEurope2#EU.CHþ0c2CHþSwitzerland000016Angola#AO.BIþ0c2BIþBie00001BBurundi#BI.CAþ0c2CAþCankuzo00001ERussia#RU.NSþ0c2NSþNovosibirsk000020CoteDivoire#CI.FRþ0c2FRþFromager000019Uganda#UG.IBþ0c2IBþIbanda000017Libya#LY.NLþ0c2NLþNalut00001DEngland#050þ0c2WYþW.Yorkshire000019Tennessee#151þ0c2SCþScott00001AMaryland#009þ0c2CAþCalvert000019France#014þ0c2LOþLorraine000018Oklahoma#103þ0c2NOþNoble00001CIowa#155þ0c2PTþPottawattamie000019Wisconsin#045þ0c2GEþGreen00001BTexas#491þ0c2WIMþWilliamson00001BWashington#005þ0c2BEþBenton000017Asia#030þ0c2MNþMongolia00001CIndiana#107þ0c2MNþMontgomery000018NewYork#079þ0c2PUþPutnam00001CNorthCarolina#147þ0c2PIþPitt00001DVirginia#049þ0c2CMþCumberland000016Georgia#299þ0c2WAþWare000015Kansas#101þ0c2LEþLane00001ESouthCarolina#073þ0c2OCþOconee000019Illinois#137þ0c2MGþMorgan000017Missouri#057þ0c2DDþDade000021WorldwithCountries#196þ0c2OMþOman00001CNorthDakota#071þ0c2RAþRamsey000017Texas#129þ0c2DONþDonley00001FDenmark#003þ0c2FRþFrederiksberg000014Ohio#091þ0c2LOþLogan00001BNebraska#061þ0c2FRþFranklin000025Hungary#14þ0c2NOþN&oacute;gr&aacute;d000018NewWorld#90þ0c2GMþGambia00001ATurkey#35þ0c2IZþ&#304;zmir000024USANorthEastRegion#26þ0c2MIþMichigan000021DominicanRepublic#06þ0c2DUþDuarte000012UAE#03þ0c2DUþDubai000025WorldwithCountries#38þ0c2VEþVenezuela00001AUSA#MAþ0c2MAþMassachusetts000022CentralAmerica#02þ0c2CSþCosta Rica00001CAfghanistan#05þ0c2BAMþBamyan00001DEgypt_346255#23þ0c2SQþSharqia00002AAzerbaijan#33þ0c2MIþMing&#601;&ccedil;evir000015Ukraine#15þ0c2LVþLviv000017Latvia#11þ0c2JLþJelgava000023NorthEuropeanRegion#08þ0c2NOþNorway000016Haiti#13þ0c2SEþSud-Est00001CCzechRepublic#52þ0c2PRþPraha00001CArmenia#04þ0c2GRþGegharkunik00001BGreece#12þ0c2WGþWest Greece000013Japan#6þ0c2FUþFukui000018Thailand#TH.NAþ0c2NAþNan000023Madagascar#MG.FIþ0c2FIþFianarantsoa00001BMacedonia#MK.ZAþ0c2ZAþZajas000025Mississippi#065þ0c2JDþJefferson Davis00001EPennsylvania#031þ0c2CIþClarion000019Arkansas#055þ0c2GEþGreene00001FWestVirginia#083þ0c2RNþRandolph00002CFrance#015þ0c2MIþMidi-Pyr&eacute;n&eacute;es00001DColorado#063þ0c2KCþKit Carson00001AMontana#033þ0c2GRþGarfield00001BSouthDakota#101þ0c2MOþMoody00001AAlabama#079þ0c2LWþLawrence00001CIndia#007þ0c2CAþChhattisgarh000014Asia#031þ0c2NPþNepal000014Utah#015þ0c2EMþEmery000019Texas#311þ0c2MCMþMcMullen00001DLouisiana#055þ0c2LAþLafayette00001AGeorgia#119þ0c2FRþFranklin000022WorldwithCountries#197þ0c2QAþQatar00001AMinnesota#171þ0c2WRþWright00001FDenmark#004þ0c2FEþFrederiksborg000019Kentucky#155þ0c2MHþMarion00001AMichigan#165þ0c2WEþWexford000018Florida#083þ0c2MRþMarion000026NewCaledonia#NC.SU.PAþ0c2PAþPa&iuml;ta000017NewWorld#91þ0c2CGþCongo000015UAE#04þ0c2FUþFujairah000023WorldwithCountries#39þ0c2DZþAlgeria000023CentralAmerica#03þ0c2ESþEl Salvador00001BAfghanistan#06þ0c2FRAþFarah00001BEgypt_346255#24þ0c2SHþSohag000021Azerbaijan#34þ0c2NAþNaftalan city000019Ukraine#16þ0c2MYþMykolaiv00001FLatvia#12þ0c2JELþJelgava (city)00002BNorthEuropeanRegion#09þ0c2UKþUnited Kingdom000019Haiti#14þ0c2GAþGrand'Anse000017Armenia#05þ0c2KTþKotayk00001EGreece#13þ0c2WMþWest Macedonia000027PolandCounties#PL.ZP.SMþ0c2ZSMþSzczecin000015Japan#7þ0c2FKþFukuoka00001BTunisia#TN.BZþ0c2BZþBizerte000021FranceDepartment#FR.JUþ0c2JUþJura00002DFranceDepartment#FR.LAþ0c2LAþLoire Atlantique000025Thailand#TH.NBþ0c2NBþNong Bua Lam Phu000022Europe2#EU.UKþ0c2UKþUnited Kingdom000020Europe2#EU.VAþ0c2VAþVatican City00001ECambodia#KH.SIþ0c2SIþSiem Reap000019Ghana#GH.WPþ0c2WPþWestern000032DemocraticRepublicoftheCongo#CD.NKþ0c2NKþNord-Kivu000019Namibia#NA.KAþ0c2KAþKaras00001ANigeria#NG.KDþ0c2KDþKaduna00001BComoros #KM.MOþ0c2MOþMoheli000018Panama#PA.CLþ0c2CLþColon00001ECoteDivoire#CI.ZAþ0c2ZAþZanzan00001DZimbabwe#ZW.MIþ0c2MIþMidlands000025Philippines#PH.ESþ0c2ESþEastern Samar000024Burundi#BI.BMþ0c2BMþBujumbura Mairie00001BNebraska#063þ0c2FOþFrontier00001ETennessee#153þ0c2SQþSequatchie00001BMaryland#011þ0c2CRþCaroline000023France#016þ0c2NOþNord-Pas-de-Calais000019Oklahoma#105þ0c2NWþNowata000018Iowa#157þ0c2PWþPoweshiek00001EWisconsin#047þ0c2GLþGreen Lake000017Texas#493þ0c2WILþWilson00001BWashington#007þ0c2CHþChelan000018Indiana#109þ0c2MGþMorgan000018NewYork#081þ0c2QUþQueens00001CNorthCarolina#149þ0c2PLþPolk00001CVirginia#051þ0c2DIþDickenson000018Georgia#301þ0c2WRþWarren00001CKansas#103þ0c2LVþLeavenworth000022SouthCarolina#075þ0c2ORþOrangeburg00001FVirginia#775þ0c2SAþSalem (City)00001BIllinois#139þ0c2MTþMoultrie000019Missouri#059þ0c2DLþDallas000029WorldwithCountries#198þ0c2SAþSaudi Arabia00001CNorthDakota#073þ0c2RNþRansom000016Texas#131þ0c2DUVþDuval000015Denmark#005þ0c2FYþFyn000015Ohio#093þ0c2LRþLorain000015Hungary#16þ0c2PEþPest00001BNewWorld#92þ0c2MIþMauritius000019Turkey#37þ0c2KSþKastamonu000024DominicanRepublic#08þ0c2ESþEspaillat00001BUAE#05þ0c2RKþRas Al Khaimah000022WorldwithCountries#40þ0c2AOþAngola000021CentralAmerica#04þ0c2GTþGuatemala00001CWorld#SAþ0c2SAþSouth America000018Andorra#02þ0c2CAþCanillo00001CAfghanistan#07þ0c2FYBþFaryab000021Egypt_346255#25þ0c2SSþSouth Sinai00003DAzerbaijan#35þ0c2NXþNax&ccedil;&#305;van &#350;&#601;h&#601;r000017Ukraine#17þ0c2ODþOdessa000024Latvia#13þ0c2JURþJ&#363;rmala (city)000023NorthEuropeanRegion#10þ0c2SEþSweden000015Haiti#15þ0c2NIþNippes000015Armenia#06þ0c2LOþLori000024FrenchGuiana#GF.CY.IRþ0c2IRþIracoubo000017Japan#8þ0c2FSþFukushima000019CapeVerde#CV.SLþ0c2SLþSal000019Nigeria#NG.KEþ0c2KEþKebbi000019Ghana#GH.EPþ0c2EPþEastern000018Niger#NE.ZIþ0c2ZIþZinder00001ATanzania#TZ.TNþ0c2TNþTanga000029PapuaNewGuinea#PG.NSþ0c2NSþNorth Solomons00001AAngola#AO.CBþ0c2CBþCabinda000018Russia#RU.OLþ0c2OLþOryal000018Uganda#UG.HOþ0c2HOþHoima000017Malawi#MW.DOþ0c2DOþDowa000021Virginia#595þ0c2EMþEmporia (City)000018Florida#085þ0c2MAþMartin00001BMississippi#067þ0c2JOþJones000021Pennsylvania#033þ0c2CLþClearfield00001CArkansas#057þ0c2HEþHempstead00001EWestVirginia#085þ0c2RIþRitchie000020France#017þ0c2NRþBasse-Normandie000017Colorado#065þ0c2LAþLake000019Montana#035þ0c2GCþGlacier000020SouthDakota#103þ0c2PEþPennington000015Alabama#081þ0c2LEþLee000017Asia#033þ0c2PKþPakistan000017Utah#017þ0c2GAþGarfield000018Texas#313þ0c2MADþMadison00001BOceania#001þ0c2AUþAustralia00001DLouisiana#057þ0c2LFþLafourche000018Georgia#121þ0c2FUþFulton000022WorldwithCountries#199þ0c2SYþSyria000023Minnesota#173þ0c2YMþYellow Medicine000027Denmark#006þ0c2KOþK&oslash;benhavns Amt00001BKentucky#157þ0c2MSþMarshall00002DSaskatchewan#CA.SK.SEþ0c2SEþSouth East Region000017Hungary#17þ0c2SOþSomogy00001DNewWorld#93þ0c2AFþAfghanistan000017Turkey#38þ0c2KYþKayseri000025Australia2#WAþ0c2WAþWestern Australia000028DominicanRepublic#09þ0c2INþIndependencia000014UAE#06þ0c2SHþSharjah000021WorldwithCountries#41þ0c2BJþBenin000015USA#MDþ0c2MDþMaryland000020CentralAmerica#05þ0c2HOþHonduras000017Andorra#03þ0c2ENþEncamp00001CAfghanistan#08þ0c2GHAþGhazni00001AEgypt_346255#26þ0c2SZþSuez000023Azerbaijan#36þ0c2NEþNeft&ccedil;ala000018Ukraine#18þ0c2PLþPoltava00001DLatvia#14þ0c2KRþKr&#257;slava00001ABolivia#01þ0c2HþChuquisaca000017Armenia#07þ0c2SHþShirak00002CDistrictofColumbia#US.DC.NEþ0c2NEþNorth East000012Japan#9þ0c2GIþGifu000018Cameroon#CM.SUþ0c2SUþSud000029FranceDepartment#FR.LCþ0c2LCþLoir et Cher000019Syria#SY.LAþ0c2LAþLatakia00001ACambodia#KH.TAþ0c2TAþTakeo000020CapeVerde#CV.SMþ0c2SMþSao Miguel000021Mauritius#MU.BLþ0c2BLþBlack River00001FBurkinaFaso#BF.KAþ0c2KAþKadiogo00001AAlgeria#DZ.GLþ0c2GLþGuelma000021Angola#AO.CCþ0c2CCþCuando Cubango00001DUzbekistan#UZ.BUþ0c2BUþBuxoro00001DSerbia#RS.PZþ0c2PZþPrizrenski000017Russia#RU.OMþ0c2OMþOmsk000018Libya#LY.MZþ0c2MZþMizdah000014Ohio#095þ0c2LUþLucas00001CFlorida#086þ0c2DAþMiami-Dade000019Nebraska#065þ0c2FUþFurnas00001ATennessee#155þ0c2SBþSevier000014UK#001þ0c2ENþEngland00001AMaryland#013þ0c2COþCarroll000021France#018þ0c2PDþPays de la Loire00001BOklahoma#107þ0c2OKþOkfuskee000017Iowa#159þ0c2RGþRinggold000018Wisconsin#049þ0c2IOþIowa000018Texas#495þ0c2WINþWinkler000015India#010þ0c2DEþDelhi00001CWashington#009þ0c2CMþClallam00001AAsia#034þ0c2PHþPhilippines000018Indiana#111þ0c2NEþNewton00001CNewYork#083þ0c2REþRensselaer000020NorthCarolina#151þ0c2RAþRandolph00001CVirginia#053þ0c2DNþDinwiddie00001CGeorgia#303þ0c2WGþWashington000018Kansas#105þ0c2LCþLincoln00001FSouthCarolina#077þ0c2PIþPickens000016Oceania#002þ0c2FJþFiji000017Illinois#141þ0c2OGþOgle00001AMissouri#061þ0c2DAþDaviess00002FWorldwithCountries#200þ0c2AEþUnitedArabEmirates00001ENorthDakota#075þ0c2RVþRenville000019Texas#133þ0c2EASþEastland000022Denmark#007þ0c2KBþK&oslash;benhavn00001FNewCaledonia#NC.NO.VOþ0c2VOþVoh00002EHungary#18þ0c2SZþSzabolcs-Szatm&aacute;r-Bereg000019NewWorld#94þ0c2AMþArmenia00001FTurkey#39þ0c2KLþK&#305;rklareli000028DominicanRepublic#10þ0c2ALþLa Altagracia00001AUAE#07þ0c2UQþUmm Al Quwain000024WorldwithCountries#42þ0c2BWþBotswana000015USA#KYþ0c2KYþKentucky000012USA#MEþ0c2MEþMaine000021CentralAmerica#06þ0c2NUþNicaragua00001BAndorra#04þ0c2LMþLa Massana00001BAfghanistan#09þ0c2GHOþGhowr00001BEgypt_346255#27þ0c2LXþLuxor00001DAzerbaijan#37þ0c2OGþO&#287;uz000016Ukraine#19þ0c2RVþRivne00001CLatvia#15þ0c2KUþKuld&#299;ga00001ABolivia#02þ0c2CþCochabamba000017Armenia#08þ0c2SUþSyunik000026PolandCounties#PL.MZ.SMþ0c2MSMþSiedlce000023FranceDepartment#FR.LDþ0c2LDþLandes000021CapeVerde#CV.SNþ0c2SNþSao Nicolau00001FCambodia#KH.BAþ0c2BAþBattambang00001CMacedonia#MK.ZEþ0c2ZEþZelino000016Chad#TD.KAþ0c2KAþKanem000022Guyana#GY.MAþ0c2MAþMahaica-Berbice000030HungaryRegions#HU.STþ0c2STþSouthern Transdanubia000023Libya#LY.NQþ0c2NQþAn Nuqat al Khams000018Florida#087þ0c2MOþMonroe00001CMississippi#069þ0c2KEþKemper00001EPennsylvania#035þ0c2CNþClinton00001DArkansas#059þ0c2HSþHot Spring00001CWestVirginia#087þ0c2ROþRoane000015UK#002þ0c2SCþScotland000019France#019þ0c2PIþPicardie00001BColorado#067þ0c2LPþLa Plata00001FMontana#037þ0c2GVþGolden Valley00001DSouthDakota#105þ0c2PRþPerkins00001BAlabama#083þ0c2LIþLimestone000013India#011þ0c2GOþGoa000014Utah#019þ0c2GRþGrand000017Texas#315þ0c2MARþMarion00001AOceania#003þ0c2KIþKiribati00001CLouisiana#059þ0c2LSþLa Salle000018Georgia#123þ0c2GIþGilmer000022WorldwithCountries#201þ0c2YMþYemen00001DDenmark#008þ0c2NOþNordjylland000019Kentucky#159þ0c2MTþMartin00002AMadagascarRegions#MG.AV.BNþ0c2BNþBongolava000017Armenia#09þ0c2TVþTavush00001CNewWorld#95þ0c2AZþAzerbaijan000022Turkey#40þ0c2KHþK&#305;r&#351;ehir000033DominicanRepublic#11þ0c2EPþEl&iacute;as Pi&ntilde;a000028WorldwithCountries#43þ0c2BFþBurkina Faso000017Sweden#02þ0c2KþBlekinge00001ECentralAmerica#07þ0c2PMþPanama000017Andorra#05þ0c2ORþOrdina00001DAfghanistan#10þ0c2HELþHelmand00001CEgypt_346255#28þ0c2HWþHelwan000029Azerbaijan#38þ0c2QAþQ&#601;b&#601;l&#601;00001CLatvia#16þ0c2LEþLiep&#257;ja000017Bolivia#03þ0c2BþEl Beni00001ECameroon#CM.SWþ0c2SWþSud-Ouest00001EVietnam#VN.NTþ0c2NTþNinh Thuan000017Nauru#NR.NIþ0c2NIþNibok000022Thailand#TH.NFþ0c2NFþNakhon Phanom000018Angola#AO.BOþ0c2BOþBengo000019Nepal#NP.BAþ0c2BAþBagmati000017Russia#RU.PEþ0c2PEþPerm00001EMongolia#MN.ARþ0c2ARþArkhangai000021Mongolia#MN.BHþ0c2BHþBayankhongor000017Laos#LA.ATþ0c2ATþAttapu000016Denmark#009þ0c2RIþRibe000016Ohio#097þ0c2MAþMadison000017Nebraska#067þ0c2GAþGage00001ATennessee#157þ0c2SHþShelby00001AUK#003þ0c2NIþNorth Ireland000018Maryland#015þ0c2CEþCecil000021France#020þ0c2PCþPoitou-Charentes00001BOklahoma#109þ0c2OLþOklahoma000012Iowa#161þ0c2SAþSac000018Wisconsin#051þ0c2IRþIron000015Texas#497þ0c2WISþWise000017India#012þ0c2GUþGujarat00001AWashington#011þ0c2CAþClark000021Asia#036þ0c2RUþRussian Federation000017Indiana#113þ0c2NOþNoble00001ANewYork#085þ0c2RIþRichmond000020NorthCarolina#153þ0c2RIþRichmond000017Georgia#305þ0c2WYþWayne000015Kansas#107þ0c2LNþLinn000020SouthCarolina#079þ0c2RIþRichland000022Oceania#004þ0c2MHþMarshall Islands000019Illinois#143þ0c2PEþPeoria000019Missouri#063þ0c2DKþDeKalb000028WorldwithCountries#202þ0c2PRþPuerto Rico00001ENorthDakota#077þ0c2RIþRichland000016Texas#135þ0c2ECTþEctor00001CArmenia#10þ0c2VDþVayots Dzor00002CCentralAmericawithCaribbeans#01þ0c2BHþBelize00002CHungary#20þ0c2JNþJ&aacute;sz-Nagykun-Szolnok00001CNewWorld#96þ0c2BDþBangladesh000017Turkey#41þ0c2KCþKocaeli000024DominicanRepublic#12þ0c2ROþLa Romana000023WorldwithCountries#44þ0c2BIþBurundi00001DSweden#03þ0c2XþG&auml;vleborg000032Andorra#06þ0c2SJþSant Juli&agrave; de L&ograve;ria00001BAfghanistan#11þ0c2HERþHerat000024Egypt_346255#29þ0c2SOþ6th of October000017Azerbaijan#39þ0c2QXþQax000015Ukraine#21þ0c2SMþSumy000024Latvia#17þ0c2LPXþLiep&#257;ja (city)000016Bolivia#04þ0c2LþLa Paz000018China2#CN.MAþ0c2MAþMacao00001ECapeVerde#CV.TFþ0c2TFþTarrafal000016Mali#ML.KYþ0c2KYþKayes00001BEurope2#EU.BYþ0c2BYþBelarus00001BEurope2#EU.DEþ0c2DEþGermany00001ALesotho#LS.MSþ0c2MSþMaseru00001CLaos#LA.SVþ0c2SVþSavannakhet000023Macedonia#MK.GPþ0c2GPþGjorce Petrov000027Zimbabwe#ZW.MNþ0c2MNþMatabeleland North00001ABurundi#BI.BRþ0c2BRþBururi00001DRussia#RU.NZþ0c2NZþNizhegorod000016Laos#LA.BKþ0c2BKþBokeo000024Denmark#010þ0c2RNþRingkj&oslash;bing000018Kentucky#161þ0c2MOþMason000018Florida#089þ0c2NAþNassau00001FMississippi#071þ0c2LAþLafayette00001FPennsylvania#037þ0c2COþColumbia000019Arkansas#061þ0c2HWþHoward00001EWestVirginia#089þ0c2SUþSummers000012UK#004þ0c2WAþWales000031France#021þ0c2PRþProvence-Alpes-C&ocirc;te D'Azur00001AColorado#069þ0c2LRþLarimer000019Montana#039þ0c2GNþGranite00001CSouthDakota#107þ0c2POþPotter000019Alabama#085þ0c2LOþLowndes000017India#013þ0c2HAþHaryana000013Utah#021þ0c2IRþIron000017Texas#317þ0c2MATþMartin00001COceania#005þ0c2FMþMicronesia00001BLouisiana#061þ0c2LIþLincoln00001AGeorgia#125þ0c2GLþGlascock00002BWorldwithCountries#203þ0c2KYþCayman Islands000018Armenia#11þ0c2ERþYerevan000030CentralAmericawithCaribbeans#02þ0c2CSþCosta Rica000016Hungary#21þ0c2TOþTolna000018NewWorld#97þ0c2BTþBhutan000029USANorthEastRegion#33þ0c2NHþNew Hampshire000024WorldwithCountries#45þ0c2CMþCameroon000021Andorra#07þ0c2ALþAndorra la Vella000019Azerbaijan#40þ0c2QZþQazax000019Ukraine#22þ0c2TPþTernopil00001CLatvia#18þ0c2LMþLimba&#382;i000015Bolivia#05þ0c2OþOruro00002BFranceDepartment#FR.LGþ0c2LGþLot et Garonne000025DenmarkRegion#DK.HSþ0c2HSþHovenstaden00001FBurma#MM.RAþ0c2RAþRakhine State00001CBurundi#BI.CIþ0c2CIþCibitoke00001CLaos#LA.BLþ0c2BLþBolikhamxai00001ADenmark#011þ0c2ROþRoskilde000021Virginia#600þ0c2FAþFairfax (City)000017Ohio#099þ0c2MHþMahoning000019Nebraska#069þ0c2GRþGarden000019Tennessee#159þ0c2SMþSmith00001AMaryland#017þ0c2CHþCharles000022France#022þ0c2RHþRh&ocirc;ne-Alpes000021SpainProvinces#001þ0c2ABþAlbacete00001BOklahoma#111þ0c2OMþOkmulgee000014Iowa#163þ0c2SCþScott00001BWisconsin#053þ0c2JAþJackson000015Texas#499þ0c2WODþWood000020India#014þ0c2HPþHimachal Pradesh00001DWashington#013þ0c2CLþColumbia000018Asia#038þ0c2SGþSingapore000016Indiana#115þ0c2OHþOhio00001ANewYork#087þ0c2ROþRockland00001FNorthCarolina#155þ0c2ROþRobeson000018Virginia#057þ0c2ESþEssex000019Georgia#307þ0c2WSþWebster000016Kansas#109þ0c2LGþLogan00001ESouthCarolina#081þ0c2SAþSaluda000017Oceania#006þ0c2NRþNauru000018Illinois#145þ0c2PRþPerry000017Missouri#065þ0c2DEþDent00001DNorthDakota#079þ0c2ROþRolette000018Texas#137þ0c2EDWþEdwards000026Denmark#012þ0c2SOþS&oslash;nderjylland000018Kentucky#163þ0c2MDþMeade00001AFlorida#091þ0c2OLþOkaloosa00001BMississippi#073þ0c2LMþLamar00001FPennsylvania#039þ0c2CWþCrawford00001FArkansas#063þ0c2INþIndependence00001DWestVirginia#091þ0c2TAþTaylor000020France#023þ0c2HNþHaute-Normandie000025SpainProvinces#002þ0c2ALþ&Aacute;lava00001DColorado#071þ0c2LSþLas Animas000016Montana#041þ0c2HIþHill00001DSouthDakota#109þ0c2ROþRoberts000017Alabama#087þ0c2MAþMacon000021India#015þ0c2JKþJammu and Kashmir000018Asia#039þ0c2LKþSri Lanka000013Utah#023þ0c2JUþJuab000016Texas#319þ0c2MASþMason00001DOceania#007þ0c2NZþNew Zealand00001ELouisiana#063þ0c2LVþLivingston000017Georgia#127þ0c2GYþGlynn000024Germany#001þ0c2BAþBaden-Wuerttemberg000031CentralAmericawithCaribbeans#03þ0c2ESþEl Salvador000014Hungary#22þ0c2VAþVas000025EuropeRegion#01þ0c2NRþNorthern Region000018NewWorld#98þ0c2BNþBrunei00001CTurkey#43þ0c2KUþK&uuml;tahya000026USANorthEastRegion#34þ0c2NJþNew Jersey00003FDominicanRepublic#14þ0c2MTþMar&iacute;a Trinidad S&aacute;nchez000026WorldwithCountries#46þ0c2CVþCape Verde000015USA#MIþ0c2MIþMichigan000016Sweden#05þ0c2IþGotland000023Andorra#08þ0c2EEþEscaldes-Engordany00001BAfghanistan#13þ0c2KABþKabul00001CAzerbaijan#41þ0c2QOþQobustan00001AUkraine#23þ0c2VIþVinnytsia000015Latvia#19þ0c2LUþLudza000015World#AFþ0c2AFþAfrica000015Bolivia#06þ0c2NþPando000020SolomonIsland#SB.MKþ0c2MKþMakira000022Thailand#TH.MSþ0c2MSþMaha Sarakham000019Togo#TG.PLþ0c2PLþPlateaux00001BCameroon#CM.CEþ0c2CEþCentre00001ANamibia#NA.KHþ0c2KHþKhomas000019Nigeria#NG.LAþ0c2LAþLagos000017Angola#AO.UIþ0c2UIþUige00002ACentralAmerica2#CE.KYþ0c2KYþCayman Islands00001FMongolia#MN.UBþ0c2UBþUlan Bator00001DMacedonia#MK.GRþ0c2GRþGradsko000022Denmark#013þ0c2STþStorstr&oslash;m000015Ohio#101þ0c2MRþMarion00001BNebraska#071þ0c2GFþGarfield00001BTennessee#161þ0c2STþStewart00001DMaryland#019þ0c2DOþDorchester000021SpainProvinces#003þ0c2AIþAlicante000018Oklahoma#113þ0c2OSþOsage000015Iowa#165þ0c2SHþShelby00001DWisconsin#055þ0c2JEþJefferson000017Texas#501þ0c2YOAþYoakum000019India#016þ0c2JHþJharkhand00001CWashington#015þ0c2COþCowlitz000018Indiana#117þ0c2ORþOrange00001ENewYork#089þ0c2SLþSt. Lawrence000022NorthCarolina#157þ0c2RCþRockingham00001AVirginia#059þ0c2FIþFairfax000019Georgia#309þ0c2WEþWheeler000015Kansas#111þ0c2LYþLyon000023SouthCarolina#083þ0c2SPþSpartanburg000017Oceania#008þ0c2PWþPalau000018Illinois#147þ0c2PIþPiatt00001AMissouri#067þ0c2DOþDouglas000018Germany#002þ0c2BYþBayern00001DNorthDakota#081þ0c2SAþSargent000016Texas#139þ0c2ELIþEllis00003BPrinceEdwardIsland#CA.PE.PCþ0c2PCþPoints East Coastal Drive00002FCentralAmericawithCaribbeans#04þ0c2GTþGuatemala000020Hungary#23þ0c2VEþVeszpr&eacute;m000025EuropeRegion#02þ0c2SRþSouthern Region000021NewWorld#99þ0c2MMþBurma (Myanmar)000017Turkey#44þ0c2MLþMalatya000027DominicanRepublic#15þ0c2MCþMonte Cristi000034WorldwithCountries#47þ0c2CPþCentral African Republic000016Sweden#06þ0c2NþHalland00001CAfghanistan#14þ0c2KAPþKapisa000018Azerbaijan#42þ0c2QBþQuba000016Ukraine#24þ0c2VOþVolyn000016Latvia#20þ0c2MAþMadona00001DBolivia#07þ0c2PþPotos&iacute;000024PolandCounties#PL.OP.OMþ0c2OOMþOpole000026MarshallIsland#MH.MH.RLþ0c2RLþRongelap000021SolomonIsland#SB.MLþ0c2MLþMalaita00001BChina2#CN.LNþ0c2LNþLiaoning00001CAlgeria#DZ.GRþ0c2GRþGhardaia000018Liberia#LR.LFþ0c2LFþLofa000025Sudan#SD.GZþ0c2GZþAl Jazirah (Gezira)000017Yemen#YE.ABþ0c2ABþAbyan000023Burundi#BI.BUþ0c2BUþBujumbura Rural000031Guinea#GN.NZþ0c2NZþNz&eacute;r&eacute;kor&eacute;000017Denmark#014þ0c2VEþVejle00001AKentucky#165þ0c2MEþMenifee00001CFlorida#093þ0c2OKþOkeechobee000020Mississippi#075þ0c2LUþLauderdale000021Pennsylvania#041þ0c2CUþCumberland000018Arkansas#065þ0c2IZþIzard00001DWestVirginia#093þ0c2TUþTucker000027SpainProvinces#004þ0c2AMþAlmer&iacute;a00001AColorado#073þ0c2LIþLincoln00001BMontana#043þ0c2JEþJefferson00001DSouthDakota#111þ0c2SAþSanborn000019Alabama#089þ0c2MDþMadison000019India#017þ0c2KAþKarnataka000019Asia#041þ0c2TJþTajikistan00001EAlaska#150þ0c2KOþKodiak Island000013Utah#025þ0c2KAþKane00001ATexas#321þ0c2MAGþMatagorda000022Oceania#009þ0c2PGþPapua New Guinea00001BLouisiana#065þ0c2MAþMadison000018Georgia#129þ0c2GOþGordon000018Germany#003þ0c2BEþBerlin00002ECentralAmericawithCaribbeans#05þ0c2HOþHonduras000015Hungary#24þ0c2ZAþZala000024EuropeRegion#03þ0c2WRþWestern Region000016Turkey#45þ0c2MNþManisa000024USANorthEastRegion#36þ0c2NYþNew York000025DominicanRepublic#16þ0c2PNþPedernales000020WorldwithCountries#48þ0c2TDþChad00001CSweden#07þ0c2ZþJ&auml;mtland000020Azerbaijan#43þ0c2QDþQubadl&#305;00001CUkraine#25þ0c2ZKþZakarpattia000014Latvia#21þ0c2OGþOgre00001ABolivia#08þ0c2SþSanta Cruz00001EThailand#TH.NKþ0c2NKþNong Khai00001FCambodia#KH.SRþ0c2SRþSvay Rieng00001AEurope2#EU.CSþ0c2CSþSerbia000020Macedonia#MK.ZKþ0c2ZKþZelenikovo000017Yemen#YE.SDþ0c2SDþSadah00001DSamoa #WS.SAþ0c2SAþSatupaitea00001EMacedonia#MK.GTþ0c2GTþGostivar00001ESerbia#RS.SCþ0c2SCþNorth Backa00001ENorthDakota#083þ0c2SHþSheridan000018Texas#141þ0c2ELPþEl Paso000024Denmark#015þ0c2VSþVestsj&aelig;lland000015Ohio#103þ0c2MEþMedina000019Nebraska#073þ0c2GOþGosper00001AMinnesota#001þ0c2AIþAitkin00001FConnecticut#001þ0c2FAþFairfield00001CTennessee#163þ0c2SLþSullivan00001CMaryland#021þ0c2FRþFrederick000021SpainProvinces#005þ0c2ASþAsturias000019Oklahoma#115þ0c2OTþOttawa000014Iowa#167þ0c2SIþSioux00001AWisconsin#057þ0c2JUþJuneau000016Texas#503þ0c2YOUþYoung000016India#018þ0c2KEþKerala00001CWashington#017þ0c2DOþDouglas000017Asia#042þ0c2THþThailand000016Indiana#119þ0c2OWþOwen00001ANewYork#091þ0c2SAþSaratoga00001DNorthCarolina#159þ0c2RWþRowan00001BVirginia#061þ0c2FUþFauquier000017Georgia#311þ0c2WTþWhite00001AKansas#113þ0c2MPþMcpherson00001ESouthCarolina#085þ0c2SUþSumter000017Oceania#010þ0c2WSþSamoa000017Illinois#149þ0c2PKþPike00001AMissouri#069þ0c2DUþDunklin00001DGermany#004þ0c2BRþBrandenburg000027MadagascarRegions#MG.TL.MEþ0c2MEþMenabe00002FMadagascarRegions#MG.AV.VAþ0c2VAþVakinankaratra00002FCentralAmericawithCaribbeans#06þ0c2NUþNicaragua000024EuropeRegion#04þ0c2ERþEastern Region000022Turkey#46þ0c2KMþKahramanmara&#351;000023WorldwithCountries#49þ0c2KMþComoros000022Sweden#08þ0c2FþJ&ouml;nk&ouml;ping000019Azerbaijan#44þ0c2QRþQusar00001BUkraine#26þ0c2ZPþZaporizhia00001BLatvia#22þ0c2PRþPrei&#316;i000016Bolivia#09þ0c2TþTarija000022SierraLeone#SL.SO.MOþ0c2MOþMoyamba000027FrenchGuiana#GF.SL.GSþ0c2GSþGrand Santi000033PolandCounties#PL.LD.PMþ0c2LPMþPiotrkow Trybunalski000017Samoa #WS.AAþ0c2AAþAana00002ABrazilRegion#BR.SEþ0c2SEþSouth East Region00001ATuvalu#TV.NAþ0c2NAþNanumea000018Nigeria#NG.KNþ0c2KNþKano000018Mongolia#MN.TOþ0c2TOþTov000027Zimbabwe#ZW.MSþ0c2MSþMatabeleland South000020Serbia#RS.SDþ0c2SDþCentral Banat000019Serbia#RS.RNþ0c2RNþRasina000016Yemen#YE.ADþ0c2ADþAdan000019Uganda#UG.INþ0c2INþIganga000018Germany#005þ0c2BMþBremen000018Denmark#016þ0c2VIþViborg000019Kentucky#167þ0c2MCþMercer000018Florida#095þ0c2ORþOrange00001EMississippi#077þ0c2LWþLawrence00001EPennsylvania#043þ0c2DAþDauphin00001AArkansas#067þ0c2JAþJackson00001CWestVirginia#095þ0c2TYþTyler00001ESpainProvinces#006þ0c2AVþAvila000018Colorado#075þ0c2LOþLogan00001EMontana#045þ0c2JBþJudith Basin00001DSouthDakota#113þ0c2SHþShannon000019Alabama#091þ0c2MRþMarengo00001BIndia#019þ0c2LAþLakshadweep000016Utah#027þ0c2MIþMillard000019Texas#323þ0c2MAVþMaverick000021Oceania#011þ0c2SBþSolomon Islands00001DLouisiana#067þ0c2MOþMorehouse000017Georgia#131þ0c2GRþGrady00002CCentralAmericawithCaribbeans#07þ0c2PMþPanama000024EuropeRegion#05þ0c2CRþCentral Region000027DominicanRepublic#18þ0c2PPþPuerto Plata000029WorldwithCountries#50þ0c2CIþCote d Ivoire00001BUSA#NCþ0c2NCþNorth Carolina000015Sweden#09þ0c2HþKalmar00001CAfghanistan#17þ0c2LOWþLowgar00001FAzerbaijan#45þ0c2STþSaatl&#305;000019Ukraine#27þ0c2ZTþZhytomyr00001CLatvia#23þ0c2REþR&#275;zekne000021SierraLeone#SL.EA.KEþ0c2KEþKenema000025FranceDepartment#FR.MBþ0c2MBþMorbihan000020Cambodia#KH.STþ0c2STþStung Treng000021CapeVerde#CV.SVþ0c2SVþSao Vicente00001CSriLanka#LK.KEþ0c2KEþKegalle000018Nigeria#NG.KOþ0c2KOþKogi00001BEurope2#EU.DKþ0c2DKþDenmark000022BurkinaFaso#BF.KJþ0c2KJþKomondjari00001FMacedonia#MK.GVþ0c2GVþGevgelija000017Nepal#NP.BHþ0c2BHþBheri000020Mongolia#MN.BOþ0c2BOþBayan Olgii000017Guinea#GN.PIþ0c2PIþPita000019Germany#006þ0c2HAþHamburg00001BNorthDakota#085þ0c2SIþSioux000016Texas#143þ0c2ERAþErath000014Ohio#105þ0c2MIþMeigs000018Nebraska#075þ0c2GTþGrant000019Minnesota#003þ0c2ANþAnoka00001EConnecticut#003þ0c2HAþHartford00001ATennessee#165þ0c2SUþSumner00001AMaryland#023þ0c2GAþGarrett000020SpainProvinces#007þ0c2BAþBadajoz000019Oklahoma#117þ0c2PAþPawnee000014Iowa#169þ0c2STþStory00001BWisconsin#059þ0c2KEþKenosha000017Texas#505þ0c2ZAPþZapata00001EIndia#020þ0c2MPþMadhya Pradesh00001AWashington#019þ0c2FEþFerry00001BAsia#044þ0c2TMþTurkmenistan000017Indiana#121þ0c2PAþParke00001DNewYork#093þ0c2SCþSchenectady000022NorthCarolina#161þ0c2RUþRutherford000018Virginia#063þ0c2FLþFloyd00001BGeorgia#313þ0c2WHþWhitfield000017Kansas#115þ0c2MNþMarion00001DSouthCarolina#087þ0c2UNþUnion000017Oceania#012þ0c2TOþTonga000017Illinois#151þ0c2POþPope00001BMissouri#071þ0c2FRþFranklin00002ACentralAmericawithCaribbeans#08þ0c2CUþCuba00001ATurkey#48þ0c2MGþMu&#287;la000020USANorthEastRegion#39þ0c2OHþOhio000022DominicanRepublic#19þ0c2SCþSalcedo00003CWorldwithCountries#51þ0c2CDþDemocratic Republic of the Congo000016USA#MNþ0c2MNþMinnesota000019USA#NDþ0c2NDþNorth Dakota000017Sweden#10þ0c2WþDalarnas00001FAfghanistan#18þ0c2NANþNangarhar00001DAzerbaijan#46þ0c2SBþSabirabad000024Latvia#24þ0c2REZþR&#275;zekne (city)000024Paraguay#01þ0c2AAþAlto Paran&aacute;000023PolandCounties#PL.WP.PIþ0c2WPIþPila00001ALaos#LA.CHþ0c2CHþChampasak000021Thailand#TH.NNþ0c2NNþNakhon Nayok00002AHungaryRegions#HU.CHþ0c2CHþCentral Hungary000023Qatar#QA.JBþ0c2JBþJariyan Al Batnah000018Germany#007þ0c2HEþHessen00001BKentucky#169þ0c2MFþMetcalfe000019Florida#097þ0c2OSþOsceola00001BMississippi#079þ0c2LKþLeake00001FPennsylvania#045þ0c2DLþDelaware00001CArkansas#069þ0c2JEþJefferson00001DWestVirginia#097þ0c2UPþUpshur000021SpainProvinces#008þ0c2BLþBaleares000017Colorado#077þ0c2MEþMesa000016Montana#047þ0c2LAþLake00001BSouthDakota#115þ0c2SPþSpink000018Alabama#093þ0c2MIþMarion00001BIndia#021þ0c2MAþMaharashtra000015Utah#029þ0c2MOþMorgan000017Texas#325þ0c2MEDþMedina000018Oceania#013þ0c2TVþTuvalu000020Louisiana#069þ0c2NAþNatchitoches000018Georgia#133þ0c2GEþGreene00002DCentralAmericawithCaribbeans#09þ0c2BSþBahamas000018Turkey#49þ0c2MSþMu&#351;000028DominicanRepublic#20þ0c2SMþSaman&aacute;000024WorldwithCountries#52þ0c2DJþDjibouti000015USA#MOþ0c2MOþMissouri000015USA#NEþ0c2NEþNebraska00001CAfghanistan#19þ0c2NIMþNimruz000022Azerbaijan#47þ0c2SKþ&#350;&#601;ki000019Latvia#25þ0c2RIþR&#299;ga000019Paraguay#02þ0c2AMþAmambay00001BEastTimor#TL.ALþ0c2ALþAileu00001EEastTimor#TL.BBþ0c2BBþBobonaro00001FThailand#TH.NOþ0c2NOþNonthaburi00001FSriLanka#LK.KGþ0c2KGþKurunegala00001EKyrgyzstan#KG.GBþ0c2GBþBishkek000029BurkinaFaso#BF.KLþ0c2KLþKoulp&eacute;logo00001ERwanda#RW.KVþ0c2KVþKigali City000019Yemen#YE.SHþ0c2SHþShabwah00001FAngola#AO.CNþ0c2CNþCuanza Norte00001DZimbabwe#ZW.MVþ0c2MVþMasvingo000028Germany#008þ0c2MEþMecklenburg-Vorpommern00001BNorthDakota#087þ0c2SLþSlope000016Texas#145þ0c2FALþFalls000015Ohio#107þ0c2MCþMercer00001ANebraska#077þ0c2GEþGreeley00001AMinnesota#005þ0c2BEþBecker000020Connecticut#005þ0c2LIþLitchfield00001ATennessee#167þ0c2TIþTipton00001AMaryland#025þ0c2HAþHarford000022SpainProvinces#009þ0c2BRþBarcelona000018Oklahoma#119þ0c2PYþPayne000013Iowa#171þ0c2TAþTama00001CWisconsin#061þ0c2KWþKewaunee000017Texas#507þ0c2ZAVþZavala000017India#022þ0c2MNþManipur00001DWashington#021þ0c2FRþFranklin000019Asia#046þ0c2UZþUzbekistan000017Indiana#123þ0c2PEþPerry00001BNewYork#095þ0c2SHþSchoharie00001FNorthCarolina#163þ0c2SAþSampson00001BVirginia#065þ0c2FVþFluvanna000018Georgia#315þ0c2WCþWilcox000019Kansas#117þ0c2MSþMarshall000024SouthCarolina#089þ0c2WIþWilliamsburg000019Oceania#014þ0c2VUþVanuatu00001AIllinois#153þ0c2PUþPulaski00001CMissouri#073þ0c2GAþGasconade000034CentralAmericawithCaribbeans#10þ0c2KYþCayman Islands00001DTurkey#50þ0c2NVþNev&#351;ehir000038DominicanRepublic#21þ0c2SZþS&aacute;nchez Ram&iacute;rez000021WorldwithCountries#53þ0c2EGþEgypt000018Sweden#12þ0c2GþKronoberg000029Azerbaijan#48þ0c2SAþ&#350;&#601;ki (City)000021Latvia#26þ0c2RIXþR&#299;ga (city)000025MarshallIsland#MH.MH.RRþ0c2RRþRongrik00001CEastTimor#TL.AMþ0c2AMþAmbeno00001CEastTimor#TL.BCþ0c2BCþBaucau000020FranceDepartment#FR.LOþ0c2LOþLot000022Thailand#TH.NPþ0c2NPþNakhon Pathom00001CKuwait#KW.AHþ0c2AHþAl Ahmadi000024BurkinaFaso#BF.KMþ0c2KMþKomo&eacute;000025Zimbabwe#ZW.MWþ0c2MWþMashonaland West000028CentralAfricanRepublic#CF.ACþ0c2ACþOuham00001FGermany#009þ0c2NIþNiedersachsen000019Kentucky#171þ0c2MNþMonroe00001CFlorida#099þ0c2PBþPalm beach000019Mississippi#081þ0c2LEþLee00001APennsylvania#047þ0c2ELþElk00001AArkansas#071þ0c2JOþJohnson00001CWestVirginia#099þ0c2WAþWayne000020SpainProvinces#010þ0c2BIþBizkaia00001AColorado#079þ0c2MIþMineral000021Montana#049þ0c2LCþLewis and Clark00001DSouthDakota#117þ0c2STþStanley00001AAlabama#095þ0c2MSþMarshall000019India#023þ0c2MEþMeghalaya000016Asia#047þ0c2VNþVietnam000014Utah#031þ0c2PIþPiute000017Texas#327þ0c2MENþMenard00001FOceania#015þ0c2NCþNew Caledonia00001BLouisiana#071þ0c2ORþOrleans000022Virginia#790þ0c2SNþStaunton (City)00001AGeorgia#135þ0c2GWþGwinnett00002DCentralAmericawithCaribbeans#11þ0c2JMþJamaica000028USANorthEastRegion#42þ0c2PAþPennsylvania00002DWorldwithCountries#54þ0c2GQþEquatorial Guinea00001AAzerbaijan#49þ0c2SLþSalyan000016Latvia#27þ0c2SAþSaldus000021Paraguay#04þ0c2CGþCaaguaz&uacute;00002ANovaScotia#CA.NS.ETþ0c2ETþEvangeline Trail00001CEastTimor#TL.ANþ0c2ANþAinaro00001BUganda#UG.ISþ0c2ISþIsingiro000018Uganda#UG.JIþ0c2JIþJinja000024CaymanIslands#KY.NSþ0c2NSþNorth Side00001BEthiopia#ET.ORþ0c2ORþOromia000020CapeVerde#CV.SZþ0c2SZþSanta Cruz00001CTuvalu#TV.NFþ0c2NFþNukufetau000028Eritrea#ER.DKþ0c2DKþDebubawi Keyih Bahri000016Mali#ML.MOþ0c2MOþMopti00001BPanama#PA.VRþ0c2VRþVeraguas00001BEurope2#EU.EEþ0c2EEþEstonia00001AEurope2#EU.CYþ0c2CYþCyprus000030BurkinaFaso#BF.KNþ0c2KNþK&eacute;n&eacute;dougou000030CentralAfricanRepublic#CF.SEþ0c2SEþSangha-Mbaere000014Chad#TD.LCþ0c2LCþLac000018Serbia#RS.RSþ0c2RSþRaska000025Germany#010þ0c2NOþNordrhein-Westfalen00001BNorthDakota#089þ0c2STþStark000017Texas#147þ0c2FANþFannin000026Virginia#610þ0c2FCþFalls Church (City)000014Ohio#109þ0c2MMþMiami000017Nebraska#079þ0c2HAþHall00001CMinnesota#007þ0c2BLþBeltrami00001FConnecticut#007þ0c2MIþMiddlesex000019Michigan#001þ0c2ALþAlcona00001DTennessee#169þ0c2TRþTrousdale000019Maryland#027þ0c2HOþHoward00001FSpainProvinces#011þ0c2BUþBurgos00001COklahoma#121þ0c2PIþPittsburg000015Iowa#173þ0c2TYþTaylor00001DWisconsin#063þ0c2LCþLa Crosse000017India#024þ0c2MIþMizoram00001DWashington#023þ0c2GFþGarfield000016Indiana#125þ0c2PIþPike00001ANewYork#097þ0c2SUþSchuyler000020NorthCarolina#165þ0c2SCþScotland00001BVirginia#067þ0c2FKþFranklin000018Georgia#317þ0c2WLþWilkes000016Kansas#119þ0c2MEþMeade00001CSouthCarolina#091þ0c2YOþYork000019Illinois#155þ0c2PTþPutnam000019Missouri#075þ0c2GNþGentry00002BCentralAmericawithCaribbeans#12þ0c2HTþHaiti000019Estonia#01þ0c2HAþHarjumaa000014Turkey#52þ0c2ORþOrdu000023DominicanRepublic#23þ0c2JUþSan Juan000023WorldwithCountries#55þ0c2ERþEritrea00001AUSA#NHþ0c2NHþNew Hampshire00001ASweden#14þ0c2BDþNorrbotten000024Azerbaijan#50þ0c2SIþ&#350;amax&#305;000015Latvia#28þ0c2TAþTalsi000020Paraguay#05þ0c2CZþCaazap&aacute;000025PolandCounties#PL.WP.PMþ0c2WPMþPoznan00002BMarshallIsland#MH.MH.AIþ0c2AIþAilinglapalap00001EVietnam#VN.QBþ0c2QBþQuang Binh000026Thailand#TH.NRþ0c2NRþNakhon Ratchasima00001BPakistan#PK.PBþ0c2PBþPunjab00001CTuvalu#TV.NGþ0c2NGþNanumanga00001BNigeria#NG.KTþ0c2KTþKatsina000022Europe2#EU.CZþ0c2CZþCzech Republic000025BurkinaFaso#BF.LEþ0c2LEþL&eacute;raba000022Burma#MM.SAþ0c2SAþSagaing Division00001DMacedonia#MK.ZRþ0c2ZRþZrnovci000019Panama#PA.DRþ0c2DRþDarien000017Yemen#YE.TAþ0c2TAþTaizz000021Germany#011þ0c2RHþRheinland-Pfalz00001DKentucky#173þ0c2MYþMontgomery000017Florida#101þ0c2PAþPasco00001DMississippi#083þ0c2LFþLeflore00001BPennsylvania#049þ0c2ERþErie00001CArkansas#073þ0c2LAþLafayette00001EWestVirginia#101þ0c2WEþWebster000027SpainProvinces#012þ0c2CAþC&aacute;ceres000019Colorado#081þ0c2MOþMoffat000019Montana#051þ0c2LBþLiberty00001BSouthDakota#119þ0c2SUþSully000018Alabama#097þ0c2MOþMobile000018India#025þ0c2NAþNagaland000015Asia#049þ0c2TWþTaiwan000013Utah#033þ0c2RIþRich000018Texas#329þ0c2MIDþMidland00001CLouisiana#073þ0c2OUþOuachita00001BGeorgia#137þ0c2HAþHabersham000038CentralAmericawithCaribbeans#13þ0c2DOþDominican Republic000018Estonia#02þ0c2HIþHiiumaa000014Turkey#53þ0c2RIþRize000028USANorthEastRegion#44þ0c2RIþRhode Island000036DominicanRepublic#24þ0c2PMþSan Pedro de Macor&iacute;s000024WorldwithCountries#56þ0c2ETþEthiopia000018USA#MSþ0c2MSþMississippi00001ASweden#15þ0c2Tþ&Ouml;rebro00001EAfghanistan#23þ0c2KANþKandahar000024Azerbaijan#51þ0c2SMþ&#350;&#601;mkir000016Latvia#29þ0c2TUþTukums000019Paraguay#06þ0c2CEþCentral000024MarshallIsland#MH.MH.TAþ0c2TAþTaongi00001CRussia#RU.PRþ0c2PRþPrimorsky00001BMongolia#MN.BUþ0c2BUþBulgan000020Mongolia#MN.DAþ0c2DAþDarkhan Uul000019Uganda#UG.KAþ0c2KAþKabale00001FBotswana#BW.SEþ0c2SEþSouth East000022FranceDepartment#FR.LRþ0c2LRþLoire000023FranceDepartment#FR.MHþ0c2MHþManche000021Thailand#TH.NSþ0c2NSþNakhon Sawan000028Pakistan#PK.NWþ0c2NWþNorth West Frontier000021BurkinaFaso#BF.KPþ0c2KPþKompienga00003ATajikistan#TJ.RRþ0c2RRþRegions of Republican Subordination00001AYemen#YE.BAþ0c2BAþAl Bayda000019Missouri#077þ0c2GEþGreene00001AGermany#012þ0c2SAþSaarland00001CNorthDakota#091þ0c2SEþSteele000018Texas#149þ0c2FAYþFayette000015Ohio#111þ0c2MOþMonroe00001BNebraska#081þ0c2HMþHamilton00001AMinnesota#009þ0c2BNþBenton00001FConnecticut#009þ0c2NHþNew Haven000018Michigan#003þ0c2AGþAlger00001ATennessee#171þ0c2UIþUnicoi000017Maryland#029þ0c2KEþKent000025SpainProvinces#013þ0c2CDþC&aacute;diz00001BOklahoma#123þ0c2POþPontotoc000014Iowa#175þ0c2UNþUnion00001DWisconsin#065þ0c2LAþLafayette000016India#026þ0c2ORþOrissa00001AWashington#025þ0c2GAþGrant000018Asia#050þ0c2HKþHong Kong000018Indiana#127þ0c2POþPorter000018NewYork#099þ0c2SEþSeneca00001ENorthCarolina#167þ0c2STþStanly00001CVirginia#069þ0c2FDþFrederick00001BGeorgia#319þ0c2WIþWilkinson000016Kansas#121þ0c2MIþMiami00001BIllinois#157þ0c2RAþRandolph000035NewfoundlandandLabrador#CA.NF.WSþ0c2WSþWestern Region000031CentralAmericawithCaribbeans#14þ0c2PRþPuerto Rico00001CEstonia#03þ0c2IVþIda-Virumaa000017Turkey#54þ0c2SKþSakarya000023DominicanRepublic#25þ0c2STþSantiago000021WorldwithCountries#57þ0c2GAþGabon000014USA#MTþ0c2MTþMontana000017USA#NJþ0c2NJþNew Jersey000025Sweden#16þ0c2Eþ&Ouml;sterg&ouml;tland00001CAfghanistan#24þ0c2KDZþKondoz000019Azerbaijan#52þ0c2SXþSamux000015Latvia#30þ0c2VKþValka000023Paraguay#07þ0c2CNþConcepci&oacute;n000023SierraLeone#SL.EA.KLþ0c2KLþKailahun000018Russia#RU.PSþ0c2PSþPskov00001BLibya#LY.QBþ0c2QBþAl Qubbah000028Thailand#TH.NTþ0c2NTþNakhon Si Thammarat00001CTuvalu#TV.NIþ0c2NIþNiulakita000020SriLanka#LK.KLþ0c2KLþKilinochchi00001BCapeVerde#CV.BRþ0c2BRþBrava00001DAngola#AO.CSþ0c2CSþCuanza Sul000016Georgia#139þ0c2HLþHall000019Germany#013þ0c2SCþSachsen000019Kentucky#175þ0c2MAþMorgan00001AFlorida#103þ0c2PLþPinellas00001DMississippi#085þ0c2LNþLincoln00001EPennsylvania#051þ0c2FAþFayette00001BArkansas#075þ0c2LWþLawrence00001DWestVirginia#103þ0c2WTþWetzel000022SpainProvinces#014þ0c2CNþCantabria00001CColorado#083þ0c2MNþMontezuma000019Montana#053þ0c2LIþLincoln00001ASouthDakota#121þ0c2TOþTodd000018Alabama#099þ0c2MNþMonroe000014Asia#051þ0c2MOþMacau000018Utah#035þ0c2SLþSalt Lake000016Texas#331þ0c2MILþMilam00001FLouisiana#075þ0c2PLþPlaquemines000035NewfoundlandandLabrador#CA.NF.ESþ0c2ESþEastern Region000038CentralAmericawithCaribbeans#15þ0c2KNþSt.Kitts and Nevis00001EEstonia#04þ0c2JRþJ&auml;rvamaa000016Turkey#55þ0c2SSþSamsun000034DominicanRepublic#26þ0c2SRþSantiago Rodr&iacute;guez000021WorldwithCountries#58þ0c2GHþGhana000025Azerbaijan#53þ0c2SYþSiy&#601;z&#601;n000018Latvia#31þ0c2VMþValmiera00001CParaguay#08þ0c2CRþCordillera000017Serbia#RS.SMþ0c2SMþSrem000017Yemen#YE.AMþ0c2AMþAmran000023FranceDepartment#FR.LTþ0c2LTþLoiret000019Nigeria#NG.KWþ0c2KWþKwara000022BurkinaFaso#BF.KRþ0c2KRþKouritenga00001BLiberia#LR.MGþ0c2MGþMargibi00001BBhutan#BT.LHþ0c2LHþLhuntshi000016Yemen#YE.SNþ0c2SNþSana000019Sudan#SD.JGþ0c2JGþJungoli00001BIllinois#159þ0c2RIþRichland000019Missouri#079þ0c2GRþGrundy000020Germany#014þ0c2SHþSachsen-Anhalt00001ENorthDakota#093þ0c2SUþStutsman000017Texas#151þ0c2FISþFisher000019Ohio#113þ0c2MGþMontgomery000019Nebraska#083þ0c2HRþHarlan00001DMinnesota#011þ0c2BSþBig Stone000020Connecticut#011þ0c2NLþNew London00001AMichigan#005þ0c2AEþAllegan000019Tennessee#173þ0c2UNþUnion00001DMaryland#031þ0c2MOþMontgomery000029SpainProvinces#015þ0c2CSþCastell&oacute;n00001FOklahoma#125þ0c2PWþPottawatomie000018Iowa#177þ0c2VBþVan Buren00001CWisconsin#067þ0c2LNþLanglade000016India#028þ0c2PUþPunjab000021Washington#027þ0c2GRþGrays Harbor000017Indiana#129þ0c2PSþPosey000019NewYork#101þ0c2STþSteuben00001ENorthCarolina#169þ0c2SOþStokes000018Virginia#071þ0c2GIþGiles000017Georgia#321þ0c2WOþWorth000018Africa#001þ0c2DZþAlgeria000019Kansas#123þ0c2MCþMitchell00002DSaskatchewan#CA.SK.SWþ0c2SWþSouth West Region00002DCentralAmericawithCaribbeans#16þ0c2AGþAntigua000021Estonia#05þ0c2JNþJ&otilde;gevamaa000015Romania#01þ0c2ABþAlba000023DominicanRepublic#27þ0c2VAþValverde000022WorldwithCountries#59þ0c2GNþGuinea000020Sweden#18þ0c2DþS&ouml;dermanland00001CAfghanistan#26þ0c2TAKþTakhar000021Azerbaijan#54þ0c2SQþSumqay&#305;t000019Latvia#32þ0c2VEþVentspils000013World#ASþ0c2ASþAsia00001FSierraLeone#SL.EA.KNþ0c2KNþKono00002CDistrictofColumbia#US.DC.NWþ0c2NWþNorth West000028PolandCounties#PL.MZ.CIþ0c2MCIþCieckanow00001ESerbia#RS.SNþ0c2SNþNorth Banat00001BMongolia#MN.DDþ0c2DDþDornod000026CoteDivoire#CI.HTþ0c2HTþHaut-Sassandra00001EUganda#UG.KDþ0c2KDþKaberamaido000025BrazilRegion#BR.SOþ0c2SOþSouth Region00001ANamibia#NA.KUþ0c2KUþKunene00001DBurkinaFaso#BF.KSþ0c2KSþKossi000019Angola#AO.CUþ0c2CUþCunene000019Georgia#141þ0c2HNþHancock000024Germany#015þ0c2SSþSchleswig-Holstein00001DKentucky#177þ0c2MBþMuhlenberg000016Florida#105þ0c2POþPolk00001DMississippi#087þ0c2LDþLowndes00001DPennsylvania#053þ0c2FOþForest000016Arkansas#077þ0c2LEþLee00001BWestVirginia#105þ0c2WIþWirt00001ESpainProvinces#016þ0c2CEþCeuta00001BColorado#085þ0c2MTþMontrose000018Montana#055þ0c2MCþMcCone00001BSouthDakota#123þ0c2TRþTripp00001CAlabama#101þ0c2MTþMontgomery000019India#029þ0c2RAþRajasthan000017Africa#002þ0c2AOþAngola000017Utah#037þ0c2SJþSan Juan000016Texas#333þ0c2MISþMills000021Louisiana#077þ0c2PCþPointe Coupee000018Arizona#001þ0c2APþApache00002ECentralAmericawithCaribbeans#17þ0c2DMþDominica000015Romania#02þ0c2ARþArad000015Turkey#57þ0c2SPþSinop000023DominicanRepublic#28þ0c2SEþEl Seibo000029WorldwithCountries#60þ0c2GWþGuinea-Bissau000017USA#NMþ0c2NMþNew Mexico00001CAfghanistan#27þ0c2WARþWardak000022Azerbaijan#55þ0c2SUþ&#350;u&#351;a000021Latvia#33þ0c2VENþVentspils (city)00001FParaguay#10þ0c2GUþGuair&aacute;000022FrenchGuiana#GF.CY.KRþ0c2KRþKourou00001BUganda#UG.KEþ0c2KEþKamwenge000020Samoa #WS.ALþ0c2ALþAiga-i-le-Tai00002BFranceDepartment#FR.MLþ0c2MLþMaine et Loire00001EVietnam#VN.QGþ0c2QGþQuang Ngai00001FKyrgyzstan#KG.YKþ0c2YKþYsyk Kol00001FThailand#TH.NWþ0c2NWþNarathiwat00001CThailand#TH.PCþ0c2PCþPhichit00001DTuvalu#TV.NLþ0c2NLþNukulaelae000019Panama#PA.EMþ0c2EMþEmbera000025CentralAmerica2#CE.NIþ0c2NIþNicaragua00001DMacedonia#MK.ILþ0c2ILþIlinden00001EIllinois#161þ0c2ROþRock Island00001BMissouri#081þ0c2HAþHarrison00001CGermany#016þ0c2THþThueringen00001CNorthDakota#095þ0c2TOþTowner000016Texas#153þ0c2FLOþFloyd000015Ohio#115þ0c2MNþMorgan000018Nebraska#085þ0c2HYþHayes00001EMinnesota#013þ0c2BUþBlue Earth00001DConnecticut#013þ0c2TOþTolland000019Michigan#007þ0c2APþAlpena00001DTennessee#175þ0c2VBþVan Buren000022Maryland#033þ0c2PGþPrince George's000024SpainProvinces#017þ0c2CRþCiudad Real00001DOklahoma#127þ0c2PUþPushmataha000016Iowa#179þ0c2WAþWapello00001BWisconsin#069þ0c2LIþLincoln000016India#030þ0c2SIþSikkim00001BWashington#029þ0c2ISþIsland000019Indiana#131þ0c2PUþPulaski000019NewYork#103þ0c2SFþSuffolk00001DNorthCarolina#171þ0c2SUþSurry00001DVirginia#073þ0c2GLþGloucester000016Africa#003þ0c2BJþBenin00001BKansas#125þ0c2MGþMontgomery00002ECentralAmericawithCaribbeans#18þ0c2LCþSt.Lucia000023Estonia#07þ0c2LNþL&auml;&auml;nemaa00001BRomania#03þ0c2AGþArge&#351;000015Turkey#58þ0c2SVþSivas000025DominicanRepublic#29þ0c2HMþHato Mayor000021WorldwithCountries#61þ0c2KEþKenya00001BAfghanistan#28þ0c2ZABþZabol000029Azerbaijan#56þ0c2SSþ&#350;u&#351;a (City)000018World#AUþ0c2AUþAustralia00001FParaguay#11þ0c2ITþItap&uacute;a000019Uganda#UG.KFþ0c2KFþKotido000019Oman#OM.WUþ0c2WUþAl Wusta00002FFranceDepartment#FR.MMþ0c2MMþMeurthe et Moselle000019Congo#CG.KOþ0c2KOþKouilou00001ACongo#CG.LEþ0c2LEþLekoumou00001FCapeVerde#CV.BVþ0c2BVþBoa Vista00001AAlgeria#DZ.ILþ0c2ILþIllizi00001EUzbekistan#UZ.FAþ0c2FAþFargona000023Laos#LA.VIþ0c2VIþVientiane Province000020Philippines#PH.GUþ0c2GUþGuimaras00001AGeorgia#143þ0c2HRþHaralson000019Kentucky#179þ0c2NEþNelson000018Florida#107þ0c2PNþPutnam00001DMississippi#089þ0c2MAþMadison00001FPennsylvania#055þ0c2FRþFranklin00001AArkansas#079þ0c2LIþLincoln00001BWestVirginia#107þ0c2WOþWood000027SpainProvinces#018þ0c2COþC&oacute;rdoba000019Colorado#087þ0c2MGþMorgan000019Montana#057þ0c2MAþMadison00001CSouthDakota#125þ0c2TUþTurner000018Alabama#103þ0c2MGþMorgan00001AIndia#031þ0c2TNþTamil Nadu000019Africa#004þ0c2BWþBotswana000023Alaska#164þ0c2PLþPeninsula and Lake000016Utah#039þ0c2SAþSanpete000019Texas#335þ0c2MITþMitchell00001BLouisiana#079þ0c2RAþRapides000019Arizona#003þ0c2COþCochise000028YukonTerritory#CA.YT.WHþ0c2WHþWhitehorse000018Nicaragua#01þ0c2BOþBoaco000044CentralAmericawithCaribbeans#19þ0c2VCþSt.Vincent and the Grenadlines000028Estonia#08þ0c2LVþL&auml;&auml;ne-Virumaa00001BRomania#04þ0c2BCþBac&#259;u00001DTurkey#59þ0c2TGþTekirda&#287;000023USANorthEastRegion#50þ0c2VTþVermont00001BAustria#01þ0c2BUþBurgenland000022DominicanRepublic#30þ0c2VEþLa Vega000023WorldwithCountries#62þ0c2LSþLesotho000016Sweden#21þ0c2CþUppsala00001DAfghanistan#29þ0c2PKAþPaktika000024Azerbaijan#57þ0c2TAþT&#601;rt&#601;r00001AParaguay#12þ0c2MIþMisiones00001BTanzania#TZ.DOþ0c2DOþDodoma00001EMongolia#MN.DGþ0c2DGþDornogovi000019Uganda#UG.KGþ0c2KGþKiboga000020Thailand#TH.PEþ0c2PEþPhetchaburi00001ASomalia#SO.SAþ0c2SAþSanaag00001CBurma#MM.SHþ0c2SHþShan State000020Philippines#PH.ZMþ0c2ZMþZambales000018Chad#TD.MAþ0c2MAþMandoul000019Sudan#SD.KAþ0c2KAþKassala000034CentralAfricanRepublic#CF.BBþ0c2BBþBamingui-Bangoran00001FPhilippines#PH.IBþ0c2IBþIsabela00001CIllinois#163þ0c2SCþSt. Clair000018Missouri#083þ0c2HEþHenry00001CNorthDakota#097þ0c2TRþTraill000016Texas#155þ0c2FOAþFoard000015Ohio#117þ0c2MWþMorrow00001CNebraska#087þ0c2HTþHitchcock000019Minnesota#015þ0c2BWþBrown00001DConnecticut#015þ0c2WIþWindham000019Michigan#009þ0c2ANþAntrim00001ATennessee#177þ0c2WRþWarren00001FMaryland#035þ0c2QAþQueen Anne's00001FSpainProvinces#019þ0c2CUþCuenca00001EOklahoma#129þ0c2RMþRoger Mills000015Iowa#181þ0c2WRþWarren00001DWisconsin#071þ0c2MAþManitowoc000017India#032þ0c2TRþTripura00001EWashington#031þ0c2JEþJefferson000018Indiana#133þ0c2PTþPutnam00001ANewYork#105þ0c2SVþSullivan00001DNorthCarolina#173þ0c2SWþSwain00001CVirginia#075þ0c2GOþGoochland00001DAfrica#005þ0c2BFþBurkina Faso000017Kansas#127þ0c2MRþMorris000019Nicaragua#02þ0c2CAþCarazo00002ECentralAmericawithCaribbeans#20þ0c2BBþBarbados000016Romania#05þ0c2BHþBihor000015Turkey#60þ0c2TTþTokat000024USANorthEastRegion#51þ0c2VAþVirginia00001DAustria#02þ0c2KAþK&auml;rnten000030DominicanRepublic#31þ0c2MNþMonse&ntilde;or Nouel000023WorldwithCountries#63þ0c2LIþLiberia00001CSweden#22þ0c2SþV&auml;rmland00001BAfghanistan#30þ0c2BALþBalkh000019Azerbaijan#58þ0c2TOþTovuz000028Paraguay#13þ0c2NEþ&Ntilde;eembuc&uacute;00001BUganda#UG.KHþ0c2KHþKiruhura00001BSerbia#RS.BGþ0c2BGþBelgrade000024FranceDepartment#FR.MOþ0c2MOþMoselle00001BVietnam#VN.PTþ0c2PTþPhu Tho00002FHungaryRegions#HU.CTþ0c2CTþCentral Transdanubia000027Europe2#EU.FDþ0c2FDþFaroe Islands (Den)000028BurkinaFaso#BF.KWþ0c2KWþKourw&eacute;ogo00002BPhilippines#PH.ZNþ0c2ZNþZamboanga del Norte00001DLouisiana#081þ0c2REþRed River00001AArizona#005þ0c2CCþCoconino000021Virginia#800þ0c2SFþSuffolk (City)000018Georgia#145þ0c2HIþHarris00001BKentucky#181þ0c2NIþNicholas00001BFlorida#109þ0c2SJþSt. Johns00001CMississippi#091þ0c2MRþMarion00001CPuertoRico#101þ0c2MVþMorovis00001DPennsylvania#057þ0c2FUþFulton00001FArkansas#081þ0c2LRþLittle River00001EWestVirginia#109þ0c2WYþWyoming000029SpainProvinces#020þ0c2GUþGuip&uacute;zcoa000018Colorado#089þ0c2OTþOtero000019Montana#059þ0c2MEþMeagher00001BSouthDakota#127þ0c2UNþUnion000017Alabama#105þ0c2PEþPerry00001DIndia#033þ0c2UPþUttar Pradesh000014Iowa#001þ0c2ADþAdair000018Africa#006þ0c2BIþBurundi000015Utah#041þ0c2SEþSevier000019Texas#337þ0c2MONþMontague000019Cyprus#01þ0c2FAþFamagusta00001DNicaragua#03þ0c2CIþChinandega00002ACzechRepublic#78þ0c2JMþJihomoravsk&yacute;00002DCentralAmericawithCaribbeans#21þ0c2GDþGrenada00002FRomania#06þ0c2BNþBistri&#355;a-N&#259;s&#259;ud000017Turkey#61þ0c2TBþTrabzon00001EDominica#02þ0c2ANþSaint Andrew000026Austria#03þ0c2NIþNieder&ouml;sterreich000026DominicanRepublic#32þ0c2MPþMonte Plata000021WorldwithCountries#64þ0c2LRþLibya000021Sweden#23þ0c2ACþV&auml;sterbotten00001DAfghanistan#31þ0c2JOWþJowzjan000018Azerbaijan#59þ0c2UCþUcar00001EAntigua#03þ0c2SGEþSaint George000022MarshallIsland#MH.MH.ARþ0c2ARþArno000018Russia#RU.PZþ0c2PZþPenza000019Uganda#UG.KIþ0c2KIþKibale000023FranceDepartment#FR.LZþ0c2LZþLozere00001DThailand#TH.PGþ0c2PGþPhangnga00002ATrinidadandTobago#TT.SAþ0c2SAþSaint Andrew000019Eritrea#ER.DUþ0c2DUþDebub000019Illinois#165þ0c2SAþSaline00001AMissouri#085þ0c2HKþHickory00001BNorthDakota#099þ0c2WAþWalsh00001ATexas#157þ0c2FBEþFort Bend000022Virginia#620þ0c2FRþFranklin (City)000018Ohio#119þ0c2MKþMuskingum000017Nebraska#089þ0c2HOþHolt00001BMinnesota#017þ0c2CAþCarlton000018Kentucky#001þ0c2ADþAdair000019Michigan#011þ0c2ARþArenac00001ETennessee#179þ0c2WSþWashington00001DMaryland#037þ0c2SMþSt. Mary's00001FSpainProvinces#021þ0c2GIþGirona000019Oklahoma#131þ0c2ROþRogers000019Iowa#183þ0c2WSþWashington00001CWisconsin#073þ0c2MRþMarathon00001BIndia#034þ0c2UTþUttaranchal000019Washington#033þ0c2KGþKing00001AIndiana#135þ0c2RAþRandolph000017NewYork#107þ0c2TIþTioga000024NorthCarolina#175þ0c2TRþTransylvania00001AVirginia#077þ0c2GRþGrayson000019Africa#007þ0c2CMþCameroon000017Kansas#129þ0c2MTþMorton000017Cyprus#02þ0c2KYþKyrenia00001CNicaragua#04þ0c2COþChontales00002CCzechRepublic#79þ0c2JCþJiho&#269;esk&yacute;00003BCentralAmericawithCaribbeans#22þ0c2TTþTrinidad &amp; Tobago00001EEstonia#11þ0c2PRþP&auml;rnumaa00001ERomania#07þ0c2BTþBoto&#351;ani000017Turkey#62þ0c2TCþTunceli00001DDominica#03þ0c2DAþSaint David000024Austria#04þ0c2OBþOber&ouml;sterreich00002FDominicanRepublic#33þ0c2CRþSan Crist&oacute;bal000026WorldwithCountries#65þ0c2MSþMadagascar000011USA#OHþ0c2OHþOhio000022Sweden#24þ0c2YþV&auml;sternorrland00001EAfghanistan#32þ0c2SAMþSamangan000021Azerbaijan#60þ0c2XZþXa&ccedil;maz00001CAntigua#04þ0c2SJOþSaint John000022Paraguay#15þ0c2PGþParaguar&iacute;000024FrenchGuiana#GF.CY.MCþ0c2MCþMacouria00001BUganda#UG.KJþ0c2KJþKyenjojo000019Tunisia#TN.GBþ0c2GBþGabes00001FThailand#TH.PHþ0c2PHþPhetchabun000018Togo#TG.SAþ0c2SAþSavanes00001DSriLanka#LK.KTþ0c2KTþKalutara000025Somalia#SO.SDþ0c2SDþShabeellaha Dhexe00001ACongo#CG.LIþ0c2LIþLikouala00001EBurkinaFaso#BF.LOþ0c2LOþLoroum000034Morocco#MA.LBþ0c2LBþLaayoune Boujdour Sakia El Hamra000020Macedonia#MK.JGþ0c2JGþJegunovtse00001CLouisiana#083þ0c2RIþRichland000016Arizona#007þ0c2GIþGila000016Georgia#147þ0c2HTþHart000017Kentucky#183þ0c2OHþOhio00001BFlorida#111þ0c2SLþSt. Lucie00001EMississippi#093þ0c2MSþMarshall000021PuertoRico#103þ0c2NGþNag&uuml;abo00001DPennsylvania#059þ0c2GRþGreene000018Arkansas#083þ0c2LOþLogan000020SpainProvinces#022þ0c2GRþGranada000018Colorado#091þ0c2OUþOuray000019Montana#061þ0c2MIþMineral00001ESouthDakota#129þ0c2WAþWalworth000019Alabama#107þ0c2PIþPickens00001BIndia#035þ0c2WBþWest Bengal000014Iowa#003þ0c2AAþAdams00001BAfrica#008þ0c2CVþCape Verde000015Utah#043þ0c2SUþSummit00001BTexas#339þ0c2MOTþMontgomery00003EYukonTerritory#CA.YT.WLþ0c2WLþWatson Lake &amp; Southern Lakes000017Cyprus#03þ0c2LAþLarnaca000020Nicaragua#05þ0c2ESþEstel&iacute;000024CzechRepublic#80þ0c2VYþVyso&#269;ina000020Estonia#12þ0c2PLþP&otilde;lvamaa00001CRomania#08þ0c2BRþBr&#259;ila000023Turkey#63þ0c2SUþ&#350;anl&#305;urfa00001EDominica#04þ0c2GOþSaint George000029USANorthEastRegion#54þ0c2WVþWest Virginia000019Austria#05þ0c2SAþSalzburg00002CDominicanRepublic#34þ0c2NCþDistrito Nacional000022WorldwithCountries#66þ0c2MWþMalawi00001FSweden#25þ0c2UþV&auml;stmanland00001FAfghanistan#33þ0c2SARþSar-e Pol000021Azerbaijan#61þ0c2XAþXank&#601;ndi00001CAntigua#05þ0c2SMAþSaint Mary000022Paraguay#16þ0c2PHþPresidente Hayes00001EPhilippines#PH.IFþ0c2IFþIfugao000022Tanzania#TZ.DSþ0c2DSþDar es Salaam00001BSerbia#RS.SUþ0c2SUþSumadija00001AUganda#UG.KKþ0c2KKþKatakwi00001ABenin#BJ.LIþ0c2LIþLittoral00001DBotswana#BW.SOþ0c2SOþSouthern00001DChina2#CN.NMþ0c2NMþNei Mongol000022FranceDepartment#FR.MRþ0c2MRþMarne00001DVietnam#VN.QMþ0c2QMþQuang Nam00001CThailand#TH.PIþ0c2PIþPattani00001DNigeria#NG.NAþ0c2NAþNassarawa00001FLiberia#LR.MOþ0c2MOþMontserrado000022Chad#TD.LOþ0c2LOþLogone Occidental00001FChad#TD.MEþ0c2MEþMayo-Kebbi Est000018Mongolia#MN.UVþ0c2UVþUvs00001FBurma#MM.BAþ0c2BAþBago Division00001BIllinois#167þ0c2SNþSangamon000017Missouri#087þ0c2HLþHolt00001ANorthDakota#101þ0c2WRþWard000019Texas#159þ0c2FRAþFranklin000014Ohio#121þ0c2NOþNoble000019Nebraska#091þ0c2HKþHooker00001AMinnesota#019þ0c2CRþCarver000018Kentucky#003þ0c2ALþAllen000019Michigan#013þ0c2BAþBaraga000019Tennessee#181þ0c2WAþWayne00001BMaryland#039þ0c2SOþSomerset000024SpainProvinces#023þ0c2GAþGuadalajara00001BOklahoma#133þ0c2SEþSeminole000014Iowa#185þ0c2WYþWayne00001DWisconsin#075þ0c2MIþMarinette00001BWashington#035þ0c2KTþKitsap000018Indiana#137þ0c2RIþRipley00001ANewYork#109þ0c2TOþTompkins00001FNorthCarolina#177þ0c2TYþTyrrell000019Virginia#079þ0c2GEþGreene000029Africa#009þ0c2CRþCentral African Republic000017Kansas#131þ0c2NMþNemaha000023USASouthEastRegion#01þ0c2ALþAlabama000017Cyprus#04þ0c2NIþNicosia00001ANicaragua#06þ0c2GRþGranada000029CzechRepublic#81þ0c2KAþKarlovarsk&yacute;000019Estonia#13þ0c2RAþRaplamaa00001CRomania#09þ0c2BVþBra&#351;ov000019Turkey#64þ0c2USþU&#351;ak00001CDominica#05þ0c2JNþSaint John00001BAustria#06þ0c2STþSteiermark000022DominicanRepublic#35þ0c2PVþPeravia000020WorldwithCountries#67þ0c2MLþMali000019Sweden#26þ0c2ABþStockholm000029Iceland#03þ0c2ARþ&Aacute;rness&yacute;sla00001BAfghanistan#34þ0c2KNRþKonar00001AAzerbaijan#62þ0c2XRþXanlar00001CAntigua#06þ0c2SPAþSaint Paul00001BParaguay#17þ0c2SPþSan Pedro000029CentralAfricanRepublic#CF.BGþ0c2BGþBangui000022FranceDepartment#FR.MSþ0c2MSþMeuse000023FranceDepartment#FR.NIþ0c2NIþNievre00001EVietnam#VN.QNþ0c2QNþQuang Ninh000029TrinidadandTobago#TT.SDþ0c2SDþSaint David00001AQatar#QA.KHþ0c2KHþAl Khawr00001BSriLanka#LK.MBþ0c2MBþMannar000021Mauritania#MR.NOþ0c2NOþNouakchott00001ALouisiana#085þ0c2SAþSabine000018Arizona#009þ0c2GRþGraham000017Georgia#149þ0c2HEþHeard000019Kentucky#185þ0c2OLþOldham00001CFlorida#113þ0c2SRþSanta rosa00001CMississippi#095þ0c2MOþMonroe00001EPuertoRico#105þ0c2NRþNaranjito000021Pennsylvania#061þ0c2HUþHuntingdon000019Arkansas#085þ0c2LKþLonoke00001FSpainProvinces#024þ0c2HUþHuelva00001CTennessee#001þ0c2ANþAnderson000017Colorado#093þ0c2PAþPark00001AMontana#063þ0c2MSþMissoula000016Alabama#109þ0c2PKþPike00001ANevada#001þ0c2CHþChurchill000018Iowa#005þ0c2ALþAllamakee000015Africa#010þ0c2TDþChad000022Alaska#170þ0c2MAþMatanuska-Susitna000015Utah#045þ0c2TOþTooele000016Texas#341þ0c2MORþMoore000018Cyprus#05þ0c2LIþLimassol00001BNicaragua#07þ0c2JIþJinotega00003BCzechRepublic#82þ0c2KRþKr&aacute;lov&eacute;hradeck&yacute;000019Estonia#14þ0c2SAþSaaremaa00001ARomania#10þ0c2BIþBucharest000013Turkey#65þ0c2VAþVan00001EDominica#06þ0c2JHþSaint Joseph000016Austria#07þ0c2TIþTirol000032DominicanRepublic#36þ0c2JOþSan Jos&eacute; de Ocoa000026WorldwithCountries#68þ0c2MRþMauritania000015USA#OKþ0c2OKþOklahoma000019USA#PAþ0c2PAþPennsylvania00001ASweden#27þ0c2MþSk&aring;ne000035Iceland#04þ0c2ABþAustur-Bar&eth;astrandars&yacute;sla00001DAfghanistan#35þ0c2LAGþLaghman000022Azerbaijan#63þ0c2XIþX&#305;z&#305;00001DAntigua#07þ0c2SPEþSaint Peter00001BEurope2#SOME ISLANDSþ0c2þ000030NorthWestTerritories#CA.NT.ACþ0c2ACþArctic Coast00002BNovaScotia#CA.NS.HDþ0c2HDþHalifax Dartmouth00001AUganda#UG.KMþ0c2KMþKampala000017Samoa #WS.ATþ0c2ATþAtua00001BVietnam#VN.PYþ0c2PYþPhu Yen000028Thailand#TH.PKþ0c2PKþPrachuap Khiri Khan000019Tuvalu#TV.NTþ0c2NTþNiutao00001BEurope2#EU.FIþ0c2FIþFinland000019Europe2#EU.ESþ0c2ESþSpain000029Philippines#PH.ZSþ0c2ZSþZamboanga del Sur000017Kansas#133þ0c2NOþNeosho00001BIllinois#169þ0c2SHþSchuyler000019Missouri#089þ0c2HWþHoward00001BNorthDakota#103þ0c2WEþWells00001ATexas#161þ0c2FRSþFreestone000015Ohio#123þ0c2OTþOttawa000019Nebraska#093þ0c2HWþHoward000018Minnesota#021þ0c2CSþCass00001BKentucky#005þ0c2ANþAnderson000018Michigan#015þ0c2BRþBarry00001BTennessee#183þ0c2WEþWeakley000019Maryland#041þ0c2TAþTalbot00001FSpainProvinces#025þ0c2HEþHuesca00001BOklahoma#135þ0c2SQþSequoyah000016Iowa#187þ0c2WEþWebster00001DWisconsin#077þ0c2MQþMarquette00001DWashington#037þ0c2KIþKittitas000016Indiana#139þ0c2RUþRush000018NewYork#111þ0c2ULþUlster00001DNorthCarolina#179þ0c2UNþUnion00001EVirginia#081þ0c2GVþGreensville000018Africa#011þ0c2KMþComoros00002BNewCaledonia#NC.SU.SAþ0c2SAþSarram&eacute;a000022Paraguay#19þ0c2CYþCanindey&uacute;000016Cyprus#06þ0c2PAþPaphos00001ENicaragua#08þ0c2LEþLe&oacute;n000027CzechRepublic#83þ0c2LIþLibereck&yacute;00001BRomania#11þ0c2BZþBuz&#259;u000016Turkey#66þ0c2YZþYozgat00001CDominica#07þ0c2LUþSaint Luke00001BAustria#08þ0c2VOþVorarlberg000028DominicanRepublic#37þ0c2SDþSanto Domingo000023WorldwithCountries#69þ0c2MAþMorocco000013USA#NVþ0c2NVþNevada000028Sweden#28þ0c2OþV&auml;stra G&ouml;taland000034Iceland#05þ0c2AHþAustur-H&uacute;navatnss&yacute;sla00001CAfghanistan#36þ0c2PIAþPaktia00001FAzerbaijan#64þ0c2XCþXocal&#305;00001EAntigua#08þ0c2SPHþSaint Philip000020Nunavut#CA.NU.KTþ0c2KTþKitikmeot00001ASudan#SD.KHþ0c2KHþKhartoum00001EPhilippines#PH.IIþ0c2IIþIloilo000019Russia#RU.SAþ0c2SAþSamara00001CUganda#UG.KNþ0c2KNþKalangala000019Tunisia#TN.GFþ0c2GFþGafsa000020Thailand#TH.PLþ0c2PLþPhatthalung000016Tuvalu#TV.NUþ0c2NUþNui000025Somalia#SO.SHþ0c2SHþShabeellaha Hoose00001FSenegal#SN.TCþ0c2TCþTambacounda000019Algeria#DZ.JJþ0c2JJþJijel000020Chad#TD.LRþ0c2LRþLogone Oriental000017Texas#343þ0c2MOIþMorris00001FLouisiana#087þ0c2SBþSt. Bernard00001AArizona#011þ0c2GEþGreenlee000017Georgia#151þ0c2HYþHenry000017Kentucky#187þ0c2OWþOwen00001AFlorida#115þ0c2SSþSarasota000020Mississippi#097þ0c2MTþMontgomery00001DPuertoRico#107þ0c2ORþOrocovis00001EPennsylvania#063þ0c2INþIndiana00001AArkansas#087þ0c2MAþMadison000024SpainProvinces#026þ0c2JAþJa&eacute;n000016Oregon#001þ0c2BAþBaker00001BTennessee#003þ0c2BDþBedford00001DWisconsin#078þ0c2MNþMenominee00001BColorado#095þ0c2PHþPhillips00001DMontana#065þ0c2MUþMusselshell00001AAlabama#111þ0c2RAþRandolph000016Nevada#003þ0c2CLþClark000018Iowa#007þ0c2APþAppanoose00001EAfrica#012þ0c2CIþCote d Ivoire000015Utah#047þ0c2UIþUintah000019Nicaragua#09þ0c2MDþMadriz000027CzechRepublic#84þ0c2OLþOlomouck&yacute;000023Romania#12þ0c2CSþCara&#351;-Severin00001CDominica#08þ0c2MAþSaint Mark000015Austria#09þ0c2WIþWien000026WorldwithCountries#70þ0c2MZþMozambique00002FIceland#06þ0c2ASþAustur-Skaftafellss&yacute;sla00001BAfghanistan#37þ0c2KHOþKhost000021Azerbaijan#65þ0c2XDþXocav&#601;nd000022MarshallIsland#MH.MH.TOþ0c2TOþToke000027PolandCounties#PL.MZ.WAþ0c2MWAþWarszawa000024MarshallIsland#MH.MH.BNþ0c2BNþBikini00001EMacedonia#MK.KBþ0c2KBþKarbinci00001DNepal#NP.DHþ0c2DHþDhawalagiri00001ASerbia#RS.TOþ0c2TOþToplica000027Tajikistan#TJ.BKþ0c2BKþBadakhshoni Kuni00001CEastTimor#TL.BTþ0c2BTþLautem000014Iran#IR.QMþ0c2QMþQom00002ATrinidadandTobago#TT.SGþ0c2SGþSaint George00001EQatar#QA.JUþ0c2JUþAl Jumaliyah00001ASriLanka#LK.KYþ0c2KYþKandy000019Liberia#LR.NIþ0c2NIþNimba000022Kazakhstan#KZ.MGþ0c2MGþMangghystau00001DHongKong#HK.SKþ0c2SKþSai Kung000015Kansas#135þ0c2NSþNess000018Arizona#012þ0c2LPþLa Paz000018Illinois#171þ0c2STþScott000019Missouri#091þ0c2HOþHowell00001ENorthDakota#105þ0c2WIþWilliams000015Texas#163þ0c2FRIþFrio000017Ohio#125þ0c2PAþPaulding00001CNebraska#095þ0c2JEþJefferson00001CMinnesota#023þ0c2CHþChippewa00001AKentucky#007þ0c2BAþBallard000016Michigan#017þ0c2BYþBay000019Tennessee#185þ0c2WHþWhite00001DMaryland#043þ0c2WAþWashington000029SpainProvinces#027þ0c2LCþLa Coru&ntilde;a00001BOklahoma#137þ0c2STþStephens000018Iowa#189þ0c2WIþWinnebago00001DWisconsin#079þ0c2MEþMilwaukee00001EWashington#039þ0c2KLþKlickitat00001CIndiana#141þ0c2SJþSt. Joseph000018NewYork#113þ0c2WAþWarren00001DNorthCarolina#181þ0c2VAþVance00001AVirginia#083þ0c2HLþHalifax000031Africa#013þ0c2CDþDemocratic Republic of the Congo000024USASouthEastRegion#05þ0c2ARþArkansas00001ANicaragua#10þ0c2MNþManagua00002DCzechRepublic#85þ0c2MOþMoravskoslezsk&yacute;000015Romania#13þ0c2CJþCluj000016Turkey#68þ0c2ANþAnkara00001FDominica#09þ0c2PKþSaint Patrick000023WorldwithCountries#71þ0c2NAþNamibia00002EIceland#07þ0c2BOþBorgarfjar&eth;ars&yacute;sla000014China#01þ0c2AHþAnhui00001EAfghanistan#38þ0c2NURþNurestan000026Azerbaijan#66þ0c2YRþYard&#305;ml&#305;00001FNunavut#CA.NU.KVþ0c2KVþKeewatin00002ECentralAfricanRepublic#CF.BKþ0c2BKþBasse-Kotto00001CUganda#UG.KPþ0c2KPþKapchorwa00001DOman#OM.ZAþ0c2ZAþAdh Dhahirah000016Serbia#RS.BOþ0c2BOþBor000018UK7#UK.SCþ0c2SCþScotland000017Texas#345þ0c2MOEþMotley00001FLouisiana#089þ0c2SCþSt. Charles00001AArizona#013þ0c2MAþMaricopa000020NorthCarolina#001þ0c2ALþAlamance000019Georgia#153þ0c2HOþHouston000019Kentucky#189þ0c2OSþOwsley00001AFlorida#117þ0c2SOþSeminole00001DMississippi#099þ0c2NEþNeshoba00001DPuertoRico#109þ0c2PTþPatillas000020Pennsylvania#065þ0c2JEþJefferson000013Idaho#001þ0c2ADþAda000019Arkansas#089þ0c2MRþMarion000021SpainProvinces#028þ0c2LRþLa Rioja000017Oregon#003þ0c2BEþBenton00001ATennessee#005þ0c2BEþBenton000019Colorado#097þ0c2PIþPitkin000016Montana#067þ0c2PAþPark00001DSouthDakota#135þ0c2YAþYankton000019Alabama#113þ0c2RUþRussell000018Nevada#005þ0c2DOþDouglas000016Iowa#009þ0c2AUþAudubon000019Africa#014þ0c2DJþDjibouti000013Utah#049þ0c2UTþUtah000032Paraguay#22þ0c2ASþAsunci&oacute;n Capitol District000019Nicaragua#11þ0c2MSþMasaya000028CzechRepublic#86þ0c2PAþPardubick&yacute;000019Estonia#18þ0c2TAþTartumaa00001FRomania#14þ0c2CTþConstan&#355;a000028Turkey#69þ0c2GUþG&uuml;m&uuml;&#351;hane00001CDominica#10þ0c2PLþSaint Paul000021WorldwithCountries#72þ0c2NEþNiger000015USA#NYþ0c2NYþNew York000021Iceland#08þ0c2DAþDalas&yacute;sla000017China#02þ0c2ZJþZhejiang00001DAfghanistan#39þ0c2ORUþOruzgan00001AAzerbaijan#67þ0c2YVþYevlax000025Laos#LA.VTþ0c2VTþVientiane Prefecture00001FEastTimor#TL.CLþ0c2CLþCova-Lima000018Uganda#UG.KQþ0c2KQþAmuru000020BurkinaFaso#BF.NBþ0c2NBþNoumbiel000022CentralAmerica2#CE.PAþ0c2PAþPanama000022PapuaNewGuinea#PG.SAþ0c2SAþSanduan000017Kansas#137þ0c2NTþNorton000019Illinois#173þ0c2SEþShelby000017Missouri#093þ0c2IRþIron000017Texas#165þ0c2GAIþGaines000014Ohio#127þ0c2PEþPerry00001ANebraska#097þ0c2JOþJohnson00001BMinnesota#025þ0c2CGþChisago000019Kentucky#009þ0c2BRþBarren000019Michigan#019þ0c2BEþBenzie00001ETennessee#187þ0c2WLþWilliamson00001BMaryland#045þ0c2WIþWicomico000023SpainProvinces#029þ0c2LPþLas Palmas000018Oklahoma#139þ0c2TEþTexas000019Iowa#191þ0c2WNþWinneshiek00001AWisconsin#081þ0c2MOþMonroe00001AWashington#041þ0c2LEþLewis000017Indiana#143þ0c2SCþScott00001CNewYork#115þ0c2WSþWashington00001CNorthCarolina#183þ0c2WAþWake00001AVirginia#085þ0c2HNþHanover000016Africa#015þ0c2EGþEgypt00001FParaguay#23þ0c2AGþAlto Paraguay00001CNicaragua#12þ0c2MTþMatagalpa00002BCzechRepublic#87þ0c2PLþPlze&#328;sk&yacute;000019Estonia#19þ0c2VGþValgamaa00001CWales#01þ0c2BGþBlaenau Gwent000018Romania#15þ0c2CVþCovasna000020Ecuador#01þ0c2WþGal&aacute;pagos000017Turkey#70þ0c2HKþHakkari00001DDominica#11þ0c2PRþSaint Peter000023WorldwithCountries#73þ0c2NGþNigeria00002CIceland#09þ0c2EYþEyjafjar&eth;ars&yacute;sla000016China#03þ0c2JXþJiangxi00001CAfghanistan#40þ0c2PARþParvan000021Azerbaijan#68þ0c2YEþYevlax (City)00001CLaos#LA.XAþ0c2XAþXaignabouli000019Russia#RU.ROþ0c2ROþRostov00001CTunisia#TN.ZAþ0c2ZAþZaghouan000019Uganda#UG.KRþ0c2KRþKisoro00001ARussia#RU.ADþ0c2ADþAdygaya000024FranceDepartment#FR.MYþ0c2MYþMayenne000021FranceDepartment#FR.NOþ0c2NOþNord00001DVietnam#VN.QTþ0c2QTþQuang Tri00001BSriLanka#LK.MHþ0c2MHþMatara00001FTurkmenistan#TM.BAþ0c2BAþBalkan000016Utah#051þ0c2WAþWasatch00001CTexas#347þ0c2NACþNacogdoches00001ELouisiana#091þ0c2SHþSt. Helena000018Arizona#015þ0c2MOþMohave000028Virginia#810þ0c2VBþVirginia Beach (City)000021NorthCarolina#003þ0c2AEþAlexander000017Georgia#155þ0c2IRþIrwin00001CKentucky#191þ0c2PEþPendleton000018Florida#119þ0c2STþSumter00001CMississippi#101þ0c2NWþNewton000024PuertoRico#111þ0c2PNþPe&ntilde;uelas00001EPennsylvania#067þ0c2JUþJuniata000015Idaho#003þ0c2AAþAdams000019Arkansas#091þ0c2MIþMiller000024SpainProvinces#030þ0c2LEþLe&oacute;n00001AOregon#005þ0c2CLþClackamas00001BTennessee#007þ0c2BLþBledsoe00001AColorado#099þ0c2PRþProwers00001BMontana#069þ0c2PEþPetroleum00001DSouthDakota#137þ0c2ZIþZiebach00001BAlabama#115þ0c2SCþSt. Clair000015Nevada#007þ0c2ELþElko000015Iowa#011þ0c2BEþBenton000022Africa#016þ0c2GQþEquatorial Guinea00001CNorthIreland#01þ0c2ANþAntrim000021Paraguay#24þ0c2BQþBoquer&oacute;n000020Nicaragua#13þ0c2NSþNueva Segovia000033CzechRepublic#88þ0c2STþSt&#345;edo&#269;esk&yacute;00001CEstonia#20þ0c2VDþViljandimaa000017Wales#02þ0c2BBþBridgend000025Romania#16þ0c2DBþD&acirc;mbovi&#355;a000015Ecuador#02þ0c2AþAzuay000015Turkey#71þ0c2KOþKonya000022WorldwithCountries#74þ0c2RWþRwanda000027Iceland#10þ0c2GUþGullbringus&yacute;sla000016China#04þ0c2JSþJiangsu00001EAfghanistan#41þ0c2DAYþDaykundi000021Azerbaijan#69þ0c2ZGþZ&#601;ngilan000028NovaScotia#CA.NS.GTþ0c2GTþGlooscap Trail000025PolandCounties#PL.SK.KMþ0c2SKMþKielce000023MarshallIsland#MH.MH.BRþ0c2BRþBikar000022SierraLeone#SL.NO.BMþ0c2BMþBombali000024Philippines#PH.INþ0c2INþIlocos Norte000019Uganda#UG.KSþ0c2KSþKasese000017Uganda#UG.LIþ0c2LIþLira000025EquatorialGuinea#GQ.KNþ0c2KNþKie Ntem000022Tibet#TI.LPþ0c2LPþLhasa Prefecture00001CSerbia#RS.BRþ0c2BRþBranicevo00001DTurkmenistan#TM.ALþ0c2ALþAhal000019Nigeria#NG.NIþ0c2NIþNiger000019Senegal#SN.THþ0c2THþThies000020Gambia#GM.MCþ0c2MCþCentral River000029Philippines#PH.ZYþ0c2ZYþZamboanga Sibugay00001DHongKong#HK.SOþ0c2SOþSouthern000016Kansas#139þ0c2OSþOsage000018Illinois#175þ0c2SRþStark00001AMissouri#095þ0c2JKþJackson00001ATexas#167þ0c2GALþGalveston000028Virginia#630þ0c2FEþFredericksburg (City)000017Ohio#129þ0c2PIþPickaway00001ANebraska#099þ0c2KEþKearney000018Minnesota#027þ0c2CLþClay000017Kentucky#011þ0c2BTþBath00001AMichigan#021þ0c2BIþBerrien00001ATennessee#189þ0c2WIþWilson00001DMaryland#047þ0c2WOþWorchester00001FSpainProvinces#031þ0c2LIþLleida00001AOklahoma#141þ0c2TIþTillman000017Iowa#193þ0c2WOþWoodbury00001AWisconsin#083þ0c2OCþOconto00001CWashington#043þ0c2LIþLincoln000018Indiana#145þ0c2SHþShelby000017NewYork#117þ0c2WYþWayne00001ENorthCarolina#185þ0c2WRþWarren00001AVirginia#087þ0c2HCþHenrico000018Africa#017þ0c2ERþEritrea00001CAzerbaijan#70þ0c2ZQþZaqatala00001ANorthIreland#02þ0c2ADþArds000026Nicaragua#14þ0c2SJþR&iacute;o San Juan00002CCzechRepublic#89þ0c2USþ&Uacute;steck&yacute;00001FEstonia#21þ0c2VRþV&otilde;rumaa000019Wales#03þ0c2CPþCaerphilly000015Romania#17þ0c2DJþDolj00001EEcuador#03þ0c2BþBol&iacute;var000016Turkey#72þ0c2MRþMardin000031WorldwithCountries#75þ0c2STþSao Tome and Principe000013USA#ORþ0c2ORþOregon000014China#05þ0c2JLþJilin00001EAfghanistan#42þ0c2PANþPanjshir000026Alberta#CA.AB.ACþ0c2ACþAlberta Central000026PolandCounties#PL.LD.SIþ0c2LSIþSieradz000022MarshallIsland#MH.MH.UJþ0c2UJþUjae000024SierraLeone#SL.NO.TOþ0c2TOþTonkolili000022Macedonia#MK.KGþ0c2KGþKrivogastani00001BVanuatu#VU.MLþ0c2MLþMalampa00001AThailand#TH.PRþ0c2PRþPhrae000021Cameroon#CM.ENþ0c2ENþExtreme-Nord00001FSriLanka#Lk.MJþ0c2MJþMoneragala00001EEritrea#ER.GBþ0c2GBþGash-Barka00001FBurkinaFaso#BF.MOþ0c2MOþMouhoun000019Bhutan#BT.MOþ0c2MOþMongar00001BRwanda#RW.NOþ0c2NOþNorthern000019Utah#053þ0c2WSþWashington000018Texas#349þ0c2NAVþNavarro00001DLouisiana#093þ0c2SJþSt. James000018Arizona#017þ0c2NAþNavajo000021NorthCarolina#005þ0c2AGþAlleghany000019Georgia#157þ0c2JAþJackson000018Kentucky#193þ0c2PRþPerry00001AFlorida#121þ0c2SNþSuwannee00001DMississippi#103þ0c2NOþNoxubee00001APuertoRico#113þ0c2POþPonce000021Pennsylvania#069þ0c2LAþLackawanna000017Idaho#005þ0c2BAþBannock00001EArkansas#093þ0c2MSþMississippi00001DSpainProvinces#032þ0c2LUþLugo000018Oregon#007þ0c2CAþClatsop00001ATennessee#009þ0c2BUþBlount000019Colorado#101þ0c2PUþPueblo00001AMontana#071þ0c2PHþPhillips000018Alabama#117þ0c2SHþShelby00001ANevada#009þ0c2ESþEsmeralda000019Iowa#013þ0c2BHþBlack Hawk000019Africa#018þ0c2ETþEthiopia00001FAzerbaijan#71þ0c2ZRþZ&#601;rdab00001CNorthIreland#03þ0c2AMþArmagh000018Nicaragua#15þ0c2RIþRivas00002CCzechRepublic#90þ0c2ZLþZl&iacute;nsk&yacute;000016Wales#04þ0c2CAþCardiff00001CRomania#18þ0c2GLþGala&#355;i00001CEcuador#04þ0c2FþCa&ntilde;ar00001ATurkey#73þ0c2NGþNi&#287;de000023WorldwithCountries#76þ0c2SNþSenegal000016China#06þ0c2QHþQinghai00002DPolandCounties#PL.LU.BMþ0c2LBMþBiala-Podlaska00001CMacedonia#MK.KHþ0c2KHþKicevo00001DMongolia#MN.DUþ0c2DUþDundgovi000017Uganda#UG.KUþ0c2KUþKumi000019Uganda#UG.MAþ0c2MAþMasaka000020Thailand#TH.PSþ0c2PSþPhitsanulok000018Somalia#SO.SOþ0c2SOþSool00001FSenegal#SN.STþ0c2STþSaint-Louis00001CLiberia#LR.MYþ0c2MYþMaryland00001BZambia#ZM.SOþ0c2SOþSouthern00001CChad#TD.MOþ0c2MOþMoyen Chari000016Africa#019þ0c2GAþGabon000018Kansas#141þ0c2OBþOsborne00001DIllinois#177þ0c2SPþStephenson000019Missouri#097þ0c2JAþJasper00001CCalifornia#001þ0c2ALþAlameda000016Texas#169þ0c2GARþGarza000013Ohio#131þ0c2PKþPike000018Nebraska#101þ0c2KIþKeith00001EMinnesota#029þ0c2CWþClearwater000017Kentucky#013þ0c2BEþBell000019Michigan#023þ0c2BNþBranch00001FSpainProvinces#033þ0c2MAþMadrid000018Oklahoma#143þ0c2TUþTulsa000014Iowa#195þ0c2WHþWorth00001AWisconsin#085þ0c2ONþOneida00001BNewWorld#100þ0c2KHþCambodia00001AWashington#045þ0c2MAþMason000019Indiana#147þ0c2SPþSpencer00001DNewYork#119þ0c2WEþWestchester000022NorthCarolina#187þ0c2WSþWashington000018Virginia#089þ0c2HYþHenry00002CNewCaledonia#NC.NO.HIþ0c2HIþHiengh&egrave;ne00001EAzerbaijan#72þ0c2BBþBab&#601;k00001FNorthIreland#04þ0c2BLþBallymena00001EWales#05þ0c2CIþCarmarthenshire000015Romania#19þ0c2GJþGorj000016Ecuador#05þ0c2CþCarchi000015Turkey#74þ0c2SIþSiirt000025WorldwithCountries#77þ0c2SCþSeycelles000015China#07þ0c2FJþFujian000025MarshallIsland#MH.MH.ULþ0c2ULþUjelang000017Laos#LA.XEþ0c2XEþXekong000017Libya#LY.SBþ0c2SBþSabha00001EChina2#CN.NXþ0c2NXþNingxia Hui000021FranceDepartment#FR.OIþ0c2OIþOise000021Thailand#TH.PTþ0c2PTþPathum Thani00001CBotswana#BW.CEþ0c2CEþCentral00001AEurope2#EU.FRþ0c2FRþFrance00001DAlgeria#DZ.KHþ0c2KHþKhenchela00001CSaudiArabia#SA.HAþ0c2HAþHail000016Africa#020þ0c2GHþGhana000015Alaska#180þ0c2NOþNome000014Utah#055þ0c2WYþWayne000017Texas#351þ0c2NEWþNewton000028Louisiana#095þ0c2STþSt. John the Baptist000016Arizona#019þ0c2PIþPima00001DNorthCarolina#007þ0c2ANþAnson000018Georgia#159þ0c2JSþJasper000017Kentucky#195þ0c2PIþPike000018Florida#123þ0c2TAþTaylor00001FMississippi#105þ0c2OKþOktibbeha000021PuertoRico#115þ0c2QBþQuebradillas000020Pennsylvania#071þ0c2LNþLancaster000019Idaho#007þ0c2BEþBear Lake000019Arkansas#095þ0c2MNþMonroe000026SpainProvinces#034þ0c2MLþM&aacute;laga000019Oregon#009þ0c2COþColumbia00001BTennessee#011þ0c2BRþBradley00001DColorado#103þ0c2RBþRio Blanco000019Montana#073þ0c2POþPondera000018Alabama#119þ0c2SUþSumter000018NewWorld#101þ0c2CNþChina000017Nevada#011þ0c2EUþEureka000014Iowa#015þ0c2BOþBoone000019Azerbaijan#73þ0c2CFþCulfa000020NorthIreland#05þ0c2BYþBallymoney000023USASouthEastRegion#12þ0c2FLþFlorida00004BNicaragua#17þ0c2ANþRegi&oacute;n Aut&oacute;noma del Atl&aacute;ntico Norte000019Wales#06þ0c2CGþCeredigion000019Romania#20þ0c2HRþHarghita00001AEcuador#06þ0c2HþChimborazo000017Turkey#75þ0c2AKþAksaray000028WorldwithCountries#78þ0c2SLþSierra Leone00001BChina#08þ0c2HLþHeilongjiang000026PolandCounties#PL.PD.SMþ0c2PSMþSuwalki000021HongKong#HK.SSþ0c2SSþSham Shui Po00001CSamoa #WS.TUþ0c2TUþTuamasaga00001AUganda#UG.MCþ0c2MCþMasindi00001BThailand#TH.PUþ0c2PUþPhuket000020Ethiopia#ET.AAþ0c2AAþAddis Ababa000022Europe2#EU.GIþ0c2GIþGibraltar (UK)000026Burma#MM.TNþ0c2TNþTanintharyi Division00001BVirginia#091þ0c2HIþHighland000017Africa#021þ0c2GNþGuinea000017Kansas#143þ0c2OTþOttawa00001BIllinois#179þ0c2TAþTazewell00001CMissouri#099þ0c2JEþJefferson00001BCalifornia#003þ0c2APþAlpine00001ATexas#171þ0c2GIEþGillespie000016Ohio#133þ0c2POþPortage00001CNebraska#103þ0c2KPþKeya Paha000018Minnesota#031þ0c2COþCook000018Kentucky#015þ0c2BNþBoone00001AMichigan#025þ0c2CAþCalhoun000020SpainProvinces#035þ0c2MEþMelilla00001AOklahoma#145þ0c2WAþWagoner000015Iowa#197þ0c2WGþWright00001DWisconsin#087þ0c2OUþOutagamie00001DNewWorld#102þ0c2TPþEast Timor00001DWashington#047þ0c2OKþOkanogan000018Indiana#149þ0c2STþStarke000019NewYork#121þ0c2WOþWyoming00001FNorthCarolina#189þ0c2WTþWatauga00002FSaskatchewan#CA.SK.WCþ0c2WCþWest Central Region000026Manitoba#CA.MB.CRþ0c2CRþCentral Region000026Azerbaijan#74þ0c2KNþK&#601;ng&#601;rli00001FNorthIreland#06þ0c2BBþBanbridge000023USASouthEastRegion#13þ0c2GAþGeorgia000049Nicaragua#18þ0c2ASþRegi&oacute;n Aut&oacute;noma del Atl&aacute;ntico Sur000014Wales#07þ0c2CWþConwy00001ARomania#21þ0c2HDþHunedoara000018Ecuador#07þ0c2XþCotopaxi000016Turkey#76þ0c2BMþBatman000023WorldwithCountries#79þ0c2SOþSomalia00002AIceland#15þ0c2KJþKj&oacute;sars&yacute;sla000014China#09þ0c2HEþHenan00002CPolandCounties#PL.SL.BMþ0c2SBMþBielsko-Biala00002BPolandCounties#PL.LD.SMþ0c2LSMþSkierniewice00002DPapuaNewGuinea#PG.SHþ0c2SHþSouthern Highlands00001CHongKong#HK.STþ0c2STþSha Tin000022Philippines#PH.ISþ0c2ISþIlocos Sur000018Malawi#MW.ZOþ0c2ZOþZomba000018Russia#RU.SKþ0c2SKþSakha00001DMicronesia#FM.KOþ0c2KOþKosrae000019Uganda#UG.KXþ0c2KXþKamuli00001AUganda#UG.MDþ0c2MDþMubende000024EquatorialGuinea#GQ.LIþ0c2LIþLitoral000022Tibet#TI.NAþ0c2NAþNgari Prefecture000027Iran#IR.SBþ0c2SBþSistan and Baluchestan000031FranceDepartment#FR.PAþ0c2PAþPyrenees Atlantiques00002BTrinidadandTobago#TT.SPþ0c2SPþSaint Patrick00001EGambia#GM.LRþ0c2LRþLower River00001FLesotho#LS.QNþ0c2QNþQacha's Nek000015Iowa#017þ0c2BRþBremer00001EAfrica#022þ0c2GWþGuinea-Bissau000014Utah#057þ0c2WEþWeber000016Texas#353þ0c2NOLþNolan00001ELouisiana#097þ0c2SLþSt. Landry000017Arizona#021þ0c2PNþPinal00001CNorthCarolina#009þ0c2ASþAshe00001CGeorgia#161þ0c2JDþJeff Davis000019Kentucky#197þ0c2POþPowell000017Florida#125þ0c2UNþUnion00001CMississippi#107þ0c2PAþPanola000022PuertoRico#117þ0c2RCþRinc&oacute;n00001FPennsylvania#073þ0c2LWþLawrence000017Idaho#009þ0c2BNþBenewah00001DArkansas#097þ0c2MTþMontgomery00001FSpainProvinces#036þ0c2MUþMurcia000015Oregon#011þ0c2CSþCoos000018Israel#001þ0c2CEþCentral00001CTennessee#013þ0c2CAþCampbell00001DColorado#105þ0c2RGþRio Grande00001EMontana#075þ0c2PRþPowder River00001BAlabama#121þ0c2TAþTalladega00001ANewWorld#103þ0c2GEþGeorgia000019Nevada#013þ0c2HUþHumboldt00002FSaskatchewan#CA.SK.ECþ0c2ECþEast Central Region00001BAzerbaijan#75þ0c2ORþOrdubad00001DNorthIreland#07þ0c2BFþBelfast00001BWales#08þ0c2DBþDenbighshire00001ERomania#22þ0c2ILþIalomi&#355;a000016Ecuador#08þ0c2OþEl Oro000017Turkey#77þ0c2BBþBayburt000028WorldwithCountries#80þ0c2ZAþSouth Africa000014China#10þ0c2HBþHebei000025Burma#MM.AYþ0c2AYþAyeyarwady Division00001BRussia#RU.SLþ0c2SLþSakhalin000019Russia#RU.TBþ0c2TBþTambov00001AGuinea#GN.SIþ0c2SIþSiguiri00001AUganda#UG.KYþ0c2KYþKayunga000018Uganda#UG.MEþ0c2MEþMbale000018Cameroon#CM.ESþ0c2ESþEst000028CentralAfricanRepublic#CF.UKþ0c2UKþOuaka00001DNorthCarolina#191þ0c2WYþWayne000020Virginia#093þ0c2IWþIsle of Wight000016Africa#023þ0c2KEþKenya000017Kansas#145þ0c2PNþPawnee000018Illinois#181þ0c2UNþUnion00001AMissouri#101þ0c2JOþJohnson00001BCalifornia#005þ0c2AMþAmador00001ATexas#173þ0c2GLAþGlasscock000015Ohio#135þ0c2PRþPreble00001ANebraska#105þ0c2KMþKimball00001EMinnesota#033þ0c2CTþCottonwood00001AKentucky#017þ0c2BOþBourbon000017Michigan#027þ0c2CSþCass000020SpainProvinces#037þ0c2NAþNavarra000016Israel#002þ0c2HAþHaifa00001DOklahoma#147þ0c2WSþWashington00001BWisconsin#089þ0c2OZþOzaukee000018NewWorld#104þ0c2INþIndia00001CWashington#049þ0c2PAþPacific000019Indiana#151þ0c2SUþSteuben000017NewYork#123þ0c2YAþYates00002AAzerbaijan#76þ0c2SDþS&#601;d&#601;r&#601;k000023NorthIreland#08þ0c2CFþCarrickfergus000019Wales#09þ0c2FLþFlintshire00001ARomania#23þ0c2ISþIa&#351;i00001AEcuador#09þ0c2EþEsmeraldas000017Turkey#78þ0c2KRþKaraman000021WorldwithCountries#81þ0c2SDþSudan000028Iceland#17þ0c2MYþM&yacute;ras&yacute;sla000014China#11þ0c2HNþHunan00001CLaos#LA.XIþ0c2XIþXiangkhoang00001FPhilippines#PH.KAþ0c2KAþKalinga00001BRussia#RU.SMþ0c2SMþSmolensk00001CMongolia#MN.DZþ0c2DZþZavkhan00001AUganda#UG.MFþ0c2MFþManafwa000018Russia#RU.ALþ0c2ALþAltai00002AFranceDepartment#FR.PCþ0c2PCþPas de Calais00001CVietnam#VN.AGþ0c2AGþAn Giang00001FSriLanka#LK.MPþ0c2MPþMullailivu00001BMauritius#MU.FLþ0c2FLþFlacq000022Chad#TD.NJþ0c2NJþVille De Ndjamena000017Nevada#015þ0c2LAþLander000017Iowa#019þ0c2BUþBuchanan000018Africa#024þ0c2LSþLesotho000017Texas#355þ0c2NUEþNueces00001ELouisiana#099þ0c2SMþSt. Martin00001CArizona#023þ0c2SCþSanta Cruz00001DNorthCarolina#011þ0c2AVþAvery00001BGeorgia#163þ0c2JEþJefferson00001AKentucky#199þ0c2PUþPulaski000019Florida#127þ0c2VOþVolusia000018Illinois#001þ0c2ADþAdams000021Mississippi#109þ0c2PRþPearl River000026PuertoRico#119þ0c2RGþR&iacute;o Grande00001EPennsylvania#075þ0c2LEþLebanon000017Idaho#011þ0c2BIþBingham000019Arkansas#099þ0c2NEþNevada000020SpainProvinces#038þ0c2OUþOurense000016Oregon#013þ0c2CRþCrook00001AIsrael#003þ0c2JEþJerusalem00001ATennessee#015þ0c2CNþCannon000018Colorado#107þ0c2ROþRoutt000018Montana#077þ0c2PWþPowell00001CAlabama#123þ0c2TLþTallapoosa00001CNewWorld#105þ0c2IDþIndonesia00001FAzerbaijan#77þ0c2SHþ&#350;ahbuz000021NorthIreland#09þ0c2CSþCastlereagh000016Wales#10þ0c2GDþGwynedd000016Ecuador#10þ0c2GþGuayas000023Turkey#79þ0c2KKþK&#305;r&#305;kkale000025WorldwithCountries#82þ0c2SZþSwaziland000014China#12þ0c2HUþHubei000032FrenchGuiana#GF.CY.MTþ0c2MTþMontsinery Tonnegrande00001APanama#PA.HEþ0c2HEþHerrera00001DHongKong#HK.TMþ0c2TMþTuen Mun00001BMacedonia#MK.KNþ0c2KNþKonce00001CCoteDivoire#CI.LCþ0c2LCþLacs00001AEastTimor#TL.DLþ0c2DLþDili000019Uganda#UG.MGþ0c2MGþMayuge000016Benin#BJ.MOþ0c2MOþMono00002FHungaryRegions#HU.WTþ0c2WTþWestern Transdanubia000017Russia#RU.AMþ0c2AMþAmur000028FranceDepartment#FR.PDþ0c2PDþPuy de Dome00001BThailand#TH.PYþ0c2PYþPhayao00001BThailand#TH.REþ0c2REþRoi Et000020Namibia#NA.ODþ0c2ODþOtjozondjupa000018Nigeria#NG.OGþ0c2OGþOgun000022BurkinaFaso#BF.OBþ0c2OBþOubritenga00001ENorthCarolina#193þ0c2WIþWilkes00001DVirginia#095þ0c2JCþJames City000018Africa#025þ0c2LIþLiberia00001CAlaska#185þ0c2NSþNorth Slope000019Kansas#147þ0c2PLþPhillips00001CIllinois#183þ0c2VEþVermilion000017Missouri#103þ0c2KNþKnox00001ACalifornia#007þ0c2BUþButte000017Texas#175þ0c2GOLþGoliad000015Ohio#137þ0c2PUþPutnam000017Nebraska#107þ0c2KNþKnox00001DMinnesota#035þ0c2CIþCrow Wing000017Kentucky#019þ0c2BYþBoyd00001DMichigan#029þ0c2CHþCharlevoix000021SpainProvinces#039þ0c2PAþPalencia000019Israel#004þ0c2NRþNorthern00001AOklahoma#149þ0c2WHþWashita000019Wisconsin#091þ0c2PEþPepin000017NewWorld#106þ0c2IAþIran000021Washington#051þ0c2PEþPend Oreille00001AIndiana#153þ0c2SLþSullivan000029NewCaledonia#NC.NO.HOþ0c2HOþHoua&iuml;lou000023Azerbaijan#78þ0c2SRþ&#350;&#601;rur00001FNorthIreland#10þ0c2CLþColeraine00001FWales#11þ0c2AYþIsle of Anglesey00001FRomania#25þ0c2MMþMaramure&#351;000018Ecuador#11þ0c2IþImbabura00001FNorthKorea#01þ0c2CHAþChagang-do000020Turkey#80þ0c2SRþ&#350;&#305;rnak000024WorldwithCountries#83þ0c2TZþTanzania00003DIceland#19þ0c2NIþNor&eth;ur-&Iacute;safjar&eth;ars&yacute;sla000017China#13þ0c2XJþXinjiang00001ASomalia#SO.BKþ0c2BKþBakool00001CBurma#MM.CHþ0c2CHþChin State00001ESamoa #WS.VFþ0c2VFþVaao Fonoti000018Niger#NE.MAþ0c2MAþMaradi000018Yemen#YE.DHþ0c2DHþDhamar00001BMongolia#MN.ERþ0c2ERþOrkhon00001AUganda#UG.MHþ0c2MHþMaracha00001BLibya#LY.SHþ0c2SHþAsh Shati000017Iran#IR.QZþ0c2QZþQazvin00001ALebanon#LE.BAþ0c2BAþBeirut000019Ethiopia#ET.AFþ0c2AFþAfar000022BurkinaFaso#BF.NMþ0c2NMþNamentenga00001DGambia#GM.NBþ0c2NBþNorth Bank000018Nevada#017þ0c2LIþLincoln00001AIowa#021þ0c2BVþBuena Vista000016Africa#026þ0c2LRþLibya00001ATexas#357þ0c2OCHþOchiltree00001CLouisiana#101þ0c2SRþSt. Mary000019Arizona#025þ0c2YAþYavapai000024Virginia#820þ0c2WBþWaynesboro (City)000020NorthCarolina#013þ0c2BEþBeaufort000019Georgia#165þ0c2JKþJenkins00001CKentucky#201þ0c2ROþRobertson000019Florida#129þ0c2WKþWakulla00001CIllinois#003þ0c2ALþAlexander00001BMississippi#111þ0c2PEþPerry000022PuertoRico#121þ0c2SBþSabana Grande00001DPennsylvania#077þ0c2LHþLehigh000016Idaho#013þ0c2BLþBlaine000019Arkansas#101þ0c2NWþNewton000023SpainProvinces#040þ0c2POþPontevedra000016Oregon#015þ0c2CUþCurry000019Israel#005þ0c2SOþSouthern00001BTennessee#017þ0c2CRþCarroll00001BColorado#109þ0c2SAþSaguache000019Montana#079þ0c2PIþPrairie00001CAlabama#125þ0c2TUþTuscaloosa000018NewWorld#107þ0c2JPþJapan00001FNorthIreland#11þ0c2CKþCookstown00001CWales#12þ0c2MMþMonmouthshire00001FRomania#26þ0c2MHþMehedin&#355;i000014Ecuador#12þ0c2LþLoja000015Turkey#81þ0c2AAþAdana000020WorldwithCountries#84þ0c2TGþTogo000033Iceland#20þ0c2NMþNor&eth;ur-M&uacute;las&yacute;sla00001FFiji#FJ.TH.NOþ0c2NOþTholo North000027Kazakhstan#KZ.NKþ0c2NKþNorth Kazakhstan00001ADjibouti#DJ.OBþ0c2OBþObock000024Guyana#GY.PMþ0c2PMþPomeroon-Supenaam000019Russia#RU.RZþ0c2RZþRyazan000026Russia#RU.SPþ0c2SPþSt. Petersburg City000018Uganda#UG.MIþ0c2MIþMpigi00001AQatar#QA.MEþ0c2MEþMesaieed00001FBurkinaFaso#BF.ODþ0c2ODþOudalan00002EMorocco#MA.MKþ0c2MKþMarrakech Tensift Al Haouz000021Chad#TD.MWþ0c2MWþMayo-Kebbi Ouest00001DIndiana#155þ0c2SWþSwitzerland00001ENorthCarolina#195þ0c2WLþWilson000021Virginia#097þ0c2KQþKing and Queen00001BAfrica#027þ0c2MGþMadagascar00001DKansas#149þ0c2PTþPottawatomie000019Illinois#185þ0c2WAþWabash00001AMissouri#105þ0c2LDþLaclede00001ECalifornia#009þ0c2CAþCalaveras000019Texas#177þ0c2GONþGonzales00001FVirginia#640þ0c2GAþGalax (City)000017Ohio#139þ0c2RIþRichland00001CNebraska#109þ0c2LAþLancaster00001AMinnesota#037þ0c2DAþDakota000018Kentucky#021þ0c2BLþBoyle00001CMichigan#031þ0c2CEþCheboygan000022SpainProvinces#041þ0c2SAþSalamanca000019Israel#006þ0c2TAþTel Aviv000018Oklahoma#151þ0c2WOþWoods00001AWisconsin#093þ0c2PIþPierce00001DNewWorld#108þ0c2KZþKazakhstan00001BWashington#053þ0c2PIþPierce000014China#15þ0c2GSþGansu00001FNorthIreland#12þ0c2CRþCraigavon00001DWales#13þ0c2MTþMerthyr Tydfil00001BRomania#27þ0c2MSþMure&#351;00001FEcuador#13þ0c2RþLos R&iacute;os000028NorthKorea#03þ0c2HANþHamgy&#335;ng-namdo000028Turkey#82þ0c2CIþ&Ccedil;ank&#305;r&#305;000023WorldwithCountries#85þ0c2TNþTunisia000037Iceland#21þ0c2NOþNor&eth;ur-&THORN;ingeyjars&yacute;sla000022SierraLeone#SL.SO.PUþ0c2PUþPujehun000024MarshallIsland#MH.MH.UTþ0c2UTþUtirik000018Chad#TD.ODþ0c2ODþOuaddai000019Somalia#SO.AWþ0c2AWþAwdal00001BHongKong#HK.TPþ0c2TPþTai Po00001ABurundi#BI.GIþ0c2GIþGitega000022Tibet#TI.NGþ0c2NGþNagqu Prefecture00001AVietnam#VN.SLþ0c2SLþSon La00001DVietnam#VN.TBþ0c2TBþThai Binh00001BPalau#PW.HAþ0c2HAþHatohobei00001BSriLanka#LK.MTþ0c2MTþMatale000017Congo#CG.NIþ0c2NIþNiari000024TrinidadandTobago#TT.CAþ0c2CAþCaroni00001BLesotho#LS.QTþ0c2QTþQuthing000015Nevada#019þ0c2LYþLyon000015Iowa#023þ0c2BTþButler000017Africa#028þ0c2MWþMalawi000021Alaska#188þ0c2NAþNorthwest Arctic000017Texas#359þ0c2OLDþOldham00001FLouisiana#103þ0c2SYþSt. Tammany000016Arizona#027þ0c2YUþYuma00001ENorthCarolina#015þ0c2BRþBertie000019Georgia#167þ0c2JOþJohnson00001DKentucky#203þ0c2RCþRockcastle000018Florida#131þ0c2WTþWalton000017Illinois#005þ0c2BOþBond00001AMississippi#113þ0c2PIþPike00001CPuertoRico#123þ0c2SAþSalinas00001EPennsylvania#079þ0c2LZþLuzerne000015Idaho#015þ0c2BOþBoise00001BArkansas#103þ0c2OUþOuachita00002FSpainProvinces#042þ0c2SCþSanta Cruz de Tenerife00001AOregon#017þ0c2DEþDeschutes00001ATennessee#019þ0c2CTþCarter00001BColorado#111þ0c2SJþSan Juan000019Montana#081þ0c2RAþRavalli000018Alabama#127þ0c2WAþWalker000020NewWorld#109þ0c2KPþKorea (north)000020NewCaledonia#NC.SU.THþ0c2THþThio000016China#16þ0c2GXþGuangxi00001BNorthIreland#13þ0c2LDþDerry00001CLuxembourg#02þ0c2CAþCapellen000020Wales#14þ0c2NPþNeath Port Talbot00001BRomania#28þ0c2NTþNeam&#355;00001DEcuador#14þ0c2MþManab&iacute;000019Turkey#83þ0c2GAþGaziantep000022WorldwithCountries#86þ0c2UGþUganda000024PolandCounties#PL.LU.CMþ0c2LCMþChelm000024Alberta#CA.AB.ANþ0c2ANþAlberta North00001CSomalia#SO.BNþ0c2BNþBanaadir00001EEastTimor#TL.VQþ0c2VQþViqueque00001ARussia#RU.SRþ0c2SRþSaratov00001FMongolia#MN.GAþ0c2GAþGovi Altai00001FCoteDivoire#CI.LGþ0c2LGþLagunes000030Guinea#GN.TEþ0c2TEþT&eacute;lim&eacute;l&eacute;00001EUganda#UG.NAþ0c2NAþNakasongola000021FranceDepartment#FR.ORþ0c2ORþOrne00001ALibya#LY.AJþ0c2AJþAjdabiya000019Monaco#EU.MNþ0c2MNþMonaco000025DenmarkRegion#DK.MJþ0c2MJþMidtjylland00001BNamibia#NA.OHþ0c2OHþOmaheke00001CSomalia#SO.TOþ0c2TOþTogdheer00001CAlgeria#DZ.LGþ0c2LGþLaghouat00001CIndiana#157þ0c2TIþTippecanoe00001ENorthCarolina#197þ0c2YAþYadkin00001EVirginia#099þ0c2KGþKing George000015Africa#029þ0c2MLþMali000016Kansas#151þ0c2PRþPratt000019Illinois#187þ0c2WRþWarren00001CMissouri#107þ0c2LFþLafayette00001BCalifornia#011þ0c2COþColusa000015Texas#179þ0c2GRAþGray000013Ohio#141þ0c2ROþRoss00001ANebraska#111þ0c2LIþLincoln000019Minnesota#039þ0c2DDþDodge00001AKentucky#023þ0c2BKþBracken00001BMichigan#033þ0c2CIþChippewa000020SpainProvinces#043þ0c2SEþSegovia00001BOklahoma#153þ0c2WDþWoodward000018Wisconsin#095þ0c2POþPolk000020NewWorld#110þ0c2KRþKorea (south)00001DWashington#055þ0c2SJþSan Juan00002DPrinceEdwardIsland#CA.PE.ALþ0c2ALþAnne's Land000016Belarus#01þ0c2BRþBrest00001ANorthIreland#14þ0c2DWþDown000024Luxembourg#03þ0c2ESþEsch-sur-Alzette000016Wales#15þ0c2NOþNewport000014Romania#29þ0c2OTþOlt00001BColombia#01þ0c2AMAþAmazonas00001FEcuador#15þ0c2SþMorona-Santiago000014Turkey#84þ0c2KAþKars00002AWorldwithCountries#87þ0c2WAþWestern Sahara00002FIceland#23þ0c2RAþRang&aacute;rvallas&yacute;sla000023FrenchGuiana#GF.CY.MYþ0c2MYþMatoury000033NorthWestTerritories#CA.NT.BLþ0c2BLþBigLake Country00001DMacedonia#MK.KSþ0c2KSþKrusevo00001DMacedonia#MK.LIþ0c2LIþLipkovo00001AZambia#ZM.CEþ0c2CEþCentral000019Yemen#YE.DLþ0c2DLþAl Dali00001BLibya#LY.TBþ0c2TBþTarabulus00002DSolomonIsland#SB.RBþ0c2RBþRennell and Bellona00001ERussia#RU.ARþ0c2ARþArkhangelsk000018Guinea#GN.BEþ0c2BEþBeyla00001APakistan#PK.SDþ0c2SDþSindh00001CSwaziland#SZ.HHþ0c2HHþHhohho00001ALibya#LY.BAþ0c2BAþBenghazi000018Nauru#NR.ABþ0c2ABþAnabar00001AEurope2#EU.GRþ0c2GRþGreece00001DNewWorld#111þ0c2KGþKyrgyzstan000018Nevada#021þ0c2MIþMineral000016Iowa#025þ0c2CAþCalhoun00001BAfrica#030þ0c2MRþMauritania000017Texas#361þ0c2ORAþOrange00001ELouisiana#105þ0c2TAþTangipahoa00001ENorthCarolina#017þ0c2BLþBladen000017Georgia#169þ0c2JNþJones000018Kentucky#205þ0c2RWþRowan00001CFlorida#133þ0c2WGþWashington000018Illinois#007þ0c2BNþBoone00001EMississippi#115þ0c2POþPontotoc000026PuertoRico#125þ0c2SGþSan Germ&aacute;n00001FPennsylvania#081þ0c2LYþLycoming000016Idaho#017þ0c2BRþBonner000018Arkansas#105þ0c2PEþPerry000020SpainProvinces#044þ0c2SVþSevilla000018Oregon#019þ0c2DOþDouglas00001CTennessee#021þ0c2CHþCheatham00001DColorado#113þ0c2SMþSan Miguel00001AMontana#083þ0c2RIþRichland00001CAlabama#129þ0c2WSþWashington000016China#18þ0c2GZþGuizhou000017Belarus#02þ0c2HOþHomyel000030NorthIreland#15þ0c2DNþDungannon and South Tyrone000025USASouthEastRegion#22þ0c2LAþLouisiana00001ELuxembourg#04þ0c2LUþLuxembourg00001CWales#16þ0c2PEþPembrokeshire000018Romania#30þ0c2PHþPrahova00001AJamacia#01þ0c2CLþClarendon00001CColombia#02þ0c2ANTþAntioquia000023NorthKorea#06þ0c2HWNþHwanghae-namdo000019Turkey#85þ0c2ZOþZonguldak000022WorldwithCountries#88þ0c2ZMþZambia00001ELiechtenstein#01þ0c2BAþBalzers000022MarshallIsland#MH.MH.EBþ0c2EBþEbon00001CRussia#RU.STþ0c2STþStavropol000019Uganda#UG.LWþ0c2LWþLuwero00001CRussia#RU.ASþ0c2ASþAstrakhan000018Guinea#GN.BFþ0c2BFþBoffa00001AThailand#TH.SAþ0c2SAþSatun000024TrinidadandTobago#TT.TOþ0c2TOþTobago00001DVietnam#VN.BDþ0c2BDþBinh Dinh000018Angola#AO.ZAþ0c2ZAþZaire00002CBrazilRegion#BR.CWþ0c2CWþCentral West Region00001FBurkinaFaso#BF.NRþ0c2NRþNahouri000017NewWorld#112þ0c2LAþLaos00001BWashington#057þ0c2SAþSkagit000018Indiana#159þ0c2TPþTipton00001ENorthCarolina#199þ0c2YNþYancey00001FVirginia#101þ0c2KWþKing William00001DRhodeIsland#001þ0c2BRþBristol000018Kansas#153þ0c2RAþRawlins00001DIllinois#189þ0c2WSþWashington00001BMissouri#109þ0c2LAþLawrence000021California#013þ0c2CNþContra costa000018Texas#181þ0c2GRYþGrayson000017Ohio#143þ0c2SAþSandusky000018Nebraska#113þ0c2LOþLogan00001BMinnesota#041þ0c2DUþDouglas00001CKentucky#025þ0c2BHþBreathitt000018Michigan#035þ0c2CLþClare00001ESpainProvinces#045þ0c2SOþSoria00001BWisconsin#097þ0c2PRþPortage000027Manitoba#CA.MB.WIþ0c2WIþWinnipeq Region000017China#19þ0c2LNþLiaoning000017Belarus#03þ0c2HRþHrodna00001FNorthIreland#16þ0c2FEþFermanagh00001ALuxembourg#05þ0c2MEþMersch000014Wales#17þ0c2POþPowys00001BRomania#31þ0c2SJþS&#259;laj000018Jamacia#02þ0c2HAþHanover000019Colombia#03þ0c2ARAþArauca000017Ecuador#17þ0c2YþPastaza000023NorthKorea#07þ0c2HWBþHwanghae-bukto000017Turkey#86þ0c2ARþArdahan000018SouthKorea#01þ0c2CJþJeju000024WorldwithCountries#89þ0c2ZWþZimbabwe00001DLiechtenstein#02þ0c2ESþEschen00002BNewBrunswick#CA.NB.MRþ0c2MRþMiramichi River00002APolandCounties#PL.SL.CMþ0c2SCMþCzestochowa000025PolandCounties#PL.PM.GMþ0c2PGMþGdansk000028PolandCounties#PL.PD.BMþ0c2PBMþBialystok000027CentralAmerica2#CE.PRþ0c2PRþPuerto Rico00001CSenegal#SN.DBþ0c2DBþDiourbel000019Uganda#UG.MNþ0c2MNþMukono00001EThailand#TH.SBþ0c2SBþSing Buri000031DemocraticRepublicoftheCongo#CD.SKþ0c2SKþSud-Kivu00001CNamibia#NA.OKþ0c2OKþOkavango000018Nigeria#NG.ONþ0c2ONþOndo000018Alabama#131þ0c2WIþWilcox00001BNewWorld#113þ0c2MYþMalaysia000014Nevada#023þ0c2NYþNye000016Iowa#027þ0c2CRþCarroll000018Africa#032þ0c2MAþMorocco00001BTexas#363þ0c2PALþPalo Pinto00001ALouisiana#107þ0c2TEþTensas000021NorthCarolina#019þ0c2BSþBrunswick000017Georgia#171þ0c2LAþLamar00001AKentucky#207þ0c2RSþRussell000018Illinois#009þ0c2BRþBrown00001EMississippi#117þ0c2PSþPrentiss000027PuertoRico#127þ0c2SJþSan Juan (capital)00001DPennsylvania#083þ0c2MKþMcKean000019Texas#001þ0c2ANDþAnderson00001AIdaho#019þ0c2BVþBonneville00001BArkansas#107þ0c2PHþPhillips000022SpainProvinces#046þ0c2TAþTarragona000018Oregon#021þ0c2GIþGilliam00001BTennessee#023þ0c2CSþChester00001BColorado#115þ0c2SEþSedgwick00001BMontana#085þ0c2ROþRoosevelt00001ELiechtenstein#03þ0c2GAþGamprin000019China#20þ0c2NMþNei Mongol000019Belarus#04þ0c2MAþMahilyow00001BNorthIreland#17þ0c2LRþLarne00001BMalta#01þ0c2GHþG&#295;awdex00001CLuxembourg#06þ0c2CLþClervaux000018Taiwan#01þ0c2CGþChanghua000021Wales#18þ0c2RTþRhondda Cynon Taff00001ARomania#32þ0c2SMþSatu Mare000023Colombia#04þ0c2ATLþAtl&aacute;ntico000019Ecuador#18þ0c2PþPichincha000021NorthKorea#08þ0c2KAEþKaes&#335;ng00001BTurkey#87þ0c2BRþBart&#305;n000022WorldwithCountries#90þ0c2GMþGambia000029CentralAfricanRepublic#CF.VKþ0c2VKþVakaga000018Somalia#SO.BRþ0c2BRþBari00001DRussia#RU.SVþ0c2SVþSverdlovsk000017Russia#RU.TLþ0c2TLþTula000018Uganda#UG.NEþ0c2NEþNebbi000020Russia#RU.BKþ0c2BKþBashkortostan000017Iran#IR.SMþ0c2SMþSemnan00001EVietnam#VN.TGþ0c2TGþTien Giang000049Ethiopia#ET.SNþ0c2SNþSouthern (Nations,Nationalities and People's Region)000025DenmarkRegion#DK.NDþ0c2NDþNordjylland000028WesternSahara#AF.WSþ0c2WSþWestern Sahara00001BEthiopia#ET.AMþ0c2AMþAmhara000017Togo#TG.CEþ0c2CEþCentre00001BEurope2#EU.GUþ0c2GUþGuersey00001BNewWorld#114þ0c2MNþMongolia00001DWashington#059þ0c2SKþSkamania000017Indiana#161þ0c2UNþUnion00001CVirginia#103þ0c2LAþLancaster00001BAfrica#033þ0c2MZþMozambique00001ARhodeIsland#003þ0c2KEþKent000015Kansas#155þ0c2RNþReno000018Illinois#191þ0c2WYþWayne000018Missouri#111þ0c2LEþLewis00001ECalifornia#015þ0c2DEþDel Norte000016Texas#183þ0c2GREþGregg000015Ohio#145þ0c2SCþScioto000017Nebraska#115þ0c2LUþLoup00001DMinnesota#043þ0c2FAþFaribault00001FKentucky#027þ0c2BGþBreckinridge00001AMichigan#037þ0c2CNþClinton00001FSpainProvinces#047þ0c2TEþTeruel000019Wisconsin#099þ0c2PCþPrice00001DLiechtenstein#04þ0c2MAþMauren00001AChina#21þ0c2NXþNingxia Hui00001ENorthIreland#18þ0c2LMþLimavady00001CFinland#01þ0c2ALþ&Aring;land000016Malta#02þ0c2KEþKemmuna00001CLuxembourg#07þ0c2DIþDiekirch000016Taiwan#02þ0c2CHþChiayi000019Lithuania#56þ0c2ALþAlytus000016Wales#19þ0c2SWþSwansea000016Romania#33þ0c2SBþSibiu00001BJamacia#04þ0c2MAþManchester00001AEcuador#19þ0c2TþTungurahua000024NorthKorea#09þ0c2KANþKangw&#335;n-do00001FTurkey#88þ0c2IGþI&#287;d&#305;r000020SouthKorea#03þ0c2CBþJeollabuk-do000021WorldwithCountries#91þ0c2CGþCongo000023MarshallIsland#MH.MH.EEþ0c2EEþEbeya000024Alberta#CA.AB.ASþ0c2ASþAlberta South00002CDistrictofColumbia#US.DC.SEþ0c2SEþSouth East00001ARwanda#RW.OUþ0c2OUþWestern00001BLaos#LA.XSþ0c2XSþXaisomboun000022Guyana#GY.PTþ0c2PTþPotaro-Siparuni000018Jordan#JO.AJþ0c2AJþAjlun00001BRussia#RU.BLþ0c2BLþBelgorod00001AChina2#CN.QHþ0c2QHþQinghai00001DVietnam#VN.THþ0c2THþThanh Hoa00001BThailand#TH.RNþ0c2RNþRanong00001BEthiopia#ET.SOþ0c2SOþSomali000019Lebanon#LE.BIþ0c2BIþBeqaa000021Lebanon#LE.ASþ0c2ASþNorth Lebanon00001DVietnam#VN.BGþ0c2BGþBac Giang000022Thailand#TH.ACþ0c2ACþAmnat Charoen000026BurkinaFaso#BF.PAþ0c2PAþPassor&eacute;000019Montana#087þ0c2RSþRosebud000019Alabama#133þ0c2WNþWinston000018NewWorld#115þ0c2NPþNepal000013Iowa#029þ0c2CSþCass000018Africa#034þ0c2NAþNamibia000017Texas#365þ0c2PANþPanola00001ELouisiana#109þ0c2TRþTerrebonne000020NorthCarolina#021þ0c2BUþBuncombe000018Georgia#173þ0c2LNþLanier00001FAlaska#013þ0c2AEþAleutians East000018Kentucky#209þ0c2SCþScott000019Illinois#011þ0c2BUþBureau00001DMississippi#119þ0c2QUþQuitman000020PuertoRico#129þ0c2SLþSan Lorenzo00001DPennsylvania#085þ0c2MEþMercer000018Texas#003þ0c2ANRþAndrews000018Idaho#021þ0c2BUþBoundary000017Arkansas#109þ0c2PIþPike00001FSpainProvinces#048þ0c2TOþToledo000016Oregon#023þ0c2GRþGrant00001DTennessee#025þ0c2CBþClaiborne000019Colorado#117þ0c2SUþSummit00002DIceland#28þ0c2SKþSkagafjar&eth;ars&yacute;sla00001ELiechtenstein#05þ0c2PLþPlanken000016Belarus#06þ0c2MIþMinsk00002FSaintVincentandtheGrenadines#01þ0c2CHþCharlotte00001DNorthIreland#19þ0c2LBþLisburn000014Malta#03þ0c2MAþMalta00001BLuxembourg#08þ0c2REþRedange00001DTaiwan#03þ0c2CSþChiayi (City)000019Lithuania#57þ0c2KUþKaunas000016Wales#20þ0c2TFþTorfaen000018Romania#34þ0c2SVþSuceava000020Ecuador#20þ0c2ZþZamora-Chinchipe00001CTurkey#89þ0c2KBþKarab&uuml;k000025WorldwithCountries#92þ0c2MIþMauritius000032DemocraticRepublicoftheCongo#CD.BCþ0c2BCþBas-Congo00001EHongKong#HK.TWþ0c2TWþTsuen Wan000018Jordan#JO.BAþ0c2BAþBalqa00001CMacedonia#MK.KXþ0c2KXþKarpos000025Macedonia#MK.MDþ0c2MDþMakedonski Brod00001BRussia#RU.UDþ0c2UDþUdmurtia000023CoteDivoire#CI.MCþ0c2MCþMoyen-Comoe000017Oman#OM.JAþ0c2JAþDhofar00001ANamibia#NA.ONþ0c2ONþOshana000026Ethiopia#ET.BEþ0c2BEþBenshangul- Gumaz00001BAlgeria#DZ.MCþ0c2MCþMascara00001BNewWorld#116þ0c2PKþPakistan00001EWashington#061þ0c2SNþSnohomish00001DIndiana#163þ0c2VAþVanderburgh000016Virginia#105þ0c2LEþLee000016Africa#035þ0c2NEþNiger00001DRhodeIsland#005þ0c2NPþNewport000019Kansas#157þ0c2RPþRepublic000018Illinois#193þ0c2WHþWhite00001AMissouri#113þ0c2LCþLincoln00001ECalifornia#017þ0c2ELþEl Dorado000017Texas#185þ0c2GRIþGrimes000015Ohio#147þ0c2SEþSeneca00001CNebraska#117þ0c2MPþMcPherson00001CMinnesota#045þ0c2FIþFillmore00001AKentucky#029þ0c2BIþBullitt00001BMichigan#039þ0c2CRþCrawford000021SpainProvinces#049þ0c2VAþValencia00001AWisconsin#101þ0c2RAþRacine000027WorldwithCountries#93þ0c2AFþAfghanistan00003CIceland#29þ0c2SHþSn&aelig;fellsnes-og Hnappadalss&yacute;sla00001ELiechtenstein#06þ0c2RUþRuggell000019Belarus#07þ0c2VIþVitsebsk000032SaintVincentandtheGrenadines#02þ0c2ANþSaint Andrew000021NorthIreland#20þ0c2MFþMagherafelt000019Luxembourg#09þ0c2WIþWiltz000017Taiwan#04þ0c2HHþHsinchu000020Lithuania#58þ0c2KLþKlaip&#279;da000020Wales#21þ0c2VGþVale of Glamorgan00001ARomania#35þ0c2TRþTeleorman000028NorthKorea#11þ0c2PYBþP'y&#335;ngan-bukto000015Turkey#90þ0c2KIþKilis000025SouthKorea#05þ0c2GBþChungcheongbuk-do000027Alberta#CA.AB.CAþ0c2CAþCalgary and Area000023MarshallIsland#MH.MH.WHþ0c2WHþWotho00001DMacedonia#MK.KYþ0c2KYþKratovo00001CMacedonia#MK.LOþ0c2LOþLozovo000026Sudan#SD.NBþ0c2NBþNorth Bahr Al Ghazal000019Nepal#NP.GAþ0c2GAþGandaki000018Russia#RU.TOþ0c2TOþTomsk000016Libya#LY.SRþ0c2SRþSurt000030FranceDepartment#FR.POþ0c2POþPyrenees Orientales00001DVietnam#VN.STþ0c2STþSoc Trang00001EGuinea#GN.BKþ0c2BKþBok&eacute;00001EVietnam#VN.BIþ0c2BIþBinh Duong000021Turkmenistan#TM.DAþ0c2DAþDashoguz000024Morocco#MA.MTþ0c2MTþMeknes-Tafilalet000019Algeria#DZ.MDþ0c2MDþMedea000019Montana#089þ0c2SAþSanders00001ENewWorld#117þ0c2PHþPhilippines000019Nevada#027þ0c2PEþPershing000014Iowa#031þ0c2CEþCedar000018Africa#036þ0c2NGþNigeria000017Texas#367þ0c2PARþParker000019Louisiana#111þ0c2UNþUnion000026Virginia#830þ0c2WLþWilliamsburg (City)00001DNorthCarolina#023þ0c2BKþBurke000019Georgia#175þ0c2LUþLaurens000019Kentucky#211þ0c2SHþShelby00001AIllinois#013þ0c2CAþCalhoun00001CMississippi#121þ0c2RAþRankin000018Europe#001þ0c2ALþAlbania000029PuertoRico#131þ0c2SSþSan Sebasti&aacute;n00001EPennsylvania#087þ0c2MIþMifflin000019Texas#005þ0c2ANGþAngelina000015Idaho#023þ0c2BTþButte00001BArkansas#111þ0c2POþPoinsett000023SpainProvinces#050þ0c2VLþValladolid000017Oregon#025þ0c2HAþHarney000018Tennessee#027þ0c2CYþClay000019Colorado#119þ0c2TEþTeller000023WorldwithCountries#94þ0c2AMþArmenia000024Iceland#30þ0c2STþStrandas&yacute;sla00001DLiechtenstein#07þ0c2SNþSchaan000015China#24þ0c2SXþShanxi000031SaintVincentandtheGrenadines#03þ0c2DAþSaint David00001BNorthIreland#21þ0c2MYþMoyle000027USASouthEastRegion#28þ0c2MSþMississippi00001BLuxembourg#10þ0c2VIþVianden00001ETaiwan#05þ0c2HSþHsinchu (City)000023Lithuania#59þ0c2MRþMarijampol&#279;000016Wales#22þ0c2WXþWrexham00001BRomania#36þ0c2TMþTimi&#351;000019Jamacia#07þ0c2POþPortland000021Colombia#08þ0c2CAQþCaquet&aacute;000020Ecuador#22þ0c2UþSucumb&iacute;os000024NorthKorea#12þ0c2PYOþP'y&#335;ngyang000018Turkey#91þ0c2OSþOsmaniye00001ESouthKorea#06þ0c2KWþGangwon-do00001FKazakhstan#KZ.PAþ0c2PAþPavlodar000018Jordan#JO.AMþ0c2AMþAmman000023Macedonia#MK.KZþ0c2KZþKriva Palanka000021Libya#LY.SSþ0c2SSþSabratah Surman000024Tibet#TI.NPþ0c2NPþNyinchi Prefecture00001DThailand#TH.SGþ0c2SGþSongkhla000038Pakistan#PK.TAþ0c2TAþFederally Administered Tribal Areas000016Nauru#NR.AIþ0c2AIþAiwo000018Nigeria#NG.OSþ0c2OSþOsun00001BEurope2#EU.IEþ0c2IEþIreland00002FSaudiArabia#SA.HSþ0c2HSþAl Hudud Ash Shamaliyah00001CMacedonia#MK.MGþ0c2MGþMogila00001ESudan#SD.NDþ0c2NDþNorth Darfur00001DPhilippines#PH.LEþ0c2LEþLeyte000019Uganda#UG.MTþ0c2MTþMoroto000017Iran#IR.THþ0c2THþTehran000020Thailand#TH.SHþ0c2SHþSuphan Buri00001BEthiopia#ET.TIþ0c2TIþTigray00001BVietnam#VN.BKþ0c2BKþBac Can000020Pakistan#PK.BAþ0c2BAþBalochistan000020Mauritius#MU.GPþ0c2GPþGrand Port00001EBurkinaFaso#BF.NYþ0c2NYþNayala000025NewWorld#118þ0c2RUþRussian Federation00001CWashington#063þ0c2SPþSpokane00001CIndiana#165þ0c2VEþVermillion00001AVirginia#107þ0c2LOþLoudoun000020RhodeIsland#007þ0c2PRþProvidence000015Kansas#159þ0c2RCþRice00001CIllinois#195þ0c2WTþWhiteside000017Missouri#115þ0c2LNþLinn00001BCalifornia#019þ0c2FRþFresno00001FAlaska#016þ0c2AWþAleutians West00001ATexas#187þ0c2GUAþGuadalupe000021Virginia#650þ0c2HAþHampton (City)000015Ohio#149þ0c2SHþShelby00001ANebraska#119þ0c2MAþMadison000018Europe#002þ0c2ADþAndorra00001CMinnesota#047þ0c2FRþFreeborn000019Kentucky#031þ0c2BUþButler000018Michigan#041þ0c2DEþDelta00001FSpainProvinces#051þ0c2ZAþZamora00001CWisconsin#103þ0c2RIþRichland000027NewCaledonia#NC.SU.BPþ0c2BPþBoulouparis000026WorldwithCountries#95þ0c2AZþAzerbaijan000032Iceland#31þ0c2SMþSu&eth;ur-M&uacute;las&yacute;sla000023Liechtenstein#08þ0c2SBþSchellenberg000017China#25þ0c2SDþShandong000032SaintVincentandtheGrenadines#04þ0c2GEþSaint George000026NorthIreland#22þ0c2NMþNewry and Mourne00001ELuxembourg#11þ0c2ECþEchternach000017Taiwan#06þ0c2HLþHualien000026Lithuania#60þ0c2PNþPanev&#279;&#382;ys000017Romania#37þ0c2TLþTulcea00001DJamacia#08þ0c2SDþSaint Andrew000018Colombia#09þ0c2CAUþCauca000014Ecuador#23þ0c2NþNapo000020NorthKorea#13þ0c2YANþYanggang-do000016Turkey#92þ0c2YLþYalova00001BFiji#FJ.NO.MCþ0c2MCþMacuata000023MarshallIsland#MH.MH.WJþ0c2WJþWotje00001EAlgeria#DZ.MGþ0c2MGþMostaganem00001CSamoa #WS.VSþ0c2VSþVaisigano000020Guinea#GN.TOþ0c2TOþTougu&eacute;00001BUganda#UG.NKþ0c2NKþNakaseke00001EThailand#TH.SIþ0c2SIþSi Sa Ket000020Kuwait#KW.FAþ0c2FAþAl Farwaniyah000018Iran#IR.ARþ0c2ARþArdebil00001CVietnam#VN.BLþ0c2BLþBac Lieu00001CVietnam#VN.CBþ0c2CBþCao Bang000017Nauru#NR.BAþ0c2BAþBaiti00001DColorado#121þ0c2WAþWashington00001AMontana#091þ0c2SHþSheridan00001CNewWorld#119þ0c2SGþSingapore000017Nevada#029þ0c2STþStorey00001AIowa#033þ0c2CGþCerro Gordo000017Africa#038þ0c2RWþRwanda000017Texas#369þ0c2PAMþParmer00001DLouisiana#113þ0c2VEþVermilion000020NorthCarolina#025þ0c2CAþCabarrus000015Georgia#177þ0c2LEþLee00001AKentucky#213þ0c2SIþSimpson00001AIllinois#015þ0c2CRþCarroll00001BMississippi#123þ0c2SCþScott000018Europe#003þ0c2ATþAustria000021PuertoRico#133þ0c2SIþSanta Isabel00001DPennsylvania#089þ0c2MOþMonroe000018Texas#007þ0c2ARAþAransas000015Idaho#025þ0c2CAþCamas000017Arkansas#113þ0c2PLþPolk000021SpainProvinces#052þ0c2ZRþZaragoza00001BOregon#027þ0c2HRþHood River000019Tennessee#029þ0c2CKþCocke000032MadagascarRegions#MG.FI.AAþ0c2AAþAtsimo-Atsinanana000026WorldwithCountries#96þ0c2BDþBangladesh000019USA#RIþ0c2RIþRhode Island000036Iceland#32þ0c2SUþSu&eth;ur-&THORN;ingeyjars&yacute;sla00001ELiechtenstein#09þ0c2TNþTriesen000016China#26þ0c2SAþShaanxi000033SaintVincentandtheGrenadines#05þ0c2PAþSaint Patrick000022NorthIreland#23þ0c2NWþNewtownabbey000018Finland#06þ0c2LAþLapland000020Luxembourg#12þ0c2GRþGrevenmacher00001FTaiwan#07þ0c2KHþKaohsiung(City)000022Lithuania#61þ0c2SAþ&Scaron;iauliai000017Indonesia#01þ0c2ACþAceh000017Romania#38þ0c2VSþVaslui00001AJamacia#09þ0c2SNþSaint Ann000018Colombia#10þ0c2CESþCesar000018Ecuador#24þ0c2DþOrellana00001ANorthKorea#14þ0c2NAMþNampo00001ATurkey#93þ0c2DUþD&uuml;zce000017Somalia#SO.BYþ0c2BYþBay00001DZambia#ZM.COþ0c2COþCopperbelt00001EPhilippines#PH.LGþ0c2LGþLaguna000022PapuaNewGuinea#PG.CEþ0c2CEþCentral00001ARussia#RU.BRþ0c2BRþBryansk00001CVietnam#VN.TNþ0c2TNþTay Ninh00001FThailand#TH.RTþ0c2RTþRatchaburi00001BNamibia#NA.OSþ0c2OSþOmusati00001BNigeria#NG.PLþ0c2PLþPlateau000018Wisconsin#105þ0c2ROþRock00001CNewWorld#120þ0c2LKþSri Lanka00001CWashington#065þ0c2STþStevens000016Indiana#167þ0c2VIþVigo000019Virginia#109þ0c2LUþLouisa000020RhodeIsland#009þ0c2WAþWashington000016Kansas#161þ0c2RLþRiley000017Illinois#197þ0c2WIþWill00001DMissouri#117þ0c2LIþLivingston00001ACalifornia#021þ0c2GLþGlenn000015Texas#189þ0c2HAEþHale000014Ohio#151þ0c2STþStark00001ANebraska#121þ0c2MEþMerrick000018Europe#004þ0c2BYþBelarus00001BMinnesota#049þ0c2GOþGoodhue00001BKentucky#033þ0c2CAþCaldwell00001CMichigan#043þ0c2DIþDickinson000023NewCaledonia#NC.SU.BRþ0c2BRþBourail000022WorldwithCountries#97þ0c2BTþBhutan000022Liechtenstein#10þ0c2TBþTriesenberg000030SaintVincentandtheGrenadines#06þ0c2GTþGrenadines000020NorthIreland#24þ0c2NDþNorth Down00001ALuxembourg#13þ0c2RMþRemich000019Taiwan#08þ0c2KCþKaohsiung00001FLithuania#62þ0c2TAþTaurag&#279;000017Indonesia#02þ0c2BAþBali00001DRomania#39þ0c2VLþV&acirc;lcea000020Jamacia#10þ0c2SCþSaint Catherine00001FColombia#11þ0c2CHOþChoc&oacute;000028NorthKorea#15þ0c2PYNþP'y&#335;ngan-namdo000016Iraq#01þ0c2ANþAl-Anbar000019Senegal#SN.DKþ0c2DKþDakar00001FLesotho#LS.BBþ0c2BBþButha-Buthe000018Jordan#JO.AQþ0c2AQþAqaba00001CRussia#RU.TTþ0c2TTþTatarstan00001FUK7#UK.CIþ0c2CIþChannel Islands00001CEastTimor#TL.ERþ0c2ERþErmera00001CUganda#UG.NMþ0c2NMþNamutumba000025Libya#LY.TMþ0c2TMþTarhunah Masallatah00001CTunisia#TN.JEþ0c2JEþJendouba00001CThailand#TH.SKþ0c2SKþSa Kaeo000024Qatar#QA.MSþ0c2MSþMadinat Ach Shamal00001CVietnam#VN.BNþ0c2BNþBac Ninh000021SriLanka#LK.NWþ0c2NWþNuwara Eliya00001CNamibia#NA.OTþ0c2OTþOshikoto000017Colorado#123þ0c2WLþWeld00001CMontana#093þ0c2SBþSilver Bow00001DNewWorld#121þ0c2TJþTajikistan000017Nevada#031þ0c2WAþWashoe000017Iowa#035þ0c2CHþCherokee000026Africa#040þ0c2STþSao Tome and Principe000016Texas#371þ0c2PECþPecos00001ALouisiana#115þ0c2VNþVernon000020NorthCarolina#027þ0c2CLþCaldwell000019Georgia#179þ0c2LIþLiberty00001AKentucky#215þ0c2SPþSpencer000017Illinois#017þ0c2CSþCass00001DMississippi#125þ0c2SHþSharkey000018Europe#005þ0c2BEþBelgium00001DPuertoRico#135þ0c2TAþToa Alta000021Pennsylvania#091þ0c2MTþMontgomery000017Texas#009þ0c2ARCþArcher000016Idaho#027þ0c2CNþCanyon000017Arkansas#115þ0c2PPþPope000018Oregon#029þ0c2JAþJackson00001ATennessee#031þ0c2CFþCoffee000026Manitoba#CA.MB.WRþ0c2WRþWestern Region000022WorldwithCountries#98þ0c2BNþBrunei000035Iceland#34þ0c2VBþVestur-Bar&eth;astrandars&yacute;sla00001CLiechtenstein#11þ0c2VAþVaduz00001BNorthIreland#25þ0c2OMþOmagh000015Finland#08þ0c2OUþOulu00001ETaiwan#09þ0c2CLþKeelung (City)000021Lithuania#63þ0c2TEþTel&scaron;iai00001BIndonesia#03þ0c2BEþBengkulu00002ABritishColumbia#01þ0c2ACþAlberni-Clayoquot000018Romania#40þ0c2VNþVrancea000020Jamacia#11þ0c2SEþSaint Elizabeth000021Colombia#12þ0c2CORþC&oacute;rdoba000017Iraq#02þ0c2BAþAl-Basrah000019SouthKorea#10þ0c2PUþBusan000033NorthWestTerritories#CA.NT.DCþ0c2DCþDiamond Capital000028PolandCounties#PL.DS.WMþ0c2DWMþWalbrzych000029Macedonia#MK.MKþ0c2MKþMakedonska Kamenica000026Macedonia#MK.NAþ0c2NAþStaro Nagoricane00001CComoros #KM.ANþ0c2ANþAnjouan000017Russia#RU.TUþ0c2TUþTuva00001AMongolia#MN.HDþ0c2HDþKhovd00001FSamoa #WS.FAþ0c2FAþFaasaleleaga00002DLibya#LY.TNþ0c2TNþTajura wa an Nawahi Al Arba00001BIran#IR.BKþ0c2BKþKermanshah000018Wisconsin#107þ0c2RUþRusk00001BNewWorld#122þ0c2THþThailand00001DWashington#067þ0c2THþThurston000018Indiana#169þ0c2WAþWabash00001CVirginia#111þ0c2LNþLunenburg000018Africa#041þ0c2SNþSenegal00002FAlaska#201þ0c2PWþPrince of Wales-Outer Ketchika000016Kansas#163þ0c2ROþRooks00001DIllinois#199þ0c2WLþWilliamson00001BMissouri#119þ0c2MNþMcDonald00001DCalifornia#023þ0c2HUþHumboldt00001AAlaska#020þ0c2ANþAnchorage000015Texas#191þ0c2HALþHall000015Ohio#153þ0c2SUþSummit00001ANebraska#123þ0c2MOþMorrill000027Europe#006þ0c2BAþBosnia and Herzegovina000019Minnesota#051þ0c2GRþGrant00001BKentucky#035þ0c2CLþCalloway000018Michigan#045þ0c2EAþEaton000026Manitoba#CA.MB.ERþ0c2ERþEastern Region000023NewCaledonia#NC.NO.KAþ0c2KAþKouaoua00002BWorldwithCountries#99þ0c2MMþBurma (Myanmar)000034Iceland#35þ0c2VHþVestur-H&uacute;navatnss&yacute;sla000015China#29þ0c2YNþYunnan00001ENorthIreland#26þ0c2SBþStrabane000019Bangladesh#81þ0c2DAþDhaka00001CSuriname#10þ0c2BRþBrokopondo000016Taiwan#10þ0c2KMþKinmen000018Lithuania#64þ0c2UTþUtena00001AIndonesia#04þ0c2JKþJakarta000028BritishColumbia#02þ0c2BNþBulkley-Nechako000028Romania#41þ0c2CLþC&#259;l&#259;ra&#351;i00001CJamacia#12þ0c2SJþSaint James000028NorthKorea#17þ0c2HABþHamgy&#335;ng-bukto00001EIraq#03þ0c2MUþAl-Muthann&#257;000019SouthKorea#11þ0c2SOþSeoul000028PolandCounties#PL.KP.BMþ0c2KBMþBydgoszcz000019Algeria#DZ.NAþ0c2NAþNaama000023Tanzania#TZ.ZNþ0c2ZNþZanzibar North000018Angola#AO.HLþ0c2HLþHuila000021PapuaNewGuinea#PG.CHþ0c2CHþChimbu000017Russia#RU.TVþ0c2TVþTver00001CRussia#RU.ULþ0c2ULþUlyanovsk000017Uganda#UG.MYþ0c2MYþMoyo00001BRussia#RU.BUþ0c2BUþBuryatia00001BRussia#RU.CKþ0c2CKþChukotka00001BRussia#RU.DAþ0c2DAþDagestan00001FVietnam#VN.TQþ0c2TQþTuyen Quang000027CaymanIslands#KY.SOþ0c2SOþLittle Cayman000024Thailand#TH.SMþ0c2SMþSamut Songkhram000020Madagascar#MG.MAþ0c2MAþMahajanga00001EVietnam#VN.BPþ0c2BPþBinh Phuoc000017Nigeria#NG.OYþ0c2OYþOyo00001BEurope2#EU.HUþ0c2HUþHungary00001CTennessee#033þ0c2COþCrockett000017Colorado#125þ0c2YUþYuma00001CMontana#095þ0c2SWþStillwater00001FNewWorld#123þ0c2TMþTurkmenistan00001BNevada#033þ0c2WPþWhite Pine000018Iowa#037þ0c2CKþChickasaw00001AAfrica#042þ0c2SYþSeycelles000015Texas#373þ0c2POLþPolk00001ELouisiana#117þ0c2WAþWashington00001ENorthCarolina#029þ0c2CMþCamden000019Georgia#181þ0c2LCþLincoln000019Kentucky#217þ0c2TAþTaylor00001CIllinois#019þ0c2CHþChampaign00001DMississippi#127þ0c2SIþSimpson000019Europe#007þ0c2BGþBulgaria00001DPuertoRico#137þ0c2TBþToa Baja00001EPennsylvania#093þ0c2MUþMontour00001ATexas#011þ0c2ARSþArmstrong000017Idaho#029þ0c2CRþCaribou00001AArkansas#117þ0c2PRþPrairie00001AOregon#031þ0c2JEþJefferson00001BUSA#SCþ0c2SCþSouth Carolina000039Iceland#36þ0c2VIþVestur-&Iacute;safjar&eth;ars&yacute;sla000018China#30þ0c2GDþGuangdong00001ABangladesh#82þ0c2KHþKhulna000025Australia#NTþ0c2NTþNorthern Territory00001CSuriname#11þ0c2CMþCommewijne00001ATaiwan#11þ0c2LKþLienchiang00001ALithuania#65þ0c2VLþVilnius000018Indonesia#05þ0c2JAþJambi000020BritishColumbia#03þ0c2CAþCapital000018Romania#42þ0c2GRþGiurgiu00001BJamacia#13þ0c2SMþSaint Mary00001BColombia#14þ0c2GUVþGuaviare00001FNorthKorea#18þ0c2NAJþRas&#335;n000020Iraq#04þ0c2QAþAl-Q&#257;disiyyah00001BSouthKorea#12þ0c2INþIncheon000026MarshallIsland#MH.MH.ENþ0c2ENþEnewetak000024PolandCounties#PL.KP.TOþ0c2KTOþTorun00001BFiji#FJ.WE.LTþ0c2LTþLautoka000018Algeria#DZ.MLþ0c2MLþMila000019Angola#AO.HMþ0c2HMþHuambo00001CGuineaBissau#GW.OIþ0c2OIþOio000019Lesotho#LS.BEþ0c2BEþBerea00001AJordan#JO.ATþ0c2ATþTafilah000023Philippines#PH.MAþ0c2MAþMaguindanao00001CGabon#GA.WNþ0c2WNþWoleu-Ntem000018Niger#NE.NIþ0c2NIþNiamey00001CHongKong#HK.EAþ0c2EAþEastern000020Uganda#UG.NPþ0c2NPþNakapiripirit00001ERussia#RU.CLþ0c2CLþChelyabinsk000021Thailand#TH.SNþ0c2SNþSakon Nakhon00001BSyria#SY.RAþ0c2RAþAr Raqqah00001DNamibia#NA.OWþ0c2OWþOhangwena00001DWisconsin#109þ0c2SCþSt. Croix00001DNewWorld#124þ0c2UZþUzbekistan00001EWashington#069þ0c2WKþWahkiakum000018Indiana#171þ0c2WRþWarren00001AVirginia#113þ0c2MAþMadison00001DAfrica#043þ0c2SLþSierra Leone000015Kansas#165þ0c2RHþRush00001CIllinois#201þ0c2WBþWinnebago000018Missouri#121þ0c2MOþMacon00001DCalifornia#025þ0c2IMþImperial000019Texas#193þ0c2HAMþHamilton000017Ohio#155þ0c2TRþTrumbull000018Nebraska#125þ0c2NAþNance000019Georgia#001þ0c2APþAppling000018Europe#008þ0c2HYþCroatia00001CMinnesota#053þ0c2HEþHennepin00001EAustralia2#VICþ0c2VICþVictoria00001BKentucky#037þ0c2CBþCampbell000018Michigan#047þ0c2EMþEmmet000019USA#SDþ0c2SDþSouth Dakota00002FIceland#37þ0c2VSþVestur-Skaftafellss&yacute;sla000023USARegion#01þ0c2NEþNorthEast Region000015China#31þ0c2HAþHainan000015World#EUþ0c2EUþEurope00001CBangladesh#83þ0c2RJþRajshahi000019Suriname#12þ0c2CRþCoronie000016Taiwan#12þ0c2MLþMiaoli000020BritishColumbia#04þ0c2CRþCariboo000016Romania#43þ0c2IFþIlfov00001DJamacia#14þ0c2STþSaint Thomas000021Colombia#15þ0c2GUAþGuain&iacute;a000023Iraq#05þ0c2SUþAs-Sulaym&#257;niyyah00001FArgentina#01þ0c2BAþBuenos Aires00001FSouthKorea#13þ0c2KGþGyeonggi-do000020Europe2#EU.IMþ0c2IMþIsles of Man00001FSaudiArabia#SA.JFþ0c2JFþAl Jawf00001DHongKong#HK.WCþ0c2WCþWan Chai000020Sudan#SD.NKþ0c2NKþNorth Kurdufan00001FPhilippines#PH.MBþ0c2MBþMasbate00001DMongolia#MN.HGþ0c2HGþKhovsgol000022CoteDivoire#CI.NCþ0c2NCþN'zi-Comoe000022Cyprus2#CY.TCþ0c2TCþTurkish Cyprus00001BThailand#TH.RYþ0c2RYþRayong00001EThailand#TH.SOþ0c2SOþSukhothai000026TrinidadandTobago#TT.VIþ0c2VIþVictoria00001BVietnam#VN.BRþ0c2BRþBen Tre00001ETennessee#035þ0c2CMþCumberland00001DMontana#097þ0c2SGþSweet Grass00001ANewWorld#125þ0c2VNþVietnam000015Iowa#039þ0c2CLþClarke000018Africa#044þ0c2SOþSomalia000017Texas#375þ0c2POTþPotter00001BLouisiana#119þ0c2WEþWebster000020NorthCarolina#031þ0c2CRþCarteret000016Georgia#183þ0c2LOþLong000017Kentucky#219þ0c2TOþTodd00001CIllinois#021þ0c2CIþChristian00001BMississippi#129þ0c2SMþSmith00001FEurope#009þ0c2CZþCzech Republic000022PuertoRico#139þ0c2TJþTrujillo Alto000022Pennsylvania#095þ0c2NOþNorthampton000019Texas#013þ0c2ATAþAtascosa000016Idaho#031þ0c2CSþCassia00001AArkansas#119þ0c2PUþPulaski00001AOregon#033þ0c2JOþJosephine000027NorthAmerica_WOCentral#005þ0c2CAþCanada000023USARegion#02þ0c2NWþNorthWest Region000016China#32þ0c2SCþSichuan00001EBangladesh#84þ0c2CGþChittagong00001BSuriname#13þ0c2MAþMarowijne000016Taiwan#13þ0c2NTþNantou00001FIndonesia#07þ0c2JTþCentral Java000026BritishColumbia#05þ0c2CNþCentral Coast000019Jamacia#15þ0c2TRþTrelawny000018Colombia#16þ0c2HUIþHuila000018Norway#01þ0c2AKþAkershus000018Iraq#06þ0c2BBþB&#257;bil00001CArgentina#02þ0c2CTþCatamarca000024SouthKorea#14þ0c2KBþGyeongsangbuk-do00001DBhutan#BT.PMþ0c2PMþPemagatsel000031DemocraticRepublicoftheCongo#CD.BNþ0c2BNþBandundu00001AZambia#ZM.EAþ0c2EAþEastern00002APhilippines#PH.MCþ0c2MCþOccidental Mindoro000019Russia#RU.TYþ0c2TYþTyumen000028HongKong#HK.CWþ0c2CWþCentral and Western00001BRussia#RU.CNþ0c2CNþChechnya000022Vietnam#VN.TTþ0c2TTþThua Thien Hue00001AGuinea#GN.CKþ0c2CKþConakry000021Thailand#TH.SPþ0c2SPþSamut Prakan000019Nauru#NR.ARþ0c2ARþAnibare000018Wisconsin#111þ0c2SAþSauk000019NewWorld#126þ0c2TWþTaiwan000020Washington#071þ0c2WLþWalla walla000019Indiana#173þ0c2WIþWarrick00001AVirginia#115þ0c2MTþMathews00001DAfrica#045þ0c2ZAþSouth Africa000018Kansas#167þ0c2RSþRussell00001BIllinois#203þ0c2WFþWoodford00001AMissouri#123þ0c2MDþMadison000019California#027þ0c2INþInyo000019Texas#195þ0c2HANþHansford000019Ohio#157þ0c2TUþTuscarawas000019Nebraska#127þ0c2NEþNemaha00001AGeorgia#003þ0c2ATþAtkinson000018Europe#010þ0c2DKþDenmark00001BMinnesota#055þ0c2HUþHouston00001BKentucky#039þ0c2CRþCarlisle00001AMichigan#049þ0c2GEþGenesee000019SouthKorea#15þ0c2TGþDaegu000023USARegion#03þ0c2SEþSouthEast Region00002AUSASouthEastRegion#37þ0c2NCþNorth Carolina00001BBangladesh#85þ0c2BAþBarisal000021Finland#13þ0c2SFþSouthern Finland00001ASuriname#14þ0c2NIþNickerie000016Taiwan#14þ0c2PHþPenghu00001CIndonesia#08þ0c2JIþEast Java000029BritishColumbia#06þ0c2CKþCentral Kootenay000016Albania#40þ0c2BRþBerat00001DJamacia#16þ0c2WEþWestmoreland00001DColombia#17þ0c2LAGþLa Guajira00001ANorway#02þ0c2AAþAust-Agder00001AIraq#07þ0c2BGþBaghd&#257;d000018Argentina#03þ0c2CCþChaco000026PolandCounties#PL.DS.WRþ0c2DWRþWroclaw000023FrenchGuiana#GF.CY.OUþ0c2OUþOuanary00001BEurope2#EU.HYþ0c2HYþCroatia00001AEurope2#EU.JEþ0c2JEþJersey00001CBrunei#BN.TEþ0c2TEþTemburong00001ABhutan#BT.PNþ0c2PNþPunakha000027Philippines#PH.LNþ0c2LNþLanao del Norte00002APhilippines#PH.MDþ0c2MDþMisamis Occidental00001FMongolia#MN.GSþ0c2GSþGovisumber00001AChina2#CN.SAþ0c2SAþShaanxi000019Guinea#GN.DBþ0c2DBþDabola00001AThailand#TH.TGþ0c2TGþTrang00001DSyria#SY.RDþ0c2RDþRif Dimashq00001CTennessee#037þ0c2DAþDavidson000017Montana#099þ0c2TEþTeton00001CNewWorld#127þ0c2HKþHong Kong000013Iowa#041þ0c2CYþClay000016Africa#046þ0c2SDþSudan000019Texas#377þ0c2PREþPresidio000024Louisiana#121þ0c2WBþWest Baton Rouge000024Virginia#840þ0c2WTþWinchester (City)00001FNorthCarolina#033þ0c2CSþCaswell000019Georgia#185þ0c2LWþLowndes000018Kentucky#221þ0c2TRþTrigg000018Illinois#023þ0c2CLþClark00001BMississippi#131þ0c2STþStone000018Europe#011þ0c2EEþEstonia00001BPuertoRico#141þ0c2UTþUtuado000025Pennsylvania#097þ0c2NTþNorthumberland000017Texas#015þ0c2AUSþAustin000015Idaho#033þ0c2CLþClark00001BArkansas#121þ0c2RAþRandolph000018Oregon#035þ0c2KLþKlamath000020SouthKorea#16þ0c2CNþJeollanam-do000023USARegion#04þ0c2SWþSouthWest Region000017Peru#01þ0c2AMAþAmazonas000018Uruguay#01þ0c2ARþArtigas00001ABangladesh#86þ0c2SYþSylhet000020Finland#14þ0c2EFþEastern Finland000016Suriname#15þ0c2PRþPara000018Taiwan#15þ0c2PTþPingtung000029BritishColumbia#07þ0c2COþCentral Okanagan00001BAlbania#41þ0c2DIþDib&euml;r000019Jamacia#17þ0c2KIþKingston000018Iraq#08þ0c2DAþDah&#363;k000019Argentina#04þ0c2CHþChubut000019Fiji#FJ.WE.NDþ0c2NDþNandi000024MarshallIsland#MH.MH.ERþ0c2ERþErikub000020FrenchGuiana#GF.SL.MNþ0c2MNþMana00001CBurkinaFaso#BF.POþ0c2POþPoni00002AMorocco#MA.OLþ0c2OLþOued Ed Dahab-Lagouira00002FTanzania#TZ.ZSþ0c2ZSþZanzibar Central and South000019Brunei#BN.BEþ0c2BEþBelait00001EMacedonia#MK.NGþ0c2NGþNegotino00001CRussia#RU.VGþ0c2VGþVolgograd00001BUganda#UG.NTþ0c2NTþNtungamo00001ATunisia#TN.KBþ0c2KBþKebili00001CVietnam#VN.TVþ0c2TVþTra Vinh000017Nauru#NR.UAþ0c2UAþUaboe00001DThailand#TH.SRþ0c2SRþSaraburi00001EVietnam#VN.BUþ0c2BUþBinh Thuan00001BVietnam#VN.DAþ0c2DAþDa Nang000024SaoTomeandPrincipe#ST.LEþ0c2LEþLemba000018Nauru#NR.ATþ0c2ATþAnetan00001AWisconsin#113þ0c2SWþSawyer000018NewWorld#128þ0c2MOþMacau00001CWashington#073þ0c2WAþWhatcom00001CIndiana#175þ0c2WSþWashington00001EVirginia#117þ0c2MEþMecklenburg00001AAfrica#047þ0c2SZþSwaziland000017Kansas#169þ0c2SAþSaline000019Missouri#125þ0c2MEþMaries000019California#029þ0c2KEþKern000019Texas#197þ0c2HARþHardeman000026Virginia#660þ0c2HRþHarrisonburg (City)000014Ohio#159þ0c2UNþUnion00001BNebraska#129þ0c2NUþNuckolls000017Georgia#005þ0c2BAþBacon000018Europe#012þ0c2FIþFinland00001BMinnesota#057þ0c2HBþHubbard00001AKentucky#041þ0c2COþCarroll00001AMichigan#051þ0c2GLþGladwin000027NewCaledonia#NC.NO.KGþ0c2KGþKaala-Gomen000036SaintKittsandNevis#01þ0c2CCþChrist Church Nichola Town000021Argentina#05þ0c2CBþC&oacute;rdoba000025SouthKorea#17þ0c2GNþChungcheongnam-do000021USARegion#05þ0c2CRþCentral Region000015Peru#02þ0c2ANCþAncash00001AUruguay#02þ0c2CAþCanelones000020Finland#15þ0c2WFþWestern Finland00001CSuriname#16þ0c2PMþParamaribo000018Taiwan#16þ0c2THþTaichung00001DIndonesia#10þ0c2YOþYogyakarta000029BritishColumbia#08þ0c2CSþColumbia-Shuswap00001CAlbania#42þ0c2DRþDurr&euml;s000017Colombia#19þ0c2METþMeta000018Norway#04þ0c2BUþBuskerud00001FIraq#09þ0c2DQþDh&#299; Q&#257;r000016Mali#ML.SGþ0c2SGþSegou00001AZambia#ZM.WEþ0c2WEþWestern000029Macedonia#MK.MRþ0c2MRþMavrovo and Rostusa00001ASudan#SD.NOþ0c2NOþNorthern000019Uganda#UG.OKþ0c2OKþKoboko00001AVanuatu#VU.PMþ0c2PMþPenama00001AChina2#CN.SCþ0c2SCþSichuan000022FranceDepartment#FR.RHþ0c2RHþRhone00001DVietnam#VN.VCþ0c2VCþVinh Phuc000021Thailand#TH.SSþ0c2SSþSamut Sakhon000021Vietnam#VN.BVþ0c2BVþBaRia-VungTau00001DVietnam#VN.DBþ0c2DBþDien Bien00001BTennessee#039þ0c2DEþDecatur000017Montana#101þ0c2TOþToole00001ANewWorld#129þ0c2ALþAlbania000016Iowa#043þ0c2CTþClayton000019Africa#048þ0c2TZþTanzania000016Texas#379þ0c2RAIþRains000020Louisiana#123þ0c2WCþWest Carroll00001FNorthCarolina#035þ0c2CTþCatawba000019Georgia#187þ0c2LPþLumpkin00001AKentucky#223þ0c2TIþTrimble000017Illinois#025þ0c2CYþClay00001FMississippi#133þ0c2SUþSunflower000017Europe#013þ0c2FRþFrance00001EPuertoRico#143þ0c2VAþVega Alta00001CPennsylvania#099þ0c2PEþPerry000017Texas#017þ0c2BAIþBailey00001AIdaho#035þ0c2CWþClearwater00001EArkansas#123þ0c2SFþSt. Francis000015Oregon#037þ0c2LAþLake000032SaintKittsandNevis#02þ0c2ASþSaint Anne Sandy Point00001DArgentina#06þ0c2CNþCorrientes00001BSouthKorea#18þ0c2KJþGwangju000014China#36þ0c2TBþTibet000017Peru#03þ0c2APUþApurimac00001CUruguay#03þ0c2CLþCerro Largo00001BSuriname#17þ0c2SAþSaramacca000022USANorthWestRegion#02þ0c2AKþAlaska00001FTaiwan#17þ0c2TGþTaichung (City)000022Indonesia#11þ0c2KBþWest Kalimantan000029BritishColumbia#09þ0c2CMþComox-Strathcona000018Albania#43þ0c2ELþElbasan000020Colombia#20þ0c2NARþNari&ntilde;o000018Norway#05þ0c2FIþFinnmark00001EIraq#10þ0c2DIþDiy&#257;l&#257;00002DSierraLeone#SL.WE.WRþ0c2WRþWestern Area Rural000027FrenchGuiana#GF.SL.MPþ0c2MPþMaripasoula000038NorthWestTerritories#CA.NT.WBþ0c2WBþWood Buffalo Country00001CMauritania#MR.ADþ0c2ADþAdrar000018Jordan#JO.AZþ0c2AZþZarqa00001DMacedonia#MK.NIþ0c2NIþVinitsa000020CoteDivoire#CI.MRþ0c2MRþMarahoue00001AGabon#GA.ESþ0c2ESþEstuaire00001BChina2#CN.SDþ0c2SDþShandong000018Guinea#GN.COþ0c2COþCoyah000020Thailand#TH.STþ0c2STþSurat Thani00001BLibya#LY.BUþ0c2BUþAl Butnan000018Iran#IR.BSþ0c2BSþBushehr00001AVietnam#VN.CMþ0c2CMþCa Mau00001BVietnam#VN.DCþ0c2DCþDac Lac00001BWisconsin#115þ0c2SHþShawano00001ANewWorld#130þ0c2ADþAndorra00001CWashington#075þ0c2WHþWhitman000017Indiana#177þ0c2WYþWayne00001CVirginia#119þ0c2MIþMiddlesex000015Africa#049þ0c2TGþTogo000016Kansas#171þ0c2SCþScott000019Missouri#127þ0c2MAþMarion00001ACalifornia#031þ0c2KIþKings000017Texas#199þ0c2HADþHardin000017Ohio#161þ0c2VWþVan Wert00001CNetherland#001þ0c2DRþDrenthe000017Nebraska#131þ0c2OTþOtoe000017Georgia#007þ0c2BKþBaker000018Europe#014þ0c2DEþGermany00001AMinnesota#059þ0c2ISþIsanti000019Kentucky#043þ0c2CTþCarter00001AMichigan#053þ0c2GOþGogebic000033SaintKittsandNevis#03þ0c2GBþSaint George Basseterre000023Argentina#07þ0c2DFþDistrito Federal00001BSouthKorea#19þ0c2TJþDaejeon000017Peru#04þ0c2AREþArequipa000018Uruguay#04þ0c2COþColonia00001CSuriname#18þ0c2SIþSipaliwini000016Taiwan#18þ0c2TAþTainan000023Indonesia#12þ0c2KSþSouth Kalimantan000028BritishColumbia#10þ0c2CVþCowichan Valley000015Albania#44þ0c2FRþFier000025Colombia#21þ0c2NSAþNorte de Santander000017Norway#06þ0c2HEþHedmark000018Iraq#11þ0c2ARþArb&#299;l000025CaymanIslands#KY.CBþ0c2CBþCayman Brac00001EThailand#TH.ATþ0c2ATþAng Thong00001ACongo#CG.PLþ0c2PLþPlateaux00001BEurope2#EU.ISþ0c2ISþIceland000019Algeria#DZ.MSþ0c2MSþMsila00001DLiberia#LR.RGþ0c2RGþRiver Gee000017Bhutan#BT.PRþ0c2PRþParo000019Laos#LA.HOþ0c2HOþHouaphan000017Benin#BJ.OUþ0c2OUþOueme00001FVietnam#VN.TYþ0c2TYþThai Nguyen00001AThailand#TH.SUþ0c2SUþSurin000018Thailand#TH.TKþ0c2TKþTak00001BVietnam#VN.CNþ0c2CNþCan Tho00001ATennessee#041þ0c2DKþDeKalb00001AMontana#103þ0c2TRþTreasure00001ANewWorld#131þ0c2ATþAustria000016Iowa#045þ0c2CNþClinton000018Texas#381þ0c2RANþRandall000022Louisiana#125þ0c2WFþWest Feliciana00001FNorthCarolina#037þ0c2CHþChatham00001AGeorgia#189þ0c2MCþMcduffie000018Kentucky#225þ0c2UNþUnion00001ENetherland#002þ0c2FLþFlevoland00001AIllinois#027þ0c2CNþClinton000022Mississippi#135þ0c2TAþTallahatchie000017Europe#015þ0c2GRþGreece00001EPuertoRico#145þ0c2VBþVega Baja000023Pennsylvania#101þ0c2PHþPhiladelphia000018Texas#019þ0c2BANþBandera000016Idaho#037þ0c2CUþCuster000019Arkansas#125þ0c2SAþSaline000015Oregon#039þ0c2LEþLane00002FMadagascarRegions#MG.FI.AMþ0c2AMþAmoron'i Mania000033SaintKittsandNevis#04þ0c2GGþSaint George Gingerland000024Argentina#08þ0c2ERþEntre R&iacute;os000024SouthKorea#20þ0c2KNþGyeongsangnam-do000017Peru#05þ0c2AYAþAyacucho000018Uruguay#05þ0c2DUþDurazno000018Suriname#19þ0c2WAþWanica00001DTaiwan#19þ0c2TNþTainan (City)000025Indonesia#13þ0c2KTþCentral Kalimantan000026BritishColumbia#11þ0c2EKþEast Kootenay000021Albania#45þ0c2GJþGjirokast&euml;r00001BColombia#22þ0c2PUTþPutumayo000019Norway#07þ0c2HOþHordaland000015Iraq#12þ0c2KAþKarbala000019Europe2#EU.ITþ0c2ITþItaly000022Tanzania#TZ.ZWþ0c2ZWþZanzibar West00001DUzbekistan#UZ.JIþ0c2JIþJizzax000015UK7#UK.WAþ0c2WAþWales000025Philippines#PH.LSþ0c2LSþLanao del Sur00002FCentralAmerica2#CE.AGþ0c2AGþAntigua and Barbuda00001CMongolia#MN.HNþ0c2HNþKhentii000018Uganda#UG.PDþ0c2PDþPader000019Benin#BJ.PLþ0c2PLþPlateau000017Tunisia#TN.KFþ0c2KFþKef00001CLibya#LY.BWþ0c2BWþBani Walid00001DWisconsin#117þ0c2SEþSheboygan00001ANewWorld#132þ0c2BYþBelarus00001BWashington#077þ0c2YAþYakima000017Indiana#179þ0c2WEþWells00001DVirginia#121þ0c2MOþMontgomery000018Africa#051þ0c2TNþTunisia000019Kansas#173þ0c2SGþSedgwick000019Missouri#129þ0c2MCþMercer000019California#033þ0c2LAþLake000017Texas#201þ0c2HASþHarris000015Ohio#163þ0c2VIþVinton00001ENetherland#003þ0c2FRþFriesland000019Nebraska#133þ0c2PAþPawnee000019Georgia#009þ0c2BDþBaldwin000018Europe#016þ0c2HUþHungary00001AMinnesota#061þ0c2ITþItasca000018Kentucky#045þ0c2CSþCasey000021Michigan#055þ0c2GTþGrand Traverse000027MadagascarRegions#MG.TL.ADþ0c2ADþAndroy000030SaintKittsandNevis#05þ0c2JWþSaint James Windward00001AArgentina#09þ0c2FMþFormosa000019SouthKorea#21þ0c2ULþUlsan000018Peru#06þ0c2CAJþCajamarca000017Uruguay#06þ0c2FSþFlores000013USA#AKþ0c2AKþAlaska000016Taiwan#20þ0c2TPþTaipei000022Indonesia#14þ0c2KIþEast Kalimantan000026BritishColumbia#12þ0c2FVþFraser Valley000022Albania#46þ0c2KOþKor&ccedil;&euml;000021Colombia#23þ0c2QUIþQuind&iacute;o000026Norway#08þ0c2MRþM&oslash;re og Romsdal000017Iraq#13þ0c2TSþAt-Ta'mim00002DSierraLeone#SL.WE.WUþ0c2WUþWestern Area Urban00002CDistrictofColumbia#US.DC.SWþ0c2SWþSouth West000015Nauru#NR.BOþ0c2BOþBoe00001EThailand#TH.CBþ0c2CBþChon Buri000018Mali#ML.SKþ0c2SKþSikasso00001DLiberia#LR.RIþ0c2RIþRivercess000021Kazakhstan#KZ.QGþ0c2QGþQaraghandy00001BRussia#RU.VLþ0c2VLþVladimir000020SolomonIsland#SB.TEþ0c2TEþTemotu00001BTennessee#043þ0c2DIþDickson000018Montana#105þ0c2VAþValley00001ANewWorld#133þ0c2BEþBelgium000017Iowa#047þ0c2CFþCrawford000017Africa#052þ0c2UGþUganda000017Texas#383þ0c2REAþReagan000018Louisiana#127þ0c2WIþWinn000020NorthCarolina#039þ0c2CEþCherokee00001AGeorgia#191þ0c2MIþMcintosh000019Kentucky#227þ0c2WAþWarren00001FNetherland#004þ0c2GEþGelderland000018Illinois#029þ0c2COþColes00001AMississippi#137þ0c2TEþTate000018Europe#017þ0c2ISþIceland00001CPuertoRico#147þ0c2VQþVieques00001BPennsylvania#103þ0c2PIþPike000018Texas#021þ0c2BASþBastrop000016Idaho#039þ0c2ELþElmore000018Arkansas#127þ0c2SCþScott000018Oregon#041þ0c2LIþLincoln000036NewfoundlandandLabrador#CA.NF.LAþ0c2LAþLabrador Region000031SaintKittsandNevis#06þ0c2JCþSaint John Capesterre000018Argentina#10þ0c2JYþJujuy000015Peru#07þ0c2CALþCallao000018Uruguay#07þ0c2FDþFlorida000014USA#ALþ0c2ALþAlabama00001DTaiwan#21þ0c2TCþTaipei (City)00001AIndonesia#15þ0c2LAþLampung00002BBritishColumbia#13þ0c2FGþFraser-Fort George00001BAlbania#47þ0c2KUþKuk&euml;s00001CColombia#24þ0c2RISþRisaralda000021EnglandRegion#01þ0c2NEþNorth East000018Norway#09þ0c2NOþNordland000019Iraq#14þ0c2MAþMays&#257;n000027Alberta#CA.AB.CRþ0c2CRþCanadian Rockies000021Thailand#TH.CCþ0c2CCþChachoengsao00001BMali#ML.TBþ0c2TBþTombouctou00001EEthiopia#ET.DDþ0c2DDþDire Dawa000016Congo#CG.POþ0c2POþPool00001CMorocco#MA.ORþ0c2ORþOriental000022Algeria#DZ.OBþ0c2OBþOum el-Bouaghi000017Mali#ML.BAþ0c2BAþBamako00001CMacedonia#MK.OCþ0c2OCþKocani000020Philippines#PH.LUþ0c2LUþLa Union000025CoteDivoire#CI.MVþ0c2MVþMoyen-Cavally00001CRussia#RU.CVþ0c2CVþChuvashia00001BChina2#CN.SHþ0c2SHþShanghai00001DGuinea#GN.DIþ0c2DIþDinguiraye00001EThailand#TH.UDþ0c2UDþUttaradit00001ASyria#SY.QUþ0c2QUþQuneitra00002CIran#IR.CMþ0c2CMþChahar Mahall and Bakhtiari000021FranceDepartment#FR.ABþ0c2ABþAube00001AWisconsin#119þ0c2TAþTaylor000029NewWorld#134þ0c2BHþBosnia and Herzegovina000017Indiana#181þ0c2WHþWhite00001FAfrica#053þ0c2WSþWestern Sahara000017Kansas#175þ0c2SWþSeward000019Missouri#131þ0c2MLþMiller00001BCalifornia#035þ0c2LSþLassen000019Texas#203þ0c2HRSþHarrison000015Ohio#165þ0c2WAþWarren00001ENetherland#005þ0c2GRþGroningen00001ANebraska#135þ0c2PEþPerkins000017Georgia#011þ0c2BNþBanks000018Europe#018þ0c2IEþIreland00001BMinnesota#063þ0c2JAþJackson00001CKentucky#047þ0c2CHþChristian00001AMichigan#057þ0c2GAþGratiot000022NewCaledonia#NC.NO.KMþ0c2KMþKoumac000031MadagascarRegions#MG.TL.AFþ0c2AFþAtsimo-Andrefana00002ESaintKittsandNevis#07þ0c2JFþSaint John Figtree00001BArgentina#11þ0c2LPþLa Pampa000014Peru#08þ0c2CUSþCusco00001AUruguay#08þ0c2LAþLavalleja00002AUSASouthEastRegion#45þ0c2SCþSouth Carolina000017Taiwan#22þ0c2TTþTaitung00002ABritishColumbia#14þ0c2GVþGreater Vancouver00001BAlbania#48þ0c2LEþLezh&euml;000034Colombia#25þ0c2SAPþSan Andr&eacute;s and Providencia000021EnglandRegion#02þ0c2NWþNorth West00001ENorway#10þ0c2NTþNord-Trondelag00001EIraq#15þ0c2NIþN&#299;naw&#257;00001BMacedonia#MK.ODþ0c2ODþOhrid000025Singapore#SG.NOþ0c2NOþNorth Singapore000018China2#CN.AHþ0c2AHþAnhui000015Oregon#043þ0c2LNþLinn000018Tennessee#045þ0c2DYþDyer00001BMontana#107þ0c2WHþWheatland00001BNewWorld#135þ0c2BGþBulgaria00001CMaine#001þ0c2ANþAndroscoggin000015Iowa#049þ0c2DAþDallas000017Africa#054þ0c2ZMþZambia000015Texas#385þ0c2RELþReal000017Indiana#001þ0c2ADþAdams00001ENorthCarolina#041þ0c2COþChowan000017Georgia#193þ0c2MAþMacon00001DKentucky#229þ0c2WSþWashington00001CNetherland#006þ0c2LIþLimburg000017Illinois#031þ0c2CKþCook00001CMississippi#139þ0c2TPþTippah000016Europe#019þ0c2ITþItaly00001DPuertoRico#149þ0c2VLþVillalba00001DPennsylvania#105þ0c2POþPotter000017Texas#023þ0c2BAYþBaylor000018Idaho#041þ0c2FRþFranklin000019Arkansas#129þ0c2SEþSearcy000027NewCaledonia#NC.NO.KNþ0c2KNþKon&eacute;00002CSaintKittsandNevis#08þ0c2MCþSaint Mary Cayon00001BArgentina#12þ0c2LRþLa Rioja00001CPuertoRico#01þ0c2AJþAdjuntas00001BPeru#09þ0c2HUVþHuancavelica00001AUruguay#09þ0c2MAþMaldonado000017Taiwan#23þ0c2TYþTaoyuan000025Indonesia#17þ0c2NBþWest Nusa Tenggara000028BritishColumbia#15þ0c2KSþKitimat-Stikine00001DAlbania#49þ0c2SHþShkod&euml;r00001CColombia#26þ0c2SANþSantander00001FScotlandRegion#78þ0c2BOþBorders00002FEnglandRegion#03þ0c2YHþYorkshire and the Humber000017Norway#11þ0c2OPþOppland000025ElSalvador#01þ0c2AHþAhuachap&aacute;n000018Iraq#16þ0c2WAþW&#257;sit000028Alberta#CA.AB.EAþ0c2EAþEdmonton and Area000021FranceDepartment#FR.ADþ0c2ADþAude000020SriLanka#LK.PRþ0c2PRþPolonnaruwa000023Brunei#BN.BMþ0c2BMþBrunei and Muara000020Philippines#PH.NCþ0c2NCþCotabato00001ARussia#RU.VOþ0c2VOþVologda00001DSamoa #WS.GEþ0c2GEþGagaemauga000024Kiribati#KI.GIþ0c2GIþGilbert Islands00001FGuyana#GY.BAþ0c2BAþBarima-Waini00001AMalawi#MW.KRþ0c2KRþKaronga00002BFranceDepartment#FR.SEþ0c2SEþSeine et Marne000027NorthAmerica_WOCentral#016þ0c2MXþMexico00001FWisconsin#121þ0c2TRþTrempealeau00001ANewWorld#136þ0c2HYþCroatia000019Indiana#183þ0c2WLþWhitley000019Virginia#125þ0c2NEþNelson000019Africa#055þ0c2ZWþZimbabwe000018Kansas#177þ0c2SNþShawnee00001FMexico#001þ0c2AGþAguascalientes00001EMissouri#133þ0c2MSþMississippi000020California#037þ0c2LOþLos Angeles000018Texas#205þ0c2HRTþHartley000019Ohio#167þ0c2WSþWashington000022Netherland#007þ0c2NOþNoord-Brabant000019Nebraska#137þ0c2PHþPhelps000018Georgia#013þ0c2BWþBarrow000017Europe#020þ0c2LVþLatvia00001BMinnesota#065þ0c2KAþKanabec000018Kentucky#049þ0c2CKþClark00001CMichigan#059þ0c2HIþHillsdale000016Iraq#17þ0c2NAþAn-Najaf000031SaintKittsandNevis#09þ0c2PPþSaint Paul Capesterre00001AArgentina#13þ0c2MZþMendoza00001DGrenada#01þ0c2ANþSaint Andrew000016Peru#10þ0c2HUCþHuanuco00001BUruguay#10þ0c2MOþMontevideo000025USASouthEastRegion#47þ0c2TNþTennessee000015Taiwan#24þ0c2ILþYilan000025Indonesia#18þ0c2NTþEast Nusa Tenggara00002ABritishColumbia#16þ0c2KBþKootenay Boundary00001CAlbania#50þ0c2TRþTiran&euml;000018Colombia#27þ0c2SUCþSucre00001FScotlandRegion#79þ0c2CEþCentral000024EnglandRegion#04þ0c2EMþEast Midlands000014Norway#12þ0c2OSþOslo000022ElSalvador#02þ0c2CAþCaba&ntilde;as000022Fiji#FJ.WE.NNþ0c2NNþNadroga-Navosa00001ANigeria#NG.RIþ0c2RIþRivers000028Philippines#PH.MNþ0c2MNþMisamis Oriental000029Philippines#PH.NDþ0c2NDþNegros Occidental000024CentralAmerica2#CE.BBþ0c2BBþBarbados00001AMalawi#MW.KSþ0c2KSþKasungu00001BMalawi#MW.LIþ0c2LIþLilongwe000019China2#CN.TAþ0c2TAþTaiwan000019Guinea#GN.DLþ0c2DLþDalaba000018Oregon#045þ0c2MAþMalheur00001BTennessee#047þ0c2FAþFayette000018Montana#109þ0c2WIþWibaux000021NewWorld#137þ0c2CZþCzech Republic000019Maine#003þ0c2ARþAroostook000014Iowa#051þ0c2DVþDavis000017Africa#056þ0c2GMþGambia00001ATexas#387þ0c2REDþRed River000017Indiana#003þ0c2ALþAllen000020Mexico#002þ0c2BAþBaja California00001CNorthCarolina#043þ0c2CYþClay000019Georgia#195þ0c2MDþMadison000018Kentucky#231þ0c2WYþWayne000022Netherland#008þ0c2NHþNoord-Holland00001BIllinois#033þ0c2CFþCrawford000020Mississippi#141þ0c2TIþTishomingo00001EEurope#021þ0c2LIþLiechtenstein00001CPuertoRico#151þ0c2YBþYabucoa000021Pennsylvania#107þ0c2SCþSchuylkill000014Texas#025þ0c2BEEþBee000017Idaho#043þ0c2FEþFremont00001CArkansas#131þ0c2SBþSebastian000033PrinceEdwardIsland#CA.PE.CSþ0c2CSþCharlotte's Shore000020ElSalvador#03þ0c2CHþChalatenango000024Iraq#18þ0c2SDþSal&#257;h ad-D&#299;n000032SaintKittsandNevis#10þ0c2PLþSaint Paul Charlestown00001BArgentina#14þ0c2MNþMisiones00001APuertoRico#03þ0c2ADþAguada00001CGrenada#02þ0c2DAþSaint David000012Peru#11þ0c2ICAþIca000020Uruguay#11þ0c2PAþPaysand&uacute;000016Taiwan#25þ0c2YLþYunlin000029BritishColumbia#17þ0c2MWþMount Waddington00001BAlbania#51þ0c2VLþVlor&euml;000019Colombia#28þ0c2TOLþTolima00002DScotlandRegion#80þ0c2DGþDumfries and Galloway000024EnglandRegion#05þ0c2WMþWest Midlands00001ENorway#13þ0c2OTþ&Oslash;stfold000025SaoTomeandPrincipe#ST.LOþ0c2LOþLobata000021Burma#MM.YAþ0c2YAþYangon Division00001FLesotho#LS.TTþ0c2TTþThaba-Tseka000023Philippines#PH.NEþ0c2NEþNueva Ecija00001BTanzania#TZ.IRþ0c2IRþIringa00001DVietnam#VN.VLþ0c2VLþVinh Long00001APalau#PW.KAþ0c2KAþKayangel00001AWisconsin#123þ0c2VEþVernon00001ANewWorld#138þ0c2DKþDenmark00001BVirginia#127þ0c2NKþNew Kent000016Africa#057þ0c2CGþCongo000019Kansas#179þ0c2SDþSheridan000024Mexico#003þ0c2BCþBaja California Sur00001BMissouri#135þ0c2MIþMoniteau00001BCalifornia#039þ0c2MAþMadera000018Texas#207þ0c2HSKþHaskell000022Virginia#670þ0c2HOþHopewell (City)000014Ohio#169þ0c2WYþWayne00001FNetherland#009þ0c2OVþOverijssel000019Nebraska#139þ0c2PIþPierce000018Georgia#015þ0c2BTþBartow00001AEurope#022þ0c2LTþLithuania00001DMinnesota#067þ0c2KNþKandiyohi000017Kentucky#051þ0c2CYþClay00001BMichigan#061þ0c2HOþHoughton000018Norway#14þ0c2ROþRogaland000024ElSalvador#04þ0c2CUþCuscatl&aacute;n000032SaintKittsandNevis#11þ0c2PBþSaint Peter Basseterre000021Argentina#15þ0c2NQþNeuqu&eacute;n00001DGrenada#03þ0c2GEþSaint George000014Peru#12þ0c2JUNþJunin00001AUruguay#12þ0c2RNþRio Negro000020BritishColumbia#18þ0c2NAþNanaimo000022Colombia#29þ0c2VACþValle del Cauca00001CScotlandRegion#81þ0c2FIþFife00001BEnglandRegion#06þ0c2EAþEast000023FranceDepartment#FR.AGþ0c2AGþAriege000017Nauru#NR.BUþ0c2BUþBuada000025CaymanIslands#KY.BTþ0c2BTþBodden Town00001DThailand#TH.BRþ0c2BRþBuri Ram000023Somalia#SO.WOþ0c2WOþWoqooyi Galbeed00001BAlgeria#DZ.OGþ0c2OGþOuargla000022PapuaNewGuinea#PG.WEþ0c2WEþWestern00001BRussia#RU.VRþ0c2VRþVoronezh00001ALibya#LY.WAþ0c2WAþAl Wahah000019Malawi#MW.LKþ0c2LKþLikoma00001BMalawi#MW.MAþ0c2MAþMachinga000022Massachusetts#001þ0c2BAþBarnstable000017Oregon#047þ0c2MRþMarion00001CTennessee#049þ0c2FEþFentress00001DMontana#111þ0c2YSþYellowstone00001ANewWorld#139þ0c2EEþEstonia00001AMaine#005þ0c2CUþCumberland000018Oklahoma#001þ0c2ADþAdair000016Iowa#053þ0c2DEþDecatur00001AAfrica#058þ0c2MUþMauritius000017Texas#389þ0c2REVþReeves00001DIndiana#005þ0c2BAþBartholomew000019Mexico#004þ0c2CAþCampeche000021NorthCarolina#045þ0c2CVþCleveland000018Georgia#197þ0c2MRþMarion00001AKentucky#233þ0c2WBþWebster00001CNetherland#010þ0c2UTþUtrecht00001DIllinois#035þ0c2CMþCumberland00001CMississippi#143þ0c2TUþTunica00001BEurope#023þ0c2LUþLuxembourg00001APuertoRico#153þ0c2YUþYauco00001DPennsylvania#109þ0c2SNþSnyder000015Texas#027þ0c2BELþBell00001ENewHampshire#001þ0c2BEþBelknap000013Idaho#045þ0c2GEþGem000019Arkansas#133þ0c2SVþSevier00001DEnglandRegion#07þ0c2LOþLondon000020Norway#15þ0c2SOþSogn og Fjordane00001FElSalvador#05þ0c2LIþLa Libertad000030SaintKittsandNevis#12þ0c2TLþSaint Thomas Lowland00001CArgentina#16þ0c2RNþRio Negro00001DPuertoRico#05þ0c2ALþAguadilla00001BGrenada#04þ0c2JOþSaint John00001APeru#13þ0c2LALþLa Libertad000017Uruguay#13þ0c2RVþRivera000015USA#ARþ0c2ARþArkansas000023Indonesia#21þ0c2STþCentral Sulawesi000027BritishColumbia#19þ0c2NOþNorth Okanagan000020Colombia#30þ0c2VAUþVaup&eacute;s000020ScotlandRegion#82þ0c2GPþGrampian000025PolandCounties#PL.WN.EMþ0c2WEMþElblag000024FranceDepartment#FR.AHþ0c2AHþArdeche00001FMacedonia#MK.NSþ0c2NSþNovo Selo000022Philippines#PH.MQþ0c2MQþMarinduque00001AUganda#UG.PLþ0c2PLþPallisa00001FSamoa #WS.GIþ0c2GIþGagaifomauga000019Thailand#TH.TTþ0c2TTþTrat000019Wisconsin#125þ0c2VIþVilas00001ANewWorld#140þ0c2FIþFinland000018Kansas#181þ0c2SHþSherman000018Mexico#005þ0c2CHþChiapas000019Missouri#137þ0c2MRþMonroe00001ACalifornia#041þ0c2MRþMarin000015Texas#209þ0c2HYSþHays000017Ohio#171þ0c2WIþWilliams00001CNetherland#011þ0c2ZEþZeeland000019Nebraska#141þ0c2PLþPlatte00001AGeorgia#017þ0c2BHþBen hill00001AEurope#024þ0c2MKþMacedonia00001BMinnesota#069þ0c2KIþKittson00001AKentucky#053þ0c2CNþClinton000018Michigan#063þ0c2HUþHuron000025MadagascarRegions#MG.AS.SVþ0c2SVþSava000021EnglandRegion#08þ0c2SEþSouth East00002BNorway#16þ0c2STþS&oslash;r-Tr&oslash;ndelag00001AElSalvador#06þ0c2PAþLa Paz000036SaintKittsandNevis#13þ0c2TMþSaint Thomas Middle Island000018Argentina#17þ0c2SAþSalta00001BGrenada#05þ0c2MAþSaint Mark000019Peru#14þ0c2LAMþLambayeque000016Uruguay#14þ0c2ROþRocha000026Indonesia#22þ0c2SGþSouth East Sulawesi000029BritishColumbia#20þ0c2NRþNorthern Rockies00001AColombia#31þ0c2CIDþVichada000020ScotlandRegion#83þ0c2HIþHighland000026NovaScotia#CA.NS.MDþ0c2MDþMarine Drive00001AFiji#FJ.CE.NMþ0c2NMþNamosi000020FranceDepartment#FR.AIþ0c2AIþAin00001CVietnam#VN.DNþ0c2DNþDong Nai000020Kazakhstan#KZ.QOþ0c2QOþQyzylorda000018Nigeria#NG.ABþ0c2ABþAbia00001ASenegal#SN.FKþ0c2FKþFatick00001DUzbekistan#UZ.KHþ0c2KHþXorazm000028Philippines#PH.MRþ0c2MRþOriental Mindoro00001DSerbia#RS.ZCþ0c2ZCþWest Backa00001AMalawi#MW.MCþ0c2MCþMchinji000020Iran#IR.WAþ0c2WAþWest Azarbaijan000021Massachusetts#003þ0c2BEþBerkshire000017Oregon#049þ0c2MOþMorrow00001CTennessee#051þ0c2FRþFranklin000019NewWorld#141þ0c2FRþFrance000018Maine#007þ0c2FRþFranklin00001AOklahoma#003þ0c2ALþAlfalfa000017Iowa#055þ0c2DLþDelaware000016Alaska#220þ0c2SIþSitka000017Delaware#001þ0c2KEþKent000018Texas#391þ0c2REFþRefugio000018Indiana#007þ0c2BEþBenton00001AMexico#006þ0c2CIþChihuahua000020NorthCarolina#047þ0c2CUþColumbus00001CGeorgia#199þ0c2MEþMeriwether000016Kansas#001þ0c2ALþAllen00001AKentucky#235þ0c2WHþWhitley000021Netherland#012þ0c2ZUþZuid-Holland000019Illinois#037þ0c2DEþDeKalb00001BMississippi#145þ0c2UNþUnion000016Europe#025þ0c2MTþMalta00001FPennsylvania#111þ0c2SOþSomerset000016Texas#029þ0c2BEXþBexar00001ENewHampshire#003þ0c2CAþCarroll000017Idaho#047þ0c2GOþGooding000018Arkansas#135þ0c2SHþSharp000021EnglandRegion#09þ0c2SWþSouth West000018Norway#17þ0c2TEþTelemark000023ElSalvador#07þ0c2UNþLa Uni&oacute;n00001BArgentina#18þ0c2SJþSan Juan000020PuertoRico#07þ0c2ABþAguas Buenas00001EGrenada#06þ0c2PAþSaint Patrick000013Peru#15þ0c2LIMþLima000016Uruguay#15þ0c2SAþSalto000022Honduras#01þ0c2ATþAtl&aacute;ntida00002DBritishColumbia#21þ0c2OSþOkanagan-Similkameen00001BColombia#32þ0c2CASþCasanare00001FScotlandRegion#84þ0c2LOþLothian000021SierraLeone#SL.SO.BNþ0c2BNþBonthe000020Iran#IR.EAþ0c2EAþEast Azarbaijan00001CVietnam#VN.DOþ0c2DOþDac Nong00001DSriLanka#LK.PXþ0c2PXþPuttalam00001DMauritania#MR.TGþ0c2TGþTagant00002CPapuaNewGuinea#PG.WHþ0c2WHþWestern Highlands000021HongKong#HK.WTþ0c2WTþWong Tai Sin00001FPapuaNewGuinea#PG.EGþ0c2EGþEnga00001BYemen#YE.HDþ0c2HDþHadramawt00001FLibya#LY.WDþ0c2WDþWadi al Hayat000021FranceDepartment#FR.TAþ0c2TAþTarn00001CWisconsin#127þ0c2WAþWalworth00001ANewWorld#142þ0c2DEþGermany00001EVirginia#131þ0c2NTþNorthampton000016Kansas#183þ0c2SMþSmith000025Mexico#007þ0c2COþCoahuila de Zaragoza00001DMissouri#139þ0c2MYþMontgomery00001DCalifornia#043þ0c2MIþMariposa000019Texas#211þ0c2HEPþHemphill000013Ohio#173þ0c2WOþWood000017Nebraska#143þ0c2POþPolk000019Georgia#019þ0c2BIþBerrien000018Europe#026þ0c2MDþMoldova00001FMinnesota#071þ0c2KOþKoochiching00001DKentucky#055þ0c2CDþCrittenden000019Michigan#065þ0c2INþIngham000026MadagascarRegions#MG.AV.ITþ0c2ITþItasy000015Norway#18þ0c2TRþTroms000022ElSalvador#08þ0c2MOþMoraz&aacute;n000032SaintKittsandNevis#15þ0c2TPþTrinity Palmetto Point00001BArgentina#19þ0c2SLþSan Luis000015Peru#16þ0c2LORþLoreto000019Uruguay#16þ0c2SJþSan Jose000017USA#CAþ0c2CAþCalifornia000027Croatia#01þ0c2BBþBjelovarsko-Bilogorska00001BHonduras#02þ0c2CHþCholuteca00001FIndonesia#24þ0c2SBþWest Sumatra000024BritishColumbia#22þ0c2PRþPeace River00001FColombia#33þ0c2CUNþCundinamarca00001DSierraLeone#SL.SO.BOþ0c2BOþBo000025PolandCounties#PL.PK.KMþ0c2PKMþKrosno00001DNunavut#CA.NU.QKþ0c2QKþBaffin00001BBotswana#BW.GHþ0c2GHþGhanzi00001CNauru#NR.DEþ0c2DEþDenigomodu000019Brunei#BN.TUþ0c2TUþTutong000019Liberia#LR.SIþ0c2SIþSinoe00001BNigeria#NG.ADþ0c2ADþAdamawa000025Panama#PA.KMþ0c2KMþKuna de Madungandi00001DMacedonia#MK.NVþ0c2NVþNovatsi000029Philippines#PH.MTþ0c2MTþMountain Province00002CPapuaNewGuinea#PG.EHþ0c2EHþEastern Highlands000017Uganda#UG.OYþ0c2OYþOyam00002BFranceDepartment#FR.SLþ0c2SLþSaone et Loire000032FranceDepartment#FR.TBþ0c2TBþTerritoire de Belfort00001FMassachusetts#005þ0c2BRþBristol00001AOregon#051þ0c2MUþMultnomah00002ENorthAmerica_WOCentral#023þ0c2USþUnited States00001ATennessee#053þ0c2GIþGibson000019NewWorld#143þ0c2GRþGreece000017Maine#009þ0c2HAþHancock000018Oklahoma#005þ0c2ATþAtoka000019Iowa#057þ0c2DMþDes Moines00001DDelaware#003þ0c2NEþNew castle000018Texas#393þ0c2ROBþRoberts00001BIndiana#009þ0c2BLþBlackford000017Mexico#008þ0c2CLþColima00001ENorthCarolina#049þ0c2CNþCraven000018Georgia#201þ0c2MLþMiller000019Kansas#003þ0c2ANþAnderson000018Kentucky#237þ0c2WOþWolfe00001AIllinois#039þ0c2DWþDe Witt00001EMississippi#147þ0c2WAþWalthall000017Europe#027þ0c2MCþMonaco00001FPennsylvania#113þ0c2SUþSullivan000017Texas#031þ0c2BLAþBlanco00001FNewHampshire#005þ0c2CHþCheshire000015Idaho#049þ0c2IDþIdaho000018Arkansas#137þ0c2STþStone000029NewCaledonia#NC.SU.DUþ0c2DUþDumb&eacute;a000022NewCaledonia#NC.SU.FAþ0c2FAþFarino00001ANorway#19þ0c2VAþVest-Agder00001EElSalvador#09þ0c2SMþSan Miguel00001DArgentina#20þ0c2SCþSanta Cruz00001CPuertoRico#09þ0c2AIþAibonito00001CPeru#17þ0c2MDDþMadre de Dios000018Uruguay#17þ0c2SOþSoriano000021Croatia#02þ0c2SPþBrodsko-Posavska00001EHonduras#03þ0c2CLþCol&oacute;n000021USANorthWestRegion#16þ0c2IDþIdaho000025BritishColumbia#23þ0c2POþPowell River000032Colombia#34þ0c2DCþBogot&aacute; (Distrito Capital)000025PolandCounties#PL.MA.KMþ0c2MKMþKrakow000026FrenchGuiana#GF.SL.PAþ0c2PAþPapaichton000023FranceDepartment#FR.ALþ0c2ALþAllier00001CKyrgyzstan#KG.NAþ0c2NAþNaryn00001FThailand#TH.CMþ0c2CMþChiang Mai00001CTunisia#TN.KRþ0c2KRþKairouan00002BFranceDepartment#FR.SMþ0c2SMþSeine Maritime00001FThailand#TH.UNþ0c2UNþUdon Thani000018Syria#SY.TAþ0c2TAþTartus000018Michigan#067þ0c2IOþIonia00002ANorthAmerica_WOCentral#024þ0c2GLþGreenland00001CWisconsin#129þ0c2WSþWashburn00001ANewWorld#144þ0c2HUþHungary000021Virginia#133þ0c2NHþNorthumberland00001CSouthDakota#003þ0c2AUþAurora000019Kansas#185þ0c2SFþStafford000018Mexico#009þ0c2DUþDurango000019Missouri#141þ0c2MGþMorgan00001ECalifornia#045þ0c2MEþMendocino00001ATexas#213þ0c2HNDþHenderson000016Ohio#175þ0c2WDþWyandot00001DNebraska#145þ0c2RWþRed Willow000016Georgia#021þ0c2BBþBibb00001BEurope#028þ0c2MOþMontenegro000021Minnesota#073þ0c2LQþLac Qui Parle00001DKentucky#057þ0c2CMþCumberland000018Norway#20þ0c2VEþVestfold000020ElSalvador#10þ0c2SSþSan Salvador00001BArgentina#21þ0c2SFþSanta Fe000016USA#TNþ0c2TNþTennessee000017Peru#18þ0c2MOQþMoquegua000022Uruguay#18þ0c2TAþTacuaremb&oacute;00002CCroatia#03þ0c2DNþDubrova&#269;ko-Neretvanska00001BHonduras#04þ0c2CMþComayagua000017Ontario#01þ0c2ALþAlgoma000020Indonesia#26þ0c2SUþNorth Sumatra00002FBritishColumbia#24þ0c2SQþSkeena-Queen Charlotte000021Colombia#35þ0c2BOLþBol&iacute;var000023ScotlandRegion#87þ0c2SCþStrathclyde00003DNorthWestTerritories#CA.NT.WRþ0c2WRþWaterfalls Valley (Route)00002ANovaScotia#CA.NS.LRþ0c2LRþLighthouse Route00002CFranceDepartment#FR.AMþ0c2AMþAlpes Maritimes00001DThailand#TH.CNþ0c2CNþChai Nat00001DSaudiArabia#SA.JZþ0c2JZþJizan000018Chad#TD.SAþ0c2SAþSalamat00001FKazakhstan#KZ.QSþ0c2QSþQostanay00001DMauritania#MR.ASþ0c2ASþAssaba00001DZimbabwe#ZW.BUþ0c2BUþBulawayo00001BMalawi#MW.MGþ0c2MGþMangochi00001DTunisia#TN.KSþ0c2KSþKasserine000017Oman#OM.MAþ0c2MAþMuscat000018Arkansas#139þ0c2UNþUnion00001DMassachusetts#007þ0c2DUþDukes000015Oregon#053þ0c2POþPolk000019Tennessee#055þ0c2GLþGiles00001ANewWorld#145þ0c2ISþIceland000018Maine#011þ0c2KEþKennebec000019Oklahoma#007þ0c2BEþBeaver000018Iowa#059þ0c2DIþDickinson000019Delaware#005þ0c2SUþSussex00001ATexas#395þ0c2ROEþRobertson00001CNewJersey#001þ0c2ATþAtlantic000017Indiana#011þ0c2BOþBoone00001BMexico#010þ0c2GUþGuanajuato000022NorthCarolina#051þ0c2CBþCumberland000019Kansas#005þ0c2ATþAtchison00001BKentucky#239þ0c2WDþWoodford00001AIllinois#041þ0c2DOþDouglas00001CMississippi#149þ0c2WRþWarren000025WorldwithCountries#100þ0c2KHþCambodia00001CEurope#029þ0c2NLþNetherlands000022Pennsylvania#115þ0c2SQþSusquehanna000017Texas#033þ0c2BORþBorden00001BNewHampshire#007þ0c2COþCoos000019Idaho#051þ0c2JEþJefferson00001DElSalvador#11þ0c2SAþSanta Ana000026Argentina#22þ0c2SEþSantiago del Estero000021PuertoRico#11þ0c2ANþA&ntilde;asco000014Peru#19þ0c2PASþPasco00001FUruguay#19þ0c2TTþTreinta y Tres000019Croatia#04þ0c2ISþIstarska00001EHonduras#05þ0c2CPþCop&aacute;n000016Ontario#02þ0c2BRþBrant000026Poland#72þ0c2DSþDolno&#347;l&#261;skie000022Cuba#01þ0c2PRþPinar del R&iacute;o00002ABritishColumbia#25þ0c2SLþSquamish-Lillooet000020Colombia#36þ0c2BOYþBoyac&aacute;00001FScotlandRegion#88þ0c2TAþTayside000022FrenchGuiana#GF.CY.RKþ0c2RKþRegina000025FranceDepartment#FR.ANþ0c2ANþArdennes00002DFranceDepartment#FR.BDþ0c2BDþBouches du Rhone00001DSomalia#SO.GAþ0c2GAþGalguduud000027CentralAmerica2#CE.SVþ0c2SVþEl Salvador00001EMacedonia#MK.PEþ0c2PEþPetrovec00001ANepal#NP.JAþ0c2JAþJanakpur000017UK7#UK.ENþ0c2ENþEngland00001AChina2#CN.TJþ0c2TJþTianjin000022FranceDepartment#FR.SOþ0c2SOþSomme000021Guinea#GN.DUþ0c2DUþDubr&eacute;ka00001AGuinea#GN.FAþ0c2FAþFaranah00001AKentucky#059þ0c2DAþDaviess000018Michigan#069þ0c2ISþIosco00001EWisconsin#131þ0c2WHþWashington00001ANewWorld#146þ0c2IRþIreland00001BVirginia#135þ0c2NWþNottoway00001CSouthDakota#005þ0c2BEþBeadle000018Kansas#187þ0c2STþStanton000019Mexico#011þ0c2GEþGuerrero00001DMissouri#143þ0c2NMþNew Madrid00001BCalifornia#047þ0c2MCþMerced000018Texas#215þ0c2HIDþHidalgo000023Virginia#678þ0c2LXþLexington (City)00001DNebraska#147þ0c2RIþRichardson00001AGeorgia#023þ0c2BLþBleckley000022WorldwithCountries#101þ0c2CNþChina000017Europe#030þ0c2NOþNorway000018Minnesota#075þ0c2LAþLake00001FElSalvador#12þ0c2SVþSan Vicente000023Argentina#23þ0c2TFþTierra del Fuego000014Peru#20þ0c2PIUþPiura000020Croatia#05þ0c2KAþKarlova&#269;ka00001FHonduras#06þ0c2CRþCort&eacute;s000016Ontario#03þ0c2BUþBruce000022Poland#73þ0c2KPþKujawsko-Pomorskie000021Cuba#02þ0c2CHþCiudad de La Habana000019Indonesia#28þ0c2MAþMaluku000020BritishColumbia#26þ0c2STþStikine000019Colombia#37þ0c2CALþCaldas000025ScotlandRegion#89þ0c2WIþWestern Isles000018Libya#LY.DRþ0c2DRþDarnah000022SolomonIsland#SB.CHþ0c2CHþChoiseul00001AChina2#CN.BJþ0c2BJþBeijing00001DVietnam#VN.DTþ0c2DTþDong Thap00001DThailand#TH.CPþ0c2CPþChumphon00001AEurope2#EU.KOþ0c2KOþKosovo000022Tibet#TI.QPþ0c2QPþQamdo Prefecture00001ENewHampshire#009þ0c2GRþGrafton000016Idaho#053þ0c2JRþJerome00001CArkansas#141þ0c2VBþVan Buren00001DMassachusetts#009þ0c2ESþEssex000018Oregon#055þ0c2SHþSherman00001CTennessee#057þ0c2GRþGrainger000018NewWorld#147þ0c2ITþItaly000014Maine#013þ0c2KNþKnox00001AOklahoma#009þ0c2BCþBeckham000016Iowa#061þ0c2DUþDubuque000019Texas#397þ0c2ROCþRockwall00001ANewJersey#003þ0c2BEþBergen000017Indiana#013þ0c2BRþBrown000018Mexico#012þ0c2HIþHidalgo000021NorthCarolina#053þ0c2CKþCurrituck00001AGeorgia#205þ0c2MTþMitchell000017Kansas#007þ0c2BAþBarber000019Illinois#043þ0c2DPþDuPage000020Mississippi#151þ0c2WSþWashington000027WorldwithCountries#102þ0c2TPþEast Timor000017Europe#031þ0c2PLþPoland00001CPennsylvania#117þ0c2TIþTioga000017Texas#035þ0c2BOSþBosque00001DElSalvador#13þ0c2SOþSonsonate000021Argentina#24þ0c2TMþTucum&aacute;n00001BPuertoRico#13þ0c2ACþArecibo000013Peru#21þ0c2PUNþPuno000014USA#AZþ0c2AZþArizona000036Croatia#06þ0c2KKþKoprivni&#269;ko-Kri&#382;eva&#269;ka000023Honduras#07þ0c2EPþEl Para&iacute;so00001DOntario#04þ0c2CKþChatham-Kent000023Poland#74þ0c2LDþ&#321;&oacute;dzkie000016Cuba#03þ0c2MAþMatanzas00001FIndonesia#29þ0c2MUþNorth Maluku000027BritishColumbia#27þ0c2SCþSunshine Coast00001CColombia#38þ0c2MAGþMagdalena00002BFrenchGuiana#GF.CY.RMþ0c2RMþRemire Montjoly00001DFiji#FJ.CE.NTþ0c2NTþNaitasiri000034FranceDepartment#FR.APþ0c2APþAlpes de Haute Provence000023BurkinaFaso#BF.SEþ0c2SEþS&eacute;no00002BPapuaNewGuinea#PG.WNþ0c2WNþWest New Britain000029Guyana#GY.UDþ0c2UDþUpper Demerara-Berbice00001DKazakhstan#KZ.AAþ0c2AAþAlmaty00001ASerbia#RS.ZJþ0c2ZJþZajecar000018Yemen#YE.HJþ0c2HJþHajjah00001BBurundi#BI.KIþ0c2KIþKirundo00001AMalawi#MW.MJþ0c2MJþMulanje00002CFranceDepartment#FR.TGþ0c2TGþTarn et Garonne000025Thailand#TH.URþ0c2URþUbon Ratchathani00001BKentucky#061þ0c2EDþEdmonson000017Michigan#071þ0c2IRþIron00001CWisconsin#133þ0c2WUþWaukesha000019NewWorld#148þ0c2LVþLatvia000019Virginia#137þ0c2ORþOrange00001DSouthDakota#007þ0c2BNþBennett000018Kansas#189þ0c2SVþStevens000018Mexico#013þ0c2JAþJalisco000019Missouri#145þ0c2NEþNewton00001ACalifornia#049þ0c2MOþModoc000015Texas#217þ0c2HILþHill000023Virginia#680þ0c2LYþLynchburg (City)000017Nebraska#149þ0c2ROþRock00001AGeorgia#025þ0c2BEþBrantley000024WorldwithCountries#103þ0c2GEþGeorgia000019Europe#032þ0c2PTþPortugal000025Minnesota#077þ0c2LWþLake of the Woods000023ElSalvador#14þ0c2USþUsulut&aacute;n000019Peru#22þ0c2SAMþSan Martin000023Croatia#07þ0c2KZþKrapinsko-Zagorska00002AHonduras#08þ0c2FMþFrancisco Moraz&aacute;n000019Ontario#05þ0c2COþCochrane000019Poland#75þ0c2LUþLubelskie000021Cuba#04þ0c2IJþIsla de la Juventud00001CIndonesia#30þ0c2JRþWest Java000028BritishColumbia#28þ0c2TNþThompson-Nicola00001FThailand#TH.CRþ0c2CRþChiang Rai00001ANigeria#NG.TAþ0c2TAþTaraba00001DMacedonia#MK.PHþ0c2PHþPehcevo00002BPapuaNewGuinea#PG.ENþ0c2ENþEast New Britain000018Uganda#UG.RAþ0c2RAþRakai00001DMalawi#MW.NAþ0c2NAþNkhata Bay000023NewHampshire#011þ0c2HBþHillsborough000018Idaho#055þ0c2KOþKootenai00001DArkansas#143þ0c2WAþWashington000020Massachusetts#011þ0c2FRþFranklin00001AOregon#057þ0c2TIþTillamook00001ATennessee#059þ0c2GEþGreene000020NewWorld#149þ0c2LNþLiechtenstein000017Maine#015þ0c2LIþLincoln000019Oklahoma#011þ0c2BLþBlaine000014Iowa#063þ0c2EMþEmmet000018Texas#399þ0c2RUNþRunnels00001ENewJersey#005þ0c2BUþBurlington000019Indiana#015þ0c2CAþCarroll000017Mexico#014þ0c2MEþMexico00001CNorthCarolina#055þ0c2DAþDare000018Georgia#207þ0c2MOþMonroe000017Kansas#009þ0c2BTþBarton000018Illinois#045þ0c2EDþEdgar00001BMississippi#153þ0c2WYþWayne000022WorldwithCountries#104þ0c2INþIndia000018Europe#033þ0c2ROþRomania00001CPennsylvania#119þ0c2UNþUnion000016Texas#037þ0c2BOIþBowie00001APuertoRico#15þ0c2ARþArroyo000014Peru#23þ0c2TACþTacna000023Croatia#08þ0c2LSþLi&#269;ko-Senjska000020Honduras#09þ0c2GDþGracias a Dios000019Ontario#06þ0c2DUþDufferin000018Poland#76þ0c2LBþLubuskie00001BCuba#05þ0c2CMþCamag&uuml;ey000021Indonesia#31þ0c2SAþNorth Sulawesi000028PolandCounties#PL.KP.WLþ0c2KWLþWloclawek000021FrenchGuiana#GF.CY.ROþ0c2ROþRoura000026FrenchGuiana#GF.CY.SEþ0c2SEþSaint Elie000022CaymanIslands#KY.WBþ0c2WBþWest Bay000020Thailand#TH.UTþ0c2UTþUthai Thani000018Congo#CG.SAþ0c2SAþSangha000026BurkinaFaso#BF.SGþ0c2SGþSangui&eacute;000018Algeria#DZ.ORþ0c2ORþOran00001BBhutan#BT.SGþ0c2SGþShemgang00001DNigeria#NG.AKþ0c2AKþAkwa Ibom00001ANigeria#NG.BAþ0c2BAþBauchi000018Somalia#SO.GEþ0c2GEþGedo00001DMacedonia#MK.OSþ0c2OSþOslomej000022Kazakhstan#KZ.ACþ0c2ACþAlmaty City00001BSerbia#RS.ZLþ0c2ZLþZlatibor000015Yemen#YE.IBþ0c2IBþIbb000019China2#CN.SXþ0c2SXþShanxi00002EFranceDepartment#FR.SSþ0c2SSþSeine-Saint-Denis00001AKentucky#063þ0c2ELþElliott00001BMichigan#073þ0c2IAþIsabella00001BWisconsin#135þ0c2WPþWaupaca00001CNewWorld#150þ0c2LTþLithuania000017Virginia#139þ0c2PAþPage00001FSouthDakota#009þ0c2BHþBon Homme000017Kansas#191þ0c2SUþSumner000024Mexico#015þ0c2MIþMichoacan de Ocampo00001AMissouri#147þ0c2NOþNodaway000019California#051þ0c2MNþMono000018Texas#219þ0c2HOCþHockley000019Nebraska#151þ0c2SAþSaline000018Georgia#027þ0c2BOþBrooks000015Brazil#001þ0c2ACþAcre000026WorldwithCountries#105þ0c2IDþIndonesia00001BEurope#034þ0c2SMþSan Marino00001CMinnesota#079þ0c2LSþLe Sueur000026YukonTerritory#CA.YT.KLþ0c2KLþKlondike000015Peru#24þ0c2TUMþTumbes000020Croatia#09þ0c2MEþMe&#273;imurska000021Honduras#10þ0c2INþIntibuc&aacute;000017Ontario#07þ0c2DRþDurham000020Poland#77þ0c2MAþMa&#322;opolskie000020Indonesia#32þ0c2SLþSouth Sumatra00002CMacau#MO.MA.NFþ0c2NFþNossa Senhora de Fatima000022FranceDepartment#FR.ASþ0c2ASþAisne000020Thailand#TH.CTþ0c2CTþChanthaburi000021Europe2#EU.LIþ0c2LIþLiechtenstein000027Philippines#PH.NRþ0c2NRþNegros Oriental000019Vanuatu#VU.SEþ0c2SEþShefa00001CTunisia#TN.MEþ0c2MEþMedenine000023FranceDepartment#FR.STþ0c2STþSarthe00001EPennsylvania#121þ0c2VEþVenango000019Texas#039þ0c2BRZþBrazoria000020NewHampshire#013þ0c2MEþMerrimack000015Idaho#057þ0c2LAþLatah000018Arkansas#145þ0c2WHþWhite000014Ohio#001þ0c2ADþAdams00001FMassachusetts#013þ0c2HAþHampden000019Oregon#059þ0c2UMþUmatilla00001ATennessee#061þ0c2GUþGrundy00001DNewWorld#151þ0c2LUþLuxembourg000016Maine#017þ0c2OXþOxford000018Oklahoma#013þ0c2BRþBryan000016Iowa#065þ0c2FAþFayette000015Texas#401þ0c2RUSþRusk00001ANewJersey#007þ0c2CAþCamden000016Indiana#017þ0c2CSþCass000018Mexico#016þ0c2MOþMorelos000020NorthCarolina#057þ0c2DVþDavidson00001CGeorgia#209þ0c2MGþMontgomery000018Kansas#011þ0c2BBþBourbon000022Virginia#683þ0c2MNþManassas (City)00001AIllinois#047þ0c2EWþEdwards00001DMississippi#155þ0c2WBþWebster000018Brazil#002þ0c2ALþAlagoas000021WorldwithCountries#106þ0c2IAþIran000017Europe#035þ0c2CSþSerbia00001ASlovenia#01þ0c2PMþPomurska000015USA#VAþ0c2VAþVirginia00001FPuertoRico#17þ0c2BCþBarceloneta000016Peru#25þ0c2UCAþUcayali000027Croatia#10þ0c2OBþOsje&#269;ko-Baranjska00002AHonduras#11þ0c2IBþIslas de la Bah&iacute;a000016Ontario#08þ0c2ELþElgin00001BPoland#78þ0c2MZþMazowieckie000023Cuba#07þ0c2CAþCiego de &Aacute;vila000019Indonesia#33þ0c2BTþBanten000029FrenchGuiana#GF.CY.SGþ0c2SGþSaint Georges000015Iran#IR.FAþ0c2FAþFars00001ESriLanka#LK.RNþ0c2RNþRatnapura000018Liberia#LR.BGþ0c2BGþBong000026Philippines#PH.NSþ0c2NSþNorthern Samar000020Tanzania#TZ.KLþ0c2KLþKilimanjaro00001EMicronesia#FM.POþ0c2POþPohnpei000017Palau#PW.KOþ0c2KOþKoror000019Kentucky#065þ0c2ESþEstill00001AMichigan#075þ0c2JAþJackson00001CWisconsin#137þ0c2WRþWaushara00001CNewWorld#152þ0c2MKþMacedonia00001AVirginia#141þ0c2PTþPatrick00001FSouthDakota#011þ0c2BRþBrookings000017Kansas#193þ0c2THþThomas000018Mexico#017þ0c2NAþNayarit000019Missouri#149þ0c2ORþOregon00001DCalifornia#053þ0c2MTþMonterey000017Alaska#050þ0c2BEþBethel000015Texas#221þ0c2HODþHood000018Nebraska#153þ0c2SRþSarpy000017Georgia#029þ0c2BRþBryan000016Brazil#003þ0c2APþAmapa000022WorldwithCountries#107þ0c2JPþJapan000019Europe#036þ0c2SKþSlovakia00001BMinnesota#081þ0c2LIþLincoln000027NewCaledonia#NC.SU.YAþ0c2YAþYat&eacute;00001BSlovenia#02þ0c2PDþPodravska00001FPeru#26þ0c2LPþLima Metropolitan00002ECroatia#11þ0c2PSþPo&#382;e&scaron;ko-Slavonska000018Honduras#12þ0c2LPþLa Paz000016Ontario#09þ0c2ESþEssex000018Poland#79þ0c2OPþOpolskie000018Cuba#08þ0c2CFþCienfuegos00001CIndonesia#34þ0c2GOþGorontalo00001DSwaziland#SZ.MAþ0c2MAþManzini000021SolomonIsland#SB.CNþ0c2CNþCentral00001BQatar#QA.RAþ0c2RAþAr Rayyan00002AFranceDepartment#FR.CAþ0c2CAþCotes d'Armor00001ANigeria#NG.SOþ0c2SOþSokoto00001AGhana#GH.NPþ0c2NPþNorthern00001DMauritania#MR.TRþ0c2TRþTrarza000022SaudiArabia#SA.MDþ0c2MDþAl Madinah000023Bhutan#BT.SJþ0c2SJþSamdrup Jongkhar000021SriLanka#LK.ADþ0c2ADþAnuradhapura00001BNigeria#NG.ANþ0c2ANþAnambra000023Panama#PA.KWþ0c2KWþKuna de Wargandi00001BTanzania#TZ.KMþ0c2KMþKigoma000023FranceDepartment#FR.SVþ0c2SVþSavoie00001DPennsylvania#123þ0c2WAþWarren000017Texas#041þ0c2BAZþBrazos000021NewHampshire#015þ0c2RGþRockingham000015Idaho#059þ0c2LEþLemhi00001BArkansas#147þ0c2WOþWoodruff000014Ohio#003þ0c2ALþAllen000021Massachusetts#015þ0c2HPþHampshire000016Oregon#061þ0c2UNþUnion00001BTennessee#063þ0c2HAþHamblen000018NewWorld#153þ0c2MTþMalta000019Maine#019þ0c2PEþPenobscot000018Oklahoma#015þ0c2CAþCaddo000032Australia2#ACTþ0c2ACTþAustralian Capital Territory000014Iowa#067þ0c2FLþFloyd000026Alaska#232þ0c2SHþSkagway-Hoonah-Angoon000017Texas#403þ0c2SABþSabine00001CNewJersey#009þ0c2CMþCape May000017Indiana#019þ0c2CLþClark00001BMexico#018þ0c2NUþNuevo Leon00001DNorthCarolina#059þ0c2DIþDavie000018Georgia#211þ0c2MNþMorgan000016Kansas#013þ0c2BRþBrown000027Virginia#685þ0c2MPþManassas Park (City)00001CIllinois#049þ0c2EFþEffingham00001FMississippi#157þ0c2WLþWilkinson000019Brazil#004þ0c2AMþAmazonas000027WorldwithCountries#108þ0c2KZþKazakhstan000019Europe#037þ0c2SLþSlovenia000026MadagascarRegions#MG.TL.AYþ0c2AYþAnosy000034MadagascarRegions#MG.FI.VFþ0c2VFþVatovavy Fitovinany000020Slovenia#03þ0c2KOþKoro&scaron;ka000025NewWorld#01þ0c2AGþAntigua and Barbuda000020PuertoRico#19þ0c2BQþBarranquitas000023Croatia#12þ0c2PGþPrimorsko-Goranska000019Honduras#13þ0c2LEþLempira00001AOntario#10þ0c2FRþFrontenac00001CPoland#80þ0c2PKþPodkarpackie000014Cuba#09þ0c2GRþGranma000022Indonesia#35þ0c2BBþBangka-Belitung000032PolandCounties#PL.LB.GMþ0c2LGMþGorzow Wielkopolski000025FrenchGuiana#GF.CY.SIþ0c2SIþSinnamary00001CSyria#SY.SUþ0c2SUþAs Suwayda000024FranceDepartment#FR.AVþ0c2AVþAveyron000022CaymanIslands#KY.EEþ0c2EEþEast End00001DBurkinaFaso#BF.TAþ0c2TAþTapoa00001CBhutan#BT.TAþ0c2TAþTashigang00001BRwanda#RW.SUþ0c2SUþSouthern000019Nigeria#NG.BEþ0c2BEþBenue000031CentralAmerica2#CE.TTþ0c2TTþTrinidad &amp; Tobago00001EHongKong#HK.YLþ0c2YLþYuen Long00001DMauritania#MR.BRþ0c2BRþBrakna00002FCentralAfricanRepublic#CF.HKþ0c2HKþHaute -Kotto000023CentralAmerica2#CE.BSþ0c2BSþBahamas000025PapuaNewGuinea#PG.ESþ0c2ESþEast Sepik00001ALaos#LA.KHþ0c2KHþKhammouan00001ATunisia#TN.MHþ0c2MHþMahdia000018Minnesota#083þ0c2LYþLyon00001AKentucky#067þ0c2FAþFayette00001CMichigan#077þ0c2KMþKalamazoo00001DWisconsin#139þ0c2WNþWinnebago00001ANewWorld#154þ0c2MVþMoldova00001FVirginia#143þ0c2PIþPittsylvania00001BSouthDakota#013þ0c2BWþBrown000016Kansas#195þ0c2TRþTrego000017Mexico#019þ0c2OAþOaxaca000018Missouri#151þ0c2OSþOsage000019California#055þ0c2NAþNapa000018Texas#223þ0c2HOPþHopkins00001BNebraska#155þ0c2SUþSaunders000019Georgia#031þ0c2BCþBulloch000016Brazil#005þ0c2BAþBahia00002AWorldwithCountries#109þ0c2KPþKorea (north)000016Europe#038þ0c2ESþSpain00001BSlovenia#04þ0c2SAþSavinjska000019NewWorld#02þ0c2BSþBahamas000012USA#TXþ0c2TXþTexas000021USA#DCþ0c2DCþDistrict of Columbia000028Croatia#13þ0c2SBþ&Scaron;ibensko-Kninska00001CHonduras#14þ0c2OCþOcotepeque00001DAustralia#QUþ0c2QUþQueensland000022Australia#SAþ0c2SAþSouth Australia000020Ontario#11þ0c2GSþGreater Sudbury000019Poland#81þ0c2PDþPodlaskie00001FCuba#10þ0c2GUþGuant&aacute;namo000018Indonesia#36þ0c2PAþPapua00001AEurope2#EU.MCþ0c2MCþMonaco000022Cambodia#KH.KAþ0c2KAþSihanoukville000019Chad#TD.TAþ0c2TAþTandjile000023BurkinaFaso#BF.BAþ0c2BAþBal&eacute;00001EMacedonia#MK.PNþ0c2PNþPlasnica000025Philippines#PH.NVþ0c2NVþNueva Vizcaya00002AWorldwithCountries#110þ0c2KRþKorea (south)000017Europe#039þ0c2SEþSweden000021Pennsylvania#125þ0c2WSþWashington000019Texas#043þ0c2BREþBrewster000020NewHampshire#017þ0c2STþStrafford000015Idaho#061þ0c2LWþLewis000017Arkansas#149þ0c2YEþYell000016Ohio#005þ0c2ASþAshland000021Massachusetts#017þ0c2MIþMiddlesex000018Oregon#063þ0c2WAþWallowa00001CTennessee#065þ0c2HMþHamilton000017Italy#001þ0c2ABþAbruzzo000019NewWorld#155þ0c2MCþMonaco00001BMaine#021þ0c2PIþPiscataquis00001BOklahoma#017þ0c2CNþCanadian000017Iowa#069þ0c2FRþFranklin00001ETexas#405þ0c2SAUþSan Augustine00001ENewJersey#011þ0c2CUþCumberland000016Indiana#021þ0c2CYþClay000017Mexico#020þ0c2PUþPuebla00001ENorthCarolina#061þ0c2DUþDuplin000018Georgia#213þ0c2MUþMurray000017Kansas#015þ0c2BUþButler00001AIllinois#051þ0c2FAþFayette00001DMississippi#159þ0c2WNþWinston000016Brazil#006þ0c2CEþCeara00001ASlovenia#05þ0c2ZSþZasavska00001ANewWorld#03þ0c2BBþBarbados000022PuertoRico#21þ0c2BYþBayam&oacute;n00002DCroatia#14þ0c2SMþSisa&#269;ko-Moslava&#269;ka000019Honduras#15þ0c2OLþOlancho00001BCostaRica#01þ0c2ALþAlajuela000015Ontario#12þ0c2GRþGrey000019Poland#82þ0c2PMþPomorskie000017Cuba#11þ0c2LHþLa Habana000017Indonesia#37þ0c2RIþRiau000019Guinea#GN.GAþ0c2GAþGaoual00001FThailand#TH.CYþ0c2CYþChaiyaphum00001BEurope2#EU.MDþ0c2MDþMoldova00001ESenegal#SN.ZGþ0c2ZGþZiguinchor000018Cambodia#KH.KBþ0c2KBþKep00001CBurkinaFaso#BF.SMþ0c2SMþSoum000019Bhutan#BT.SMþ0c2SMþSamchi000020GuineaBissau#GW.QUþ0c2QUþQuinara000022BurkinaFaso#BF.BBþ0c2BBþBougouriba00001EDjibouti#DJ.TAþ0c2TAþTadjourah00002ECentralAfricanRepublic#CF.HMþ0c2HMþHaut-Mbomou000016Chad#TD.BAþ0c2BAþBatha000019Nepal#NP.KAþ0c2KAþKarnali00001DGabon#GA.HOþ0c2HOþHaut-Ogooue000027WorldwithCountries#111þ0c2KGþKyrgyzstan00001CEurope#040þ0c2CHþSwitzerland00001AMinnesota#085þ0c2MLþMcLeod00001AKentucky#069þ0c2FLþFleming00001BMichigan#079þ0c2KAþKalkaska000018Wisconsin#141þ0c2WOþWood00001AItaly#002þ0c2BAþBasilicata00001DNewWorld#156þ0c2MGþMontenegro00001BVirginia#145þ0c2POþPowhatan00001BSouthDakota#015þ0c2BUþBrule00001AKansas#197þ0c2WBþWabaunsee000025Mexico#021þ0c2QUþQueretaro de Arteaga000018Missouri#153þ0c2OZþOzark00001BCalifornia#057þ0c2NEþNevada000018Texas#225þ0c2HOUþHouston00001FNebraska#157þ0c2SBþScotts Bluff000017Georgia#033þ0c2BUþBurke000021Brazil#007þ0c2DFþDistrito Federal000021Slovenia#06þ0c2PSþSpodnjeposavska000018NewWorld#04þ0c2BZþBelize000015USA#COþ0c2COþColorado000015USA#DEþ0c2DEþDelaware000014Japan#10þ0c2GUþGumma000025Croatia#15þ0c2SDþSplitsko-Dalmatinska000026Honduras#16þ0c2SBþSanta B&aacute;rbara00001ACostaRica#02þ0c2CAþCartago00001AOntario#13þ0c2HAþHaldimand000021Poland#83þ0c2SLþ&#346;l&#261;skie00001CCuba#12þ0c2HOþHolgu&iacute;n000021Indonesia#38þ0c2SNþSouth Sulawesi00001AEritrea#ER.MAþ0c2MAþMaekel000027Kazakhstan#KZ.SKþ0c2SKþSouth Kazakhstan00003CCentralAmerica2#CE.VCþ0c2VCþSt. Vincent &amp; the Grenadines00001CMacedonia#MK.PPþ0c2PPþPrilep00001ABurundi#BI.KRþ0c2KRþKaruzi00001AMalawi#MW.NIþ0c2NIþNtchisi000021WorldwithCountries#112þ0c2LAþLaos000018Europe#041þ0c2UAþUkraine00001CPennsylvania#127þ0c2WYþWayne000018Texas#045þ0c2BRIþBriscoe00001FNewHampshire#019þ0c2SUþSullivan000017Idaho#063þ0c2LIþLincoln000018Ohio#007þ0c2AHþAshtabula000021Massachusetts#019þ0c2NTþNantucket000016Oregon#065þ0c2WSþWasco00001BTennessee#067þ0c2HNþHancock000018Italy#003þ0c2CAþCalabria00001ENewWorld#157þ0c2NLþNetherlands000019Maine#023þ0c2SAþSagadahoc000019Oklahoma#019þ0c2CRþCarter000016Iowa#071þ0c2FEþFremont00001CTexas#407þ0c2SAJþSan Jacinto000019NewJersey#013þ0c2ESþEssex000019Indiana#023þ0c2CIþClinton00001DMexico#022þ0c2QRþQuintana Roo00001ENorthCarolina#063þ0c2DRþDurham00001AGeorgia#215þ0c2MSþMuscogee00001CNewZealand#F10þ0c2TASþTasman000016Kansas#017þ0c2CSþChase000017Illinois#053þ0c2FOþFord00001FMississippi#161þ0c2YAþYalobusha00001FBrazil#008þ0c2ESþEspirito Santo000027Slovenia#07þ0c2DOþJugovzhodna Slovenija000018NewWorld#05þ0c2CAþCanada00001DPuertoRico#23þ0c2CRþCabo Rojo000018Japan#11þ0c2HIþHiroshima000021Croatia#16þ0c2VAþVara&#382;dinska000017Honduras#17þ0c2VAþValle00001CBulgaria#38þ0c2EþBlagoevgrad00001DCostaRica#03þ0c2GUþGuanacaste00001BOntario#14þ0c2HLþHaliburton000023USANorthWestRegion#30þ0c2MTþMontana000028Poland#84þ0c2SKþ&#346;wi&#281;tokrzyskie000017Cuba#13þ0c2LTþLas Tunas000022Indonesia#39þ0c2IBþWest Irian Jaya000025PolandCounties#PL.LU.ZMþ0c2LZMþZamosc00002BNewBrunswick#CA.NB.ACþ0c2ACþAcadian Coastal00001ATunisia#TN.NBþ0c2NBþNabeul00001BVietnam#VN.YBþ0c2YBþYen Bai000018Liberia#LR.BMþ0c2BMþBomi00001BTanzania#TZ.KRþ0c2KRþKagera000016Brazil#009þ0c2GOþGoias000025WorldwithCountries#113þ0c2MYþMalaysia00001FEurope#042þ0c2UKþUnited Kingdom00001CMinnesota#087þ0c2MAþMahnomen000018Kentucky#071þ0c2FOþFloyd000017Michigan#081þ0c2KNþKent000018Italy#004þ0c2CMþCampania000019NewWorld#158þ0c2NOþNorway000020Virginia#147þ0c2PEþPrince Edward00001DSouthDakota#017þ0c2BFþBuffalo000018Kansas#199þ0c2WAþWallace000020Mexico#023þ0c2SAþSan Luis Potosi00001BMissouri#155þ0c2PMþPemiscot00001BCalifornia#059þ0c2ORþOrange000017Texas#227þ0c2HOWþHoward000026Virginia#690þ0c2MVþMartinsville (City)000019Nebraska#159þ0c2SEþSeward000017Georgia#035þ0c2BSþButts000026MadagascarRegions#MG.AS.DIþ0c2DIþDiana000023WestEuropeanRegion#01þ0c2BEþBelgium000023Slovenia#08þ0c2LJþOsrednjeslovenska00001CNewWorld#06þ0c2CRþCosta Rica000017Japan#12þ0c2HOþHokkaido00002BCroatia#17þ0c2VPþViroviti&#269;ko-Podravska000016Honduras#18þ0c2YOþYoro000017Bulgaria#39þ0c2AþBurgas00001ACostaRica#04þ0c2HEþHeredia000017Ontario#15þ0c2HTþHalton000028Poland#85þ0c2WNþWarmi&#324;sko-Mazurskie000024Cuba#14þ0c2SSþSancti Sp&iacute;ritus00001FIndonesia#40þ0c2KRþRiau Islands00001CKuwait#KW.JAþ0c2JAþAl Jahrah000026SaoTomeandPrincipe#ST.MZþ0c2MZþMe Zoxi000031DemocraticRepublicoftheCongo#CD.EQþ0c2EQþEquateur00001DPanama#PA.LSþ0c2LSþLos Santos00001ATanzania#TZ.LIþ0c2LIþLindi00001DYemen#YE.HUþ0c2HUþAl Hudaydah000019Yemen#YE.JAþ0c2JAþAl Jawf00001CUganda#UG.RKþ0c2RKþRukungiri00001DMalawi#MW.NKþ0c2NKþNkhotakota000019Brazil#010þ0c2MAþMaranhao000025WorldwithCountries#114þ0c2MNþMongolia00001DEurope#043þ0c2VAþVatican City000023Pennsylvania#129þ0c2WEþWestmoreland000017Texas#047þ0c2BROþBrooks000017Idaho#065þ0c2MAþMadison000024Virginia#510þ0c2AXþAlexandria (City)000015Ohio#009þ0c2ATþAthens00001FMassachusetts#021þ0c2NOþNorfolk000018Wyoming#001þ0c2ALþAlbany00001BOregon#067þ0c2WHþWashington00001CTennessee#069þ0c2HRþHardeman00001EItaly#005þ0c2EMþEmilia-Romagna000019NewWorld#159þ0c2PLþPoland000018Maine#025þ0c2SOþSomerset00001BOklahoma#021þ0c2CHþCherokee000015Iowa#073þ0c2GRþGreene00001DTexas#409þ0c2SAPþSan Patricio00001ENewJersey#015þ0c2GLþGloucester00001AIndiana#025þ0c2CRþCrawford000018Mexico#024þ0c2SIþSinaloa000021NorthCarolina#065þ0c2EDþEdgecombe000018Georgia#217þ0c2NEþNewton00001BKansas#019þ0c2CQþChautauqua00001BIllinois#055þ0c2FRþFranklin00001BMississippi#163þ0c2YZþYazoo000024YukonTerritory#CA.YT.KUþ0c2KUþKluane000020Indonesia#41þ0c2SRþWest Sulawesi000022WestEuropeanRegion#02þ0c2FRþFrance00001BSlovenia#09þ0c2GOþGorenjska000016NewWorld#07þ0c2CUþCuba00001APuertoRico#25þ0c2CGþCaguas000014Japan#13þ0c2HYþHyogo000025Croatia#18þ0c2VSþVukovarsko-Srijemska000019Bulgaria#40þ0c2TXþDobrich000019Ontario#16þ0c2HMþHamilton00001DPoland#86þ0c2WPþWielkopolskie00001ECuba#15þ0c2SCþSantiago de Cuba00001CSerbia#RS.JAþ0c2JAþJablanica000019Vanuatu#VU.SNþ0c2SNþSanma00001BTunisia#TN.MNþ0c2MNþManouba000024Guinea#GN.FOþ0c2FOþFor&eacute;cariah00001ATuvalu#TV.VIþ0c2VIþVaitupu000018Iran#IR.ESþ0c2ESþEsfahan000025FranceDepartment#FR.BRþ0c2BRþBas Rhin000021FranceDepartment#FR.CHþ0c2CHþCher00001ESaudiArabia#SA.MKþ0c2MKþMakkah00001DKazakhstan#KZ.AMþ0c2AMþAqmola00001BBurundi#BI.MAþ0c2MAþMakamba000023Guyana#GY.DEþ0c2DEþDemerara-Mahaica000019Georgia#037þ0c2CLþCalhoun00001CBrazil#011þ0c2MTþMato Grosso000022WorldwithCountries#115þ0c2NPþNepal000017Europe#044þ0c2CYþCyprus00001CMinnesota#089þ0c2MRþMarshall00001BKentucky#073þ0c2FRþFranklin00001BMichigan#083þ0c2KEþKeweenaw000019Florida#001þ0c2ALþAlachua00001EWestVirginia#001þ0c2BAþBarbour000025Italy#006þ0c2FIþFriuli-Venezia Giulia00001BNewWorld#160þ0c2PTþPortugal000017Asia3#002þ0c2AMþArmenia000020Virginia#149þ0c2PGþPrince George00001BSouthDakota#019þ0c2BTþButte00001BKansas#201þ0c2WSþWashington000017Mexico#025þ0c2SOþSonora000018Missouri#157þ0c2PRþPerry00001BCalifornia#061þ0c2PLþPlacer000019Texas#229þ0c2HUDþHudspeth00001BNebraska#161þ0c2SHþSheridan000026WestEuropeanRegion#03þ0c2LUþLuxembourg00002ASlovenia#10þ0c2NOþNotranjsko-kra&scaron;ka00001ANewWorld#08þ0c2DMþDominica000011USA#UTþ0c2UTþUtah000016Japan#14þ0c2IBþIbaraki000019Croatia#19þ0c2ZDþZadarska000019Bulgaria#41þ0c2EBþGabrovo00001FCostaRica#06þ0c2LIþLim&oacute;n000019Ontario#17þ0c2HSþHastings000022Poland#87þ0c2ZPþZachodniopomorskie000019Cuba#16þ0c2VCþVilla Clara000015Iran#IR.YAþ0c2YAþYazd00001AUganda#UG.ABþ0c2ABþKaabong00001AKuwait#KW.HWþ0c2HWþHawalli000020SriLanka#LK.TCþ0c2TCþTrincomalee000024Ethiopia#ET.GAþ0c2GAþGambela peoples000024Cambodia#KH.KGþ0c2KGþKampong Chhnang00001EBurkinaFaso#BF.SRþ0c2SRþSourou000024Mauritania#MR.TZþ0c2TZþTiris Zemmour000033CentralAmerica2#CE.VGþ0c2VGþVirgin Islands, British00001FMacedonia#MK.PTþ0c2PTþProbistip000022CentralAmerica2#CE.BZþ0c2BZþBelize000019Tanzania#TZ.MAþ0c2MAþMara000019Malawi#MW.MWþ0c2MWþMwanza000023Brazil#012þ0c2MSþMato Grosso do Sul000025WorldwithCountries#116þ0c2PKþPakistan000017Europe#045þ0c2TKþTurkey00001EPennsylvania#131þ0c2WOþWyoming000016Texas#049þ0c2BOWþBrown000018Idaho#067þ0c2MIþMinidoka000017Ohio#011þ0c2AUþAuglaize000020Massachusetts#023þ0c2PLþPlymouth00001AWyoming#003þ0c2BHþBig Horn000018Oregon#069þ0c2WEþWheeler00001ATennessee#071þ0c2HDþHardin000015Italy#007þ0c2LAþLazio00001ANewWorld#161þ0c2ROþRomania000015Maine#027þ0c2WAþWaldo00001AOklahoma#023þ0c2COþChoctaw000015Iowa#075þ0c2GUþGrundy00001AAsia3#003þ0c2AZþAzerbaijan000024Alaska#240þ0c2SFþSoutheast Fairbanks000019Texas#411þ0c2SASþSan Saba00001ANewJersey#017þ0c2HUþHudson000019Indiana#027þ0c2DAþDaviess000018Mexico#026þ0c2TAþTabasco00001FNorthCarolina#067þ0c2FOþForsyth000018Georgia#219þ0c2OCþOconee000019Kansas#021þ0c2CKþCherokee000019Illinois#057þ0c2FUþFulton000022WestEuropeanRegion#04þ0c2MCþMonaco000020Slovenia#11þ0c2SPþGori&scaron;ka000020NewWorld#09þ0c2DOþDominican Rep.000017USA#WAþ0c2WAþWashington000019PuertoRico#27þ0c2CAþCamuy000018USA#CTþ0c2CTþConnecticut000017Japan#15þ0c2ISþIshikawa000020Croatia#20þ0c2ZGþZagreba&#269;ka00001DBulgaria#42þ0c2COþGrad Sofiya00001DCostaRica#07þ0c2PUþPuntarenas000016Ontario#18þ0c2HUþHuron00001ESerbia#RS.JCþ0c2JCþSouth Backa000019Vanuatu#VU.TFþ0c2TFþTafea00001APalau#PW.MEþ0c2MEþMelekeok000017Uganda#UG.ACþ0c2ACþApac000019Benin#BJ.AKþ0c2AKþAtacora000021Seychelles#SC.SYþ0c2SYþSeychelles00001DEurope2#EU.LTþ0c2LTþLithuania00001BCambodia#KH.KHþ0c2KHþKratie00001FBurkinaFaso#BF.SSþ0c2SSþSissili00001FSriLanka#LK.BCþ0c2BCþBatticaloa00001EPanama#PA.NBþ0c2NBþNgobe Bugle000022HongKong#HK.YTþ0c2YTþYan Tsim Mong000030CentralAfricanRepublic#CF.HSþ0c2HSþMambere-Kadei00001ATanzania#TZ.MBþ0c2MBþMbeya00001ANebraska#163þ0c2SMþSherman000018Georgia#039þ0c2CMþCamden00001DBrazil#013þ0c2MGþMinas Gerais000028WorldwithCountries#117þ0c2PHþPhilippines000017Europe#046þ0c2RUþRussia00001AMinnesota#091þ0c2MTþMartin000019Kentucky#075þ0c2FUþFulton000017Michigan#085þ0c2LKþLake000017Florida#003þ0c2BAþBaker00001FWestVirginia#003þ0c2BEþBerkeley000017Italy#008þ0c2LIþLiguria00001DNewWorld#162þ0c2SMþSan Marino00001ESouthDakota#021þ0c2CAþCampbell000018Kansas#203þ0c2WHþWichita00001BMexico#027þ0c2TMþTamaulipas000019Missouri#159þ0c2PTþPettis00001BCalifornia#063þ0c2PUþPlumas00001CAlaska#060þ0c2BRþBristol Bay000015Texas#231þ0c2HUNþHunt000028Manitoba#CA.MB.IRþ0c2IRþInterlake Region000027WestEuropeanRegion#05þ0c2NLþNetherlands000026Slovenia#12þ0c2JPþObalno-kra&scaron;ka00001DNewWorld#10þ0c2SVþEl Salvador000014Japan#16þ0c2IWþIwate00001CCroatia#21þ0c2GZþGrad Zagreb000018Bulgaria#43þ0c2XþHaskovo000022CostaRica#08þ0c2SJþSan Jos&eacute;00001FOntario#19þ0c2KLþKawartha Lakes00002BPolandCounties#PL.LB.ZMþ0c2BZMþZielona Gora000027PolandCounties#PL.ZP.KMþ0c2ZKMþKoszalin000017Guinea#GN.FRþ0c2FRþFria00001BUganda#UG.ADþ0c2ADþAdjumani000019Benin#BJ.ALþ0c2ALþAlibori00001DSwaziland#SZ.LUþ0c2LUþLubombo00001ALibya#LY.GDþ0c2GDþGhadamis000024DenmarkRegion#DK.SDþ0c2SDþSyddanmark00001EEurope2#EU.LUþ0c2LUþLuxembourg00001DEurope2#EU.MKþ0c2MKþMacedonia000022BurkinaFaso#BF.STþ0c2STþSanmatenga00001CSriLanka#LK.BDþ0c2BDþBadulla00001BNamibia#NA.CAþ0c2CAþCaprivi000030CentralAmerica2#CE.VIþ0c2VIþVirgin Islands, U.S.000026CentralAmerica2#CE.CRþ0c2CRþCosta Rica00001DRussia#RU.ZBþ0c2ZBþZabaykalsk000019Uganda#UG.ROþ0c2ROþKaliro00001CUganda#UG.SEþ0c2SEþSembabule000021SolomonIsland#SB.WEþ0c2WEþWestern00001BIllinois#059þ0c2GAþGallatin000015Brazil#014þ0c2PAþPara000023WorldwithCountries#118þ0c2RUþRussia00001BPennsylvania#133þ0c2YOþYork000019Texas#051þ0c2BUSþBurleson000019Idaho#069þ0c2NPþNez perce000016Ohio#013þ0c2BEþBelmont00001FMassachusetts#025þ0c2SUþSuffolk00001AWyoming#005þ0c2CMþCampbell000018Oregon#071þ0c2YAþYamhill00001BTennessee#073þ0c2HWþHawkins000019Italy#009þ0c2LOþLombardia000019NewWorld#163þ0c2CSþSerbia00001AMaine#029þ0c2WSþWashington00001BOklahoma#025þ0c2CIþCimarron000016Iowa#077þ0c2GTþGuthrie00001AAsia3#005þ0c2BDþBangladesh00001BTexas#413þ0c2SCHþSchleicher00001DNewJersey#019þ0c2HTþHunterdon00001AIndiana#029þ0c2DEþDearborn000018NewYork#001þ0c2ALþAlbany000019Mexico#028þ0c2TLþTlaxcala000020NorthCarolina#069þ0c2FRþFranklin00001CGeorgia#221þ0c2OGþOglethorpe000019Kansas#023þ0c2CNþCheyenne000019NewWorld#11þ0c2GDþGrenada000024PuertoRico#29þ0c2CVþCan&oacute;vanas00002DBosniaHerzegovina#01þ0c2BOþBosanskopodrinjski000015Japan#17þ0c2KAþKagawa00001ABulgaria#44þ0c2KþKurdzhali000017Ontario#20þ0c2KEþKenora000016Fiji#FJ.WE.RAþ0c2RAþRa000025FranceDepartment#FR.VCþ0c2VCþVaucluse00001CChina2#CN.CQþ0c2CQþChongqing000023FranceDepartment#FR.CLþ0c2CLþCantal000022FranceDepartment#FR.DBþ0c2DBþDoubs000024SaoTomeandPrincipe#ST.PAþ0c2PAþPague00001AEurope2#EU.LVþ0c2LVþLatvia000019Nigeria#NG.BOþ0c2BOþBorno00001BSomalia#SO.HIþ0c2HIþHiiraan00002FGuyana#GY.UTþ0c2UTþUpper Takutu-Upper Essequibo00001AChad#TD.BIþ0c2BIþWadi Fira00001BBurundi#BI.KYþ0c2KYþKayanza000019Djibouti#DJ.ARþ0c2ARþArta000019Malawi#MW.MZþ0c2MZþMzimba000018Nebraska#165þ0c2SIþSioux000018Brazil#015þ0c2PBþParaiba000026WorldwithCountries#119þ0c2SGþSingapore00001AMinnesota#093þ0c2MKþMeeker00001BKentucky#077þ0c2GAþGallatin000019Michigan#087þ0c2LPþLapeer000021Virginia#515þ0c2BFþBedford (City)000015Florida#005þ0c2BYþBay00001CWestVirginia#005þ0c2BOþBoone000016Italy#010þ0c2MAþMarche00001BNewWorld#164þ0c2SKþSlovakia000016Asia3#006þ0c2BTþBhutan000021Virginia#153þ0c2PWþPrince William000021SouthDakota#023þ0c2CMþCharles Mix000019Alabama#001þ0c2AUþAutauga000017Kansas#205þ0c2WLþWilson00001FMexico#029þ0c2VEþVeracruz-Llave000019Missouri#161þ0c2PHþPhelps00001ECalifornia#065þ0c2RIþRiverside00001BTexas#233þ0c2HUTþHutchinson000022USACentralRegion#17þ0c2ILþIllinois00001BNewWorld#12þ0c2GTþGuatemala000038BosniaHerzegovina#02þ0c2HNþHercegova&#269;ko-neretvanski000018Japan#18þ0c2KGþKagoshima00001BAustralia#TAþ0c2TAþTasmania00001CBulgaria#45þ0c2KHþKyustendil000018Ontario#21þ0c2LAþLambton00001CTunisia#TN.MSþ0c2MSþMonastir000023FranceDepartment#FR.VDþ0c2VDþVendee000019Oman#OM.MUþ0c2MUþMusandam00002EFranceDepartment#FR.CMþ0c2CMþCharente Maritime00001BTonga#TO.TTþ0c2TTþTongatapu00001DCambodia#KH.KKþ0c2KKþKoh Kong00001BSriLanka#LK.APþ0c2APþAmpara00001EAngola#AO.LNþ0c2LNþLunda Norte000029BurkinaFaso#BF.BKþ0c2BKþBoulkiemd&eacute;00001FPhilippines#PH.PLþ0c2PLþPalawan00001DKazakhstan#KZ.ARþ0c2ARþAtyrau00001ARussia#RU.YNþ0c2YNþYamalia00001FDjibouti#DJ.ASþ0c2ASþAli Sabieh000019Illinois#061þ0c2GRþGreene000017Brazil#016þ0c2PRþParana000026WorldwithCountries#120þ0c2LKþSri Lanka000017Texas#053þ0c2BUNþBurnet000016Idaho#071þ0c2ONþOneida000014Ohio#015þ0c2BRþBrown000021Massachusetts#027þ0c2WOþWorcester000018Wyoming#007þ0c2CAþCarbon00001BTennessee#075þ0c2HYþHaywood000016Italy#011þ0c2MOþMolise00001BNewWorld#165þ0c2SIþSlovenia000014Maine#031þ0c2YOþYork00001COklahoma#027þ0c2CEþCleveland000017Iowa#079þ0c2HAþHamilton000016Asia3#007þ0c2BNþBrunei000017Texas#415þ0c2SCUþScurry00001ANewJersey#021þ0c2MEþMercer000019Indiana#031þ0c2DCþDecatur00001ANewYork#003þ0c2AEþAllegany000018Mexico#030þ0c2YUþYucatan00001ENorthCarolina#071þ0c2GAþGaston00001AGeorgia#223þ0c2PDþPaulding000016Kansas#025þ0c2CAþClark000017NewWorld#13þ0c2HTþHaiti00001CPuertoRico#31þ0c2CNþCarolina00002ABosniaHerzegovina#03þ0c2KSþKanton Sarajevo000017Japan#19þ0c2KNþKanagawa000018Bulgaria#46þ0c2OBþLovech000017Ontario#22þ0c2LNþLanark000026CentralEuropeanRegion#01þ0c2ATþAustria00001AMacau#MO.IL.TAþ0c2TAþTaipa000028NewBrunswick#CA.NB.RVþ0c2RVþRiver Valley000025FranceDepartment#FR.DDþ0c2DDþDordogne000018Tonga#TO.VAþ0c2VAþVava'u00001ABhutan#BT.TMþ0c2TMþThimphu00001FBurkinaFaso#BF.BLþ0c2BLþBoulgou00001BMacedonia#MK.REþ0c2REþResen000020Philippines#PH.PMþ0c2PMþPampanga00001DKazakhstan#KZ.ASþ0c2ASþAstana000020CentralAmerica2#CE.CUþ0c2CUþCuba00001AUganda#UG.RRþ0c2RRþMbarara000022Guyana#GY.CUþ0c2CUþCuyuni-Mazaruni00001ANebraska#167þ0c2STþStanton000019Georgia#043þ0c2CNþCandler00001BBrazil#017þ0c2PEþPernambuco000027WorldwithCountries#121þ0c2TJþTajikistan00001EMinnesota#095þ0c2MIþMille Lacs00001AKentucky#079þ0c2GRþGarrard00001BMichigan#089þ0c2LLþLeelanau00001AFlorida#007þ0c2BFþBradford00001EWestVirginia#007þ0c2BRþBraxton000018Italy#012þ0c2PIþPiemonte000018NewWorld#166þ0c2ESþSpain000017Asia3#008þ0c2MMþBurma (00001AVirginia#155þ0c2PUþPulaski00001BSouthDakota#025þ0c2CLþClark000019Alabama#003þ0c2BAþBaldwin000018Kansas#207þ0c2WOþWoodson00001AMexico#031þ0c2ZAþZacatecas000017Missouri#163þ0c2PIþPike00001FCalifornia#067þ0c2SAþSacramento000016Texas#235þ0c2IRIþIrion00001EUSACentralRegion#19þ0c2IAþIowa00001ANewWorld#14þ0c2HNþHonduras00002ABosniaHerzegovina#04þ0c2SRþSrednjebosanski000014Japan#20þ0c2KOþKochi000018Bulgaria#47þ0c2MþMontana000024Ontario#23þ0c2LGþLeeds and Grenville00002CCentralEuropeanRegion#02þ0c2CZþCzechRepublic00001BSwitzerland#01þ0c2AAþAargau000037NorthWestTerritories#CA.NT.GSþ0c2GSþGreat Slave Gateway000019Malawi#MW.NSþ0c2NSþNsanje000024Tibet#TI.SPþ0c2SPþShannan Prefecture000026FranceDepartment#FR.COþ0c2COþCote d'Or00001EEurope2#EU.MOþ0c2MOþMontenegro000021Cambodia#KH.KMþ0c2KMþKampong Cham00001CAlgeria#DZ.REþ0c2REþRelizane00001BBurkinaFaso#BF.BMþ0c2BMþBam000022Philippines#PH.PNþ0c2PNþPangasinan00001DKazakhstan#KZ.ATþ0c2ATþAqtobe00001FGuineaBissau#GW.BAþ0c2BAþBafata00001AUganda#UG.SIþ0c2SIþSironko000029Guyana#GY.EBþ0c2EBþEast Berbice-Corentyne000019Illinois#063þ0c2GUþGrundy000016Brazil#018þ0c2PIþPiaui000025WorldwithCountries#122þ0c2THþThailand000019Texas#055þ0c2CALþCaldwell000016Idaho#073þ0c2OWþOwyhee000015Ohio#017þ0c2BTþButler00001AWyoming#009þ0c2COþConverse00001DTennessee#077þ0c2HSþHenderson000016Italy#013þ0c2PUþPuglia000019NewWorld#167þ0c2SEþSweden000017Oklahoma#029þ0c2CLþCoal000016Iowa#081þ0c2HNþHancock000018Asia3#009þ0c2KHþCambodia00001CTexas#417þ0c2SHAþShackelford00001DNewJersey#023þ0c2MIþMiddlesex000019Indiana#033þ0c2DKþDe Kalb000017NewYork#005þ0c2BRþBronx000021Mexico#032þ0c2DIþDistrito Federal00001DNorthCarolina#073þ0c2GTþGates000017Georgia#225þ0c2PAþPeach000015Kansas#027þ0c2CYþClay000027MadagascarRegions#MG.MA.MLþ0c2MLþMelaky000022Switzerland#02þ0c2ARþAusser-Rhoden000020USACentralRegion#20þ0c2KSþKansas000019NewWorld#15þ0c2JMþJamaica000021PuertoRico#33þ0c2CTþCata&ntilde;o000024BosniaHerzegovina#05þ0c2TUþTuzlanski000017Japan#21þ0c2KUþKumamoto00001CBulgaria#48þ0c2PAþPazardzhik000025Ontario#24þ0c2LEþLennox and Addington000026CentralEuropeanRegion#03þ0c2DEþGermany00001DLibya#LY.YJþ0c2YJþYafran-Jadu000023FranceDepartment#FR.VGþ0c2VGþVosges000017Uganda#UG.AIþ0c2AIþAbim000017Nauru#NR.YAþ0c2YAþYaren00001CBenin#BJ.AQþ0c2AQþAtlantique00001AVietnam#VN.HAþ0c2HAþHa Tay00001BCambodia#KH.KNþ0c2KNþKandal000019Bhutan#BT.TOþ0c2TOþTongsa000024Liberia#LR.CMþ0c2CMþGrand Cape Mount00001CSudan#SD.RNþ0c2RNþRiver Nile00001ESudan#SD.SDþ0c2SDþSouth Darfur000024CentralAmerica2#CE.DMþ0c2DMþDominica000026Virginia#700þ0c2NNþNewport News (City)000019Nebraska#169þ0c2THþThayer000019Georgia#045þ0c2CRþCarroll00001FBrazil#019þ0c2RJþRio de Janeiro000029WorldwithCountries#123þ0c2TMþTurkmenistan00001CMinnesota#097þ0c2MSþMorrison000018Kentucky#081þ0c2GNþGrant00001AMichigan#091þ0c2LEþLenawee000019Florida#009þ0c2BVþBrevard00001DWestVirginia#009þ0c2BKþBrooke000018Italy#014þ0c2SAþSardegna00001ENewWorld#168þ0c2CHþSwitzerland000015Asia3#010þ0c2CNþChina00001FVirginia#157þ0c2RPþRappahannock00001ASouthDakota#027þ0c2CYþClay000019Alabama#005þ0c2BRþBarbour00001AKansas#209þ0c2WYþWyandotte000019Missouri#165þ0c2PAþPlatte00001FCalifornia#069þ0c2SNþSan Benito000015Texas#237þ0c2JACþJack000025Australia2#NSWþ0c2NSWþNew South Wales000029NewCaledonia#NC.NO.OGþ0c2OGþOu&eacute;goa000025Switzerland#03þ0c2BLþBasel-Landschaft000018NewWorld#16þ0c2MXþMexico000027BosniaHerzegovina#06þ0c2USþUnsko-sanski000014Japan#22þ0c2KYþKyoto000018Bulgaria#49þ0c2PKþPernik00001BOntario#25þ0c2MAþManitoulin000022USANorthWestRegion#41þ0c2ORþOregon000028Slovakia#01þ0c2BCþBansk&aacute; Bystrica000026CentralEuropeanRegion#04þ0c2HUþHungary00001CLibya#LY.ZAþ0c2ZAþAz Zawiyah000019Malawi#MW.NUþ0c2NUþNtcheu00001BVietnam#VN.GLþ0c2GLþGia Lai000024Morocco#MA.SMþ0c2SMþSouss Massa Draa00001ESaudiArabia#SA.NJþ0c2NJþNajran000018Guinea#GN.YOþ0c2YOþYomou00001ELaos#LA.LMþ0c2LMþLouang Namtha00001BIllinois#065þ0c2HAþHamilton000024Brazil#020þ0c2RNþRio Grande do Norte000027WorldwithCountries#124þ0c2UZþUzbekistan000018Texas#057þ0c2CAHþCalhoun000017Idaho#075þ0c2PAþPayette000021Virginia#520þ0c2BSþBristol (City)000016Ohio#019þ0c2CAþCarroll000017Wyoming#011þ0c2CRþCrook000019Tennessee#079þ0c2HEþHenry000017Italy#015þ0c2SIþSicilia00001ANewWorld#169þ0c2UAþUkraine00001BOklahoma#031þ0c2CMþComanche000015Iowa#083þ0c2HRþHardin000017Texas#419þ0c2SHEþShelby00001CNewJersey#025þ0c2MOþMonmouth00001AIndiana#035þ0c2DLþDelaware000018NewYork#007þ0c2BOþBroome00001ENorthCarolina#075þ0c2GRþGraham000019Georgia#227þ0c2PCþPickens000016Kansas#029þ0c2CDþCloud000021SouthCarolina#001þ0c2ABþAbbeville000020Switzerland#04þ0c2BSþBasel-Stadt00001BNewWorld#17þ0c2NIþNicaragua000016USA#WIþ0c2WIþWisconsin000019PuertoRico#35þ0c2CYþCayey000038BosniaHerzegovina#07þ0c2ZAþZapadnobosanska &#381;upanija000012Japan#23þ0c2MIþMie000018Bulgaria#50þ0c2EHþPleven00001AOntario#26þ0c2MIþMiddlesex00001CSlovakia#02þ0c2BLþBratislava00002CCentralEuropeanRegion#05þ0c2LIþLiechtenstein00001DPalau#PW.NCþ0c2NCþNgarchelong000016Iran#IR.GIþ0c2GIþGilan000023FranceDepartment#FR.CRþ0c2CRþCreuse00001FVietnam#VN.HCþ0c2HCþHo Chi Minh00001BCambodia#KH.KPþ0c2KPþKampot000020Morocco#MA.TDþ0c2TDþTadla Azilal00001CAngola#AO.LSþ0c2LSþLunda Sul00001FUzbekistan#UZ.NGþ0c2NGþNamangan000029Mauritania#MR.DNþ0c2DNþDakhlet Nouadhibou00002ECentralAmerica2#CE.DOþ0c2DOþDominican Republic000016Nepal#NP.KOþ0c2KOþKosi00001CRussia#RU.YSþ0c2YSþYaroslavl000019Nebraska#171þ0c2TOþThomas000019Georgia#047þ0c2CSþCatoosa000022Brazil#021þ0c2RSþRio Grande do Sul000024WorldwithCountries#125þ0c2VNþVietnam000019Minnesota#099þ0c2MWþMower000019Kentucky#083þ0c2GVþGraves00001DMichigan#093þ0c2LIþLivingston000019Florida#011þ0c2BWþBroward00001DWestVirginia#011þ0c2CAþCabell000017Italy#016þ0c2TOþToscana000021NewWorld#170þ0c2UKþUnited Kingdom00001AAsia3#012þ0c2TPþEast Timor00001BVirginia#159þ0c2RCþRichmond00001FSouthDakota#029þ0c2COþCodington000016Alabama#007þ0c2BIþBibb000017Missouri#167þ0c2POþPolk000023California#071þ0c2SBþSan Bernardino00001FAlaska#068þ0c2DEþDenali Borough000018Texas#239þ0c2JAKþJackson000019Switzerland#05þ0c2BEþBern000018NewWorld#18þ0c2PAþPanama000014USA#VTþ0c2VTþVermont000030BosniaHerzegovina#08þ0c2ZDþZeni&#269;ko-Dobojski000015Japan#24þ0c2MYþMiyagi000019Bulgaria#51þ0c2PBþPlovdiv000018Ontario#27þ0c2MUþMuskoka00001FSlovakia#03þ0c2KIþKo&scaron;ice000025CentralEuropeanRegion#06þ0c2PLþPoland000024MarshallIsland#MH.MH.JLþ0c2JLþJaluit00001BSerbia#RS.KBþ0c2KBþKolubara000017Iran#IR.ZAþ0c2ZAþZanjan00001APalau#PW.NDþ0c2NDþNgaraard000029FranceDepartment#FR.CSþ0c2CSþCorse du Sud00001DVietnam#VN.HDþ0c2HDþHai Duong000015Nauru#NR.EWþ0c2EWþEwa000028DenmarkRegion#DK.SLþ0c2SLþSj&aelig;lland000022Ethiopia#ET.HAþ0c2HAþHarari people000022Comoros #KM.GCþ0c2GCþGrande Comore00001AIllinois#067þ0c2HCþHancock000019Brazil#022þ0c2ROþRondonia000023WorldwithCountries#126þ0c2TWþTaiwan00001BNorthDakota#001þ0c2ADþAdams000019Texas#059þ0c2CANþCallahan000015Idaho#077þ0c2POþPower000018Ohio#021þ0c2CHþChampaign000019Wyoming#013þ0c2FRþFremont00001BTennessee#081þ0c2HIþHickman000023Italy#017þ0c2TRþTrentino-Alto Adige00001FNewWorld#171þ0c2VAþVatican City000019Oklahoma#033þ0c2CTþCotton000017Iowa#085þ0c2HIþHarrison000017Asia3#013þ0c2GEþGeorgia000018Texas#421þ0c2SHRþSherman00001ANewJersey#027þ0c2MRþMorris000018Indiana#037þ0c2DUþDubois00001DNewYork#009þ0c2CAþCattaraugus000021NorthCarolina#077þ0c2GNþGranville000018Georgia#229þ0c2PEþPierce000017Kansas#031þ0c2CFþCoffey00001DSouthCarolina#003þ0c2AIþAiken00001DSwitzerland#06þ0c2FRþFribourg000027NewWorld#19þ0c2KNþSt. Kitts &amp; Nevis000019PuertoRico#37þ0c2CBþCeiba000031BosniaHerzegovina#09þ0c2ZPþ&#381;upanija Posavska000017Japan#25þ0c2MAþMiyazaki000019Bulgaria#52þ0c2PPþRazgrad000018Ontario#28þ0c2NIþNiagara000017Slovakia#04þ0c2NIþNitra000027CentralEuropeanRegion#07þ0c2SKþSlovakia00002BPolandCounties#PL.DS.JMþ0c2DJMþJelenia Gora000019Uganda#UG.AMþ0c2AMþAmuria000025FranceDepartment#FR.CTþ0c2CTþCharente00001AKyrgyzstan#KG.OSþ0c2OSþOsh000019Europe2#EU.MTþ0c2MTþMalta00002BMorocco#MA.RZþ0c2RZþRabat Sale Zemmour Zaer000019Angola#AO.LUþ0c2LUþLuanda000019Angola#AO.NAþ0c2NAþNamibe00001FChad#TD.CGþ0c2CGþChari-Baguirmi00001ELaos#LA.LPþ0c2LPþLouangphabang000017Texas#241þ0c2JASþJasper00001BNebraska#173þ0c2TUþThurston00001AGeorgia#049þ0c2CHþCharlton000018Brazil#023þ0c2RRþRoraima000026WorldwithCountries#127þ0c2HKþHong Kong00001AMinnesota#101þ0c2MUþMurray00001AKentucky#085þ0c2GYþGrayson000017Michigan#095þ0c2LUþLuce000019Florida#013þ0c2CAþCalhoun00001EWestVirginia#013þ0c2CHþCalhoun000016Italy#018þ0c2UMþUmbria000019NewWorld#172þ0c2CYþCyprus000015Asia3#014þ0c2INþIndia00001AVirginia#161þ0c2RNþRoanoke00001CSouthDakota#031þ0c2CSþCorson000018Alabama#009þ0c2BLþBlount00001AMissouri#169þ0c2PLþPulaski00001ECalifornia#073þ0c2SDþSan Diego00001BAlaska#070þ0c2DIþDillingham00001BSwitzerland#07þ0c2GEþGeneve00001BNewWorld#20þ0c2LCþSt. Lucia000041BosniaHerzegovina#10þ0c2ZZþ&#381;upanija Zapadnohercegova&#269;ka000015Japan#26þ0c2NAþNagano000015Bulgaria#53þ0c2PþRuse00001AOntario#29þ0c2NPþNipissing00001FSlovakia#05þ0c2PVþPre&scaron;ov000027CentralEuropeanRegion#08þ0c2SLþSlovenia00002DNewBrunswick#CA.NB.ARþ0c2ARþAppalachian Range000018Niger#NE.AGþ0c2AGþAgadez00001ESerbia#RS.JNþ0c2JNþSouth Banat000019Uganda#UG.BDþ0c2BDþBudaka00001ASyria#SY.DIþ0c2DIþDamascus000020Cambodia#KH.KSþ0c2KSþKampong Spe00001ACapeVerde#CV.MAþ0c2MAþMaio00001EAlgeria#DZ.SAþ0c2SAþSouk Ahras00001AAngola#AO.MLþ0c2MLþMalanje000019Sudan#SD.RSþ0c2RSþRed Sea000018Sudan#SD.SIþ0c2SIþSennar000019Kansas#033þ0c2CMþComanche000021SouthCarolina#005þ0c2ALþAllendale000019Illinois#069þ0c2HRþHardin00001FBrazil#024þ0c2SCþSanta Catarina000022WorldwithCountries#128þ0c2MOþMacau00001CNorthDakota#003þ0c2BAþBarnes000018Texas#061þ0c2CAMþCameron000018Idaho#079þ0c2SHþShoshone000014Ohio#023þ0c2CLþClark000018Wyoming#015þ0c2GOþGoshen00001BTennessee#083þ0c2HOþHouston00001DItaly#019þ0c2VAþValle d'Aosta000019NewWorld#173þ0c2TKþTurkey000018Oklahoma#035þ0c2CGþCraig000014Iowa#087þ0c2HEþHenry000019Asia3#015þ0c2IDþIndonesia000016Texas#423þ0c2SMIþSmith000019NewJersey#029þ0c2OCþOcean000019Indiana#039þ0c2ELþElkhart000018NewYork#011þ0c2CYþCayuga00001ENorthCarolina#079þ0c2GEþGreene000016Georgia#231þ0c2PIþPike00002ANorthAmerica#001þ0c2AGþAntigua and Barbuda000021NewCaledonia#NC.IL.LIþ0c2LIþLifou000029NewCaledonia#NC.NO.PBþ0c2PBþPou&eacute;bo00001BSwitzerland#08þ0c2GLþGlarus000022USACentralRegion#26þ0c2MIþMichigan000032NewWorld#21þ0c2VCþSt. Vincent &amp; the Grenadines00001APuertoRico#39þ0c2CLþCiales00002BBosniaHerzegovina#11þ0c2RSþRepublika Srpska000017Japan#27þ0c2NGþNagasaki000017Bulgaria#54þ0c2HþShumen000018Ontario#30þ0c2NOþNorfolk00001FMontenegro#01þ0c2ANþAndrijevica000025Slovakia#06þ0c2TCþTren&#269;&iacute;n00002ACentralEuropeanRegion#09þ0c2CHþSwitzerland000020FrenchGuiana#GF.SL.SAþ0c2SAþSaul000028PolandCounties#PL.MA.NMþ0c2MNMþNowy Sacz00001AFiji#FJ.EA.KDþ0c2KDþKadavu000019Vanuatu#VU.TRþ0c2TRþTorba000029FranceDepartment#FR.VMþ0c2VMþVal-de-Marne00001DCameroon#CM.LTþ0c2LTþLittoral000025FranceDepartment#FR.CVþ0c2CVþCalvados00001CVietnam#VN.HGþ0c2HGþHa Giang00001FEurope2#EU.NLþ0c2NLþNetherlands000021Cambodia#KH.KTþ0c2KTþKampong Thom00001BBurkinaFaso#BF.TUþ0c2TUþTuy00002CMorocco#MA.THþ0c2THþTaza Al Hoceima Taounate000022Algeria#DZ.SBþ0c2SBþSidi Bel Abbes00001BNigeria#NG.BYþ0c2BYþBayelsa000019Nigeria#NG.DEþ0c2DEþDelta00001DMacedonia#MK.RMþ0c2RMþRosoman000023CoteDivoire#CI.SBþ0c2SBþSud-Bandama00001BTexas#243þ0c2JEDþJeff Davis000019Nebraska#175þ0c2VAþValley000019Georgia#051þ0c2CAþChatham00001ABrazil#025þ0c2SPþSao Paulo000024WorldwithCountries#129þ0c2ALþAlbania00001CMinnesota#103þ0c2NIþNicollet000018Kentucky#087þ0c2GEþGreen00001BMichigan#097þ0c2MKþMackinac00001BFlorida#015þ0c2CHþCharlotte00001BWestVirginia#015þ0c2CLþClay000020Scotland#001þ0c2ABþAberdeenshire000016Italy#020þ0c2VEþVeneto000019NewWorld#174þ0c2RUþRussia00001DVirginia#163þ0c2RKþRockbridge00001CSouthDakota#033þ0c2CUþCuster000019Alabama#011þ0c2BUþBullock000019Missouri#171þ0c2PUþPutnam00001ENorthAmerica#002þ0c2BSþBahamas000022California#075þ0c2SFþSan Francisco000024Switzerland#09þ0c2GRþGraub&uuml;nden000023USACentralRegion#27þ0c2MNþMinnesota000027NewWorld#22þ0c2TTþTrinidad &amp; Tobago000026Australia2#NTþ0c2NTþNorthern Territory000013Japan#28þ0c2NRþNara00001ABulgaria#55þ0c2CCþSilistra00001FOntario#31þ0c2NRþNorthumberland000017Montenegro#02þ0c2BAþBar000018Slovakia#07þ0c2TAþTrnava000019Uganda#UG.TGþ0c2TGþKitgum000023FranceDepartment#FR.VNþ0c2VNþVienne000018Iran#IR.HDþ0c2HDþHamadan000022FranceDepartment#FR.DMþ0c2DMþDrome000032DemocraticRepublicoftheCongo#CD.HCþ0c2HCþOrientale000019Congo#CG.BOþ0c2BOþBouenza000019Gambia#GM.BJþ0c2BJþBanjul00001CMacedonia#MK.SDþ0c2SDþDojran00001EMacedonia#MK.RNþ0c2RNþRankovce000020Sudan#SD.SKþ0c2SKþSouth Kurdufan00001BBhutan#BT.BUþ0c2BUþBumthang00001ABhutan#BT.CKþ0c2CKþChhukha000017Bhutan#BT.DAþ0c2DAþDaga00002FCentralAfricanRepublic#CF.KBþ0c2KBþNana-Grebizi000026Chad#TD.BTþ0c2BTþBorkou-Ennedi-Tibesti00001DTanzania#TZ.MOþ0c2MOþMorogoro000021CoteDivoire#CI.SCþ0c2SCþSud-Comoe000017Kansas#035þ0c2CLþCowley000020SouthCarolina#007þ0c2ANþAnderson00001CIllinois#071þ0c2HEþHenderson000018Brazil#026þ0c2SEþSergipe000024WorldwithCountries#130þ0c2ADþAndorra00001CNorthDakota#005þ0c2BEþBenson000015Texas#063þ0c2CAPþCamp000015Idaho#081þ0c2TEþTeton000017Ohio#025þ0c2CEþClermont00001DWyoming#017þ0c2HSþHot Springs00001DTennessee#085þ0c2HPþHumphreys000018Scotland#002þ0c2ANþAngus000019Italy#021þ0c2SMþSanmarino00001CNewWorld#175þ0c2AUþAustralia000018Oklahoma#037þ0c2CKþCreek000015Iowa#089þ0c2HOþHoward00001ATexas#425þ0c2SOMþSomervell00001BNewJersey#031þ0c2PAþPassaic000019Indiana#041þ0c2FAþFayette00001CNewYork#013þ0c2CHþChautauqua000020NorthCarolina#081þ0c2GUþGuilford000016Georgia#233þ0c2POþPolk00001DIreland#001þ0c2CAþCeatharlach00001FNorthAmerica#003þ0c2BBþBarbados000027NewCaledonia#NC.IL.MAþ0c2MAþMar&eacute;00002CNewCaledonia#NC.NO.PDþ0c2PDþPoindimi&eacute;000021Switzerland#10þ0c2IRþInner-Rhoden000017Canada#01þ0c2ABþAlberta00001FNewWorld#23þ0c2USþUnited States000019PuertoRico#41þ0c2CDþCidra000016Japan#29þ0c2NIþNiigata000018Bulgaria#56þ0c2CHþSliven000017Ontario#32þ0c2OTþOttawa00001AMontenegro#03þ0c2BEþBerane00001DSlovakia#08þ0c2ZIþ&#381;ilina000019Uganda#UG.SRþ0c2SRþSoroti00001EMacedonia#MK.ADþ0c2ADþAerodrom00001BMalawi#MW.PHþ0c2PHþPhalombe000027FranceDepartment#FR.VOþ0c2VOþVal d'Oise00002AGuinea#GN.GUþ0c2GUþGu&eacute;ck&eacute;dou000019Uganda#UG.BGþ0c2BGþBugiri000018Benin#BJ.BOþ0c2BOþBorgou000020Cyprus2#CY.GCþ0c2GCþGreek Cyprus000019Iran#IR.GOþ0c2GOþGolestan000019Algeria#DZ.SDþ0c2SDþSaida00001ANepal#NP.MAþ0c2MAþMahakali00001FPapuaNewGuinea#PG.GUþ0c2GUþGulf000019Burundi#BI.NGþ0c2NGþNgozi00001ATexas#245þ0c2JEFþJefferson00001DNebraska#177þ0c2WAþWashington00001FGeorgia#053þ0c2CCþChattahoochee00001ABrazil#027þ0c2TOþTocantins000024WorldwithCountries#131þ0c2ATþAustria00001AMinnesota#105þ0c2NOþNobles00001AKentucky#089þ0c2GUþGreenup000019Michigan#099þ0c2MBþMacomb000018Florida#017þ0c2CIþCitrus000020WestVirginia#017þ0c2DOþDoddridge000019Scotland#003þ0c2ARþArgyll000017NewWorld#176þ0c2FJþFiji00001DVirginia#165þ0c2RGþRockingham00001DSouthDakota#035þ0c2DAþDavison000018Alabama#013þ0c2BTþButler000018Missouri#173þ0c2RSþRalls00001FIreland#002þ0c2CVþCabh&aacute;n00001DNorthAmerica#004þ0c2BZþBelize000020California#077þ0c2SJþSan Joaquin00001BSwitzerland#11þ0c2LUþLuzern000020Canada#02þ0c2BCþBritish Columbia000022USACentralRegion#29þ0c2MOþMissouri00001BNewWorld#24þ0c2GLþGreenland000013Japan#30þ0c2OIþOita000022Australia#SWþ0c2SWþNew South Wales000019Bulgaria#57þ0c2CMþSmolyan000017Ontario#33þ0c2OXþOxford000020Montenegro#04þ0c2BPþBijelo Polje00002BFranceDepartment#FR.VPþ0c2VPþVille de Paris000018Benin#BJ.CFþ0c2CFþCouffo000019Libya#LY.GRþ0c2GRþGharyan00001AEurope2#EU.NOþ0c2NOþNorway00001AMauritius#MU.MOþ0c2MOþMoka00001FNigeria#NG.CRþ0c2CRþCross River00001DBurkinaFaso#BF.BWþ0c2BWþBanwa00001DAlgeria#DZ.ADþ0c2ADþAin Defla00001FGuineaBissau#GW.CAþ0c2CAþCacheu000019Kansas#037þ0c2CRþCrawford00001FSouthCarolina#009þ0c2BAþBamberg000018Illinois#073þ0c2HNþHenry00001ABelgium#010þ0c2BRþBrussels000024WorldwithCountries#132þ0c2BYþBelarus00001ENorthDakota#007þ0c2BIþBillings000017Texas#065þ0c2CARþCarson00001AIdaho#083þ0c2TFþTwin falls000016Ohio#027þ0c2CIþClinton000019Wyoming#019þ0c2JOþJohnson000025Europewithcountries#001þ0c2ALþAlbania00001BTennessee#087þ0c2JAþJackson00001BScotland#004þ0c2AYþAyrshire00001BNewWorld#177þ0c2KIþKiribati000019Oklahoma#039þ0c2CSþCuster000017Iowa#091þ0c2HUþHumboldt000015Asia3#019þ0c2JPþJapan000016Texas#427þ0c2STAþStarr000019NewJersey#033þ0c2SAþSalem000017Indiana#043þ0c2FLþFloyd000019NewYork#015þ0c2CEþChemung00001FNorthCarolina#083þ0c2HAþHalifax000019Georgia#235þ0c2PLþPulaski00001DIreland#003þ0c2CLþCl&aacute;r00001DNorthAmerica#005þ0c2CAþCanada000019Montenegro#05þ0c2BUþBudva000024Switzerland#12þ0c2NEþNeuch&acirc;tel000018Canada#03þ0c2MBþManitoba00001BNewWorld#25þ0c2ARþArgentina000019PuertoRico#43þ0c2COþCoamo000018Bahamas#01þ0c2AKþAcklins000016Japan#31þ0c2OKþOkayama000017Bulgaria#58þ0c2CþSofiya00001COntario#34þ0c2PSþParry Sound000024SierraLeone#SL.NO.KDþ0c2KDþKoinadugu00001DDjibouti#DJ.DBþ0c2DBþDjibouti000024EquatorialGuinea#GQ.ANþ0c2ANþAnnobon00001AIran#IR.HGþ0c2HGþHormozgan000024FranceDepartment#FR.CZþ0c2CZþCorreze000019Algeria#DZ.SFþ0c2SFþSetif000020Bhutan#BT.TYþ0c2TYþTashi Yangtse00001DCongo#CG.BRþ0c2BRþBrazzaville00001FGuineaBissau#GW.BLþ0c2BLþBolama000019Texas#247þ0c2JIHþJim Hogg000021Virginia#710þ0c2NOþNorfolk (City)000018Nebraska#179þ0c2WYþWayne00001BGeorgia#055þ0c2CGþChattooga000020Belgium#011þ0c2VBþVlaams-Brabant000024WorldwithCountries#133þ0c2BEþBelgium00001AMinnesota#107þ0c2NRþNorman00001AKentucky#091þ0c2HAþHancock00001BMichigan#101þ0c2MSþManistee000016Florida#019þ0c2CLþClay00001BMississippi#001þ0c2ADþAdams000025Europewithcountries#002þ0c2ADþAndorra00001EWestVirginia#019þ0c2FAþFayette00001DScotland#005þ0c2BAþBanffshire000023NewWorld#178þ0c2MHþMarshall Islands00001AVirginia#167þ0c2RUþRussell000019SouthDakota#037þ0c2DYþDay000019Alabama#015þ0c2CAþCalhoun00001BMissouri#175þ0c2ROþRandolph00001AIreland#004þ0c2COþCorcaigh000021NorthAmerica#006þ0c2CRþCosta Rica000024California#079þ0c2SPþSan Luis Obispo00001BMontenegro#06þ0c2CEþCetinje00001FMiddleEast#01þ0c2AFþAfghanistan00001ESwitzerland#13þ0c2NIþNidwalden00001DCanada#04þ0c2NBþNew Brunswick000022USACentralRegion#31þ0c2NEþNebraska000019NewWorld#26þ0c2BOþBolivia00001EBahamas#02þ0c2BRþBerry Islands000016Japan#32þ0c2ONþOkinawa00001EBulgaria#59þ0c2CTþStara Zagora000015Ontario#35þ0c2PEþPeel000022FrenchGuiana#GF.CY.CMþ0c2CMþCamopi000020FranceDepartment#FR.VRþ0c2VRþVar00001EPalau#PW.NLþ0c2NLþNgeremlengui00001BUganda#UG.ATþ0c2ATþAmolatar00001BUganda#UG.BJþ0c2BJþButaleja000016Libya#LY.GTþ0c2GTþGhat00001DSriLanka#LK.VAþ0c2VAþVavuniya000021Somalia#SO.JDþ0c2JDþJubbada Dhexe000017Yemen#YE.LAþ0c2LAþLahij00001FGuineaBissau#GW.BMþ0c2BMþBiombo000018Kansas#039þ0c2DCþDecatur000020SouthCarolina#011þ0c2BRþBarnwell00001BIllinois#075þ0c2IRþIroquois000033WorldwithCountries#134þ0c2BHþBosnia and Herzegovina00001FNorthDakota#009þ0c2BOþBottineau000015Texas#067þ0c2CASþCass000016Idaho#085þ0c2VAþValley000025Virginia#530þ0c2BVþBuena Vista (City)000019Ohio#029þ0c2COþColumbiana00001ENewMexico#001þ0c2BEþBernalillo000019Wyoming#021þ0c2LAþLaramie000025Europewithcountries#003þ0c2ATþAustria00001DTennessee#089þ0c2JEþJefferson00001FScotland#006þ0c2BEþBerwickshire00001DNewWorld#179þ0c2FMþMicronesia00001BOklahoma#041þ0c2DEþDelaware000012Iowa#093þ0c2IDþIda00001AAsia3#021þ0c2KZþKazakhstan000019Texas#429þ0c2STEþStephens00001CNewJersey#035þ0c2SOþSomerset00001AIndiana#045þ0c2FOþFountain00001ANewYork#017þ0c2CNþChenango00001FNorthCarolina#085þ0c2HRþHarnett000018Georgia#237þ0c2PUþPutnam000025Ireland#005þ0c2DOþD&uacute;n na nGall00001BNorthAmerica#007þ0c2CUþCuba00002ENewCaledonia#NC.NO.PHþ0c2PHþPon&eacute;rihouen00001FMontenegro#07þ0c2DAþDanilovgrad00001BMiddleEast#02þ0c2BAþBahrain00001DSwitzerland#14þ0c2OBþObwalden000023EastEuropeanRegion#01þ0c2BYþBelarus000029Canada#05þ0c2NLþNewfoundland and Labrador000018NewWorld#27þ0c2BRþBrazil000022PuertoRico#45þ0c2CMþComer&iacute;o000016Belize#01þ0c2BZþBelize000017Bahamas#03þ0c2BIþBimini000014Japan#33þ0c2OSþOsaka00001ENorwayRegion#01þ0c2AKþAkershus00001CBulgaria#60þ0c2TþTurgovishte000016Ontario#36þ0c2PRþPerth000027PolandCounties#PL.SL.KAþ0c2SKAþKatowice00001ECoteDivoire#CI.AGþ0c2AGþAgneby00001APalau#PW.NMþ0c2NMþNgardmau00001AVietnam#VN.HMþ0c2HMþHa Nam000020GuineaBissau#GW.TOþ0c2TOþTombali000025BurkinaFaso#BF.BZþ0c2BZþBaz&egrave;ga000027CentralAfricanRepublic#CF.KGþ0c2KGþKemo00001BTanzania#TZ.MTþ0c2MTþMtwara000017Nepal#NP.MEþ0c2MEþMechi00001FNorthAmerica#008þ0c2DMþDominica00001ECalifornia#081þ0c2SEþSan Mateo00001ATexas#249þ0c2JIWþJim Wells00001ANebraska#181þ0c2WBþWebster00001AGeorgia#057þ0c2CEþCherokee000025WorldwithCountries#135þ0c2BGþBulgaria00001BMinnesota#109þ0c2OLþOlmsted000019Kentucky#093þ0c2HRþHardin00001CMichigan#103þ0c2MQþMarquette000019Florida#021þ0c2COþCollier00001CMississippi#003þ0c2ALþAlcorn000025Europewithcountries#004þ0c2BYþBelarus00001DWestVirginia#021þ0c2GIþGilmer000017Scotland#007þ0c2BUþBute000018NewWorld#180þ0c2NRþNauru00001DAsia3#022þ0c2KPþKorea (north)000018Virginia#169þ0c2SCþScott000018Colorado#001þ0c2ADþAdams00001BSouthDakota#039þ0c2DUþDeuel00001AAlabama#017þ0c2CHþChambers000016Missouri#177þ0c2RAþRay00002AIreland#006þ0c2DUþBaile &Aacute;tha Cliath000026USANorthWestRegion#53þ0c2WAþWashington00001FMontenegro#08þ0c2HNþHerceg Novi000018MiddleEast#03þ0c2INþIran000021Switzerland#15þ0c2SGþSankt Gallen000024SouthEuropeanRegion#01þ0c2ALþAlbania000024EastEuropeanRegion#02þ0c2BGþBulgaria000017NewWorld#28þ0c2CLþChile000014Belize#02þ0c2CYþCayo00001CBahamas#04þ0c2BPþBlack Point000013Japan#34þ0c2SAþSaga000020NorwayRegion#02þ0c2AAþAust-Agder000016Bulgaria#61þ0c2BþVarna00001DOntario#37þ0c2PTþPeterborough00001CBurundi#BI.MVþ0c2MVþMuramvya000019Uganda#UG.BLþ0c2BLþBulisa000028FranceDepartment#FR.DSþ0c2DSþDeux Sevres000019Vietnam#VN.HNþ0c2HNþHanoi000022Morocco#MA.TOþ0c2TOþTanger Tetouan00001ANigeria#NG.EBþ0c2EBþEbonyi00001EBurma#MM.KCþ0c2KCþKachin State00001FPhilippines#PH.QRþ0c2QRþQuirino000019Georgia#239þ0c2QUþQuitman00001AIreland#007þ0c2GAþGaillimh000025NorthAmerica#009þ0c2DOþDominican Rep.00001AKansas#041þ0c2DKþDickinson000020SouthCarolina#013þ0c2BEþBeaufort00001AIllinois#077þ0c2JAþJackson000024WorldwithCountries#136þ0c2HYþCroatia00001CNorthDakota#011þ0c2BWþBowman000017Texas#069þ0c2CATþCastro00001AIdaho#087þ0c2WAþWashington000018Ohio#031þ0c2CSþCoshocton00001ANewMexico#003þ0c2CAþCatron000018Nebraska#001þ0c2ADþAdams000019Wyoming#023þ0c2LIþLincoln000025Europewithcountries#005þ0c2BEþBelgium00001BTennessee#091þ0c2JOþJohnson00001CScotland#008þ0c2CAþCaithness00001ENewWorld#181þ0c2NZþNew Zealand000018Oklahoma#043þ0c2DWþDewey000013Iowa#095þ0c2IWþIowa00001DAsia3#023þ0c2KRþKorea (south)000019Texas#431þ0c2STRþSterling00001ANewJersey#037þ0c2SUþSussex00001AIndiana#047þ0c2FRþFranklin000019NewYork#019þ0c2CLþClinton00001FNorthCarolina#087þ0c2HWþHaywood000022Montenegro#09þ0c2KLþKola&scaron;in000018MiddleEast#04þ0c2IZþIraq000021Switzerland#16þ0c2SCþSchaffhausen000024SouthEuropeanRegion#02þ0c2ADþAndorra000023EastEuropeanRegion#03þ0c2MDþMoldova00001BCanada#07þ0c2NSþNova Scotia00001ANewWorld#29þ0c2COþColombia000021Quebec#01þ0c2BSþBas-Saint-Laurent00001BPuertoRico#47þ0c2CZþCorozal000017Belize#03þ0c2CZþCorozal00001BBahamas#05þ0c2CIþCat Island000016Japan#35þ0c2SIþSaitama000020Bulgaria#62þ0c2BTþVeliko Turnovo000025Ontario#38þ0c2PCþPrescott and Russell000019Burundi#BI.MWþ0c2MWþMwaro00001CHongKong#HK.ISþ0c2ISþIslands00001BMacedonia#MK.AJþ0c2AJþSaraj000023Sudan#SD.BGþ0c2BGþCentral Equatoria000026Serbia#RS.KMþ0c2KMþKosovsko Mitrovacki000017Uganda#UG.AWþ0c2AWþArua000019Thailand#TH.YLþ0c2YLþYala000025SolomonIsland#SB.GCþ0c2GCþGuadalcanal00001EBotswana#BW.KGþ0c2KGþKgalagadi00001CVietnam#VN.HOþ0c2HOþHoa Binh000016Syria#SY.DRþ0c2DRþDara00001FMacedonia#MK.RUþ0c2RUþStrumitsa00001ABhutan#BT.CRþ0c2CRþChirang00001DPhilippines#PH.RIþ0c2RIþRizal00001FKazakhstan#KZ.BYþ0c2BYþBayqonyr00001BMissouri#179þ0c2REþReynolds000020Ireland#008þ0c2KEþCiarra&iacute;000022NorthAmerica#010þ0c2SVþEl Salvador000022California#083þ0c2SRþSanta Barbara000018Texas#251þ0c2JOHþJohnson00001ANebraska#183þ0c2WHþWheeler000018Georgia#059þ0c2CKþClarke00002BWorldwithCountries#137þ0c2CZþCzech Republic00001EMinnesota#111þ0c2OTþOtter Tail000019Kentucky#095þ0c2HLþHarlan000018Michigan#105þ0c2MAþMason00001AFlorida#023þ0c2CUþColumbia00001BMississippi#005þ0c2AMþAmite000034Europewithcountries#006þ0c2BAþBosnia and Herzegovina00001CWestVirginia#023þ0c2GRþGrant000023Scotland#009þ0c2CLþClackmannanshire000018NewWorld#182þ0c2PWþPalau00001DVirginia#171þ0c2SHþShenandoah00001AColorado#003þ0c2ALþAlamosa00001FAlaska#261þ0c2VCþValdez-Cordova00001BSouthDakota#041þ0c2DEþDewey00001AAlabama#019þ0c2CEþCherokee000019Montenegro#10þ0c2KTþKotor00001AMiddleEast#05þ0c2ISþIsrael00001BSwitzerland#17þ0c2SHþSchwyz000035SouthEuropeanRegion#03þ0c2BAþBosnia &amp; Herzegovina000023EastEuropeanRegion#04þ0c2ROþRomania000017Canada#08þ0c2ONþOntario000019NewWorld#30þ0c2ECþEcuador000027Quebec#02þ0c2SLþSaguenay-Lac-Saint-Jean00001AUSA#WVþ0c2WVþWest Virginia00001BBelize#04þ0c2OWþOrange Walk00001EBahamas#06þ0c2CBþCentral Abaco000014USA#GAþ0c2GAþGeorgia000014Japan#36þ0c2SHþShiga00001ENorwayRegion#04þ0c2BUþBuskerud000017Bulgaria#63þ0c2BHþVidin00001EOntario#39þ0c2PNþPrince Edward000022MarshallIsland#MH.MH.KNþ0c2KNþKnox00001BTanzania#TZ.MWþ0c2MWþMwanza00001ARussia#RU.IKþ0c2IKþIrkutsk00001APalau#PW.NPþ0c2NPþNgatpang00001DUganda#UG.BNþ0c2BNþBundibugyo00001ABenin#BJ.CLþ0c2CLþCollines00002FHungaryRegions#HU.NGþ0c2NGþNorthern Great Plain00001CVietnam#VN.HPþ0c2HPþHaiPhong00001AAlgeria#DZ.SKþ0c2SKþSkikda000017Nigeria#NG.EDþ0c2EDþEdo000021Somalia#SO.JHþ0c2JHþJubbada Hoose00001DMacedonia#MK.RVþ0c2RVþRadovis000022Macedonia#MK.SLþ0c2SLþSveti Nikole000018Niger#NE.THþ0c2THþTahoua000021NorthCarolina#089þ0c2HDþHenderson000017Georgia#241þ0c2RBþRabun00001BIreland#009þ0c2KIþCill Dara00001ENorthAmerica#011þ0c2GDþGrenada000019Kansas#043þ0c2DPþDoniphan000020SouthCarolina#015þ0c2BKþBerkeley000019Illinois#079þ0c2JSþJasper000024WorldwithCountries#138þ0c2DKþDenmark00001BNorthDakota#013þ0c2BUþBurke000019Texas#071þ0c2CHAþChambers000017Ohio#033þ0c2CWþCrawford00001ANewMexico#005þ0c2CHþChaves00001BNebraska#003þ0c2ANþAntelope000019Wyoming#025þ0c2NAþNatrona000026Europewithcountries#007þ0c2BGþBulgaria000018Tennessee#093þ0c2KNþKnox000021Scotland#010þ0c2DMþDumbartonshire000023NewWorld#183þ0c2PGþPapua New Guinea000018Oklahoma#045þ0c2ELþEllis000016Iowa#097þ0c2JAþJackson00001ATexas#433þ0c2STOþStonewall000019NewJersey#039þ0c2UNþUnion000018Indiana#049þ0c2FUþFulton00001ANewYork#021þ0c2COþColumbia000029YukonTerritory#CA.YT.NOþ0c2NOþNorth Yukon000023USANorthWestRegion#56þ0c2WYþWyoming00001CMontenegro#11þ0c2MKþMojkovac00001AMiddleEast#06þ0c2JOþJordan00001ESwitzerland#18þ0c2SOþSolothurn000024SouthEuropeanRegion#04þ0c2HYþCroatia000023EastEuropeanRegion#05þ0c2UAþUkraine000024Canada#09þ0c2PEþPrince Edward Island000022NewWorld#31þ0c2FKþFalkland Islands000022Quebec#03þ0c2CNþCapitale-Nationale00001BPuertoRico#49þ0c2CUþCulebra00001BBelize#05þ0c2SCþStann Creek00001FBahamas#07þ0c2CNþCentral Andros000014USA#FLþ0c2FLþFlorida000016Japan#37þ0c2SMþShimane00001ENorwayRegion#05þ0c2FIþFinnmark000018Bulgaria#64þ0c2BPþVratsa00001COntario#40þ0c2RAþRainy River000024MarshallIsland#MH.MH.KOþ0c2KOþKosrae00001EFiji#FJ.TH.EAþ0c2EAþTholo East00001ETajikistan#TJ.KLþ0c2KLþKhatlon00001BBurundi#BI.MYþ0c2MYþMuyinga000032Guyana#GY.ESþ0c2ESþEssequibo Islands-West Demerara00001BSerbia#RS.KOþ0c2KOþKosovski00002BHungaryRegions#HU.NHþ0c2NHþNorthern Hungary000029FranceDepartment#FR.ELþ0c2ELþEure et Loir00001BAlgeria#DZ.TBþ0c2TBþTebessa00001CSriLanka#LK.COþ0c2COþColombo000014Mali#ML.GAþ0c2GAþGao000019Senegal#SN.KDþ0c2KDþKolda000019Missouri#181þ0c2RIþRipley000020Ireland#010þ0c2KLþCill Chainnigh000020NorthAmerica#012þ0c2GTþGuatemala000020California#085þ0c2STþSanta Clara000016Texas#253þ0c2JONþJones000017Nebraska#185þ0c2YOþYork000016Georgia#061þ0c2CYþClay000024WorldwithCountries#139þ0c2EEþEstonia00001EMinnesota#113þ0c2PEþPennington00001BKentucky#097þ0c2HIþHarrison00001AMichigan#107þ0c2MCþMecosta00001ANewMexico#006þ0c2CIþCibola00001CMississippi#007þ0c2ATþAttala000025Europewithcountries#008þ0c2HYþCroatia000021WestVirginia#025þ0c2GEþGreenbrier000020Scotland#011þ0c2DUþDumfriesshire000018NewWorld#184þ0c2WSþSamoa000014Asia3#026þ0c2LAþLaos000018Virginia#173þ0c2SMþSmyth00001BColorado#005þ0c2ARþArapahoe00001DSouthDakota#043þ0c2DOþDouglas000019Alabama#021þ0c2CIþChilton000020NewCaledonia#NC.NO.PMþ0c2PMþPoum000017Bulgaria#65þ0c2YþYambol000018Ontario#41þ0c2REþRenfrew000026Montenegro#12þ0c2NKþNik&scaron;i&#263;00001AMiddleEast#07þ0c2KUþKuwait00001CSwitzerland#19þ0c2THþThurgau000023SouthEuropeanRegion#05þ0c2GRþGreece000022EastEuropeanRegion#06þ0c2RUþRussia000016Canada#10þ0c2QCþQuebec00001FNewWorld#32þ0c2GFþFrench Guiana000018Quebec#04þ0c2MAþMauricie000016Belize#06þ0c2TOþToledo000022Bahamas#08þ0c2CEþCentral Eleuthera000017Japan#38þ0c2SZþShizouka00001DNorwayRegion#06þ0c2HEþHedmark000029FrenchGuiana#GF.SL.SLþ0c2SLþSaint Laurent000016Fiji#FJ.WE.BAþ0c2BAþBa00001CTanzania#TZ.MYþ0c2MYþManyara00001FGuineaBissau#GW.BSþ0c2BSþBissau00001BUK7#UK.IMþ0c2IMþIsle of Man00001BZimbabwe#ZW.HAþ0c2HAþHarare000026Serbia#RS.KPþ0c2KPþKosovsko Pomoravski000025Singapore#SG.SOþ0c2SOþSouth Singapore00001FCambodia#KH.MKþ0c2MKþMondulkiri00001FCongo#CG.COþ0c2COþCuvette Ouest000019Angola#AO.MXþ0c2MXþMoxico000019Algeria#DZ.ALþ0c2ALþAlger000026Algeria#DZ.BBþ0c2BBþBordj Bou Arreridj000029CentralAfricanRepublic#CF.LBþ0c2LBþLobaye000020NorthCarolina#091þ0c2HTþHertford00001AGeorgia#243þ0c2RAþRandolph000017Ireland#011þ0c2LAþLaois00001CNorthAmerica#013þ0c2HTþHaiti000018Kansas#045þ0c2DGþDouglas00001FSouthCarolina#017þ0c2CAþCalhoun00001CIllinois#081þ0c2JEþJefferson000018Missouri#001þ0c2ADþAdair000024WorldwithCountries#140þ0c2FIþFinland00001ENorthDakota#015þ0c2BRþBurleigh000019Texas#073þ0c2CHEþCherokee000017Ohio#035þ0c2CUþCuyahoga00001ANewMexico#007þ0c2COþColfax000019Nebraska#005þ0c2ARþArthur00001AWyoming#027þ0c2NIþNiobrara00002CEuropewithcountries#009þ0c2CZþCzech Republic000018Tennessee#095þ0c2LAþLake00001FScotland#012þ0c2EAþEast Lothian000022NewWorld#185þ0c2SBþSolomon Islands00001BOklahoma#047þ0c2GAþGarfield000015Iowa#099þ0c2JSþJasper000017Texas#435þ0c2SUTþSutton00001ANewJersey#041þ0c2WAþWarren000018Indiana#051þ0c2GIþGibson00001ANewYork#023þ0c2CTþCortland000017Ontario#42þ0c2SIþSimcoe000018Montenegro#13þ0c2PVþPlav00001EMiddleEast#08þ0c2KGþKyrgyzstan00001BSwitzerland#20þ0c2TIþTicino000022SouthEuropeanRegion#06þ0c2ITþItaly00001CCanada#11þ0c2SKþSaskatchewan000026USACentralRegion#38þ0c2NDþNorth Dakota000023USASouthWestRegion#04þ0c2AZþArizona000018NewWorld#33þ0c2GYþGuyana000016Quebec#05þ0c2ESþEstrie000014USA#WYþ0c2WYþWyoming00001APuertoRico#51þ0c2DOþDorado000021Bahamas#09þ0c2FPþCity of Freeport000016Japan#39þ0c2TOþTochigi00001FNorwayRegion#07þ0c2HOþHordaland000019Nepal#NP.LUþ0c2LUþLumbini00001ANepal#NP.NAþ0c2NAþNarayani000021HongKong#HK.KCþ0c2KCþKowloon City000019Uganda#UG.TRþ0c2TRþTororo000021Kiribati#KI.LIþ0c2LIþLine Islands00001CPhilippines#PH.ABþ0c2ABþAbra00001DRussia#RU.INþ0c2INþIngushetia000021China2#CN.XJþ0c2XJþXinjiang Uygur00001APalau#PW.NSþ0c2NSþNgchesar000021Lebanon#LE.JAþ0c2JAþSouth Lebanon00001BTuvalu#TV.FNþ0c2FNþFunafuti00001CUzbekistan#UZ.NWþ0c2NWþNavoi00001AAlgeria#DZ.BCþ0c2BCþBechar00001DBurma#MM.KHþ0c2KHþKayah State000022Macedonia#MK.SOþ0c2SOþSuto Orizari000026Philippines#PH.SCþ0c2SCþSouth Cotabato00001EMissouri#183þ0c2SRþSt. Charles00001AIreland#012þ0c2LEþLiatroim00001FNorthAmerica#014þ0c2HNþHonduras00001FCalifornia#087þ0c2SCþSanta Cruz000017Texas#255þ0c2KARþKarnes000019Georgia#063þ0c2CTþClayton000023WorldwithCountries#141þ0c2FRþFrance000018Minnesota#115þ0c2PIþPine000017Kentucky#099þ0c2HTþHart00001CMichigan#109þ0c2MMþMenominee000018Florida#027þ0c2DEþDesoto00001CMississippi#009þ0c2BEþBenton000025Europewithcountries#010þ0c2DKþDenmark000020WestVirginia#027þ0c2HAþHampshire000017Scotland#013þ0c2FIþFife000018NewWorld#186þ0c2TOþTonga000018Asia3#028þ0c2MYþMalaysia00001EVirginia#175þ0c2SUþSouthampton00001CColorado#007þ0c2ACþArchuleta00001DSouthDakota#045þ0c2EDþEdmunds000019Alabama#023þ0c2COþChoctaw00002EOntario#43þ0c2STþStormont, Dundas and Glengary000020Montenegro#14þ0c2PLþPlu&#382;ine00001BMiddleEast#09þ0c2LEþLebanon000018Switzerland#21þ0c2URþUri000026SouthEuropeanRegion#07þ0c2MKþMacedonia00001FCanada#12þ0c2YTþYukon Territory00001ANewWorld#34þ0c2PYþParaguay00001FQuebec#06þ0c2MNþMontr&eacute;al00001FBahamas#10þ0c2CKþCrooked Island000018Japan#40þ0c2TKþTokushima00002CNorwayRegion#08þ0c2MRþM&oslash;re og Romsdal00001EFiji#FJ.TH.WEþ0c2WEþTholo West000021SierraLeone#SL.NO.KMþ0c2KMþKambia00001BNiger#NE.TLþ0c2TLþTillabery00001BTajikistan#TJ.LEþ0c2LEþSogd00001BDjibouti#DJ.DKþ0c2DKþDikhil00002BRussia#RU.JEþ0c2JEþJewish Autonomous Region00001BUganda#UG.BRþ0c2BRþKabarole00001DBotswana#BW.KLþ0c2KLþKgatleng000019China2#CN.FJþ0c2FJþFujian00001BVietnam#VN.HTþ0c2HTþHa Tinh00001FCapeVerde#CV.MOþ0c2MOþMosteiros00001AAlgeria#DZ.ANþ0c2ANþAnnaba00001ANewYork#025þ0c2DEþDelaware00001CNorthCarolina#093þ0c2HOþHoke00001AGeorgia#245þ0c2RIþRichmond00001BIreland#013þ0c2LIþLuimneach00001ENorthAmerica#015þ0c2JMþJamaica000018Kansas#047þ0c2EDþEdwards000022SouthCarolina#019þ0c2CHþCharleston000019Illinois#083þ0c2JRþJersey000019Missouri#003þ0c2ANþAndrew000024WorldwithCountries#142þ0c2DEþGermany00001ANorthDakota#017þ0c2CAþCass00001ATexas#075þ0c2CHIþChildress000014Ohio#037þ0c2DAþDarke000019NewMexico#009þ0c2CUþCurry000019Nebraska#007þ0c2BAþBanner000016Wyoming#029þ0c2PAþPark000025Europewithcountries#011þ0c2EEþEstonia00001ETennessee#097þ0c2LUþLauderdale000022Scotland#014þ0c2ISþInverness-shire000019NewWorld#187þ0c2TVþTuvalu000019Oklahoma#049þ0c2GRþGarvin000018Iowa#101þ0c2JEþJefferson000018Texas#437þ0c2SWIþSwisher000017Indiana#053þ0c2GRþGrant000018Ontario#44þ0c2SUþSudbury00001CMontenegro#15þ0c2PUþPljevlja000018MiddleEast#10þ0c2MUþOman00001BSwitzerland#22þ0c2VAþValais000022SouthEuropeanRegion#08þ0c2MTþMalta000025Canada#13þ0c2NTþNorthwest Territories000022USACentralRegion#40þ0c2OKþOklahoma000026USASouthWestRegion#06þ0c2CAþCalifornia000016NewWorld#35þ0c2PEþPeru000019Quebec#07þ0c2OUþOutaouais00001BPuertoRico#53þ0c2FJþFajardo000022Bahamas#11þ0c2EBþEast Grand Bahama000014Japan#41þ0c2TYþTokyo00001ENorwayRegion#09þ0c2NOþNordland00001FPhilippines#PH.ROþ0c2ROþRomblon00001BUganda#UG.BSþ0c2BSþBushenyi000028EquatorialGuinea#GQ.BNþ0c2BNþBioko Norte00001DVietnam#VN.HUþ0c2HUþHau Giang000021Morocco#MA.DAþ0c2DAþDoukkala Abda00001CMissouri#185þ0c2SIþSt. Clair00001AIreland#014þ0c2LOþLongfort00001DNorthAmerica#016þ0c2MXþMexico00001BCalifornia#089þ0c2SHþShasta000018Texas#257þ0c2KAUþKaufman00001ALouisiana#001þ0c2ACþAcadia000020Virginia#720þ0c2NRþNorton (City)000018Georgia#065þ0c2CIþClinch000023WorldwithCountries#143þ0c2GRþGreece00001DMinnesota#117þ0c2PSþPipestone00001CKentucky#101þ0c2HEþHenderson00001AMichigan#111þ0c2MDþMidland000017Florida#029þ0c2DIþDixie00001DMississippi#011þ0c2BOþBolivar000025Europewithcountries#012þ0c2FIþFinland00001BArkansas#001þ0c2ARþArkansas00001EWestVirginia#029þ0c2HNþHancock000022Scotland#015þ0c2KCþKincardineshire00001ANewWorld#188þ0c2VUþVanuatu000018Asia3#030þ0c2MNþMongolia00001FVirginia#177þ0c2SPþSpotsylvania000017Colorado#009þ0c2BAþBaca000020SouthDakota#047þ0c2FRþFall River000018Alabama#025þ0c2CLþClarke000030NewCaledonia#NC.SU.IPþ0c2IPþL'&Icirc;le-des-Pins00001COntario#45þ0c2TBþThunder Bay00001DMontenegro#16þ0c2PGþPodgorica00001CMiddleEast#11þ0c2PKþPakistan000019Switzerland#23þ0c2VUþVaud000027SouthEuropeanRegion#09þ0c2MOþMontenegro000017Canada#14þ0c2NUþNunavut00001ANewWorld#36þ0c2SRþSuriname00002CQuebec#08þ0c2ATþAbitibi-T&eacute;miscamingue00001BPuertoRico#54þ0c2FLþFlorida000016Bahamas#12þ0c2EMþExuma000016Japan#42þ0c2TTþTottori00002BNorwayRegion#10þ0c2NTþNord-Tr&oslash;ndelag00001EPhilippines#PH.QZþ0c2QZþQuezon000029Philippines#PH.SFþ0c2SFþShariff Kabunsuan000023CentralAmerica2#CE.GDþ0c2GDþGrenada000017Yemen#YE.MAþ0c2MAþMarib00001EEastTimor#TL.MFþ0c2MFþManufahi00001EMacedonia#MK.BGþ0c2BGþBogdanci00001BSudan#SD.BNþ0c2BNþBlue Nile00001ECoteDivoire#CI.BFþ0c2BFþBafing00001DThailand#TH.YSþ0c2YSþYasothon00001CKuwait#KW.KUþ0c2KUþAl Kuwayt000019Cameroon#CM.NOþ0c2NOþNord000025CaymanIslands#KY.GTþ0c2GTþGeorge Town00001ESyria#SY.DYþ0c2DYþDayr az Zawr000015Togo#TG.KAþ0c2KAþKara00001FGhana#GH.AAþ0c2AAþGreater Accra000018Indiana#055þ0c2GEþGreene00001ANewYork#027þ0c2DUþDutchess00001CNorthCarolina#095þ0c2HYþHyde00001AGeorgia#247þ0c2ROþRockdale000021Missouri#186þ0c2SGþSte. Genevieve00001BIreland#015þ0c2LUþL&uacute;000020NorthAmerica#017þ0c2NIþNicaragua000014Kansas#049þ0c2EKþElk000020SouthCarolina#021þ0c2CEþCherokee00001DIllinois#085þ0c2JDþJo Daviess00001BMissouri#005þ0c2ATþAtchison000024WorldwithCountries#144þ0c2HUþHungary00001ENorthDakota#019þ0c2CVþCavalier000015Texas#077þ0c2CLAþClay000029Virginia#540þ0c2CVþCharlottesville (City)000017Ohio#039þ0c2DEþDefiance00001BNewMexico#011þ0c2DBþDe Baca000019Nebraska#009þ0c2BLþBlaine000018Wyoming#031þ0c2PLþPlatte000024Europewithcountries#013þ0c2FRþFrance00001CTennessee#099þ0c2LWþLawrence000020Scotland#016þ0c2KNþKinross-shire000020NewWorld#189þ0c2NCþNew Caledonia000018Oklahoma#051þ0c2GDþGrady000016Iowa#103þ0c2JOþJohnson000015Asia3#031þ0c2NPþNepal000018Texas#439þ0c2TARþTarrant00001COntario#46þ0c2TIþTimiskaming00001FMontenegro#17þ0c2ROþRo&#382;aje000019MiddleEast#12þ0c2QAþQatar000018Switzerland#24þ0c2ZUþZug000025SouthEuropeanRegion#10þ0c2PTþPortugal000024USASouthWestRegion#08þ0c2COþColorado000019NewWorld#37þ0c2UYþUruguay00001FQuebec#09þ0c2COþC&ocirc;te-Nord000022PuertoRico#55þ0c2GCþGu&aacute;nica00001ABahamas#13þ0c2GCþGrand Cay000015Japan#43þ0c2TAþToyama00001DNorwayRegion#11þ0c2OPþOppland000022FrenchGuiana#GF.SL.APþ0c2APþApatou000024MarshallIsland#MH.MH.LKþ0c2LKþLikiep000021Philippines#PH.SGþ0c2SGþSarangani00001DEastTimor#TL.LQþ0c2LQþLiquica00001FMacedonia#MK.ARþ0c2ARþAracinovo000018Serbia#RS.MAþ0c2MAþMacva000018Palau#PW.NWþ0c2NWþNgiwal000018Uganda#UG.BUþ0c2BUþBusia000024Libya#LY.JAþ0c2JAþAl Jabal al Akhdar000019Nigeria#NG.EKþ0c2EKþEkiti000020Mauritania#MR.GDþ0c2GDþGuidimaka00001DMacedonia#MK.SSþ0c2SSþSopiste00001FMissouri#187þ0c2SFþSt. Francois00001AIreland#016þ0c2MAþMaigh Eo00001DNorthAmerica#018þ0c2PAþPanama00001BCalifornia#091þ0c2SIþSierra000018Texas#259þ0c2KENþKendall000019Louisiana#003þ0c2ALþAllen000016Georgia#067þ0c2CBþCobb000024WorldwithCountries#145þ0c2ISþIceland000018Minnesota#119þ0c2PLþPolk000018Kentucky#103þ0c2HYþHenry00001CMichigan#113þ0c2MIþMissaukee000017Florida#031þ0c2DUþDuval00001DMississippi#013þ0c2CAþCalhoun000025Europewithcountries#014þ0c2DEþGermany000019Arkansas#003þ0c2ASþAshley00001CWestVirginia#031þ0c2HRþHardy000025Scotland#017þ0c2KIþKirkcudbrightshire00001ANewWorld#190þ0c2BAþBahrain00001BVirginia#179þ0c2STþStafford000017Colorado#011þ0c2BEþBent00001BSouthDakota#049þ0c2FAþFaulk000016Alabama#027þ0c2CYþClay000018Ontario#47þ0c2TOþToronto000021Montenegro#18þ0c2SAþ&Scaron;avnik00001FMiddleEast#13þ0c2SAþSaudiArabia00001BSwitzerland#25þ0c2ZRþZurich000027SouthEuropeanRegion#11þ0c2SMþSan Marino00001BNewWorld#38þ0c2VEþVenezuela000025Quebec#10þ0c2NOþNord-du-Qu&eacute;bec000016Kenya#01þ0c2CEþCentral00001FBahamas#14þ0c2HBþHarbour Island000017Japan#44þ0c2WAþWakayama00001ANorwayRegion#12þ0c2OSþOslo000032DICT_RSS.FEEDSþ0c000001ANAMEþ0c1Aþ1þNameþþþþþþLþ4000371BMVBP.BPþ0c00006B3SBBP.SB.GETJOBþ0c0SUBROUTINE SBBP.SB.GETJOB(entry,startpos,bytes)þ*þ* Copyright (C) 2006 Sierra Bravo Corporation, All Rights Reservedþ*þ* Programm: SBBP.SB.LISTPEQSþ* Written by: Luke Bucklin, Sierra Bravoþ* Date: 04/24/06þ* Description: Send an XML document of the print queue (LISTPEQS)þ*þCOMMON /SBPRINT/ LINK.LIST, LINK.LIST.JOBþ*þEQU P.JOB      TO 1þEQU P.PORT     TO 2þEQU P.STATUS   TO 3þEQU P.QUEUE    TO 4þEQU P.BYTES    TO 5þEQU P.DATE     TO 6þEQU P.TIME     TO 7þEQU P.OWNER    TO 8þEQU P.PREVIEW  TO 9þ*þLINK.LIST = "" ; LINK.LIST.JOB = ""þ*þCHUNKSIZE = 50000þ*þFRAMESIZE = SYSTEM(32) ;* D3-onlyþ*þIF NOT(startpos MATCHES "1N0N") THEN startpos = 1þIF NOT( bytes MATCHES "1N0N") THEN bytes=99999999þ*þEXECUTE "LISTPEQS ":entry CAPTURING PEQS.OUTþLINES = DCOUNT( PEQS.OUT, @AM )þGOOD.LINE = 0þPINFO = ""þFOR PL = 1 TO LINES-1 UNTIL GOOD.LINEþ  LINE = PEQS.OUT<PL>þ  GOOD.LINE = 1þ  previewsize = 0; GET.PREVIEW = 0þ  CALL SUB.SB.PARSEPEQS(LINE,PINFO,previewsize,GET.PREVIEW,GOOD.LINE)þNEXT PLþ*þ*CRT '<job id="':entry:'">'þ*CRT ' <date>':OCONV(PINFO<P.DATE>,'D2/'):'</date>'þ*CRT ' <time>':OCONV(PINFO<P.TIME>,'MTS'):'</time>'þ*CRT "<data><![CDATA[":þCHUNKS = 0þNO.PAGES = 1þLOOPþ  IF bytes > CHUNKSIZE THENþ    sendbytes = CHUNKSIZEþ    bytes -= CHUNKSIZEþ  END ELSEþ    sendbytes = bytesþ    bytes = 0þ  ENDþ  OUTPUT = ""þ  CALL SUB.SB.GET.ENTRY(entry,startpos,sendbytes,OUTPUT,ERR)þ  CHUNKS += 1þ  IF NOT(ERR) THENþ    CONVERT CHAR(0) TO "" IN OUTPUTþ    CALL SWAP(OUTPUT,CHAR(12),'[0x12]')þ    NO.PAGES = NO.PAGES + COUNT( OUTPUT, CHAR(12) )þ    CRT OUTPUT:þ  END ELSE EXITþ  startpos += sendbytesþWHILE bytes AND OUTPUT # "" DO REPEATþ*CRT ']]></data><pages>':NO.PAGES:'</pages>'þ*CRT '</job>'þSTOP000A12SUB.SB.GET.ENTRYþ0c0SUBROUTINE SUB.SB.GET.ENTRY(JOB,START.POS,BYTES,OUTPUT,ERR)þ*þ* Copyright (C) 2006 Sierra Bravo Corporation, All Rights Reservedþ*þ* Programm: SUB.SB.GET.ENTRYþ* Written by: Luke Bucklin, Sierra Bravoþ* Date: 04/24/06þ* Description: Extract a segment of print queue contentþ*þCOMMON /SBPRINT/ LINK.LIST, LINK.LIST.JOBþ*þFRAMESIZE = SYSTEM(32) ;* D3-onlyþOUTPUT = ""þERR = ""þBYTES.TO.GET = BYTESþ*þEXECUTE "LISTPEQS ":JOB:" E" CAPTURING JOB.LINEþJOB.LINE = JOB.LINE<5>	þFID = JOB.LINE[34,8]þIF FID # "" THENþ  * Get full sequential list of frame IDsþ  FSIZE = FRAMESIZE-1þ  IF START.POS > 1 OR BYTES > FSIZE THENþ    IF LINK.LIST.JOB # JOB THENþ      * We didn't just build this recently, so go ahead and build it nowþ      * associate the LINK.LIST (in common) with the job so if we are askedþ      * to build this linked list again for this job, we can skip this partþ      * and just pull it from commonþ      LINK.LIST = FIDþ      LINK.LIST.JOB = JOBþ      EXECUTE "DUMP .":FID:" L" CAPTURING LINKAGEþ      START.ROW = INDEX(LINKAGE,'+',1)þ      START.ROW = DCOUNT(LINKAGE[1,START.ROW],@AM)þ      MAX.ROWS = DCOUNT( LINKAGE, @AM )þ      FOR LX = START.ROW TO MAX.ROWSþ        ROW = LINKAGE<LX>þ        IF TRIM(ROW) # "" THENþ          XFRAME = TRIM(FIELD( ROW,'(',2))þ          XFRAME = FIELD(XFRAME,' ',1)þ          LINK.LIST<-1> = XFRAMEþ        ENDþ      NEXT LXþ    ENDþ    *þ    * First frame is FRAMESIZE-1 bytes because the firstþ    * byte is a throwaway.þ    *þ    START.TEMP = START.POSþ    SKIP.FRAMES = 0þ    LOOP UNTIL START.TEMP <= FSIZE DOþ      SKIP.FRAMES += 1þ      START.TEMP -= FSIZEþ      FSIZE = FRAMESIZEþ    REPEATþ    IF SKIP.FRAMES THEN OFFSET = START.TEMP-1 ELSE OFFSET = START.TEMPþ    IF SKIP.FRAMES = 0 AND OFFSET = 0 THEN OFFSET = 1þ  END ELSEþ    LINK.LIST = FIDþ    OFFSET = 1þ    SKIP.FRAMES = 0þ  ENDþ  MAX.FRAMES = DCOUNT( LINK.LIST, @AM )þ  FX.START = 1 + SKIP.FRAMESþ  FOR FX = FX.START TO MAX.FRAMES WHILE BYTES.TO.GET þ    FID = LINK.LIST<FX>þ    EXECUTE "DUMP .":FID:" SX" CAPTURING PREVX.OUTþ    IF LEN(PREVX.OUT) # FRAMESIZE*2 THENþ      ERR = 1þ      EXITþ    ENDþ    IF OFFSET THENþ      PREVX.OUT = PREVX.OUT[(OFFSET*2)+1,FRAMESIZE*2]þ    ENDþ    DATLEN = LEN(PREVX.OUT) / 2þ    PREVX.OUT = OCONV( PREVX.OUT, 'MY' )þ    IF DATLEN > BYTES.TO.GET THENþ      PREVX.OUT = PREVX.OUT[1,BYTES.TO.GET]þ      BYTES.TO.GET = 0þ    END ELSEþ      BYTES.TO.GET -= DATLENþ    ENDþ    OUTPUT := PREVX.OUTþ    CONVERT CHAR(0) TO "" IN OUTPUTþ    CONVERT @AM TO "^" IN OUTPUTþ    OFFSET = 0þ  NEXT FXþEND ELSE ERR = 1þRETURN000703SUB.SB.PARSEPEQSþ0c0SUBROUTINE SUB.SB.PARSEPEQS(LINE,PINFO,previewsize,GET.PREVIEW,GOOD.LINE)þ*þEQU P.JOB      TO 1þEQU P.PORT     TO 2þEQU P.STATUS   TO 3þEQU P.QUEUE    TO 4þEQU P.BYTES    TO 5þEQU P.DATE     TO 6þEQU P.TIME     TO 7þEQU P.OWNER    TO 8þEQU P.PREVIEW  TO 9þ*þFRAMESIZE = SYSTEM(32) ;* D3-onlyþIF NOT(FRAMESIZE MATCHES "1N0N") THEN FRAMESIZE = 4000þ*þPINFO = ""þ*þJOB = TRIM(LINE[1,4])þIF JOB MATCHES "1N0N" THENþ  PINFO<P.JOB> = JOBþ  *þ  L.PORT = TRIM(LINE[15,5])þ  PINFO<P.PORT> = L.PORTþ  *þ  L.STATUS = TRIM(LINE[23,15])þ  STATUS.MSG = ""þ  IF INDEX(L.STATUS,'h',1) THENþ    STATUS.MSG := 'Hold,'þ  ENDþ  IF INDEX(L.STATUS,'l',1) THENþ    STATUS.MSG := 'Locked,'þ  ENDþ  IF INDEX(L.STATUS,'o',1) THENþ    STATUS.MSG := 'Generating,'þ  ENDþ  IF INDEX(L.STATUS,'s',1) THENþ    STATUS.MSG := 'Spooled,'þ  END ELSE IF INDEX(L.STATUS,'p',1) THENþ    STATUS.MSG := 'To print,'þ  END ELSE IF INDEX(L.STATUS,'x',1) THENþ    STATUS.MSG := 'Canceled,'þ  ENDþ  IF STATUS.MSG # "" THEN STATUS.MSG = STATUS.MSG[1,LEN(STATUS.MSG)-1] ;* Get rid of the trailing commaþ  PINFO<P.STATUS> = STATUS.MSGþ  *þ  L.QUEUE = TRIM(LINE[42,5])þ  PINFO<P.QUEUE> = L.QUEUEþ  *þ  L.BYTES = TRIM(LINE[47,7])þ  L.BYTES = L.BYTES * FRAMESIZEþ  PINFO<P.BYTES> = L.BYTESþ  *þ  L.DATE = TRIM(LINE[55,8])þ  L.DATE = ICONV( L.DATE,'D' )þ  PINFO<P.DATE> = L.DATEþ  *þ  L.TIME = TRIM(LINE[64,8])þ  L.TIME = ICONV( L.TIME, 'MTS' )þ  PINFO<P.TIME> = L.TIMEþ  *þ  L.OWNER = TRIM(LINE[73,20])þ  PINFO<P.OWNER> = L.OWNERþ  *þ  IF GET.PREVIEW THENþ    *þ    * Get preview unless we are searching -that's a whole different process.þ    *þ    L.PREVIEW = ""þ    CALL SUB.SB.GET.ENTRY(JOB,1,previewsize,L.PREVIEW,ERR)þ    IF ERR # "" THEN GOOD.LINE = 0þ    PINFO<P.PREVIEW> = L.PREVIEWþ  ENDþEND ELSE GOOD.LINE = 0þRETURNþ001F30SBBP.SB.LISTPEQSþ0c0*þ* Copyright (C) 2008 Sierra Bravo Corporation, All Rights Reservedþ*þ* Programm: SBBP.SB.LISTPEQSþ* Written by: Luke Bucklin, Sierra Bravoþ* Adapted by: David Bucklin, Sierra Bravoþ*             CGI Version of the Bravo Print XML APIþ* Date: 04/24/06þ* Description: Send an XML document of the print queue (LISTPEQS)þ*þCOMMON /SBPRINT/ LINK.LIST, LINK.LIST.JOBþINCLUDE WBPD WWW.INCLUDEþ*þLINK.LIST = "" ; LINK.LIST.JOB = ""þ*þEQU P.JOB      TO 1þEQU P.PORT     TO 2þEQU P.STATUS   TO 3þEQU P.QUEUE    TO 4þEQU P.BYTES    TO 5þEQU P.DATE     TO 6þEQU P.TIME     TO 7þEQU P.OWNER    TO 8þEQU P.PREVIEW  TO 9þ*þOPEN '','SBBP.FORMS' TO F.SBBP.FORMS ELSE STOP 201, 'SBBP.FORMS'þ*þCALL WDB.VARS(VARS,VALS)þ*þFRAMESIZE = SYSTEM(32) ;* D3-onlyþ*þLOCATE "entrystart" IN VARS SETTING POS THENþ  entrystart = VALS<POS>þEND ELSE entrystart = ""þLOCATE "entries" IN VARS SETTING POS THENþ  entries = VALS<POS>þEND ELSE entries = ""þLOCATE "begindate" IN VARS SETTING POS THENþ  begindate = VALS<POS>þ  begindate = ICONV(begindate,'D')þEND ELSE begindate = ""þLOCATE "enddate" IN VARS SETTING POS THENþ  enddate = VALS<POS>þ  enddate = ICONV(enddate,'D')þEND ELSE enddate = ""þLOCATE "owner" IN VARS SETTING POS THENþ  owner = VALS<POS>þEND ELSE owner = ""þLOCATE "queue" IN VARS SETTING POS THENþ  queue = VALS<POS>þEND ELSE queue = ""þLOCATE "previewsize" IN VARS SETTING POS THENþ  previewsize = VALS<POS>þEND ELSE previewsize = ""þLOCATE "port" IN VARS SETTING POS THENþ  port = VALS<POS>þEND ELSE port = ""þLOCATE "searchstring" IN VARS SETTING POS THENþ  searchstring = VALS<POS>þEND ELSE searchstring = ""þIF searchstring # "" THEN GET.PREVIEW = 0 ELSE GET.PREVIEW = 1þIF NOT(previewsize MATCHES "1N0N") THENþ  previewsize = 500þENDþLOCATE "entry" IN VARS SETTING POS THENþ  entry = VALS<POS>þEND ELSE entry = ""þLOCATE "action" IN VARS SETTING POS THENþ  action = VALS<POS>þEND ELSE action = ""þ*þ*ERROR = ""þALL.ENTRIES.FOUND = 0þENTRY.LIST = ''þLOOPþ  LOCATE "entries[]" IN VARS SETTING POS THENþ    ENTRY.LIST<-1> = VALS<POS>þ    VARS<POS> = "XXX"þ  END ELSE ALL.ENTRIES.FOUND = 1þUNTIL ALL.ENTRIES.FOUND DO REPEATþIF entry # "" THEN ENTRY.LIST<-1> = entryþECNT = DCOUNT( ENTRY.LIST, @AM )þFOR EX = 1 TO ECNTþ  entry = ENTRY.LIST<EX>þ  BEGIN CASEþ    CASE entry = ""þ      CMD = ''þ    CASE action = "delete"þ      CMD = "SP-KILL ":entry:"F"þ      EXECUTE CMD CAPTURING JUNKþ      CMD = "SP-EDIT ":entry:" MUD"þ    CASE action = "print"þ      EXECUTE "SP-KILL ":entry:"F" CAPTURING JUNKþ      IF queue # "" THENþ        EXECUTE "SP-ASSIGN F":queue CAPTURING JUNKþ      ENDþ      CMD = "SP-EDIT ":entry:" MSRU"þ    CASE action = "release"þ      CMD = "SP-KILL ":entry:"F"þ    CASE action = "downloadtxt"þ      CRT "Content-Type: text/plain"þ      CRT "Content-Disposition: attachment;filename=":entry:".txt"þ      CRTþ      SESSION$CONTENT.SENT = 1þ      CALL SBBP.SB.GETJOB(entry,1,"")þ      STOP  þ    CASE 1þ      CMD = ''þ  END CASEþ  IF CMD # "" THENþ    EXECUTE CMD CAPTURING JUNKþ  ENDþNEXT EXþ*þCMD.SUFF = ""þIF entrystart # "" THENþ  CMD.SUFF = entrystart:"-9999 "þENDþIF owner # "" THENþ  CMD.SUFF := "'":owner:"' "þENDþ*þEXECUTE "LISTPEQS ":CMD.SUFF CAPTURING PEQS.OUTþ*þCRT "Content-Type: text/html"þCRTþSESSION$CONTENT.SENT = 1þ*þREAD FORM.DATA FROM F.SBBP.FORMS, 'listpeqs.html' ELSE FORM.DATA = ''þFORM.HDR.POS = INDEX( FORM.DATA, '[QUEUE]', 1 )-1þPART1 = FORM.DATA[1,FORM.HDR.POS]þCONVERT @AM TO CHAR(13) IN PART1þCRT PART1þPART2 = FORM.DATA[FORM.HDR.POS+7,99999]þXML = ""þ*þLINES.SENT = 0þLINES = DCOUNT( PEQS.OUT, @AM )þFOR PL = 1 TO LINES-1þ  LINE = PEQS.OUT<PL>þ  GOOD.LINE = 1þ  CALL SUB.SB.PARSEPEQS(LINE,PINFO,previewsize,GET.PREVIEW,GOOD.LINE)þ  * Filteringþ  BEGIN CASEþ    CASE NOT(GOOD.LINE) ; NULLþ    CASE PINFO<P.JOB> = "" ; GOOD.LINE = 0þ    CASE begindate # "" AND enddate # ""þ      IF PINFO<P.DATE> < begindate OR PINFO<P.DATE> > enddate THEN GOOD.LINE = 0þ    CASE port # "" AND PINFO<P.PORT> # port ; GOOD.LINE = 0þ    CASE queue # "" AND	 PINFO<P.QUEUE> # queue ; GOOD.LINE = 0þ    CASE 1þ      NULLþ  END CASEþ  IF GOOD.LINE THENþ    * þ    IF searchstring # "" THENþ      JOB = PINFO<P.JOB>þ      GOSUB SEARCH.JOBþ    ENDþ  ENDþ  IF GOOD.LINE THENþ    LINES.SENT += 1þ    *þ    PDATE = OCONV(PINFO<P.DATE>,'D2/')þ    PTIME = OCONV(PINFO<P.TIME>,'MTS')þ    *þ    IF LINES.SENT / 2 = INT(LINES.SENT/2) THENþ      XML<-1> = '<tr class="even">'þ    END ELSEþ      XML<-1> = '<tr class="odd">'þ    ENDþ    XML<-1> = '<td><input type="checkbox" name="entries[]" value="':PINFO<P.JOB>:'" /></td>'þ    XML<-1> = '<td><a href="/dbc/SBBP.SB.LISTPEQS?entry=':PINFO<P.JOB>:'&action=downloadtxt">':PINFO<P.JOB>:'</a></td>'þ    XML<-1> = '<td><a href="/dbc/SBBP.SB.LISTPEQS?queue=':PINFO<P.QUEUE>:'">':PINFO<P.QUEUE>:'</a></td>'þ    XML<-1> = '<td><a href="/dbc/SBBP.SB.LISTPEQS?owner=':PINFO<P.OWNER>:'">':PINFO<P.OWNER>:'</a></td>'þ    XML<-1> = '<td><a href="/dbc/SBBP.SB.LISTPEQS?port=':PINFO<P.PORT>:'">':PINFO<P.PORT>:'</a></td>'þ    XML<-1> = '<td align="right">':OCONV(PINFO<P.BYTES>/1000,'MD,'):'</td>'þ    XML<-1> = '<td>':OCONV(PINFO<P.DATE>,'D2/'):' ':OCONV(PINFO<P.TIME>,'MTS'):'</td>'þ    XML<-1> = '<td>':PINFO<P.STATUS>:'</td>'þ    XML<-1> = \<td><a href="#" title="Print Job" onclick="Effect.SlideDown('printDialog\:PINFO<P.JOB>:\',{duration:0.25}); return false;"><img src="/db/images/button_print.gif"/></a>\þ*    XML<-1> = \<a href="/viewjob.php?entry=\:PINFO<P.JOB>:\&date=\:PDATE:\&time=\:PTIME:\" title="View Job"><img src="/db/images/button_preview.gif"/></a>\þ    XML<-1> = \<a href="/dbc/SBBP.SB.LISTPEQS?action=downloadtxt&entry=\:PINFO<P.JOB>:\&date=\:PDATE:\&time=\:PTIME:\" title="Download Job as TXT File"><img src="/db/images/button_downloadtxt.gif"/></a>\þ    XML<-1> = \<a href="/dbc/SBBP.SB.LISTPEQS?action=delete&entry=\:PINFO<P.JOB>:\&queue=&port=&owner=&searchstring=&begindate=&enddate=&search_type=" title="Delete Job" class="deletejob" onclick="return confirm('Are you sure you want to delete this job?')"><img src="/db/images/button_delete.gif"/></a>\þ    XML<-1> = '<div style="position:relative;">'þ    XML<-1> = '<div class="printDialog" id="printDialog':PINFO<P.JOB>:'" style="display:none;">'þ    XML<-1> = \<div> Queue <input type="text" value="0" style="width:40px;" maxlength="4" id="overrideQueue\:PINFO<P.JOB>:\"/>\þ    XML<-1> = \<span class="button"><button type="button" onclick="document.location='/dbc/SBBP.SB.LISTPEQS?action=print&entry=\:PINFO<P.JOB>:\&overridequeue='+$F('overrideQueue\:PINFO<P.JOB>:\')+'&queue=&port=&owner=&searchstring=&begindate=&enddate=&search_type='">Print</button></span>\þ    XML<-1> = \<span class="button"><button type="button" onclick="Effect.SlideUp('printDialog\:PINFO<P.JOB>:\',{duration:0.25});return false;">Cancel</button></span>\þ    XML<-1> = '</div> </div>'þ    XML<-1> = '<pre class="preview">'þ    XML<-1> = PINFO<P.PREVIEW>þ    XML<-1> = '</pre> </div> </td> </tr>'þ    CALL WEB.SEND(XML)þ    XML = ''þ    *þ    *IF LINES.SENT >= entries AND entries # "" THEN EXITþ  ENDþNEXT PLþCALL WEB.SEND(PART2)þSTOPþ*þSEARCH.JOB: * Search the job for the stringþ*þSTART.POS = 1þGOOD.LINE = 0þSEARCHBUFFSIZE = 15000þLOOPþ  BUFFER = ""þ*  PRINT "Searching job # ":JOB:" ":START.POS:",":SEARCHBUFFSIZEþ  CALL SUB.SB.GET.ENTRY(JOB,START.POS,SEARCHBUFFSIZE,BUFFER,ERR)þ  IF NOT(ERR) THENþ    FOUND.POS = INDEX( BUFFER, searchstring, 1 )þ    IF FOUND.POS THENþ      BACK.UP = FOUND.POS - INT(previewsize/2) - 140þ      START.POS = START.POS + BACK.UPþ      CALL SUB.SB.GET.ENTRY(JOB,START.POS,previewsize,L.PREVIEW,ERR)þ      FOUND.NL = 0þ      FOR NL = 1 TO 250 UNTIL FOUND.NLþ      	CH = L.PREVIEW[NL,1]þ      	IF CH = CHAR(10) OR CH = CHAR(13) THENþ      	  L.PREVIEW = L.PREVIEW[NL,previewsize]þ      	  FOUND.NL = 1þ      	ENDþ      NEXT NLþ      PINFO<P.PREVIEW> = L.PREVIEWþ      GOOD.LINE = 1þ    END ELSEþ      START.POS = START.POS + SEARCHBUFFSIZE - LEN(searchstring)þ    ENDþ  END ELSE EXITþUNTIL ERR OR GOOD.LINE OR BUFFER = "" DO REPEATþRETURN04E845MVDB.SUBSþ0c0000BE6SUB.TABLE.LIC.USEDþ0c2SUBROUTINE SUB.TABLE.LIC.USEDþ*þ* Dashboard Widgetþ*þINCLUDE WBPD WWW.INCLUDEþINCLUDE WBPD MVDB.INCLUDEþ*þ* Copyright (C) information here if relevantþ* Any other descriptive comments hereþ* and hereþ*þ* Modified by Peter Schellenbach of Zumasys 06-08-15:þ*  Changed test of ENUM after EXECUTE to test SYSTEM(11) instead.þ*þW$TITLE = "Dashboard Users Logged On"     ;* Title for widget title barþW$TYPE = "TABLE"                ;* Filled in by editorþW$WIDTH = 2                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þOPEN 'WEB.SESSION' TO F.WEB.SESSION ELSE RETURNþ*þIF WIDGET.USER.DATA(1) # "" THEN DELETE F.WEB.SESSION, WIDGET.USER.DATA(1)þWIDGET.USER.DATA(1) = ""þ*þTBL=""þEXECUTE 'SELECT WEB.SESSION' RETURNING ENUM CAPTURING ETXTþ*PJS 06-08-15*IF ENUM[1,3]="404" ELSE RETURNþIF SYSTEM(11) = 0 THEN RETURN ; *PJS 06-08-15*þLOOPþ READNEXT ID ELSE ID="\\EOF"þUNTIL ID="\\EOF" DOþ READ REC FROM F.WEB.SESSION,ID THENþ   LOCATE "userid" IN REC<1> SETTING IX THENþ     UID=REC<2,IX>þ     LOCATE "LastSessionAccess" IN REC<1> SETTING IX THENþ       LSA=REC<2,IX>þ     END ELSEþ       LSA=00000*00000þ     ENDþ     LSA.DT=FIELD(LSA,"*",1)þ     LSA.TM=FIELD(LSA,"*",2)þ     LGN.DT=REC<3>þ     LGN.TM=REC<4>þ     LOCARG=LGN.DT:"*":LGN.TM:"*":LSAþ     LOCATE LOCARG IN TBL<1> BY "AR" SETTING IX ELSE NULLþ     TBL=INSERT(TBL,1,IX;LOCARG)þ     TBL=INSERT(TBL,2,IX;UID)þ     TBL=INSERT(TBL,3,IX;ID)þ   ENDþ ENDþREPEATþ*þ* Set up column labelsþW$TABLE.COL.LABELS<1,1> = "User Login ID"þW$TABLE.COL.LABELS<1,2> = "Session#"þW$TABLE.COL.LABELS<1,3> = "Login Date"þW$TABLE.COL.LABELS<1,4> = "Login Time"þW$TABLE.COL.LABELS<1,5> = "Last Act Date"þW$TABLE.COL.LABELS<1,6> = "Last Act Time"þ*þ* Column justification = left, right, centerþW$TABLE.COL.JUST<1,1> = "left"þW$TABLE.COL.JUST<1,2> = "right"þW$TABLE.COL.JUST<1,3> = "right"þW$TABLE.COL.JUST<1,4> = "right"þW$TABLE.COL.JUST<1,5> = "right"þW$TABLE.COL.JUST<1,6> = "right"þ*þ* Table RowsþTBL.MAX = DCOUNT(TBL<1>,CHAR(253))þFOR ROW = 1 TO TBL.MAXþ W$TABLE.DATA<ROW,1> = TBL<2,ROW>þ IF TBL<3,ROW> = SESSION$ID THEN W$TABLE.DATA<ROW,2> = "*":ROW ELSE W$TABLE.DATA<ROW,2> = ROWþ W$TABLE.DATA<ROW,3> = OCONV(FIELD(TBL<1,ROW>,"*",1),"D2/")þ W$TABLE.DATA<ROW,4> = OCONV(FIELD(TBL<1,ROW>,"*",2),"MTS")þ W$TABLE.DATA<ROW,5> = OCONV(FIELD(TBL<1,ROW>,"*",3),"D2/")þ W$TABLE.DATA<ROW,6> = OCONV(FIELD(TBL<1,ROW>,"*",4),"MTS")þNEXT ROWþ*þ* TotalsþW$TABLE.TOTALS<1,3> = TBL.MAXþW$TABLE.TOTALS<1,4> = "Consumed"þLIC.AVAIL = "Unlimited"þIF ASSIGNED(G$LICENSE.COUNT) THENþ IF NUM(G$LICENSE.COUNT) THENþ   LIC.AVAIL = G$LICENSE.COUNT - TBL.MAXþ ENDþENDþW$TABLE.TOTALS<1,5> = LIC.AVAILþW$TABLE.TOTALS<1,6> = "Available"þ*þW$INPUT.PROMPT<1> = "Sessions"þW$INPUT.TYPE<1> = "SELECT"þW$INPUT.DEFAULT<1> = 0þW$INPUT.UDPOS<1> = 1þW$INPUT.BUTTON<1> = "Log Off"þW$INPUT.SELOPTS<1> = "Nobody"þW$INPUT.SELVALS<1> = 0þFOR ROW = 1 TO TBL.MAXþ IF SESSION$ID = TBL<3,ROW> ELSEþ   W$INPUT.SELOPTS<1,-1> = ROW:" ":TBL<2,ROW>þ   W$INPUT.SELVALS<1,-1> = TBL<3,ROW>þ ENDþNEXT ROWþ*þRETURN002FD3MV.DEMO.MAPþ0c2    SUBROUTINE MV.DEMO.MAPþ* @(#) MV.DEMO.MAP Ported to jBASE 17:55:31  08 JUL 2015þ*  The following variable names were convertedþ*   TABLEþ* þ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ*þ* 6-1-15 ZUMASYS CHANGED MAP ID DELIMITER TO # INSTEAD OF *þ    INCLUDE WBPD MVDB.INCLUDEþ*þ    W$TITLE = "Data Evolution - Demographics"þ    W$TYPE = "MAP:USASouthWestRegion"þ    W$WIDTH = 3þ*þ    IF G$QUERYMODE THEN RETURNþ*þ    TYPE.ID=WIDGET.USER.DATA(1)þ    BEGIN CASEþ    CASE TYPE.ID="04"þ        W$TYPE="MAP:Arizona"þ        WIDGET.USER.DATA(6)="Arizona"þ        ACT.FACT=.08þ    CASE TYPE.ID="06"þ        W$TYPE="MAP:California"þ        WIDGET.USER.DATA(6)="California"þ        ACT.FACT=.08þ    CASE TYPE.ID="32"þ        W$TYPE="MAP:Nevada"þ        WIDGET.USER.DATA(6)="Nevada"þ        ACT.FACT=.08þ    CASE TYPE.ID="49"þ        W$TYPE="MAP:Utah"þ        WIDGET.USER.DATA(6)="Utah"þ        ACT.FACT=.08þ    CASE 1þ        ACT.FACT=1þ    END CASEþ*þ*þ*_____Set Widget Variables_____þ    IF WIDGET.USER.DATA(4)="" THEN WIDGET.USER.DATA(4)="ALL"þ    IF WIDGET.USER.DATA(5)="" THEN WIDGET.USER.DATA(5)="Inquiry"þ*þ*_____Open Files_____þ    OPEN 'Territories' TO F.TERR ELSE ABORT 201,'Territories'þ    OPEN 'SalesSum' TO F.SSUM ELSE ABORT 201,'SalesSum'þ    OPEN 'SalesReps' TO F.SREP ELSE ABORT 201,'SalesReps'þ*þ*_____Set Period_____þ    WYR=OCONV(DATE(),"DY")þ    WMO=OCONV(DATE(),"DM") - 1þ    IF WMO<1 THEN WYR-=1;WMO=12þ    CAL.PERIOD=WYR'R%4':WMO'R%2'þ    IF WIDGET.USER.DATA(3) MATCHES "6N" THENþ        END.PERIOD=WIDGET.USER.DATA(3)þ        WYR=END.PERIOD[1,4]þ        WMO=END.PERIOD[5,2]þ    END ELSEþ        END.PERIOD=CAL.PERIODþ        WIDGET.USER.DATA(3)=END.PERIODþ    ENDþ    WMO-=5þ    IF WMO<1 THEN WYR-=1; WMO+=12þ    BEG.PERIOD=WYR'R%4':WMO'R%2'þ*þ*_____Set Up Input Prompts_____þ    W$INPUT.PROMPT<1>="Region"þ    W$INPUT.TYPE<1>="SELECT"þ    W$INPUT.SELOPTS<1,1>="SouthWest"þ    W$INPUT.SELVALS<1,1>=""þ    W$INPUT.SELOPTS<1,2>="California"þ    W$INPUT.SELVALS<1,2>="06"þ    W$INPUT.SELOPTS<1,3>="Nevada"þ    W$INPUT.SELVALS<1,3>="32"þ    W$INPUT.SELOPTS<1,4>="Utah"þ    W$INPUT.SELVALS<1,4>="49"þ    W$INPUT.SELOPTS<1,5>="Arizona"þ    W$INPUT.SELVALS<1,5>="04"þ    W$INPUT.UDPOS<1>=1þ    W$INPUT.DEFAULT<1>=WIDGET.USER.DATA(1)þ    W$INPUT.PROMPT<3>="Ending Period"þ    W$INPUT.TYPE<3>="SELECT"þ    WYR=CAL.PERIOD[1,4]-2þ    WMO=CAL.PERIOD[5,2]+1þ    IF WMO>12 THEN WYR+=1; WMO=1þ    SEL.PERIOD=WYR'R%4':WMO'R%2'þ    FOR PERIOD=CAL.PERIOD TO SEL.PERIOD STEP -1þ        WYR=PERIOD[1,4]þ        WMO=PERIOD[5,2]þ        IF WMO<1 THENþ            WYR-=1þ            WMO=12þ            PERIOD=WYR'R%4':WMO'R%2'þ        ENDþ        WMO=OCONV(WMO*30-15,"DMA")[1,3]þ        WPERIOD=WMO:" ":WYRþ        W$INPUT.SELOPTS<3,-1>=WPERIODþ        W$INPUT.SELVALS<3,-1>=PERIODþ    NEXT PERIODþ    W$INPUT.UDPOS<3>=3þ    W$INPUT.DEFAULT<3>=WIDGET.USER.DATA(3)þ    W$INPUT.PROMPT<4>="Sales Rep"þ    W$INPUT.TYPE<4>="SELECT"þ    W$INPUT.SELOPTS<4>="Everyone"þ    W$INPUT.SELVALS<4>="ALL"þ    SELECT F.SREPþ    SALESREPS=""þ    LOOPþ        READNEXT SREPINIT ELSE SREPINIT="\\EOF"þ    UNTIL SREPINIT="\\EOF" DOþ        READ SREPITEM FROM F.SREP,SREPINIT THENþ            LOCATE SREPINIT IN SALESREPS<1> BY "AL" SETTING IX ELSEþ                SALESREPS=INSERT(SALESREPS,1,IX;SREPINIT)þ                SALESREPS=INSERT(SALESREPS,2,IX;SREPITEM<1>)þ            ENDþ        ENDþ    REPEATþ    SREP.MAX=DCOUNT(SALESREPS<1>,CHAR(253))þ    FOR RVX=1 TO SREP.MAXþ        W$INPUT.SELOPTS<4,-1>=SALESREPS<2,RVX>þ        W$INPUT.SELVALS<4,-1>=SALESREPS<1,RVX>þ    NEXT RVXþ    W$INPUT.UDPOS<4>=4þ    W$INPUT.DEFAULT<4>=WIDGET.USER.DATA(4)þ    W$INPUT.PROMPT<5>="Demographic"þ    W$INPUT.TYPE<5>="SELECT"þ    W$INPUT.SELOPTS<5,1>="Inquiries"þ    W$INPUT.SELVALS<5,1>="Inquiry"þ    W$INPUT.SELOPTS<5,2>="Demos"þ    W$INPUT.SELVALS<5,2>="Demo"þ    W$INPUT.SELOPTS<5,3>="Quotes"þ    W$INPUT.SELVALS<5,3>="Quote"þ    W$INPUT.SELOPTS<5,4>="Orders"þ    W$INPUT.SELVALS<5,4>="Order"þ    W$INPUT.UDPOS<5>=5þ    W$INPUT.DEFAULT<5>=WIDGET.USER.DATA(5)þ    W$INPUT.BUTTON="Apply"þ*þ*þ    STATES<1,1>="USASouthWestRegion*04"þ    STATES<1,2>="USASouthWestRegion*06"þ    STATES<1,3>="USASouthWestRegion*32"þ    STATES<1,4>="USASouthWestRegion*49"þ    COUNTIES=""þ*þ    W$TITLE = "Data Evolution - ":WIDGET.USER.DATA(5):" Demographics"þ    BEGIN CASEþ    CASE WIDGET.USER.DATA(5)="Inquiry"; AX=6 ;ACTIVE=1000*ACT.FACTþ    CASE WIDGET.USER.DATA(5)="Demo"   ; AX=7 ;ACTIVE=500*ACT.FACTþ    CASE WIDGET.USER.DATA(5)="Quote"  ; AX=8 ;ACTIVE=300*ACT.FACTþ    CASE WIDGET.USER.DATA(5)="Order"  ; AX=9 ;ACTIVE=100*ACT.FACTþ    END CASEþ*þ    TERRITORIES = ""þ    SELECT F.TERRþ    LOOPþ        READNEXT TERR ELSE TERR="\\EOF"þ    UNTIL TERR="\\EOF" DOþ        READ TERRITEM FROM F.TERR,TERR THENþ            IF WIDGET.USER.DATA(4)="ALL" OR WIDGET.USER.DATA(4)=TERRITEM<2> THENþ                LOCATE TERR IN TERRITORIES<1> BY "AR" SETTING IX ELSEþ                    TERRITORIES=INSERT(TERRITORIES,1,IX;TERR)þ                    TERRITORIES=INSERT(TERRITORIES,2,IX;TERRITEM<1>)þ                    TERRITORIES=INSERT(TERRITORIES,3,IX;TERRITEM<2>)þ                    TERRITORIES=INSERT(TERRITORIES,4,IX;TERRITEM<3>)þ                    IF TYPE.ID="" THENþ                        MAP.IDS=FIELD(TERRITEM<4,1>,"*",1)[1,2]þ                        BEGIN CASEþ                        CASE MAP.IDS="Ar"; MAP.IDS="USASouthWestRegion*04"þ                        CASE MAP.IDS="Ca"; MAP.IDS="USASouthWestRegion*06"þ                        CASE MAP.IDS="Ne"; MAP.IDS="USASouthWestRegion*32"þ                        CASE MAP.IDS="Ut"; MAP.IDS="USASouthWestRegion*49"þ                        END CASEþ                        TERRITORIES=INSERT(TERRITORIES,5,IX;MAP.IDS)þ                    END ELSEþ                        CMAX=DCOUNT(TERRITEM<4>,CHAR(253))þ                        FOR CX=1 TO CMAXþ                            IF WIDGET.USER.DATA(6)=FIELD(TERRITEM<4,CX>,"*",1) THENþ                                COUNTIES<1,-1>=TERRITEM<4,CX>þ                            ENDþ                        NEXT CXþ                    ENDþ                ENDþ            ENDþ        ENDþ    REPEATþ*þ    TERR.MAX=DCOUNT(TERRITORIES<1>,CHAR(253))þ    IF WIDGET.USER.DATA(4)="ALL" THENþ        SNAME="Everyone"þ    END ELSEþ        READV SNAME FROM F.SREP,WIDGET.USER.DATA(4),1 ELSEþ            SNAME="Unknown"þ        ENDþ    ENDþ*þ    QTYS=""þ    FOR PERIOD=BEG.PERIOD TO END.PERIODþ        WYR=PERIOD[1,4]þ        WMO=PERIOD[5,2]þ        IF WMO>12 THEN PERIOD=(WYR+1)'R%4':"01"þ        FOR TERRX=1 TO TERR.MAXþ            TERR=TERRITORIES<1,TERRX>þ            READ SALES FROM F.SSUM,TERR:"*":PERIOD THENþ                IF TYPE.ID="" THENþ                    Table=TERRITORIES<5,TERRX>þ                    Table<2>=SUM(SALES<AX>)þ                    TBL.MAX=DCOUNT(Table<1>,CHAR(253))þ                    FOR TBLX=1 TO TBL.MAXþ                        LOCATE Table<1,TBLX> IN STATES<1> SETTING TX THENþ                            QTYS<TX>+=Table<2,TBLX>þ                        ENDþ                    NEXT TBLXþ                END ELSEþ                    Table=SALES<10>þ                    Table<2>=SALES<AX>þ                    TBL.MAX=DCOUNT(Table<1>,CHAR(253))þ                    FOR TBLX=1 TO TBL.MAXþ                        LOCATE Table<1,TBLX> IN COUNTIES<1> SETTING TX THENþ                            QTYS<TX>+=Table<2,TBLX>þ                        ENDþ                    NEXT TBLXþ                ENDþ            ENDþ        NEXT TERRXþ    NEXT PERIODþ*þ    OPEN 'MVDB.MAP.DATA' TO F.MVDB.MAP.DATA ELSE STOP 201, 'MVDB.MAP.DATA'þ*þ    IF TYPE.ID="" THENþ        MAX=DCOUNT(STATES,CHAR(253))þ        FOR X=1 TO MAXþ            ID=STATES<1,X>þ            CONVERT '*' TO '#' IN ID    ;*6-1-15*þ            READ I FROM F.MVDB.MAP.DATA,ID THENþ*6-1-15*      W$MAP.IDS<1,-1> = FIELD(ID,'*',2)þ                W$MAP.IDS<1,-1> = FIELD(ID,'#',2) ;*6-1-15*þ                W$MAP.VALUES<1,-1> = QTYS<X>+0þ                W$MAP.VALUE.TOOLTEXT<1,-1> := I<2>:' (':(QTYS<X>+0):')'þ                W$MAP.VALUE.DD<1,-1> = 1þ            ENDþ        NEXT Xþ    END ELSEþ        MAX=DCOUNT(COUNTIES,CHAR(253))þ        FOR X=1 TO MAXþ            ID=COUNTIES<1,X>þ            CONVERT '*' TO '#' IN ID    ;*6-1-15*þ            READ I FROM F.MVDB.MAP.DATA,ID THENþ*6-1-15*      W$MAP.IDS<1,-1> = FIELD(ID,'*',2)þ                W$MAP.IDS<1,-1> = FIELD(ID,'#',2) ;*6-1-15*þ                W$MAP.VALUES<1,-1> = QTYS<X>+0þ                W$MAP.VALUE.TOOLTEXT<1,-1> := I<2>:' (':(QTYS<X>+0):')'þ            ENDþ        NEXT Xþ    ENDþ*þ    W$MAP.RANGE.NAME<1,1> = "No Activity"þ    W$MAP.RANGE.COLOR<1,1> = "#404040"þ    W$MAP.RANGE.NAME<1,2> = "Light Activity"þ    W$MAP.RANGE.COLOR<1,2> = "#4682B4"þ    W$MAP.RANGE.NAME<1,3> = "Moderate Activity"þ    W$MAP.RANGE.COLOR<1,3> = "#FF8C00"þ    W$MAP.RANGE.NAME<1,4> = "Heavy Activity"þ    W$MAP.RANGE.COLOR<1,4> = "#FF0000"þ*þ    W$MAP.RANGE.LOW<1,1> = 0þ    W$MAP.RANGE.HIGH<1,1> = 1þ    W$MAP.RANGE.LOW<1,2> = 1þ    W$MAP.RANGE.HIGH<1,2> = ACTIVEþ    W$MAP.RANGE.LOW<1,3> = ACTIVEþ    W$MAP.RANGE.HIGH<1,3> = ACTIVE*3þ    W$MAP.RANGE.LOW<1,4> = ACTIVE*3þ    W$MAP.RANGE.HIGH<1,4> = "999999"þ*þ    W$CHART.OPTIONS<-1> = 'animation="0"'þ    W$CHART.OPTIONS<-1> = 'showShadow="1"'þ* 10-17-16 deprecated * W$CHART.OPTIONS<-1> = 'showBevel="1"'þ    W$CHART.OPTIONS<-1> = 'legendShadow="1"'þ    W$CHART.OPTIONS<-1> = 'legendAllowDrag="1"'þ*þ    W$LINK.LABEL<1,1> = "California"þ    W$LINK.UD.VAL<1,1,1> = "06"þ    W$LINK.UD.POS<1,1,1> = "1"þ    W$LINK.UD.VAL<1,1,2> = WIDGET.USER.DATA(2)þ    W$LINK.UD.POS<1,1,2> = "2"þ    W$LINK.UD.VAL<1,1,3> = WIDGET.USER.DATA(3)þ    W$LINK.UD.POS<1,1,3> = "3"þ    W$LINK.UD.VAL<1,1,4> = WIDGET.USER.DATA(4)þ    W$LINK.UD.POS<1,1,4> = "4"þ    W$LINK.UD.VAL<1,1,5> = WIDGET.USER.DATA(5)þ    W$LINK.UD.POS<1,1,5> = "5"þ    W$LINK.UD.VAL<1,1,6> = "California"þ    W$LINK.UD.POS<1,1,6> = "6"þ    W$LINK.LOCATION<1,1> = "2"þ    W$LINK.DD.WIDGET<1,1> = "MV Demo Map"þ*þ    W$LINK.LABEL<1,2> = "Nevada"þ    W$LINK.UD.VAL<1,2,1> = "32"þ    W$LINK.UD.POS<1,2,1> = "1"þ    W$LINK.UD.VAL<1,2,2> = WIDGET.USER.DATA(2)þ    W$LINK.UD.POS<1,2,2> = "2"þ    W$LINK.UD.VAL<1,2,3> = WIDGET.USER.DATA(3)þ    W$LINK.UD.POS<1,2,3> = "3"þ    W$LINK.UD.VAL<1,2,4> = WIDGET.USER.DATA(4)þ    W$LINK.UD.POS<1,2,4> = "4"þ    W$LINK.UD.VAL<1,2,5> = WIDGET.USER.DATA(5)þ    W$LINK.UD.POS<1,2,5> = "5"þ    W$LINK.UD.VAL<1,2,6> = "Nevada"þ    W$LINK.UD.POS<1,2,6> = "6"þ    W$LINK.LOCATION<1,2> = "2"þ    W$LINK.DD.WIDGET<1,2> = "MV Demo Map"þ*þ    W$LINK.LABEL<1,3> = "Utah"þ    W$LINK.UD.VAL<1,3,1> = "49"þ    W$LINK.UD.POS<1,3,1> = "1"þ    W$LINK.UD.VAL<1,3,2> = WIDGET.USER.DATA(2)þ    W$LINK.UD.POS<1,3,2> = "2"þ    W$LINK.UD.VAL<1,3,3> = WIDGET.USER.DATA(3)þ    W$LINK.UD.POS<1,3,3> = "3"þ    W$LINK.UD.VAL<1,3,4> = WIDGET.USER.DATA(4)þ    W$LINK.UD.POS<1,3,4> = "4"þ    W$LINK.UD.VAL<1,3,5> = WIDGET.USER.DATA(5)þ    W$LINK.UD.POS<1,3,5> = "5"þ    W$LINK.UD.VAL<1,3,6> = "Utah"þ    W$LINK.UD.POS<1,3,6> = "6"þ    W$LINK.LOCATION<1,3> = "2"þ    W$LINK.DD.WIDGET<1,3> = "MV Demo Map"þ*þ    W$LINK.LABEL<1,4> = "Arizona"þ    W$LINK.UD.VAL<1,4,1> = "04"þ    W$LINK.UD.POS<1,4,1> = "1"þ    W$LINK.UD.VAL<1,4,2> = WIDGET.USER.DATA(2)þ    W$LINK.UD.POS<1,4,2> = "2"þ    W$LINK.UD.VAL<1,4,3> = WIDGET.USER.DATA(3)þ    W$LINK.UD.POS<1,4,3> = "3"þ    W$LINK.UD.VAL<1,4,4> = WIDGET.USER.DATA(4)þ    W$LINK.UD.POS<1,4,4> = "4"þ    W$LINK.UD.VAL<1,4,5> = WIDGET.USER.DATA(5)þ    W$LINK.UD.POS<1,4,5> = "5"þ    W$LINK.UD.VAL<1,4,6> = "Arizona"þ    W$LINK.UD.POS<1,4,6> = "6"þ    W$LINK.LOCATION<1,4> = "2"þ    W$LINK.DD.WIDGET<1,4> = "MV Demo Map"þ*þ    W$LINK.LABEL<1,5> = "SouthWest Region"þ    W$LINK.UD.VAL<1,5,1> = ""þ    W$LINK.UD.POS<1,5,1> = "1"þ    W$LINK.UD.VAL<1,5,2> = WIDGET.USER.DATA(2)þ    W$LINK.UD.POS<1,5,2> = "2"þ    W$LINK.UD.VAL<1,5,3> = WIDGET.USER.DATA(3)þ    W$LINK.UD.POS<1,5,3> = "3"þ    W$LINK.UD.VAL<1,5,4> = WIDGET.USER.DATA(4)þ    W$LINK.UD.POS<1,5,4> = "4"þ    W$LINK.UD.VAL<1,5,5> = WIDGET.USER.DATA(5)þ    W$LINK.UD.POS<1,5,5> = "5"þ    W$LINK.UD.VAL<1,5,6> = ""þ    W$LINK.UD.POS<1,5,6> = "6"þ    W$LINK.LOCATION<1,5> = "2"þ    W$LINK.DD.WIDGET<1,5> = "MV Demo Map"þ*þ    INCLUDE WBPD SOURCE.VIEW.ICONþ*þ    RETURN000365SUB.SOURCE.VIEWþ0c2SUBROUTINE SUB.SOURCE.VIEWþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: View BASIC Source Codeþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TYPE = "TEXT"þW$TITLE = "Source: ":WIDGET.USER.DATA(1):", ":WIDGET.USER.DATA(2)þW$WIDTH = 3þ*þIF G$QUERYMODE THEN RETURNþ*þOPEN WIDGET.USER.DATA(1) TO F.FILEVAR THENþ  READ REC FROM F.FILEVAR, WIDGET.USER.DATA(2) ELSE REC = '"':WIDGET.USER.DATA(2):'" not on file.'þEND ELSE REC = '"':WIDGET.USER.DATA(1):'" is not a valid file name.'þ*þW$TEXT.DATA = RECþ*þW$LINK.ICON<1> = "script_edit.png"þW$LINK.ICON.TXT<1> = "Edit BASIC Source"þW$LINK.URL<1> = "/dbc/MVDB.WEB.ED?ed_file=":WIDGET.USER.DATA(1):"&ed_item=":WIDGET.USER.DATA(2)þW$LINK.URL.OPTS<1> = 'target="ED_':WIDGET.USER.DATA(1):"_":WIDGET.USER.DATA(2):'"'þW$LINK.LOCATION<1> = "C"þ*þINCLUDE WBPD SOURCE.VIEW.ICONþ*þRETURNþ000405SUB.DEMO.DAYS.TO.PAY.PIEþ0c2SUBROUTINE SUB.DEMO.DAYS.TO.PAY.PIEþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TYPE = "FC2DPIE"þW$WIDTH = 3þW$TITLE = 'Chart - Days To Pay 'þ*þIF G$QUERYMODE THEN RETURNþ*þW$BAR.COLORS<1,1>=COLOR$MAROONþW$BAR.COLORS<1,2>=COLOR$TEALþW$BAR.COLORS<1,3>=COLOR$SILVERþW$BAR.COLORS<1,4>=COLOR$BLUEþYEAR=WIDGET.USER.DATA(1)þOPEN '','MVDB.CONTROL' TO FILE.CONTROL ELSE STOPþREAD REC FROM FILE.CONTROL, 'DEMO.FINANCIAL.PICTURE' ELSE REC=''þLOCATE YEAR IN REC<67> SETTING YEAR.POS ELSE YEAR.POS=1þYEAR.POS=4-YEAR.POS;   * NEED TO INVERT TO YYYY, YYYY-1, YYYY-2þDAYS.POS=YEAR.POS+53þW$TITLE:=YEARþDAYS.TYPES='0 - 30 Days,31 - 60 Days,61 - 90 Days,Over 90 Days'þCONVERT ',' TO CHAR(253) IN DAYS.TYPESþPERIOD.PCTS=REC<DAYS.POS>þMAX.DAYS.TYPES=DCOUNT(DAYS.TYPES,CHAR(253))þFOR DAYS.CNTR = 1 TO MAX.DAYS.TYPESþ   PCT=PERIOD.PCTS<1,DAYS.CNTR>þ   W$PIE.LABELS<1,DAYS.CNTR>=DAYS.TYPES<1,DAYS.CNTR>þ   W$PIE.VALUES<1,DAYS.CNTR>=PCTþ NEXT DAYS.CNTRþW$PIE.CAPTION='Days To Pay By Period For ':YEARþ*þ*þ*þRETURN00106BSUB.DEMO.AGAUGEþ0c2SUBROUTINE SUB.DEMO.AGAUGEþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Angular Gauge widget demoþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "Angular Gauge Chart Demo - Sales Volume"þW$TYPE = "HLINEARGAUGE"þW$WIDTH = 2þ*þIF G$QUERYMODE THEN RETURNþ*þIF WIDGET.USER.DATA(1) # "" THENþ  W$TYPE = WIDGET.USER.DATA(1)þEND ELSE WIDGET.USER.DATA(1) = "HLINEARGAUGE"þIF WIDGET.USER.DATA(2) = "" THEN WIDGET.USER.DATA(2) = 1þPALETTE = WIDGET.USER.DATA(2)þIF WIDGET.USER.DATA(3) = "" THEN WIDGET.USER.DATA(3) = 725000þCHART.VALUE = WIDGET.USER.DATA(3)þIF WIDGET.USER.DATA(4) = "" THEN WIDGET.USER.DATA(4) = W$WIDTHþW$WIDTH = WIDGET.USER.DATA(4)þIF WIDGET.USER.DATA(5) = "" THEN WIDGET.USER.DATA(5) = 1þNUM.CHARTS = WIDGET.USER.DATA(5);* Number of single-value meter style charts to produceþ*þBEGIN CASEþ  CASE W$TYPE = "HLINEARGAUGE"þ    W$TITLE = "Linear"þ  CASE W$TYPE = "ANGULARGAUGE"þ    W$TITLE = "Angular"þ  CASE W$TYPE = "HLED"þ    W$TITLE = "Horizontal LED"þ  CASE W$TYPE = "VLED"þ    W$TITLE = "Vertical LED"þ  CASE W$TYPE = "THERMOMETER"þ    W$TITLE = "Thermometer"þ  CASE W$TYPE = "CYLINDER"þ    W$TITLE = "Cylinder"þ  CASE W$TYPE = "BULB"þ    W$TITLE = "Bulb"þEND CASEþW$TITLE := " Gauge Chart Demo - Sales Volume"þW$FW.LOWER.LIMIT = 0þW$FW.UPPER.LIMIT = 800000þ*þW$FW.COLOR.RANGE<1,1> = 0þW$FW.COLOR.RANGE<2,1> = 300000þW$FW.COLOR.RANGE<3,1> = COLOR$REDþ*þW$FW.COLOR.RANGE<1,2> = 300000þW$FW.COLOR.RANGE<2,2> = 550000þW$FW.COLOR.RANGE<3,2> = COLOR$YELLOWþ*þW$FW.COLOR.RANGE<1,3> = 550000þW$FW.COLOR.RANGE<2,3> = 600000þW$FW.COLOR.RANGE<3,3> = COLOR$GREENþ*þW$FW.COLOR.RANGE<1,4> = 600000þW$FW.COLOR.RANGE<2,4> = 800000þW$FW.COLOR.RANGE<3,4> = COLOR$SILVERþ*þIF WIDGET.USER.DATA(1) # "HLINEARGAUGE" AND WIDGET.USER.DATA(1) # "ANGULARGAUGE" THENþ  * Create multiple values to make an array of chartsþ  FOR N = 1 TO NUM.CHARTSþ    W$FW.METER.VALUE<1,N> = INT(CHART.VALUE*(N/NUM.CHARTS))þ  NEXT Nþ  W$FW.THERMOMETER.COLOR = COLOR$REDþEND ELSEþ  W$FW.DIAL.VALUES<1> = CHART.VALUEþ  W$FW.TRENDPOINT.VALUES<1,1> = 675000 ;* Low-limit of trendpointþ  W$FW.TRENDPOINT.VALUES<2,1> = 685000 ;* High-limit of trendpointþ  W$FW.TRENDPOINT.LABELS<1,1> = "Last Year"þ  W$FW.TRENDPOINT.OPTS<1,1> = 'color="':COLOR$GREEN:'" useMarker="1"'þ  *þ  W$FW.TRENDPOINT.VALUES<1,2> = 475000þ  W$FW.TRENDPOINT.LABELS<1,2> = "2 yrs ago"þ  W$FW.TRENDPOINT.OPTS<1,2> = 'color="':COLOR$BLACK:'" useMarker="1"'þ  *þENDþ*þ* Set up a drill-down widget callþ*þW$FW.DD.WIDGET<1,1> = "Drilldown Demo"þW$FW.DD.UD.POS<1,1,1> = 1þW$FW.DD.UD.VAL<1,1,1> = W$FW.METER.VALUE:W$FW.DIAL.VALUES<1>þW$FW.DD.UD.POS<1,1,2> = 2þW$FW.DD.UD.VAL<1,1,2> = WIDGET.USER.DATA(1)þ*þW$FW.LOWER.LIMIT.LABEL = "Poor"þW$FW.UPPER.LIMIT.LABEL = "Great"þ*þW$FW.NUMBER.PREFIX = "$"þW$FW.NUMBER.SUFFIX = ""þ*þW$FW.CHART.PALETTE = PALETTEþ*þW$FW.TICKMARKS<1> = 1 ;* Display tickmarksþW$FW.TICKMARKS<2> = 1 ;* Display values by tickmarksþW$FW.TICKMARKS<3> = "B" ;* Show tickmarks below the graphþW$FW.TICKMARKS<4> = "" ;* Let it calculate thisþW$FW.TICKMARKS<5> = 4 ;* 4 minor tickmarks between the major onesþ*þW$INPUT.PROMPT = "Gauge Chart Style"þW$INPUT.TYPE = "SELECT"þW$INPUT.SELOPTS = "Linear":@VM:"Angular":@VM:"Horizontal LED":@VM:"Vertical LED":@VM:"Thermometer":@VM:"Cylinder":@VM:"Bulb"þW$INPUT.SELVALS = "HLINEARGAUGE":@VM:"ANGULARGAUGE":@VM:"HLED":@VM:"VLED":@VM:"THERMOMETER":@VM:"CYLINDER":@VM:"BULB"þW$INPUT.UDPOS = 1þW$INPUT.DEFAULT = WIDGET.USER.DATA(1)þ*þW$INPUT.PROMPT<2> = "Palette"þW$INPUT.TYPE<2> = "SELECT"þW$INPUT.SELOPTS<2> = "1":@VM:"2":@VM:"3":@VM:"4":@VM:"5"þW$INPUT.SELVALS<2> = "1":@VM:"2":@VM:"3":@VM:"4":@VM:"5"þW$INPUT.UDPOS<2> = 2þW$INPUT.DEFAULT<2> = WIDGET.USER.DATA(2)þ*þW$INPUT.PROMPT<3> = "Chart Value"þW$INPUT.TYPE<3> = "TEXT"þW$INPUT.UDPOS<3> = 3þW$INPUT.DEFAULT<3> = CHART.VALUEþ*þW$INPUT.PROMPT<4> = "Widget Width"þW$INPUT.TYPE<4> = "SELECT"þW$INPUT.SELOPTS<4> = "1 - Narrow":@VM:"2 - Medium":@VM:"3 - Full Width"þW$INPUT.SELVALS<4> = "1":@VM:"2":@VM:"3"þW$INPUT.UDPOS<4> = 4þW$INPUT.DEFAULT<4> = W$WIDTHþ*þ*W$INPUT.PROMPT<5> = "# of Charts"þ*W$INPUT.TYPE<5> = "TEXT"þ*W$INPUT.UDPOS<5> = 5þ*W$INPUT.DEFAULT<5> = NUM.CHARTSþ*þINCLUDE WBPD SOURCE.VIEW.ICONþ*þRETURN0003E1SUB.DEMO.PYRAMIDþ0c2SUBROUTINE SUB.DEMO.PYRAMIDþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Pyramid widget demoþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "Pyramid Demo - Errors by Reason"þW$TYPE = "PYRAMID"þW$WIDTH = 1þ*þIF G$QUERYMODE THEN RETURNþ*þCATEG = ""þCATEG<1> = 19þCATEG<2> = 20þCATEG<3> = 36þCATEG<4> = 44þ*þCATEG.NAMES = ''þCATEG.NAMES<1> = "Shipping"þCATEG.NAMES<2> = "Bad Choices"þCATEG.NAMES<3> = "Errors"þCATEG.NAMES<4> = "Bad Material"þ*þW$FW.CAPTION = "Errors by Reason"þW$FW.SUBCAPTION = "2008 Shipments"þW$CHART.OPTIONS<-1> = "isSliced='1'"þ*þFOR N = 1 TO DCOUNT(CATEG.NAMES,@AM)þ  W$FW.LABELS<1,N> = CATEG.NAMES<N>þ  W$FW.VALUES<1,N> = CATEG<N>þ  *þ  * Set up a drill-down widget call for each categoryþ  *þ  W$FW.DD.WIDGET<1,N> = "Drilldown Demo"þ  W$FW.DD.UD.POS<1,N,1> = 1þ  W$FW.DD.UD.VAL<1,N,1> = CATEG.NAMES<N>þ  W$FW.DD.UD.POS<1,N,2> = 2þ  W$FW.DD.UD.VAL<1,N,2> = CATEG<N>þNEXT Nþ*þINCLUDE WBPD SOURCE.VIEW.ICONþ*þRETURN0007E7SUB.SHOW.VARSþ0c2SUBROUTINE SUB.SHOW.VARSþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Display global valuesþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD WWW.INCLUDEþINCLUDE WBPD MVDB.INCLUDEþ*þW$TYPE = "TABLE"þW$TITLE = "Variables"þ*þIF G$QUERYMODE = 1 THEN RETURNþ*þW$LINK.LOCATION<1,1> = 2þW$LINK.LOCATION<1,2> = 1þ*þW$LINK.LABEL<1,2> = "Do Nothing"þW$LINK.UD.POS<1,2> = "5"þW$LINK.UD.VAL<1,2> = "XXX"þ*þIF WIDGET.USER.DATA(1) = "1" THENþ  W$LINK.LABEL<1,1> = "Show"þ  W$LINK.UD.POS<1,1> = "1"þ  W$LINK.UD.VAL<1,1> = "0"þ  RETURNþENDþW$LINK.LABEL<1,1> = "Hide"þW$LINK.UD.POS<1,1> = "1"þW$LINK.UD.VAL<1,1> = "1"þ*þW$TABLE.COL.LABELS<1,1> = "Variable"þW$TABLE.COL.LABELS<1,2> = "Type"þW$TABLE.COL.LABELS<1,3> = "Value"þ*þW$TABLE.COL.JUST<1,1> = "left"þW$TABLE.COL.JUST<1,2> = "left"þW$TABLE.COL.JUST<1,3> = "left"þ*þTYPE = "GLOBAL"þROW = 0þNAME = "G$USERID" ; VAL = G$USERID ; GOSUB ADDVARþNAME = "G$CURRENT.DB" ; VAL = G$CURRENT.DB ; GOSUB ADDVARþNAME = "G$LOGIN.DATE" ; VAL = G$LOGIN.DATE ; GOSUB ADDVARþNAME = "G$LOGIN.TIME" ; VAL = G$LOGIN.TIME ; GOSUB ADDVARþNAME = "G$WIDGET.NAME" ; VAL = G$WIDGET.NAME ; GOSUB ADDVARþNAME = "G$WIDGET.SUB" ; VAL = G$WIDGET.SUB ; GOSUB ADDVARþNAME = "G$WIDGET.NAME.LIST" ; VAL = G$WIDGET.NAME.LISTþCONVERT @VM TO "," IN VALþGOSUB ADDVARþNAME = "G$WIDGET.SUB.LIST" ; VAL = G$WIDGET.SUB.LISTþCONVERT @VM TO "," IN VALþGOSUB ADDVARþNAME = "G$WIDGET.CALL.TIME" ; VAL = G$WIDGET.CALL.TIMEþCONVERT @VM TO "," IN VALþGOSUB ADDVARþNAME = "G$WIDGET.CALL.DUR" ; VAL = G$WIDGET.CALL.DURþCONVERT @VM TO "," IN VALþGOSUB ADDVARþNAME = "G$LICENSE.COUNT" ; VAL = G$LICENSE.COUNT; GOSUB ADDVARþNAME = "G$EDITION" ; VAL = G$EDITION; GOSUB ADDVARþNAME = "G$SYSTEM.ID" ; VAL = G$SYSTEM.ID; GOSUB ADDVARþ*þTYPE = "CGI"þFOR X = 1 TO DCOUNT( CGI$VARS, @AM )þ  NAME = CGI$VARS<X>þ  VAL = CGI$VALS<X>þ  GOSUB ADDVARþNEXT Xþ*þW$PRINTABLE = 1þ*þINCLUDE WBPD SOURCE.VIEW.ICONþ*þRETURNþ*þADDVAR: *þ*þROW += 1þW$TABLE.DATA<ROW,1> = NAMEþW$TABLE.DATA<ROW,2> = TYPEþW$TABLE.DATA<ROW,3> = VALþRETURN000EFFSUB.ICON.GALLERYþ0c2SUBROUTINE SUB.ICON.GALLERYþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Icon Galleryþ*þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "Icon Gallery"þW$TYPE = "HTML"þW$WIDTH = 3þW$PDFABLE = 1þ*þIF G$QUERYMODE THEN RETURN ;* Dont process, just provide title, type & widthþ*þOPEN '','MVDB.CONTROL' TO F.MVDB.CONTROL ELSEþ  W$TYPE = "TEXT"þ  W$TEXT.DATA = "UNABLE TO OPEN MVDB.CONTROL"þ  RETURNþENDþREAD ICON.LIST FROM F.MVDB.CONTROL, 'ICON.LIST' ELSEþ  W$TYPE = "TEXT"þ  W$TEXT.DATA = "UNABLE TO READ ICON.LIST FROM MVDB.CONTROL"þ  RETURNþENDþCONVERT @AM TO @VM IN ICON.LISTþ*þ* WIDGET.USER.DATA(1) = User specified search stringþ* WIDGET.USER.DATA(2) = Search string used to make filtered list (previous string)þ* WIDGET.USER.DATA(3) = Filtered listþ* WIDGET.USER.DATA(4) = Current page #þ*þICNT = DCOUNT( ICON.LIST, @VM )þIF WIDGET.USER.DATA(2) # WIDGET.USER.DATA(1) THENþ  NEW.FILTER = 1þEND ELSE NEW.FILTER = 0þPAGENO = WIDGET.USER.DATA(4)þIF NOT(PAGENO MATCHES "1N0N") THEN PAGENO = ""þIF PAGENO = "" THEN PAGENO = 1þIF NEW.FILTER THENþ  WIDGET.USER.DATA(2) = WIDGET.USER.DATA(1)þ  SEARCH.STR = WIDGET.USER.DATA(1)þ  SEARCH.STR = OCONV( SEARCH.STR, 'MCU')þ  FILTERED.LIST = ""þ  FOR IX = 1 TO ICNTþ    IF INDEX(OCONV(ICON.LIST<1,IX>,'MCU'),SEARCH.STR,1) THENþ      FILTERED.LIST<1,-1> = ICON.LIST<1,IX>þ    ENDþ  NEXT IXþ  WIDGET.USER.DATA(3) = FILTERED.LISTþ  WIDGET.USER.DATA(4) = 1 ;* Page 1þ  ICON.LIST = FILTERED.LISTþ  ICNT = DCOUNT( ICON.LIST, @VM )þ  WIDGET.USER.DATA(5) = "" ;* Next/Prev action not processed here.þ  WIDGET.USER.DATA(4) = 1 ;* Start on page 1 with a new filterþ  PAGENO = 1þEND ELSEþ  IF WIDGET.USER.DATA(2) # "" THENþ    ICON.LIST = WIDGET.USER.DATA(3)þ    ICNT = DCOUNT( ICON.LIST, @VM) þ  ENDþENDþIF WIDGET.USER.DATA(5) = "NEXT" THENþ  PAGENO += 1þEND ELSE IF WIDGET.USER.DATA(5) = "PREV" THENþ  PAGENO -= 1þ  IF PAGENO < 1 THEN PAGENO = 1þENDþWIDGET.USER.DATA(5) = ""þWIDGET.USER.DATA(4) = PAGENOþPER.ROW = 7þROWS.PER.PAGE = 10þCALL GET.CGI('generatepdf',IS.PDF)þIF IS.PDF THENþ  * If generating a PDF, place all items on a singleþ  * page, letting the PDF renderer handle pagination.þ  ROWS.PER.PAGE = (INT((ICNT-1)/PER.PAGE)+1)*PER.PAGEþENDþPER.PAGE = ROWS.PER.PAGE * PER.ROWþMAX.NAME.CHARS = 22þMAX.PAGE = INT( (ICNT-1) / PER.PAGE )+ 1þIF PAGENO > MAX.PAGE THENþ  PAGENO = 1þ  WIDGET.USER.DATA(4) = PAGENOþENDþSTART.POS = ((PAGENO-1) * PER.PAGE) ;* This is an offset, not an actual starting positionþIF ICON.LIST = "" THENþ  W$HTML.DATA = '<table><tr><td>No Results</td></tr></table>'þEND ELSEþ  W$HTML.DATA = '<table><tr><td colspan="':PER.ROW:'">Page ':PAGENO:' of ':MAX.PAGE:'</td></tr><tr>'þ  W$HTML.DATA := ''þ  IX = 1þ  LOOPþ    SHOW.NAME = ICON.LIST<1,IX+START.POS>þ    IF LEN(SHOW.NAME) > MAX.NAME.CHARS THENþ      SHOW.NAME = SHOW.NAME[1,MAX.NAME.CHARS-3]:"..."þ    ENDþ    W$HTML.DATA := '<td align="center" width="115px" style="font-size:10px;"><img title="':ICON.LIST<1,IX+START.POS>:'" class="icon" src="/db/icons/':ICON.LIST<1,IX+START.POS>:'" /><br />':SHOW.NAME:'<br />':IX+START.POS:'</td>'þ  UNTIL IX = (PER.PAGE) OR (IX+START.POS) >= ICNT DOþ    IF NOT(MOD(IX,PER.ROW)) THENþ      W$HTML.DATA := '</tr><tr>'þ    ENDþ    IX += 1þ  REPEATþ  W$HTML.DATA := '</tr></table>'þENDþ*W$HTML.DATA := '<br />'þ*FOR N = 1 TO 5þ*  W$HTML.DATA := 'WIDGET.USER.DATA(':N:') = ':WIDGET.USER.DATA(N):'<br />'þ*NEXT Nþ*þW$INPUT.PROMPT<1> = "Search"þW$INPUT.TYPE<1> = "TEXT"þW$INPUT.DEFAULT<1> = WIDGET.USER.DATA(1)þW$INPUT.UDPOS<1> = 1þW$INPUT.BUTTON = "Search"þ*þIF PAGENO > 1 THENþ  W$LINK.LABEL<1,-1> = "Prev Page"þ  W$LINK.LOCATION<1,-1> = 23þ  W$LINK.UD.POS<1,-1> = 5þ  W$LINK.UD.VAL<1,-1> = "PREV"þENDþ*þIF PAGENO < MAX.PAGE THENþ  W$LINK.LABEL<1,-1> = "Next Page"þ  W$LINK.LOCATION<1,-1> = 14þ  W$LINK.UD.POS<1,-1> = 5þ  W$LINK.UD.VAL<1,-1> = "NEXT"þENDþ*þRETURN000436PURGE.NON.PLATFORM.WIDGETSþ0c2*þ** 6-22-15 TPARKER þ** Purge all platform specific widgets not for this platformþ*þ** run by the post install command processþ*þOPEN '','MVDB.CONTROL' TO FILE ELSE STOPþREAD PLATFORM FROM FILE, 'PLATFORM' ELSE PLATFORM=''þIF PLATFORM = '' THEN STOPþ*PJS 07-13-15 - comment out this line: IF LEN(PLATFORM) = 2 THEN PLATFORM=PLATFORM:' 'þ*þOPEN '','MVDB.WIDGETS' TO FI.MVDB.WIDGETS ELSE STOPþ*þSELECT FI.MVDB.WIDGETSþ*þLOOPþ   READNEXT ID ELSE ID='DONE'þUNTIL ID = 'DONE' DOþ   WIDGET.PLATFORM=FIELD(ID,' ',1)þ   DELETE.IT=0þ   BEGIN CASEþ      CASE PLATFORM = WIDGET.PLATFORM; NULLþ      CASE WIDGET.PLATFORM = 'D3'; DELETE.IT=1þ      CASE WIDGET.PLATFORM = 'UV'; DELETE.IT=1þ      CASE WIDGET.PLATFORM = 'UD'; DELETE.IT=1þ      CASE WIDGET.PLATFORM = 'QM'; DELETE.IT=1þ      CASE WIDGET.PLATFORM = 'OI'; DELETE.IT=1þ      CASE WIDGET.PLATFORM = 'RL'; DELETE.IT=1þ      CASE WIDGET.PLATFORM = 'JB'; DELETE.IT=1þ      CASE WIDGET.PLATFORM = 'D3'; DELETE.IT=1þ      CASE 1; NULLþ   END CASEþ   IF DELETE.IT THEN DELETE FI.MVDB.WIDGETS, IDþREPEATþEND000C95SUB.DEMO.SPARKþ0c2SUBROUTINE SUB.DEMO.SPARKþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Spark widget demoþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "Spark Chart Demo - My Stock Price"þW$TYPE = "SPARKLINE"þW$WIDTH = 3þ*þIF G$QUERYMODE THEN RETURNþ*þIF WIDGET.USER.DATA(1) # "" THENþ  W$TYPE = WIDGET.USER.DATA(1)þEND ELSE WIDGET.USER.DATA(1) = "SPARKLINE"þIF WIDGET.USER.DATA(2) = "" THEN WIDGET.USER.DATA(2) = 1þPALETTE = WIDGET.USER.DATA(2)þ*þVALUES = ""þW$FW.VALUES<1,-1> = "2726"þW$FW.VALUES<1,-1> = "3788"þW$FW.VALUES<1,-1> = "3888"þW$FW.VALUES<1,-1> = "2290"þW$FW.VALUES<1,-1> = "3902"þW$FW.VALUES<1,-1> = "2331"þW$FW.VALUES<1,-1> = "3085"þW$FW.VALUES<1,-1> = "2701"þW$FW.VALUES<1,-1> = "3320"þW$FW.VALUES<1,-1> = "2193"þW$FW.VALUES<1,-1> = "3451"þW$FW.VALUES<1,-1> = "2484"þW$FW.VALUES<1,-1> = "3932"þW$FW.VALUES<1,-1> = "3704"þW$FW.VALUES<1,-1> = "2781"þW$FW.VALUES<1,-1> = "2295"þW$FW.VALUES<1,-1> = "2473"þW$FW.VALUES<1,-1> = "3763"þW$FW.VALUES<1,-1> = "2975"þW$FW.VALUES<1,-1> = "2235"þW$FW.VALUES<1,-1> = "3435"þW$FW.VALUES<1,-1> = "2760"þW$FW.VALUES<1,-1> = "2797"þW$FW.VALUES<1,-1> = "3236"þW$FW.VALUES<1,-1> = "2256"þW$FW.VALUES<1,-1> = "2415"þW$FW.VALUES<1,-1> = "2493"þW$FW.VALUES<1,-1> = "3582"þW$FW.VALUES<1,-1> = "2345"þW$FW.VALUES<1,-1> = "3764"þW$FW.VALUES<1,-1> = "2699"þW$FW.VALUES<1,-1> = "2948"þW$FW.VALUES<1,-1> = "3663"þW$FW.VALUES<1,-1> = "3558"þW$FW.VALUES<1,-1> = "3219"þW$FW.VALUES<1,-1> = "2759"þW$FW.VALUES<1,-1> = "2694"þW$FW.VALUES<1,-1> = "3235"þW$FW.VALUES<1,-1> = "2263"þW$FW.VALUES<1,-1> = "2597"þW$FW.VALUES<1,-1> = "2528"þW$FW.VALUES<1,-1> = "2673"þW$FW.VALUES<1,-1> = "2347"þW$FW.VALUES<1,-1> = "2055"þW$FW.VALUES<1,-1> = "3458"þW$FW.VALUES<1,-1> = "2916"þW$FW.VALUES<1,-1> = "3497"þW$FW.VALUES<1,-1> = "2457"þW$FW.VALUES<1,-1> = "2070"þW$FW.VALUES<1,-1> = "3261"þ*þIF WIDGET.USER.DATA(1) = "SPARKWINLOSS" THENþ  VAL.LIST = W$FW.VALUESþ  FOR N = 2 TO DCOUNT( W$FW.VALUES<1>, @VM )þ    VAL = INT(W$FW.VALUES<1,N>)þ    IF VAL > INT(VAL.LIST<1,N-1>) THENþ      VAL = "W" ;* Winþ    END ELSE IF VAL = INT(VAL.LIST<1,N-1>) THENþ      VAL = "D" ;* Drawþ    END ELSE VAL = "L"þ    W$FW.VALUES<1,N> = VALþ  NEXT Nþ  W$FW.VALUES<1,1> = "W" ;* First month was a win.þEND ELSEþ  FOR N = 1 TO DCOUNT( W$FW.VALUES<1>, @VM )þ    W$FW.VALUES<1,N> = OCONV(W$FW.VALUES<1,N>,"MD2")þ  NEXT NþENDþ*þ*þ* Set up a drill-down widget callþ*þW$FW.DD.WIDGET<1,1> = "Drilldown Demo"þW$FW.DD.UD.POS<1,1> = 1þW$FW.DD.UD.VAL<1,1> = W$FW.VALUES<1,1>þ*þW$FW.SPARK.TREND.BEG<1,1> = W$FW.VALUES<1,1>þW$FW.SPARK.TREND.END<1,1> = W$FW.VALUES<1,DCOUNT(W$FW.VALUES<1>,@VM)>þ*þW$FW.CAPTION = "Cisco"þW$FW.SUBCAPTION = "12 Months"þW$FW.CHART.PALETTE = PALETTEþ*þW$INPUT.PROMPT = "Spark Chart Style"þW$INPUT.TYPE = "SELECT"þW$INPUT.SELOPTS = "Column":@VM:"Line":@VM:"Win/Loss"þW$INPUT.SELVALS = "SPARKCOLUMN":@VM:"SPARKLINE":@VM:"SPARKWINLOSS"þW$INPUT.UDPOS = 1þW$INPUT.DEFAULT = WIDGET.USER.DATA(1)þ*þW$INPUT.PROMPT<2> = "Palette"þW$INPUT.TYPE<2> = "SELECT"þW$INPUT.SELOPTS<2> = "1":@VM:"2":@VM:"3":@VM:"4":@VM:"5"þW$INPUT.SELVALS<2> = "1":@VM:"2":@VM:"3":@VM:"4":@VM:"5"þW$INPUT.UDPOS<2> = 2þW$INPUT.DEFAULT<2> = WIDGET.USER.DATA(2)þ*þINCLUDE WBPD SOURCE.VIEW.ICONþ*þRETURN0006D0SUB.DEMO.PIEþ0c2SUBROUTINE SUB.DEMO.PIEþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: PIE Chart Demonstration widgetþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "Chart - Fuel Sales by Type"þW$TYPE = "FC2DPIE"þW$WIDTH = 1þ*þIF G$QUERYMODE THEN RETURNþ*þIF WIDGET.USER.DATA(1) = "3D" THENþ  W$TYPE = "FC3DPIE"þENDþ*þSALES = ""þSALES<1> = "28452536"þSALES<2> = "31208425"þSALES<3> = "30245519"þSALES<4> = "40425111"þSALES<5> = "36515188"þSALES<6> = "39144100"þSALES<7> = "41655215"þSALES<8> = "36615152"þSALES<9> = "43944161"þSALES<10> = "42251594"þSALES<11> = "48833151"þSALES<12> = "50122415"þ*þTOT.SALES = SUM(SALES)þCATEG = ""þCATEG<1> = INT(TOT.SALES*.4)þCATEG<2> = INT(TOT.SALES*.2)þCATEG<3> = INT(TOT.SALES*.3)þCATEG<4> = INT(TOT.SALES*.1)þ*þCATEG.NAMES = ''þCATEG.NAMES<1> = "Regular"þCATEG.NAMES<2> = "Mid-Grade"þCATEG.NAMES<3> = "Premium"þCATEG.NAMES<4> = "Ethanol"þ*þFOR N = 1 TO DCOUNT(CATEG.NAMES,@AM)þ  W$PIE.LABELS<1,N> = CATEG.NAMES<N>þ  W$PIE.VALUES<1,N> = CATEG<N>þ  *þ  * Set up a drill-down widget call for each categoryþ  *þ  W$FW.DD.WIDGET<1,N> = "Drilldown Demo"þ  W$FW.DD.UD.POS<1,N,1> = 1þ  W$FW.DD.UD.VAL<1,N,1> = CATEG.NAMES<N>þ  W$FW.DD.UD.POS<1,N,2> = 2þ  W$FW.DD.UD.VAL<1,N,2> = CATEG<N>þNEXT NþIF WIDGET.USER.DATA(1) # "3D" THENþ  W$PIE.VALUE.OPTS<1,3> = 'isSliced="1"'þENDþ*þIF WIDGET.USER.DATA(1) = "3D" THENþ*  W$LINK.LABEL<1> = "2D"þ  W$LINK.ICON.TXT<1> = "2D Chart"þ  W$LINK.UD.VAL<1> = "2D"þ  W$PIE.CAPTION = "3D Chart"þEND ELSEþ*  W$LINK.LABEL<1> = "3D"þ  W$LINK.ICON.TXT<1> = "3D Chart"þ  W$LINK.UD.VAL<1> = "3D"þ  W$PIE.CAPTION = "2D Chart"þENDþW$LINK.ICON<1> = "chart_pie.png"þW$LINK.UD.POS<1> = "1"þW$LINK.LOCATION<1> = "C"þ*þINCLUDE WBPD SOURCE.VIEW.ICONþ*þRETURN00045DSUB.DEMO.FUNNELþ0c2SUBROUTINE SUB.DEMO.FUNNELþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Funnel widget demoþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "Funnel Demo - Website Conversion Ratio"þW$TYPE = "FUNNEL"þW$WIDTH = 1þ*þIF G$QUERYMODE THEN RETURNþ*þCATEG = ""þCATEG<1> = 385634þCATEG<2> = 175631þCATEG<3> = 84564þCATEG<4> = 35654þCATEG<5> = 12342þ*þCATEG.NAMES = ''þCATEG.NAMES<1> = "Website Visits"þCATEG.NAMES<2> = "Downloads"þCATEG.NAMES<3> = "Interested to buy"þCATEG.NAMES<4> = "Contract finalized"þCATEG.NAMES<5> = "Purchased"þ*þW$FW.CAPTION = "Conversion Ratio"þW$FW.SUBCAPTION = "May 2007"þW$CHART.OPTIONS<-1> = "isSliced='1'"þW$CHART.OPTIONS<-1> = "showPercentValues='1'"þ*þFOR N = 1 TO DCOUNT(CATEG.NAMES,@AM)þ  W$FW.LABELS<1,N> = CATEG.NAMES<N>þ  W$FW.VALUES<1,N> = CATEG<N>þ  *þ  * Set up a drill-down widget call for each categoryþ  *þ  W$FW.DD.WIDGET<1,N> = "Drilldown Demo"þ  W$FW.DD.UD.POS<1,N,1> = 1þ  W$FW.DD.UD.VAL<1,N,1> = CATEG.NAMES<N>þ  W$FW.DD.UD.POS<1,N,2> = 2þ  W$FW.DD.UD.VAL<1,N,2> = CATEG<N>þNEXT Nþ*þINCLUDE WBPD SOURCE.VIEW.ICONþ*þRETURN0005B8SUB.PORTAL.AP.REPORTSþ0c2SUBROUTINE SUB.PORTAL.AP.REPORTSþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = 'AP Reporting'þW$TYPE = "FC2DPIE"þW$WIDTH = 2þ*þIF G$QUERYMODE THEN RETURNþ*þOPEN 'DICT','DASHBOARD.BALANCES' TO FI.DICT.DASHBOARD.BALANCES ELSEþ   W$TYPE='TEXT'þ   W$TEXT='UNABLE TO OPEN DICT DASHBOARD.BALANCES'þ   RETURNþ ENDþREAD AP.AMOUNTS FROM FI.DICT.DASHBOARD.BALANCES, '*CURRENT.AP.STATS' ELSE AP.AMOUNTS=''þBEGIN CASEþ   CASE 1þ      W$TITLE = "Chart - AP Balances by Days Due"; CALL PORTAL.SHOW.LAST.UPDATED('AP')þ      AMTS=AP.AMOUNTSþ      W$PIE.CAPTION='Total AP Balance of 'þ**   CASE WIDGET.USER.DATA(1) = 'AR'þ**      W$TITLE = "Chart - AR Balances by Days Due"þ**      AMTS=AR.AMOUNTSþ**      W$PIE.CARTION='Total AR Balance of 'þEND CASEþ*þTOT.AMT=SUM(AMTS)þW$PIE.CAPTION:=OCONV(TOT.AMT,'MD02,$')þ*þCATEGORIES='Current'þCATEGORIES<2>='1 - 30 Days'þCATEGORIES<3>='31 - 60 Days'þCATEGORIES<4>='61 - 90 Days'þCATEGORIES<5>='Over 90 Days'þ*þCATEGORY.AMTS=AMTSþ*þ*þW$CHART.OPTIONS<-1>='showValues="1"'þW$CHART.OPTIONS<-1>='showPercentageValues="0"'þW$CHART.OPTIONS<-1>='showPercentageInLabel="1"'þW$CHART.OPTIONS<-1>='formatNumber="1"'þW$CHART.OPTIONS<-1>='formatNumberScale="0"'þW$CHART.OPTIONS<-1>='decimalPrecision="0"'þW$CHART.OPTIONS<-1>='thousandSeparator=","'þW$CHART.OPTIONS<-1>='pieradius="150"'þFOR N = 1 TO 5þ  W$PIE.LABELS<1,N> = CATEGORIES<N>þ  W$PIE.VALUES<1,N> = INT(CATEGORY.AMTS<N>/100 + .5)þNEXT Nþ*þ*þRETURNþEND000101WEB.FORMSþ0c2SUBROUTINE WEB.FORMSþ*þ* Dashboard Widgetþ*þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "Untitled HTML"þW$TYPE = "HTML"þW$WIDTH = 3 ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þW$HTML.DATA = '<h2>HTML Widget Content</h2>'þRETURN0000DDCHECK.PASSWORDþ0c2OPEN 'MVDB.USERS' TO FILE ELSE STOPþSELECT FILEþLOOPþ   READNEXT ID ELSE ID ='DONE'þUNTIL ID = 'DONE' DOþ   READ REC FROM FILE, ID ELSE REC=''þ   CRT ID,OCONV(REC<1>,'U3060'),OCONV(ID,'U3060')þREPEATþEND0010F6SUB.DEMO.REV.GP.SALES.CHARTþ0c2SUBROUTINE SUB.DEMO.REV.GP.SALES.CHARTþ*þ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TYPE = "FCCOLUMN3D"þW$WIDTH = 2þW$PDFABLE = 1þ*þIF G$QUERYMODE THEN RETURNþ*þW$BAR.COLORS<1,1>=COLOR$MAROONþW$BAR.COLORS<1,2>=COLOR$TEALþW$BAR.COLORS<1,3>=COLOR$SILVERþW$BAR.COLORS<1,4>=COLOR$BLUEþEQU ANNUAL.OR.MONTHLY TO WIDGET.USER.DATA(2)þIF ANNUAL.OR.MONTHLY = '' THEN ANNUAL.OR.MONTHLY='By Year'þW$CHART.OPTIONS<-1>='decimals="2"'þW$CHART.OPTIONS<-1>='DecimalPrecision="2"'þW$CHART.OPTIONS<-1>='divLineDecimalPrecision="2"'þW$CHART.OPTIONS<-1>='limitsDecimalPrecision="2"'þW$CHART.OPTIONS<-1>='formatNumberScale="1"'þOPEN '','MVDB.CONTROL' TO FILE.CONTROL ELSE STOPþREAD REC FROM FILE.CONTROL, 'DEMO.FINANCIAL.PICTURE' ELSE REC=''þYEARS=REC<67>þMAX.YEARS=DCOUNT(YEARS,CHAR(253))þREVENUE.OR.GP=WIDGET.USER.DATA(1)þIF INDEX(ANNUAL.OR.MONTHLY,'By Month',1) THEN GOTO DO.MONTHLYþ*þBEGIN CASEþ   CASE REVENUE.OR.GP = 'REVENUES'þ      W$TITLE='YTD Sales'þ      W$BAR.YMEMO = "YTD Sales"þ      SALES.AMTS=REC<68>þ   CASE REVENUE.OR.GP = 'GROSSPROFIT'þ      W$TITLE='YTD Gross Profit'þ      W$BAR.YMEMO = "YTD Gross Profit"þ      SALES.AMTS=REC<69>þ   CASE 1þ      REC = ''þ      SALES.AMTS = ''þEND CASEþ*þ*þ*þMAX.SALES.AMT=0þN=0þFIRST.YEAR=''þCURRENT.YEAR=''þMO.NO=DCOUNT(REC<68,3>,CHAR(252))þFOR NN = 1 TO MAX.YEARSþ   SALES.AMT=0þ   FOR NNN = 1 TO MO.NOþ      SALES.AMT+=SALES.AMTS<1,NN,NNN>þ    NEXT NNNþ   SALES.AMT=OCONV(SALES.AMT,'MD02')þ  IF SALES.AMT THENþ     N+=1þ     IF SALES.AMT > MAX.SALES.AMT THEN MAX.SALES.AMT=SALES.AMTþ     W$BAR.VALUES<1,N> = SALES.AMTþ     YEAR=YEARS<1,NN>þ     IF NOT(FIRST.YEAR) THEN FIRST.YEAR=YEARþ     CURRENT.YEAR=YEARþ     W$BAR.XLABELS<1,N> = YEARþ     W$FW.DD.WIDGET<1,N> = "DEMO ANNUAL SALES BY REP"þ     W$FW.DD.UD.POS<1,N,1> = 1þ     W$FW.DD.UD.VAL<1,N,1> = REVENUE.OR.GP; * REVENUE OR GPþ     W$FW.DD.UD.POS<1,N,2> = 2þ     W$FW.DD.UD.VAL<1,N,2> = YEARþ   ENDþNEXT NNþW$BAR.XMEMO = "Year (drilldown for ":W$BAR.YMEMO:" by Rep)"þW$BAR.CAPTION=W$BAR.YMEMO:' From ':FIRST.YEAR:' to ':CURRENT.YEARþ* ROUND MAX AMOUNT UP TO THE NEXT 250000þMAX.SALES.AMT+=250000þMAX.SALES.AMT=INT(MAX.SALES.AMT/250000) * 250000þW$CHART.OPTIONS<-1>='yAxisMaxValue="':MAX.SALES.AMT:'"'þ*W$CHART.OPTIONS<-1>='yAxisMaxValue="1500000"'þ*þDO.PROMPT:þ*þW$INPUT.PROMPT<1> = "Display By"þW$INPUT.TYPE<1> = "SELECT"þW$INPUT.UDPOS<1> = 2þOPTIONS='By Year':CHAR(253):'By Month Using Column Chart':CHAR(253):'By Month Using Line Chart'þW$INPUT.SELOPTS<1>=OPTIONSþW$INPUT.SELVALS<1>=OPTIONSþLOCATE ANNUAL.OR.MONTHLY IN OPTIONS<1> SETTING DEFAULT.POS ELSE DEFAULT.POS=1þW$INPUT.DEFAULT<1>=ANNUAL.OR.MONTHLYþW$INPUT.BUTTON<1> = "GO"þ*þRETURNþ*þDO.MONTHLY:þ*þIF INDEX(ANNUAL.OR.MONTHLY,'Column',1) THENþ   W$TYPE='FCMSCOLUMN2D'þ END ELSEþ   W$TYPE='FCMSLINE'þ ENDþW$WIDTH = 3þW$CHART.OPTIONS<-1>='showValues="0"'þBEGIN CASEþ   CASE REVENUE.OR.GP = 'REVENUES'þ      W$TITLE='Monthly Sales'þ      W$BAR.YMEMO = "Monthly Sales"þ      W$BAR.CAPTION='Monthly Sales by Year'þ      SALES.ATT=68þ   CASE REVENUE.OR.GP = 'GROSSPROFIT'þ      W$TITLE='Monthly Gross Profit'þ      W$BAR.YMEMO = "Monthly Gross Profit"þ      W$BAR.CAPTION='Monthly Gross Profit by Year'þ      SALES.ATT=69þ   CASE 1þ      SALES.ATT=68þ      REC=''þEND CASEþTODAY=OCONV(DATE(),'D4-')þMM=TODAY[1,2]+0þYYYY=TODAY[7,4]þIF MM = 1 THEN YYYY=YYYY-1þYYYY.SELECT=''þYEARS=''þW$BAR.VALUES=''þFOR N = 1 TO 12þ  W$BAR.XLABELS<1,N> = OCONV(N*30-15,'DMA')[1,3]þNEXT NþIF MAX.YEARS > 5 THEN MAX.DISPLAY.YEARS=5 ELSE MAX.DISPLAY.YEARS=MAX.YEARSþMS.VAL.CNTR=0þFOR I = 1 TO MAX.DISPLAY.YEARSþ   YEAR=YYYY-MAX.DISPLAY.YEARS+Iþ   YEARS<-1>=YEARþ   W$BAR.LABELS<I>=YEARþ   YYYY.SELECT:=' "':YEAR:'"'þ   SALES.AMTS=REC<SALES.ATT>þ   FOR MO.NO = 1 TO 12þ      MS.VAL.CNTR+=1þ      SALE.AMT=SALES.AMTS<1,I,MO.NO>þ      W$BAR.VALUES<I,MO.NO>=OCONV(SALE.AMT,'MD02')þ      W$FW.DD.WIDGET<1,MS.VAL.CNTR> = "DEMO SINGLE MONTH SALES BY REP"þ      W$FW.DD.UD.POS<1,MS.VAL.CNTR,1>=1þ      W$FW.DD.UD.VAL<1,MS.VAL.CNTR,1>=REVENUE.OR.GPþ      W$FW.DD.UD.POS<1,MS.VAL.CNTR,2>=2þ      W$FW.DD.UD.VAL<1,MS.VAL.CNTR,2> = 'MS.SERIES'þ      W$FW.DD.UD.POS<1,MS.VAL.CNTR,3> = 3þ      W$FW.DD.UD.VAL<1,MS.VAL.CNTR,3>='MS.LABEL'þ    NEXT MO.NOþ NEXT Iþ**WRITE W$BAR.VALUES ON FILE.CONTROL, 'BAR.VALUES'þW$BAR.XMEMO='Month (drilldown for month by Rep)'þGOSUB DO.PROMPTþRETURNþEND000509SUB.RSS.FEEDSþ0c2SUBROUTINE SUB.RSS.FEEDSþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Display a list of available RSS feedsþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþINCLUDE WBPD WWW.INCLUDEþ*þW$TITLE = "RSS Feeds"þW$TYPE = "TABLE"þW$WIDTH = 3þ*þIF G$QUERYMODE THEN RETURNþ*þOPEN '','RSS.FEEDS' TO F.RSS.FEEDS ELSEþ  W$TYPE = "TEXT"þ  W$TEXT.DATA = "Cannot open RSS.FEEDS"þ  RETURNþENDþOPEN '','MVDB.CONTROL' TO F.MVDB.CONTROL ELSEþ  W$TYPE = "TEXT"þ  W$TEXT.DATA = "Cannot open MVDB.CONTROL"þ  RETURNþENDþ*þW$TABLE.COL.LABELS<1,1> = "ID"þW$TABLE.COL.LABELS<1,2> = "Name / Description"þW$TABLE.COL.LABELS<1,3> = "Subscribe"þ*þEXECUTE "SSELECT RSS.FEEDS BY NAME" CAPTURING JUNKþROW = 1þLOOPþ  READNEXT FID ELSE EXITþ  READ FEED.REC FROM F.RSS.FEEDS, FID ELSE CONTINUEþ  FEED.NAME = FEED.REC<1>þ  CALL RSS.XML.ENCODE(FEED.NAME,"")þ  FEED.DESC = FEED.REC<3>þ  FEED.URL = "http://":CGI$SERVER.NAME:CGI$PATH:'/RSS.MAIN?feed=':FIDþ  W$TABLE.DATA<ROW,1> = FIDþ  W$TABLE.DATA<ROW,2> = '<b>':FEED.NAME:'</b><br />':FEED.DESCþ  W$TABLE.DATA<ROW,3> = \<a href="\:FEED.URL:\">Standard Feed</a>\þ  FOR N = 1 TO DCOUNT( FEED.REC<6>, @VM )þ    W$TABLE.DATA<ROW,3> := '<br /><a href="':FEED.URL:'&':FEED.REC<7,N>:'">':FEED.REC<6,N>:'</a>'þ  NEXT Nþ  ROW += 1þREPEATþRETURN00008BCALL.CREATE.WEBSERVICE.PASSWORDþ0c2CALL CREATE.WEBSERVICE.PASSWORD(PASSWORD,PASSTIME)þCRT 'PASSTIME=':PASSTIMEþCRT 'PASSWORD=':PASSWORDþEND000988SUB.CODE.TEMPLATESþ0c2SUBROUTINE SUB.CODE.TEMPLATESþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: þ* Description: List code templatesþ*þINCLUDE WBPD MVDB.INCLUDEþINCLUDE WBPD FI.MVDB.WIDGET.TYPESþ*þW$TITLE = "Widget code templates"þW$TYPE = "HTML"þW$WIDTH = 3þW$PRINTABLE = 1þ*þIF G$QUERYMODE THEN RETURNþ*þIF WIDGET.USER.DATA(1) # "" THEN ;* Hidden modeþ  W$LINK.LABEL<1,1> = "Show Widget"þ  W$LINK.LOCATION<1,1> = "C"þ  W$LINK.UD.POS<1,1> = 1þ  W$LINK.UD.VAL<1,1> = ""þ  W$LINK.ICON<1,1> = "application_view_detail.png"þ  W$LINK.ICON.TXT<1,1> = "Show Widget"þ  W$TITLE := ' (Hidden)'þ  W$PRINTABLE = 0þ  RETURNþENDþOPEN '','MVDB.SUB.TEMPLATES' TO F.MVDB.SUB.TEMPLATES ELSEþ  W$HTML.DATA = '<h2>MVDB.SUB.TEMPLATES file cannot be opened.</h2>'þ  RETURNþENDþOPEN '','MVDB.WIDGET.TYPES' TO F.MVDB.WIDGET.TYPES ELSEþ  W$HTML.DATA = '<h2>MVDB.WIDGET.TYPES file cannot be opened.</h2>'þ  RETURNþENDþ*þEXECUTE 'SSELECT MVDB.WIDGET.TYPES BY GROUP BY HANDLER WITH INACTIVE # "1"' CAPTURING JUNKþW$HTML.DATA = '<table width="100%"><thead><tr><th>Widget Type/Template</th><th>Description</th><th>Lines</th><th>Use Template</th><th>Edit</th></tr><tbody>'þLOOPþ  READNEXT ID ELSE EXITþ  READ TREC FROM F.MVDB.SUB.TEMPLATES, ID ELSE TREC = ""þ  MATREAD WIDGET.TYPES FROM F.MVDB.WIDGET.TYPES, ID ELSE MAT WIDGET.TYPES = ""þ  CLASS.NAME = FIELD(WT$ICON,'.',1)þ  CONVERT "_" TO "-" IN CLASS.NAMEþ  W$HTML.DATA := '<tr><td>':ID:'</td>'þ  W$HTML.DATA := '<td><img height="20" width="20" src="/db/icons/':WT$ICON:'" />':WT$DESC:'</td>'þ  LINES = DCOUNT(TREC,@AM)þ  IF LINES = 0 THEN LINES = '&nbsp;'þ  W$HTML.DATA := '<td align="right">':LINES:'</td>'þ  IF FIELD(TREC,' ',1) = "USE" THENþ    USE.TEMPLATE = FIELD( TREC, ' ', 2 )þ    USE.TEMPLATE = '<a href="/dbc/MVDB.WEB.ED?ed_file=MVDB.SUB.TEMPLATES&ed_item=':USE.TEMPLATE:'" target="MVDB.SUB.TEMPLATES_':USE.TEMPLATE:'">':USE.TEMPLATE:'</a>'þ  END ELSE USE.TEMPLATE = '&nbsp;'þ  W$HTML.DATA := '<td>':USE.TEMPLATE:'</td>'þ  IF TREC = "" THEN ACTION = "Add" ELSE ACTION = "Edit"þ  W$HTML.DATA := '<td><a href="/dbc/MVDB.WEB.ED?ed_file=MVDB.SUB.TEMPLATES&ed_item=':ID:'" target="MVDB.SUB.TEMPLATES_':ID:'">':ACTION:'</a></td>'þ  W$HTML.DATA := '</tr>'þREPEATþW$HTML.DATA := '</tbody></table>'þ*þW$LINK.LABEL<1,1> = "Hide Widget"þW$LINK.LOCATION<1,1> = "C"þW$LINK.UD.POS<1,1> = 1þW$LINK.UD.VAL<1,1> = "1"þW$LINK.ICON<1,1> = "application.png"þW$LINK.ICON.TXT<1,1> = "Hide Widget"þ*þRETURN000D3BSUB.PORTAL.MARGINSþ0c2SUBROUTINE SUB.PORTAL.MARGINSþ*þ* DEFINE PARAMETERS FOR PORTAL SALES REPORTþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþOPEN '','MVDB.SUBS' TO FI.MVDB.SUBS ELSE STOPþDIM SETUP.PARAMS(25)þ*þW$TITLE = "Portal Year to Year Margins"; CALL PORTAL.SHOW.LAST.UPDATED('SALES')þW$TYPE = "HTML"þW$WIDTH = 2þD3=1þ*þIF G$QUERYMODE THEN RETURNþ*þ*þOPEN '','MVDB.CONTROL' TO FI.MVDB.CONTROL ELSE þ   ERROR.MSG='UNABLE TO OPEN MVDB.CONTROL'þ   GOTO DISPLAY.ERRORþ ENDþOPEN '','DASHBOARD.CLOSING.STATS' TO FI.DASHBOARD.CLOSING.STATS ELSE þ   ERROR.MSG='UNABLE TO OPEN DASHBOARD.CLOSING.STATS'þ   GOTO DISPLAY.ERRORþ ENDþOPEN 'DICT','DASHBOARD.CLOSING.STATS' TO FI.DICT.DASHBOARD.CLOSING.STATS ELSE þ   ERROR.MSG='UNABLE TO OPEN DICT DASHBOARD.CLOSING.STATS'þ   GOTO DISPLAY.ERRORþ ENDþ*þREAD PLATFORM FROM FI.MVDB.CONTROL, 'PLATFORM' ELSE PLATFORM='D3'þBEGIN CASEþ   CASE PLATFORM = 'UD'þ      EXECUTE.STACKED.CMNDS='UD.EXECUTE.STACKED.CMNDS'þ   CASE PLATFORM = 'UV'þ      EXECUTE.STACKED.CMNDS='UV.EXECUTE.STACKED.CMNDS'þ   CASE PLATFORM = 'QM'þ      EXECUTE.STACKED.CMNDS='EXECUTE.STACKED.CMNDS'þ   CASE 1þ      * D3 AND JBASE ARE THE SAMEþ      EXECUTE.STACKED.CMNDS='EXECUTE.STACKED.CMNDS'þEND CASEþ*þ*þW$CHART.OPTIONS<-1>='decimals="2"'þW$CHART.OPTIONS<-1>='DecimalPrecision="2"'þW$CHART.OPTIONS<-1>='divLineDecimalPrecision="2"'þW$CHART.OPTIONS<-1>='limitsDecimalPrecision="2"'þW$CHART.OPTIONS<-1>='formatNumberScale="1"'þ*þOTODAY=OCONV(DATE(),'D4-')þ*þYEAR.TO.YEAR.MARGIN.PERCENTS:þ*þW$TYPE='FCCOLUMN3D'þTHIS.YEAR=OCONV(DATE(),'D4-')[7,4]þFIRST.YEAR=THIS.YEAR-4þSTACKED.1='SELECT DASHBOARD.CLOSING.STATS WITH YYYY GE "':FIRST.YEAR:'"'þSTACKED.2='SORT DASHBOARD.CLOSING.STATS BY YYYY BREAK-ON YYYY PIPE TOTAL AMOUNT PIPE TOTAL GROSS.PROFIT ID-SUPP DET-SUPP HDR-SUPP COL-HDR-SUPP NOPAGE'þCALL @EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,SYSTEM.11,REPORT)þ**WRITE DATE.SELECT.STRING ON FI.MVDB.SUBS, 'DATE.SELECT.STRING'þIF NOT(SYSTEM.11) THENþ   ERROR.MSG='NO SALES CLOSED SINCE ':FIRST.YEARþ   GOSUB DISPLAY.ERRORþ   RETURNþ ENDþ**WRITE REPORT ON FI.MVDB.SUBS, 'YEAR.TO.YEAR.REPORT'þYEAR.TOTALS=''þYEAR.GROSS.PROFITS=''þYEARS=''þMAX.ROWS=DCOUNT(REPORT,CHAR(254))þYEAR.CNTR=0þFOR ROW.NO = 1 TO MAX.ROWSþ   ROW=REPORT<ROW.NO>þ   IF INDEX(ROW,'|',1) THENþ      YEAR=TRIM(FIELD(ROW,'|',1))þ      AMOUNT=TRIM(FIELD(ROW,'|',2))þ      GROSS.PROFIT=TRIM(FIELD(ROW,'|',3))þ      IF NUM(AMOUNT) AND NUM(GROSS.PROFIT) THENþ         IF AMOUNT OR GROSS.PROFIT THENþ            YEAR.CNTR+=1þ            YEARS<YEAR.CNTR>=YEARþ            AMOUNT=ICONV(AMOUNT,'MD2')þ            GROSS.PROFIT=ICONV(GROSS.PROFIT,'MD2')þ            YEAR.TOTALS<YEAR.CNTR>=AMOUNTþ            YEAR.GROSS.PROFITS<YEAR.CNTR>=GROSS.PROFITþ          ENDþ       ENDþ    ENDþNEXT ROW.NOþYEAR.TOTALS<YEAR.CNTR+1>=SUM(YEAR.TOTALS)þYEAR.GROSS.PROFITS<YEAR.CNTR+1>=SUM(YEAR.GROSS.PROFITS)þYEARS<YEAR.CNTR+1>='Average'þ*þW$BAR.CAPTION = 'Year by Year Margin Percents'þW$BAR.XMEMO = "Year"þW$BAR.YMEMO = 'Margin Percents'þ*þMAX.YEARS=DCOUNT(YEARS,CHAR(254))þFOR YEAR.NO = 1 TO MAX.YEARSþ   YEAR.TOTAL=YEAR.TOTALS<YEAR.NO>þ   YEAR.GROSS.PROFIT=YEAR.GROSS.PROFITS<YEAR.NO>þ   MARGIN=INT(YEAR.GROSS.PROFIT * 1000 / YEAR.TOTAL + .5)þ   W$BAR.VALUES<1,YEAR.NO>=OCONV(MARGIN+0,'MD1')þ   W$BAR.XLABELS<1,YEAR.NO>=YEARS<YEAR.NO>þ NEXT YEAR.NOþRETURNþ*þDISPLAY.ERROR:þ*þW$HTML.DATA='<h3>':ERROR.MSG:'</h3>'þRETURNþ*þ*þRETURNþEND0005ACREFRESH.PORTAL.DATESþ0c2OPEN 'DICT','DASHBOARD.CLOSING.STATS' TO DICT.FI ELSE STOP 201,'DICT DASHBOARD.CLOSING.STATS'þREAD LAST.AR.DATE FROM DICT.FI, 'LAST.AR.REFRESH' ELSE STOP 201,'LAST.AR.REFRESH'þREAD LAST.AP.DATE FROM DICT.FI, 'LAST.AP.REFRESH' ELSE STOP 201,'LAST.AP.REFRESH'þREAD LAST.SALES.DATE FROM DICT.FI, 'LAST.SALES.REFRESH' ELSE STOP 201,'LAST.SALES.REFRESH'þ*þFI='PORTAL.AR'; LAST.DATE=LAST.AR.DATE<1>; ATTS=20:@AM:8; GOSUB UPDATE.DATESþWRITE DATE():@AM:OCONV(DATE(),'D2-') ON DICT.FI, 'LAST.AR.REFRESH'þFI='PORTAL.AP'; LAST.DATE=LAST.AP.DATE<1>; ATTS=20:@AM:8; GOSUB UPDATE.DATESþWRITE DATE():@AM:OCONV(DATE(),'D2-') ON DICT.FI, 'LAST.AP.REFRESH'þFI='PORTAL.SALES'; LAST.DATE=LAST.SALES.DATE<1>; ATTS=1; GOSUB UPDATE.DATESþWRITE DATE():@AM:OCONV(DATE(),'D2-') ON DICT.FI, 'LAST.SALES.REFRESH'þSTOPþ*þUPDATE.DATES:þ*þMAX.ATTS=DCOUNT(ATTS,@AM)þDIFF.DAYS=DATE()-LAST.DATEþOPEN '',FI TO FI.FI ELSE STOP 201,FIþEXECUTE "SELECT ":FIþLOOPþ   READNEXT ID ELSE ID = 'DONE'þUNTIL ID = 'DONE' DOþ   READ REC FROM FI.FI, ID ELSE REC=''þ   FOR I = 1 TO MAX.ATTSþ      ATT.NO=ATTS<I>þ      IF ATT.NO <> '' THENþ         DATES=REC<ATT.NO>þ         MAX.DATES=DCOUNT(DATES,@VM)þ         FOR II = 1 TO MAX.DATESþ            THIS.DATE=DATES<1,II>þ            IF THIS.DATE <> '' THENþ               THIS.DATE+=DIFF.DAYSþ               REC<ATT.NO,II>=THIS.DATEþ             ENDþ          NEXT IIþ       ENDþ    NEXT Iþ   WRITE REC ON FI.FI, IDþREPEATþRETURN00013DSUB.LISTPEQSþ0c2SUBROUTINE SUB.LISTPEQSþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ*þINCLUDE WBPD MVDB.INCLUDEþ*þW$TYPE = "HTML"þW$TITLE = "Print Queue"þW$WIDTH = 3þ*þIF G$QUERYMODE THEN RETURNþ*þW$TEXT.DATA = '<iframe src="/dbc/SBBP.SB.LISTPEQS" width="100%" scrolling="auto" height="500"></iframe>'þRETURN000812SUB.DEMO.BULLETþ0c2SUBROUTINE SUB.DEMO.BULLETþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Bullet widget demoþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "Bullet Chart Demo - Sales Volume"þW$TYPE = "VBULLET"þW$WIDTH = 2þ*þIF G$QUERYMODE THEN RETURNþ*þIF WIDGET.USER.DATA(1) # "" THENþ  W$TYPE = WIDGET.USER.DATA(1)þEND ELSE WIDGET.USER.DATA(1) = "VBULLET"þIF WIDGET.USER.DATA(2) = "" THEN WIDGET.USER.DATA(2) = 1þPALETTE = WIDGET.USER.DATA(2)þ*þW$FW.LOWER.LIMIT = 0þW$FW.UPPER.LIMIT = 800000þ*þW$FW.COLOR.RANGE<1,1> = 0þW$FW.COLOR.RANGE<2,1> = 400000þW$FW.COLOR.RANGE<3,1> = COLOR$REDþ*þW$FW.COLOR.RANGE<1,2> = 400000þW$FW.COLOR.RANGE<2,2> = 650000þW$FW.COLOR.RANGE<3,2> = "YELLOW"þ*þW$FW.COLOR.RANGE<1,3> = 650000þW$FW.COLOR.RANGE<2,3> = 800000þW$FW.COLOR.RANGE<3,3> = "GREEN"þ*þW$FW.METER.VALUE = 725000þW$FW.METER.TARGET = 775000þ*þW$FW.CAPTION = "July Sales"þW$FW.SUBCAPTION = "Billings"þ*W$FW.CHART.PALETTE = PALETTEþ*þW$FW.NUMBER.PREFIX = "$"þW$FW.NUMBER.SUFFIX = ""þ*þW$FW.TICKMARKS<1> = 1 ;* Display tickmarksþW$FW.TICKMARKS<2> = 1 ;* Display values by tickmarksþW$FW.TICKMARKS<3> = "B" ;* Show tickmarks below the graphþW$FW.TICKMARKS<4> = "" ;* Let it calculate thisþW$FW.TICKMARKS<5> = 4 ;* 4 minor tickmarks between the major onesþ*þ*W$CHART.OPTIONS = "paletteThemeColor='#a2287a'"þ*þW$FW.BC.PLOT.COLOR = COLOR$BLUEþW$FW.BC.TARGET.COLOR = COLOR$WHITEþ*þW$FW.DD.WIDGET<1,1> = "Drilldown Demo"þW$FW.DD.UD.POS<1,1,1> = 1þW$FW.DD.UD.VAL<1,1,1> = W$FW.METER.VALUEþW$FW.DD.UD.POS<1,1,2> = 2þW$FW.DD.UD.VAL<1,1,2> = WIDGET.USER.DATA(1)þ*þW$INPUT.PROMPT = "Bullet Chart Style"þW$INPUT.TYPE = "SELECT"þW$INPUT.SELOPTS = "Horizontal":@VM:"Vertical"þW$INPUT.SELVALS = "HBULLET":@VM:"VBULLET"þW$INPUT.UDPOS = 1þW$INPUT.DEFAULT = WIDGET.USER.DATA(1)þ*þW$INPUT.PROMPT<2> = "Palette"þW$INPUT.TYPE<2> = "SELECT"þW$INPUT.SELOPTS<2> = "1":@VM:"2":@VM:"3":@VM:"4":@VM:"5"þW$INPUT.SELVALS<2> = "1":@VM:"2":@VM:"3":@VM:"4":@VM:"5"þW$INPUT.UDPOS<2> = 2þW$INPUT.DEFAULT<2> = WIDGET.USER.DATA(2)þ*þINCLUDE WBPD SOURCE.VIEW.ICONþ*þRETURN003487SUB.PORTAL.AP.REPORT.SETUPþ0c2SUBROUTINE SUB.PORTAL.AP.REPORT.SETUPþ*þ* DEFINE PARAMETERS FOR PORTAL AP REPORTþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþOPEN '','MVDB.SUBS' TO FI.MVDB.SUBS ELSE STOPþ*þW$TITLE = "Portal AP Report Setup"þW$TYPE = "HTML"þW$WIDTH = 3þ*þIF G$QUERYMODE THEN RETURNþ*þEQUATE ACCOUNT TO WIDGET.USER.DATA(1)þEQUATE REPORT.FILE TO WIDGET.USER.DATA(2)þEQUATE DUE.DATE.DICT TO WIDGET.USER.DATA(3)þEQUATE DATE.PAID.DICT TO WIDGET.USER.DATA(4)þEQUATE INVOICE.AMT.DICT TO WIDGET.USER.DATA(5)þEQUATE BALANCE.DICT TO WIDGET.USER.DATA(6)þEQUATE DUE.DATE.AMC TO WIDGET.USER.DATA(8)þEQUATE DATE.PAID.AMC TO WIDGET.USER.DATA(9)þEQUATE INVOICE.AMT.AMC TO WIDGET.USER.DATA(10)þEQUATE INVOICE.AMT.CONV TO WIDGET.USER.DATA(11)þEQUATE INVOICE.AMT.COOR TO WIDGET.USER.DATA(12)þEQUATE BALANCE.AMC TO WIDGET.USER.DATA(13)þEQUATE BALANCE.CONV TO WIDGET.USER.DATA(14)þEQUATE BALANCE.COOR TO WIDGET.USER.DATA(15)þOPEN '','MVDB.CONTROL' TO FI.MVDB.CONTROL ELSE STOP 201,'MVDB.CONTROL'þREAD PLATFORM FROM FI.MVDB.CONTROL, 'PLATFORM' ELSEþ   MESSAGE='No Platform Type Defined'þ   GOTO MESSAGE.DISPLAYþ ENDþFIRST.TIME=0þIF G$SUBMITTED <> '1' THENþ   MATREAD WIDGET.USER.DATA FROM FI.MVDB.CONTROL, 'PORTAL.AP.REPORT.SETUP' ELSEþ      MAT WIDGET.USER.DATA = ''þ      FIRST.TIME=1þ    ENDþ   IF NOT(FIRST.TIME) THENþ      GOSUB VALIDATE.PREVIOUS.INPUTSþ    ENDþ END ELSEþ   GOSUB VALIDATE.PREVIOUS.INPUTSþ   MATWRITE WIDGET.USER.DATA ON FI.MVDB.CONTROL, 'PORTAL.AP.REPORT.SETUP'þ ENDþGOSUB SET.PROMPTSþRETURNþ*þSET.PROMPTS:þ*þW$INPUT.PROMPT<1> = "AP File Account"þW$INPUT.TYPE<1> = "TEXT"þW$INPUT.UDPOS<1> = 1þW$INPUT.DEFAULT<1> = ACCOUNTþ*þW$INPUT.PROMPT<2> = "Name Of AP File"þW$INPUT.TYPE<2> = "TEXT"þW$INPUT.UDPOS<2> = 2þW$INPUT.DEFAULT<2> = REPORT.FILEþ*þW$INPUT.PROMPT<3> = "Due Date Dict Name"þW$INPUT.TYPE<3> = 'TEXT'þW$INPUT.UDPOS<3> = 3þW$INPUT.DEFAULT<3> = DUE.DATE.DICTþ*þW$INPUT.PROMPT<4> = "Date Paid Dict Name"þW$INPUT.TYPE<4> = 'TEXT'þW$INPUT.UDPOS<4> = 4þW$INPUT.DEFAULT<4> = DATE.PAID.DICTþ*þW$INPUT.PROMPT<5> = "Invoice Amount Dict Name"þW$INPUT.TYPE<5> = 'TEXT'þW$INPUT.UDPOS<5> = 5þW$INPUT.DEFAULT<5> = INVOICE.AMT.DICTþ*þW$INPUT.PROMPT<6> = "Remaining Balance Dict Name"þW$INPUT.TYPE<6> = 'TEXT'þW$INPUT.UDPOS<6> = 6þW$INPUT.DEFAULT<6> = BALANCE.DICTþ*þRETURNþ*þVALIDATE.PREVIOUS.INPUTS:þ*þMESSAGE=''þBEGIN CASEþ   CASE PLATFORM = 'D3'þ      MD.TYPE='MD'þ   CASE PLATFORM = 'JB'þ      MD.TYPE='MD'þ   CASE 1þ      MD.TYPE='VOC'þEND CASEþOPEN '',MD.TYPE TO FI.MD ELSEþ   MESSAGE='Unable to open ':MD.TYPE:' for validation purposes'þ   GOTO MESSAGE.DISPLAYþ ENDþVALID.ACCOUNT=1þIF ACCOUNT <> '' THENþ**   EXECUTE "SET-FILE ":ACCOUNT:" ":MD.TYPE:' QFILE' CAPTURING DUMMYþ   ERR.MSG=''þ   IF PLATFORM <> 'JB' THENþ      QFILE.NAME='QFILE'þ      CALL CREATE.QPOINTER(PLATFORM,FI.MD,ACCOUNT,MD.TYPE,QFILE.NAME,FI.ACCOUNT.MD)þ      IF QFILE.NAME = '' THEN ERR.MSG=ACCOUNT:' is not a valid account'þ    END ELSEþ      IF INDEX(ACCOUNT,'/',1) THEN PATH.DELIM='/' ELSE PATH.DELIM='\'þ      F.PTR='F':@AM:ACCOUNT:PATH.DELIM:'MD'þ      F.PTR<3>=F.PTR<2>:']D'þ      QFILE.NAME='QFILE'þ      WRITE F.PTR ON FI.MD, QFILE.NAMEþ      OPEN '','QFILE' TO TEST.MD ELSE ERR.MSG=ACCOUNT:' is not a valid account path!'þ    ENDþ    IF ERR.MSG <> '' THENþ      MESSAGE<-1>=ERR.MSGþ      VALID.ACCOUNT=0þ    ENDþ**   IF PLATFORM = 'UD' THENþ**      QFILE.NAME='QFILE'þ**      CALL CREATE.UD.QPOINTER(ACCOUNT,MD.TYPE,QFILE.NAME,FI.ACCOUNT.MD)þ**      IF QFILE.NAME = '' THENþ**         MESSAGE<-1>=ACCOUNT:' is not a valid account!'þ**         VALID.ACCOUNT=0þ**       ENDþ**    END ELSEþ**      WRITE 'Q':@AM:ACCOUNT:@AM:MD.TYPE ON FI.MD, 'QFILE'þ**      VALID.ACCOUNT=1þ**      OPEN '','QFILE' TO FI.ACCOUNT.MD ELSEþ**         MESSAGE<-1>=ACCOUNT:' is not a valid account!'þ**         VALID.ACCOUNT=0þ**       ENDþ**    ENDþ END ELSEþ   VALID.ACCOUNT=0þ   MESSAGE<-1>='No Account defined!'þ ENDþIF REPORT.FILE <> '' THENþ   IF NOT(VALID.ACCOUNT) THENþ      IF PLATFORM = 'JB' THENþ         MESSAGE<-1>='Unable to verify ':REPORT.FILE:' file because account path not properly defined!'þ      END ELSEþ         MESSAGE<-1>='Unable to verify ':REPORT.FILE:' file because account not properly defined!'þ      ENDþ      VALID.REPORT.FILE=0þ    END ELSEþ      VALID.REPORT.FILE=1þ      QFILE.NAME='QFILE'þ      IF PLATFORM <> 'JB' THENþ         CALL CREATE.QPOINTER(PLATFORM,FI.MD,ACCOUNT,REPORT.FILE,QFILE.NAME,FI.REPORT.FILE)þ         IF QFILE.NAME = '' THENþ            MESSAGE<-1>=REPORT.FILE:' is not a valid file in the ':ACCOUNT:' account!'þ            VALID.REPORT.FILE=0þ          ENDþ       END ELSEþ         F.PTR='F':@AM:ACCOUNT:PATH.DELIM:REPORT.FILEþ         F.PTR<3>=F.PTR<2>:']D'þ         QFILE.NAME='QFILE'þ         WRITE F.PTR ON FI.MD, QFILE.NAMEþ         OPEN '','QFILE' TO TEST.MD ELSE þ            MESSAGE<-1>=REPORT.FILE:' is not a valid file in the ':ACCOUNT:' path!'þ            VALID.REPORT.FILE=0þ   þ       ENDþ    END     þ**      EXECUTE "SET-FILE ":ACCOUNT:" ":REPORT.FILE:' QFILE' CAPTURING DUMMYþ**       IF PLATFORM = 'UD' THENþ**          QFILE.NAME='QFILE'þ**          CALL CREATE.UD.QPOINTER(ACCOUNT,REPORT.FILE,QFILE.NAME,FI.REPORT.FILE)þ**          IF QFILE.NAME = '' THENþ**             MESSAGE<-1>=REPORT.FILE:' is not a valid file in the ':ACCOUNT:' account!'þ**             VALID.REPORT.FILE=0þ**           ENDþ**        END ELSEþ**         WRITE 'Q':@AM:ACCOUNT:@AM:REPORT.FILE ON FI.MD, 'QFILE'þ**         OPEN '','QFILE' TO FI.REPORT.FILE ELSEþ**            MESSAGE<-1>=REPORT.FILE:' is not a valid file in the ':ACCOUNT:' account!'þ**            VALID.REPORT.FILE=0þ**          ENDþ**       ENDþ      IF VALID.REPORT.FILE THENþ         HAVE.QFILE.REC=1þ         READ QFILE.REC FROM FI.MD, 'QFILE' ELSEþ            HAVE.QFILE.REC=0þ            MESSAGE<-1>='Unable to create QFILE pointer to ':ACCOUNT:' ':REPORT.FILEþ          ENDþ         IF HAVE.QFILE.REC THENþ            WRITE QFILE.REC ON FI.MD, 'DASHBOARD.AP.FILE'þ            OPEN 'DICT','DASHBOARD.AP.FILE' TO FI.DICT.REPORT.FILE ELSE þ               MESSAGE<-1>='Unable to open DICT ':REPORT.FILEþ             ENDþ          ENDþ       ENDþ    ENDþ END ELSEþ   MESSAGE<-1>='No AP Report file defined!'þ ENDþIF DUE.DATE.DICT = '' THENþ   IF VALID.REPORT.FILE THENþ      MESSAGE<-1>='No Due Date Dictionary Defined!'þ    ENDþ END ELSEþ   IF NOT(VALID.REPORT.FILE) THENþ      MESSAGE<-1>="Cant Verify Dict ":DUE.DATE.DICT:' Because No AP File!'þ    END ELSEþ      READ DUE.DATE.DICT.REC FROM FI.DICT.REPORT.FILE, DUE.DATE.DICT ELSEþ         DUE.DATE.DICT.REC=''þ         MESSAGE<-1>=DUE.DATE.DICT:' Does Not Exist!'þ       ENDþ      IF DUE.DATE.DICT.REC <> '' THENþ         VALID.DATE.DICT=1þ         DICT.TYPE=DUE.DATE.DICT.REC<1>þ         BEGIN CASEþ            CASE DICT.TYPE = 'A' OR DICT.TYPE = 'S' þ               IF DUE.DATE.DICT.REC<7>[1,1] <> 'D' AND DUE.DATE.DICT.REC<8>[1,1] <> 'D' THENþ                  VALID.DATE.DICT=0þ                ENDþ               DUE.DATE.AMC=DUE.DATE.DICT.REC<2>þ            CASE DICT.TYPE = 'D' OR DICT.TYPE = 'I' OR DICT.TYPE = 'C'þ               IF DUE.DATE.DICT.REC<3>[1,1] <> 'D' THENþ                  VALID.DATE.DICT=0þ                ENDþ               DUE.DATE.AMC=DUE.DATE.DICT.REC<2>þ            CASE 1þ               VALID.DATE.DICT=0þ               DUE.DATE.AMC=DUE.DATE.DICT.REC<2>þ         END CASEþ         IF NOT(VALID.DATE.DICT) THENþ            MESSAGE<-1>='Dictionary Item ':DUE.DATE.DICT:' Does Not Appear To Be A Date!'þ          ENDþ       ENDþ    ENDþ ENDþIF DATE.PAID.DICT = '' THENþ   IF VALID.REPORT.FILE THENþ      MESSAGE<-1>='No Date Paid Dictionary Defined!'þ    ENDþ END ELSEþ   IF NOT(VALID.REPORT.FILE) THENþ      MESSAGE<-1>="Cant Verify Dict ":DATE.PAID.DICT:' Because No AP File!'þ    END ELSEþ      READ DATE.PAID.DICT.REC FROM FI.DICT.REPORT.FILE, DATE.PAID.DICT ELSEþ         DATE.PAID.DICT.REC=''þ         MESSAGE<-1>=DATE.PAID.DICT:' Does Not Exist!'þ       ENDþ      IF DATE.PAID.DICT.REC <> '' THENþ         VALID.DATE.DICT=1þ         DICT.TYPE=DATE.PAID.DICT.REC<1>þ         BEGIN CASEþ            CASE DICT.TYPE = 'A' OR DICT.TYPE = 'S' þ               IF DATE.PAID.DICT.REC<7>[1,1] <> 'D' AND DATE.PAID.DICT.REC<8>[1,1] <> 'D' THENþ                  VALID.DATE.DICT=0þ                ENDþ               DATE.PAID.AMC=DATE.PAID.DICT.REC<2>þ            CASE DICT.TYPE = 'D' OR DICT.TYPE = 'I' OR DICT.TYPE = 'C'þ               IF DATE.PAID.DICT.REC<3>[1,1] <> 'D' THENþ                  VALID.DATE.DICT=0þ                ENDþ               DATE.PAID.AMC=DATE.PAID.DICT.REC<2>þ            CASE 1þ               VALID.DATE.DICT=0þ               DATE.PAID.AMC=DATE.PAID.DICT.REC<2>þ         END CASEþ         IF NOT(VALID.DATE.DICT) THENþ            MESSAGE<-1>='Dictionary Item ':DATE.PAID.DICT:' Does Not Appear To Be A Date!'þ          ENDþ       ENDþ    ENDþ ENDþIF INVOICE.AMT.DICT = '' THENþ   IF VALID.REPORT.FILE THENþ      MESSAGE<-1>='No Invoice Amount Dictionary Defined!'þ    ENDþ END ELSEþ   IF NOT(VALID.REPORT.FILE) THENþ      MESSAGE<-1>="Cant Verify Dict ":INVOICE.AMT.DICT:' Because No AP File!'þ    END ELSEþ      READ INVOICE.AMT.DICT.REC FROM FI.DICT.REPORT.FILE, INVOICE.AMT.DICT ELSEþ         INVOICE.AMT.DICT.REC=''þ         MESSAGE<-1>=INVOICE.AMT.DICT:' Does Not Exist!'þ       ENDþ      IF INVOICE.AMT.DICT.REC <> '' THENþ         VALID.AMOUNT.DICT=1þ         DICT.TYPE=INVOICE.AMT.DICT.REC<1>þ         BEGIN CASEþ            CASE DICT.TYPE = 'A' OR DICT.TYPE = 'S' þ               DICT.7.1.2=INVOICE.AMT.DICT.REC<7>[1,2]þ               DICT.8.1.2=INVOICE.AMT.DICT.REC<8>[1,2]þ               IF DICT.7.1.2 <> 'MD' AND DICT.7.1.2 <> 'MR' AND DICT.8.1.2 <> 'MD' AND DICT.8.1.2 <> 'MR' THENþ                  VALID.AMOUNT.DICT=0þ                ENDþ               INVOICE.AMT.AMC=INVOICE.AMT.DICT.REC<2>þ            CASE DICT.TYPE = 'D' OR DICT.TYPE = 'I' OR DICT.TYPE = 'C'þ               DICT.3.1.2=INVOICE.AMT.DICT.REC<3>[1,2]þ               IF DICT.3.1.2 <> 'MR' AND DICT.3.1.2 <> 'MD' THENþ                  VALID.AMOUNT.DICT=0þ                ENDþ               INVOICE.AMT.AMC=INVOICE.AMT.DICT.REC<2>þ            CASE 1þ               VALID.AMOUNT.DICT=0þ               INVOICE.AMT.AMC=INVOICE.AMT.DICT.REC<2>þ         END CASEþ         IF NOT(VALID.AMOUNT.DICT) THENþ            MESSAGE<-1>='Dictionary Item ':INVOICE.AMT.DICT:' Does Not Appear To Be An Amount!'þ          ENDþ       ENDþ    ENDþ ENDþIF BALANCE.DICT = '' THENþ   IF VALID.REPORT.FILE THENþ      MESSAGE<-1>='No Balance Dictionary Defined!'þ    ENDþ END ELSEþ   IF NOT(VALID.REPORT.FILE) THENþ      MESSAGE<-1>="Cant Verify Dict ":BALANCE.DICT:' Because No AP File!'þ    END ELSEþ      READ BALANCE.DICT.REC FROM FI.DICT.REPORT.FILE, BALANCE.DICT ELSEþ         BALANCE.DICT.REC=''þ         MESSAGE<-1>=BALANCE.DICT:' Does Not Exist!'þ       ENDþ      IF BALANCE.DICT.REC <> '' THENþ         VALID.AMOUNT.DICT=1þ         DICT.TYPE=BALANCE.DICT.REC<1>þ         BEGIN CASEþ            CASE DICT.TYPE = 'A' OR DICT.TYPE = 'S' þ               DICT.7.1.2=BALANCE.DICT.REC<7>[1,2]þ               DICT.8.1.2=BALANCE.DICT.REC<8>[1,2]þ               IF DICT.7.1.2 <> 'MD' AND DICT.7.1.2 <> 'MR' AND DICT.8.1.2 <> 'MD' AND DICT.8.1.2 <> 'MR' THENþ                  VALID.AMOUNT.DICT=0þ                ENDþ               BALANCE.AMC=BALANCE.DICT.REC<2>þ            CASE DICT.TYPE = 'D' OR DICT.TYPE = 'I' OR DICT.TYPE = 'C'þ               DICT.3.1.2=BALANCE.DICT.REC<3>[1,2]þ               IF DICT.3.1.2 <> 'MR' AND DICT.3.1.2 <> 'MD' THENþ                  VALID.AMOUNT.DICT=0þ                ENDþ               BALANCE.AMC=BALANCE.DICT.REC<2>þ            CASE 1þ               VALID.AMOUNT.DICT=0þ               BALANCE.AMC=BALANCE.DICT.REC<2>þ         END CASEþ         IF NOT(VALID.AMOUNT.DICT) THENþ            MESSAGE<-1>='Dictionary Item ':BALANCE.DICT:' Does Not Appear To Be An Amount!'þ          ENDþ       ENDþ    ENDþ ENDþCREATE.INDEXES=1þIF MESSAGE = '' THENþ   MESSAGE='AP Report parameters properly defined!'þ END ELSEþ   IF INDEX(MESSAGE,'!',1) THENþ      MESSAGE=INSERT(MESSAGE,1,0,0,'!!! ERRORS !!!')þ      CREATE.INDEXES=0þ    ENDþ ENDþIF CREATE.INDEXES THENþ   * CREATE PIPE DICTIONARY ITEMþ   IF PLATFORM = 'D3' OR PLATFORM = 'QM' OR PLATFORM = 'JB' THENþ      PIPE='A'þ      PIPE<2>=0þ      PIPE<3>=' 'þ      PIPE<8>='F;C|'þ      PIPE<9>='L'þ      PIPE<10>=1þ    END ELSEþ      PIPE='I'þ      PIPE<2>='"|"'þ      PIPE<4>='|'þ      PIPE<5>='1L'þ      PIPE<6>='S'þ    ENDþ   WRITE PIPE ON FI.DICT.REPORT.FILE, 'PIPE'þ   *þ   ** INDEX LOGICþ   *þ   BEGIN CASEþ      CASE PLATFORM = 'D3'þ         INDEX.TEST='A':DUE.DATE.AMC:'(DY):':DUE.DATE.AMC:'(DM)'þ         READ FILE.DEF.REC FROM FI.DICT.REPORT.FILE, REPORT.FILE ELSE FILE.DEF.REC=''þ         IF FILE.DEF.REC <> '' AND NOT(INDEX(FILE.DEF.REC<8>,INDEX.TEST,1)) THENþ            MESSAGE<-1>='Creating Indexes'þ            CMND1="CREATE-INDEX DASHBOARD.AP.FILE A":DUE.DATE.AMCþ            EXECUTE CMND1 CAPTURING RESULT1þ            CMND2="CREATE-INDEX DASHBOARD.AP.FILE ":INDEX.TESTþ            EXECUTE CMND2 CAPTURING RESULT2þ          ENDþ      CASE 1þ         EXECUTE "CREATE-INDEX DASHBOARD.AP.FILE ":DUE.DATE.DICT CAPTURING RESULT1þ   END CASEþ ENDþGOSUB MESSAGE.DISPLAYþRETURNþ*þMESSAGE.DISPLAY:þ*þMAX.MSG=DCOUNT(MESSAGE,CHAR(254))þW$HTML.DATA='<h3>':MESSAGE<1>þIF MAX.MSG > 1 THENþ   FOR MSG.NO = 2 TO MAX.MSGþ      W$HTML.DATA:='<br>':MESSAGE<MSG.NO>þ    NEXT MSG.NOþ ENDþW$HTML.DATA:='</h3>'þRETURNþEND0006AECREATE.QPOINTERþ0c2SUBROUTINE CREATE.QPOINTER(PLATFORM,FI.MD,ACCOUNT,FILENAME,CALL.IT,FI.QPOINTER)þ**OPEN '',CALL.IT TO FI.QPOINTER THENþ**   IF CALL.IT <> 'QFILE' THEN RETURNþ** ENDþCALL.IT.PARAM=CALL.ITþCALL.IT=''þPATH=@PATHþBEGIN CASEþ   CASE PLATFORM = 'UD'þ      OPEN '','UD.ACCOUNTS' TO FI.UD.ACCOUNTS ELSEþ         UD.ACCOUNTS='F'þ         UD.ACCOUNTS<-1>='@UDTHOME/sys/UD.ACCOUNT'þ         UD.ACCOUNTS<-1>='@UDTHOME/sys/D_UD.ACCOUNT'þ         WRITE UD.ACCOUNTS ON FI.MD, 'UD.ACCOUNTS'þ         OPEN '','UD.ACCOUNTS' TO FI.UD.ACCOUNTS ELSE RETURNþ       ENDþ      READV PATH FROM FI.UD.ACCOUNTS, ACCOUNT, 1 ELSE RETURNþ      F.POINTER='F'þ      F.POINTER<2>=PATH:'/':FILENAMEþ      F.POINTER<3>=PATH:'/D_':FILENAMEþ      WRITE F.POINTER ON FI.MD, CALL.IT.PARAMþ   CASE PLATFORM = 'JB' AND ACCOUNT = 'MVDB'þ      IF INDEX(PATH,':\',1) THEN DELIM.TYPE='\' ELSE DELIM.TYPE='/'þ      F.POINTER='F'þ      F.POINTER<2>=PATH:DELIM.TYPE:FILENAMEþ      F.POINTER<3>=PATH:DELIM.TYPE:FILENAME:']D'þ      WRITE F.POINTER ON FI.MD, CALL.IT.PARAMþ   CASE 1þ      QFILE.REC='Q':@AM:ACCOUNT:@AM:FILENAMEþ      WRITE QFILE.REC ON FI.MD, CALL.IT.PARAMþEND CASEþ* CHANGE CALL.IT TO SUCCESSFUL NAMEþ* OTHERWISE IT WILL RETURN WITH NULL SAYING FAILUREþCALL.IT=CALL.IT.PARAMþOPEN '',CALL.IT.PARAM TO FI.QPOINTER ELSEþ   CALL.IT=''þ   IF PLATFORM = 'JB' AND FILENAME = 'MD' THENþ      * OTHER ACCOUNT MAY NOT HAVE AN MD AND THE ONLY REASON TO SET Aþ      * QPOINTER TO IT IS TO TEST VALIDITY OF THE ACCOUNT SO JUSTþ      * CHECK FOR THE EXISTENCE OF A SYSTEM RECORDþ      OPEN '','SYSTEM' TO FI.SYSTEM ELSE RETURNþ      READ ACCOUNT.EXIST FROM FI.SYSTEM, ACCOUNT ELSE RETURNþ      CALL.IT=CALL.IT.PARAMþ    ENDþ ENDþRETURNþEND000B60SUB.DEMO.SALES.CHARTþ0c2SUBROUTINE SUB.DEMO.SALES.CHARTþ*þ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TYPE = "FCCOLUMN3D"þW$WIDTH = 2þW$PDFABLE = 1þ*þIF G$QUERYMODE THEN RETURNþ*þW$BAR.COLORS<1,1>=COLOR$MAROONþW$BAR.COLORS<1,2>=COLOR$TEALþW$BAR.COLORS<1,3>=COLOR$SILVERþW$BAR.COLORS<1,4>=COLOR$BLUEþOPEN '','MVDB.CONTROL' TO FILE.CONTROL ELSE STOPþREAD REC FROM FILE.CONTROL, 'DEMO.FINANCIAL.PICTURE' ELSE REC=''þVAL.TYPE='$'þDRILLDOWN.WIDGET=''þDRILLDOWN.TYPE=''þBEGIN CASEþ   CASE WIDGET.USER.DATA(1) = 'REVENUES'þ      W$TITLE='YTD Revenues'þ      W$BAR.YMEMO = "YTD Revenues"þ      SALES.AMTS=REC<68>þ   CASE WIDGET.USER.DATA(1) = 'GROSSPROFIT'þ      W$TITLE='YTD Gross Profit'þ      W$BAR.YMEMO = "YTD Gross Profit"þ      SALES.AMTS=REC<69>þ   CASE WIDGET.USER.DATA(1) = 'MARGIN'þ      VAL.TYPE='%'þ      W$TITLE='YTD Margin %'þ      W$BAR.YMEMO = "Margin %"þ      SALES.AMTS=REC<39>þ   CASE WIDGET.USER.DATA(1) = 'PARTS$'þ      W$TITLE='YTD Parts Revenue ($)'þ      W$BAR.YMEMO = "Parts Revenue ($)"þ      SALES.AMTS=REC<40>þ      DRILLDOWN.WIDGET='DEMO SALE TYPES PIE'þ      DRILLDOWN.TYPE='PARTS'þ   CASE WIDGET.USER.DATA(1) = 'SERVICES$'þ      W$TITLE='YTD Services Revenue ($)'þ      W$BAR.YMEMO = "Services Revenue ($)"þ      SALES.AMTS=REC<42>þ      DRILLDOWN.WIDGET='DEMO SALE TYPES PIE'þ      DRILLDOWN.TYPE='SERVICES'þEND CASEþ*þYEARS=REC<38>þMAX.YEARS=DCOUNT(YEARS,CHAR(253))þ*þ*þMAX.SALES.AMT=0þN=0þFIRST.YEAR=''þFOR NN = 1 TO MAX.YEARSþ   SALES.AMT=SUM(SALES.AMTS<1,NN>)þ   BEGIN CASEþ      CASE VAL.TYPE = '$'þ         SALES.AMT=OCONV(SALES.AMT,'MD02')þ      CASE VAL.TYPE = '%'þ         SALES.AMT=OCONV(SALES.AMT,'MD01')þ      CASE 1þ         NULLþ   END CASEþ  IF SALES.AMT THENþ     N+=1þ     IF SALES.AMT > MAX.SALES.AMT THEN MAX.SALES.AMT=SALES.AMTþ     W$BAR.VALUES<1,N> = SALES.AMTþ     YEAR=YEARS<1,NN>þ     IF DRILLDOWN.TYPE <> '' THENþ        W$FW.DD.WIDGET<1,N>=DRILLDOWN.WIDGETþ        W$FW.DD.UD.POS<1,N,1>=1þ        W$FW.DD.UD.VAL<1,N,1>=YEARþ        W$FW.DD.UD.POS<1,N,2>=2þ        W$FW.DD.UD.VAL<1,N,2>=DRILLDOWN.TYPEþ      ENDþ     IF NOT(FIRST.YEAR) THEN FIRST.YEAR=YEARþ     CURRENT.YEAR=YEARþ     W$BAR.XLABELS<1,N> = YEARþ   ENDþNEXT NNþW$BAR.XMEMO = "Year"þIF DRILLDOWN.TYPE <> '' THENþ   W$BAR.XMEMO := " (drilldown for detail)"þ ENDþW$BAR.CAPTION=W$BAR.YMEMO:' From ':FIRST.YEAR:' to ':CURRENT.YEARþIF VAL.TYPE = '$' THENþ   * ROUND MAX AMOUNT UP TO THE NEXT 250000þ   MAX.SALES.AMT+=250000þ   MAX.SALES.AMT=INT(MAX.SALES.AMT/250000) * 250000þ   W$CHART.OPTIONS<-1>='yAxisMaxValue="':MAX.SALES.AMT:'"'þ   W$CHART.OPTIONS<-1>='decimals="2"'þ   W$CHART.OPTIONS<-1>='DecimalPrecision="2"'þ   W$CHART.OPTIONS<-1>='divLineDecimalPrecision="2"'þ   W$CHART.OPTIONS<-1>='limitsDecimalPrecision="2"'þ   W$CHART.OPTIONS<-1>='formatNumberScale="1"'þ ENDþIF VAL.TYPE = '%' THENþ   W$CHART.OPTIONS<-1>='decimals="1"'þ   W$CHART.OPTIONS<-1>='forceDecimals="1"'þ ENDþRETURN00B526SUB.PORTAL.SALES.REPORTSþ0c2SUBROUTINE SUB.PORTAL.SALES.REPORTSþ*þ* DEFINE PARAMETERS FOR PORTAL SALES REPORTþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþOPEN '','MVDB.SUBS' TO FI.MVDB.SUBS ELSE STOPþDIM SETUP.PARAMS(25)þ*þW$TITLE = "Portal Sales Reports"; CALL PORTAL.SHOW.LAST.UPDATED('SALES')þW$TYPE = "HTML"þW$WIDTH = 3þD3=1þ*þIF G$QUERYMODE THEN RETURNþ*þW$BAR.COLORS<1,1>=COLOR$MAROONþW$BAR.COLORS<1,2>=COLOR$TEALþW$BAR.COLORS<1,3>=COLOR$SILVERþW$BAR.COLORS<1,4>=COLOR$BLUEþW$BAR.COLORS<1,5>=COLOR$YELLOWþALF.MONTHS='Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'þEQUATE REPORT.TYPE TO WIDGET.USER.DATA(1)þ*þIF REPORT.TYPE = '' THEN REPORT.TYPE='MTD Sales'þ*þOPEN '','MVDB.CONTROL' TO FI.MVDB.CONTROL ELSE þ   ERROR.MSG='UNABLE TO OPEN MVDB.CONTROL'þ   GOTO DISPLAY.ERRORþ ENDþOPEN '','DASHBOARD.CLOSING.STATS' TO FI.DASHBOARD.CLOSING.STATS ELSE þ   ERROR.MSG='UNABLE TO OPEN DASHBOARD.CLOSING.STATS'þ   GOTO DISPLAY.ERRORþ ENDþOPEN 'DICT','DASHBOARD.CLOSING.STATS' TO FI.DICT.DASHBOARD.CLOSING.STATS ELSE þ   ERROR.MSG='UNABLE TO OPEN DICT DASHBOARD.CLOSING.STATS'þ   GOTO DISPLAY.ERRORþ ENDþMATREAD SETUP.PARAMS FROM FI.MVDB.CONTROL, 'PORTAL.SALES.REPORT.SETUP' ELSEþ   MAT SETUP.PARAMS=''þ ENDþEQUATE ACCOUNT TO SETUP.PARAMS(1)þEQUATE REPORT.FILE TO SETUP.PARAMS(2)þEQUATE SALE.DATE.DICT TO SETUP.PARAMS(3)þEQUATE SALE.MONTH.DICT TO SETUP.PARAMS(4)þEQUATE SALE.YEAR.DICT TO SETUP.PARAMS(5)þEQUATE SALE.AMOUNT.DICT TO SETUP.PARAMS(6)þEQUATE COST.OF.SALE.AMOUNT.DICT TO SETUP.PARAMS(7)þEQUATE SALESMAN.DICT TO SETUP.PARAMS(8)þEQUATE BRANCH.DICT TO SETUP.PARAMS(9)þEQUATE REGION.DICT TO SETUP.PARAMS(10)þEQUATE SALE.DATE.AMC TO SETUP.PARAMS(11)þEQUATE SALE.AMOUNT.AMC TO SETUP.PARAMS(12)þEQUATE SALE.AMOUNT.CONV TO SETUP.PARAMS(13)þEQUATE SALE.AMOUNT.COOR TO SETUP.PARAMS(14)þEQUATE COST.OF.SALE.AMOUNT.AMC TO SETUP.PARAMS(15)þEQUATE COST.OF.SALE.AMOUNT.CONV TO SETUP.PARAMS(16)þEQUATE COST.OF.SALE.AMOUNT.COOR TO SETUP.PARAMS(17)þEQUATE SALESMAN.AMC TO SETUP.PARAMS(18)þEQUATE SALESMAN.TFILE TO SETUP.PARAMS(19)þEQUATE BRANCH.AMC TO SETUP.PARAMS(20)þEQUATE BRANCH.TFILE TO SETUP.PARAMS(21)þEQUATE REGION.AMC TO SETUP.PARAMS(22)þEQUATE REGION.TFILE TO SETUP.PARAMS(23)þ*þREAD PLATFORM FROM FI.MVDB.CONTROL, 'PLATFORM' ELSE PLATFORM='D3'þBEGIN CASEþ   CASE PLATFORM = 'UD'þ      EXECUTE.STACKED.CMNDS='UD.EXECUTE.STACKED.CMNDS'þ      MD.FILE.NAME='VOC'þ   CASE PLATFORM = 'UV'þ      EXECUTE.STACKED.CMNDS='UV.EXECUTE.STACKED.CMNDS'þ      MD.FILE.NAME='VOC'þ   CASE PLATFORM = 'QM'þ      EXECUTE.STACKED.CMNDS='EXECUTE.STACKED.CMNDS'þ      MD.FILE.NAME='VOC'þ   CASE 1þ      * D3 AND JBASE ARE THE SAMEþ      EXECUTE.STACKED.CMNDS='EXECUTE.STACKED.CMNDS'þ      MD.FILE.NAME='MD'þEND CASEþOPEN '',MD.FILE.NAME TO FI.MD ELSEþ   ERROR.MSG='UNABLE TO OPEN ':MD.FILE.NAMEþ   GOTO DISPLAY.ERRORþ ENDþ*þIF ACCOUNT = '' OR REPORT.FILE = '' OR SALE.DATE.DICT = '' OR SALE.AMOUNT.DICT = '' THENþ   ERROR.MSG='SALES FILE ACCOUNT, SALES FILE NAME, DATE OF SALE, AND AMOUNT OF SALE MUST ALL BE DEFINED BEFORE REPORTS CAN BE ATTEMPTED'þ   GOTO DISPLAY.ERRORþ ENDþ*þSALES.FILE.PATH='SALES.FILE.PATH'þOPEN '',SALES.FILE.PATH TO FI.SALES.FILE.PATH ELSEþ**   EXECUTE "SET-FILE ":ACCOUNT:" ":REPORT.FILE CAPTURING DUMMYþ   QFILE.NAME=SALES.FILE.PATHþ   CALL CREATE.QPOINTER(PLATFORM,FI.MD,ACCOUNT,REPORT.FILE,QFILE.NAME,FI.SALES.FILE.PATH)þ   IF QFILE.NAME = '' THENþ      MESSAGE<-1>=REPORT.FILE:' is not a valid file in the ':ACCOUNT:' account!'þ      GOTO DISPLAY.ERRORþ    ENDþ**    IF PLATFORM = 'UD' THENþ**       QFILE.NAME='SALES.FILE.PATH'þ**       CALL CREATE.UD.QPOINTER(ACCOUNT,REPORT.FILE,QFILE.NAME,FI.SALES.FILE.PATH)þ**       IF QFILE.NAME = '' THENþ**          ERROR.MSG='UNABLE TO OPEN ':REPORT.FILE:' IN ':ACCOUNT:' ACCOUNT'þ**          GOTO DISPLAY.ERRORþ**        ENDþ**     END ELSEþ**    **   READ MD.QFILE FROM FI.MD, 'QFILE' ELSEþ**    **      ERROR.MSG='UNABLE TO CREATE QFILE TO SALES FILE'þ**    **      GOTO DISPLAY.ERRORþ**    **    ENDþ**       MD.QFILE='Q'þ**       MD.QFILE<2>=ACCOUNTþ**       MD.QFILE<3>=REPORT.FILEþ**       WRITE MD.QFILE ON FI.MD, 'SALES.FILE.PATH'þ**       OPEN '','SALES.FILE.PATH' TO FI.SALES.FILE.PATH ELSEþ**          ERROR.MSG='UNABLE TO OPEN ':REPORT.FILE:' IN ':ACCOUNT:' ACCOUNT'þ**          GOTO DISPLAY.ERRORþ**        ENDþ**     ENDþ   EXECUTE "CREATE-INDEX SALES.FILE.PATH ":SALE.DATE.DICT CAPTURING DUMMYþ ENDþ*þW$CHART.OPTIONS<-1>='decimals="2"'þW$CHART.OPTIONS<-1>='DecimalPrecision="2"'þW$CHART.OPTIONS<-1>='divLineDecimalPrecision="2"'þW$CHART.OPTIONS<-1>='limitsDecimalPrecision="2"'þW$CHART.OPTIONS<-1>='formatNumberScale="1"'þ*þOTODAY=OCONV(DATE(),'D4-')þ*þBEGIN CASEþ   CASE REPORT.TYPE = 'MTD Sales'; GOSUB MTD.SALESþ   CASE REPORT.TYPE = 'YTD Sales'; GOSUB YTD.SALESþ   CASE REPORT.TYPE = 'Year to Year Sales and GP'; GOSUB YEAR.TO.YEAR.SALESþ   CASE REPORT.TYPE = 'Year to Year Sales by Month'; GOSUB YEAR.TO.YEAR.SALES.BY.MONTHþ   CASE REPORT.TYPE = 'Year to Year GP by Month'; GOSUB YEAR.TO.YEAR.GP.BY.MONTHþ   CASE REPORT.TYPE = 'MTD Sales by Salesman'; GOSUB MTD.SALES.BY.SALESMANþ   CASE REPORT.TYPE = 'YTD Sales by Salesman'; GOSUB YTD.SALES.BY.SALESMANþ   CASE REPORT.TYPE = 'Year to Year Sales by Salesman'; GOSUB YEAR.TO.YEAR.BY.SALESMANþ   CASE REPORT.TYPE = 'Year to Year GP by Salesman'; GOSUB YEAR.TO.YEAR.GP.BY.SALESMANþ   CASE REPORT.TYPE = 'MTD Sales by Branch'; GOSUB MTD.SALES.BY.BRANCHþ   CASE REPORT.TYPE = 'YTD Sales by Branch'; GOSUB YTD.SALES.BY.BRANCHþ   CASE REPORT.TYPE = 'Year to Year Sales by Branch'; GOSUB YEAR.TO.YEAR.BY.BRANCHþ   CASE REPORT.TYPE = 'Year to Year GP by Branch'; GOSUB YEAR.TO.YEAR.GP.BY.BRANCHþ   CASE REPORT.TYPE = 'MTD Sales by Region'; GOSUB MTD.SALES.BY.REGIONþ   CASE REPORT.TYPE = 'YTD Sales by Region'; GOSUB YTD.SALES.BY.REGIONþ   CASE REPORT.TYPE = 'Year to Year Sales by Region'; GOSUB YEAR.TO.YEAR.BY.REGIONþ   CASE REPORT.TYPE = 'Year to Year GP by Region'; GOSUB YEAR.TO.YEAR.GP.BY.REGIONþEND CASEþ*þW$INPUT.PROMPT<1> = "Report Type"þW$INPUT.TYPE<1> = "SELECT"þW$INPUT.UDPOS<1> = 1þW$INPUT.DEFAULT<1> = REPORT.TYPEþSELOPTS='MTD Sales'þSELOPTS<1,-1>='YTD Sales'þSELOPTS<1,-1>='Year to Year Sales and GP'þSELOPTS<1,-1>='Year to Year Sales by Month'þSELOPTS<1,-1>='Year to Year GP by Month'þSELOPTS<1,-1>='MTD Sales by Salesman'þSELOPTS<1,-1>='YTD Sales by Salesman'þSELOPTS<1,-1>='Year to Year Sales by Salesman'þSELOPTS<1,-1>='Year to Year GP by Salesman'þIF BRANCH.DICT <> '' THENþ   SELOPTS<1,-1>='MTD Sales by Branch'þ   SELOPTS<1,-1>='YTD Sales by Branch'þ   SELOPTS<1,-1>='Year to Year Sales by Branch'þ   SELOPTS<1,-1>='Year to Year GP by Branch'þ ENDþIF REGION.DICT <> '' THENþ   SELOPTS<1,-1>='MTD Sales by Region'þ   SELOPTS<1,-1>='YTD Sales by Region'þ   SELOPTS<1,-1>='Year to Year Sales by Region'þ   SELOPTS<1,-1>='Year to Year GP by Region'þ ENDþW$INPUT.SELOPTS=SELOPTSþW$INPUT.SELVALS=SELOPTSþRETURNþ*þDISPLAY.ERROR:þ*þW$HTML.DATA='<h3>':ERROR.MSG:'</h3>'þRETURNþ*þMTD.SALES:þ*þGET.REPORT.TYPE='SALES'; GOSUB GET.CURRENT.REPORTþIF REPORT.STATS.REC[1,5] = 'ERROR' OR REPORT.STATS.REC<1> = '' THENþ   ERROR.MSG='NO SALES CLOSED SINCE BEGINNING OF MONTH'þ   GOSUB DISPLAY.ERRORþ   RETURNþ ENDþW$BAR.XMEMO = "Date"þW$BAR.LABELS<1>='Total Sales'þW$BAR.LABELS<2>='Gross Profit'þDATES=REPORT.STATS.REC<1>þNUM.DATES=DCOUNT(DATES,CHAR(253))þAMOUNTS=REPORT.STATS.REC<2>þSUM.AMOUNTS=SUM(AMOUNTS)þCOST.OF.SALES=REPORT.STATS.REC<3>þSUM.COST.OF.SALES=SUM(COST.OF.SALES)þSUM.GROSS.PROFIT=SUM.AMOUNTS-SUM.COST.OF.SALESþW$BAR.YMEMO='Total Sales and Gross Profits'þW$BAR.CAPTION = "Total Month to Date Sales of ":OCONV(SUM.AMOUNTS,'MD2,$'):" and Gross Profit of ":OCONV(SUM.GROSS.PROFIT,'MD2,$'):" by Date"þIF NUM.DATES > 20 THENþ   W$TYPE='FCMSBAR2D'þ   START.CNTR=NUM.DATESþ   END.CNTR=1þ   STEP.CNTR=(-1)þ END ELSEþ   W$TYPE='FCMSCOLUMN2D'þ   START.CNTR=1þ   END.CNTR=NUM.DATESþ   STEP.CNTR=1þ ENDþVALUE.CNTR=0þFOR AMT.CNTR = START.CNTR TO END.CNTR STEP STEP.CNTRþ   AMOUNT=AMOUNTS<1,AMT.CNTR>þ   IF AMOUNT THENþ      COST.OF.SALE=COST.OF.SALES<1,AMT.CNTR>þ      GROSS.PROFIT=AMOUNT-COST.OF.SALEþ      IF GROSS.PROFIT < 0 THEN GROSS.PROFIT=0þ      VALUE.CNTR+=1þ      ROW.DATE=ICONV(DATES<1,AMT.CNTR>,'D')þ      ROW.DATE=OCONV(ROW.DATE,'D0')þ      W$BAR.XLABELS<1,VALUE.CNTR>=ROW.DATEþ      W$BAR.VALUES<1,VALUE.CNTR>=OCONV(AMOUNT,'MD2')þ      W$BAR.VALUES<2,VALUE.CNTR>=OCONV(GROSS.PROFIT,'MD2')þ    ENDþ NEXT AMT.CNTRþ**WRITE DATES:CHAR(254):AMOUNTS ON FI.MVDB.SUBS, 'MTD.SALES.TEST'þRETURNþ*þYTD.SALES:þ*þGOSUB VERIFY.CURRENT.DATAþ*OTODAY=OCONV(DATE(),'D4-')þYTD.MO=OTODAY[1,2]+0þOYEAR=OTODAY[7,4]þSTACKED.1= 'SELECT DASHBOARD.CLOSING.STATS WITH YYYY = "':OYEAR:'"'þSTACKED.2='SORT DASHBOARD.CLOSING.STATS BY YYYYMM BREAK-ON YYYYMM PIPE DET-SUPP TOTAL AMOUNT PIPE TOTAL GROSS.PROFIT ID-SUPP HDR-SUPP COL-HDR-SUPP NOPAGE'þCALL @EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,SYSTEM.11,REPORT)þIF NOT(SYSTEM.11) THENþ   ERROR.MSG='NO SALES CLOSED SINCE BEGINNING OF YEAR'þ   GOSUB DISPLAY.ERRORþ   RETURNþ ENDþW$BAR.XMEMO = "Month"þW$BAR.LABELS<1>='Total Sales'þW$BAR.LABELS<2>='Gross Profit'þWRITE REPORT ON FI.MVDB.SUBS, 'REPORT.RETURNED'þMONTHS=''þMONTH.CNTR=0þLAST.MONTH=''þAMOUNTS=''þGROSS.PROFITS=''þMAX.ROWS=DCOUNT(REPORT,CHAR(254))þFOR ROW.NO = 1 TO MAX.ROWSþ   ROW=REPORT<ROW.NO>þ   IF INDEX(ROW,'|',1) THENþ      MONTH=TRIM(FIELD(ROW,'|',1))[5,2]+0þ      AMOUNT=ICONV(TRIM(FIELD(ROW,'|',2)),'MD2')þ      GROSS.PROFIT=ICONV(TRIM(FIELD(ROW,'|',3)),'MD2')þ      IF NUM(AMOUNT) AND NUM(GROSS.PROFIT) THENþ         IF MONTH <> LAST.MONTH THENþ            LAST.MONTH=MONTHþ            MONTH.CNTR+=1þ            MONTHS<1,MONTH.CNTR>=MONTHþ            AMOUNTS<1,MONTH.CNTR>=0þ            GROSS.PROFITS<1,MONTH.CNTR>=0þ          ENDþ         AMOUNTS<1,MONTH.CNTR>+=AMOUNTþ         GROSS.PROFITS<1,MONTH.CNTR>+=GROSS.PROFITþ       ENDþ    ENDþ NEXT ROW.NOþW$BAR.YMEMO='Total Sales and Gross Profit'þW$BAR.CAPTION = "Total Year to Date Sales of ":OCONV(SUM(AMOUNTS),'MD2,$'):"  And Gross Profit of ":OCONV(SUM(GROSS.PROFITS),'MD2,$'):" By Month"þNUM.AMOUNTS=DCOUNT(AMOUNTS,CHAR(253))þW$TYPE='FCMSCOLUMN2D'þVALUE.CNTR=0þFOR AMT.CNTR = 1 TO YTD.MOþ   AMOUNT=AMOUNTS<1,AMT.CNTR>þ   GROSS.PROFIT=GROSS.PROFITS<1,AMT.CNTR>þ   IF AMOUNT > 0 AND GROSS.PROFIT >= 0 THENþ      VALUE.CNTR+=1þ      MONTH=FIELD(ALF.MONTHS,',',AMT.CNTR)þ      W$BAR.XLABELS<1,VALUE.CNTR>=MONTHþ      W$BAR.VALUES<1,VALUE.CNTR>=OCONV(AMOUNT,'MD2')þ      W$BAR.VALUES<2,VALUE.CNTR>=OCONV(GROSS.PROFIT,'MD2')þ    ENDþ NEXT AMT.CNTRþRETURNþ*þYEAR.TO.YEAR.SALES:þ*þGOSUB VERIFY.CURRENT.DATAþW$TYPE='FCMSCOLUMN2D'þTHIS.YEAR=OCONV(DATE(),'D4-')[7,4]þFIRST.YEAR=THIS.YEAR-4þSTACKED.1='SELECT DASHBOARD.CLOSING.STATS WITH YYYY GE "':FIRST.YEAR:'"'þSTACKED.2='SORT DASHBOARD.CLOSING.STATS BY YYYY BREAK-ON YYYY PIPE TOTAL AMOUNT PIPE TOTAL GROSS.PROFIT ID-SUPP DET-SUPP HDR-SUPP COL-HDR-SUPP NOPAGE'þCALL @EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,SYSTEM.11,REPORT)þIF NOT(SYSTEM.11) THENþ   ERROR.MSG='NO SALES CLOSED SINCE ':FIRST.YEARþ   GOSUB DISPLAY.ERRORþ   RETURNþ ENDþ**WRITE REPORT ON FI.MVDB.SUBS, 'YEAR.TO.YEAR.REPORT'þYEAR.TOTALS=''þYEAR.GROSS.PROFITS=''þYEARS=''þMAX.ROWS=DCOUNT(REPORT,CHAR(254))þYEAR.CNTR=0þFOR ROW.NO = 1 TO MAX.ROWSþ   ROW=REPORT<ROW.NO>þ   IF INDEX(ROW,'|',1) THENþ      YEAR=TRIM(FIELD(ROW,'|',1))þ      AMOUNT=TRIM(FIELD(ROW,'|',2))þ      GROSS.PROFIT=TRIM(FIELD(ROW,'|',3))þ      IF NUM(AMOUNT) AND NUM(GROSS.PROFIT) THENþ         IF AMOUNT OR GROSS.PROFIT THENþ            YEAR.CNTR+=1þ            YEARS<YEAR.CNTR>=YEARþ            AMOUNT=ICONV(AMOUNT,'MD2')þ            GROSS.PROFIT=ICONV(GROSS.PROFIT,'MD2')þ            YEAR.TOTALS<YEAR.CNTR>=AMOUNTþ            YEAR.GROSS.PROFITS<YEAR.CNTR>=GROSS.PROFITþ          ENDþ       ENDþ    ENDþNEXT ROW.NOþ*þW$BAR.CAPTION = "Sales and Gross Profit by Year"þW$BAR.XMEMO = "Year"þW$BAR.LABELS<1>='Total Sales'þW$BAR.LABELS<2>='Gross Profit'þW$BAR.YMEMO = "Total Sales and Gross Profit"þ*þMAX.YEARS=DCOUNT(YEARS,CHAR(254))þFOR YEAR.NO = 1 TO MAX.YEARSþ   YEAR.TOTAL=YEAR.TOTALS<YEAR.NO>þ   YEAR.GROSS.PROFIT=YEAR.GROSS.PROFITS<YEAR.NO>þ   W$BAR.VALUES<1,YEAR.NO>=OCONV(YEAR.TOTAL+0,'MD2')þ   W$BAR.VALUES<2,YEAR.NO>=OCONV(YEAR.GROSS.PROFIT+0,'MD2')þ   W$BAR.XLABELS<1,YEAR.NO>=YEARS<YEAR.NO>þ NEXT YEAR.NOþRETURNþ*þYEAR.TO.YEAR.SALES.BY.MONTH:þ*þGOSUB VERIFY.CURRENT.DATAþW$TYPE='FCMSCOLUMN2D'þTHIS.YEAR=OCONV(DATE(),'D4-')[7,4]þFIRST.YEAR=THIS.YEAR-4þSTACKED.1='SELECT DASHBOARD.CLOSING.STATS WITH YYYY GE "':FIRST.YEAR:'"'þSTACKED.2='SORT DASHBOARD.CLOSING.STATS BY YYYYMM BREAK-ON YYYYMM PIPE TOTAL AMOUNT ID-SUPP DET-SUPP HDR-SUPP COL-HDR-SUPP NOPAGE'þCALL @EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,SYSTEM.11,REPORT)þIF NOT(SYSTEM.11) THENþ   ERROR.MSG='NO SALES CLOSED SINCE ':FIRST.YEARþ   GOSUB DISPLAY.ERRORþ   RETURNþ ENDþYEAR.MO.TOTALS=''þYEAR.NO=1þMAX.ROWS=DCOUNT(REPORT,CHAR(254))þFOR ROW.NO = 1 TO MAX.ROWSþ   ROW=REPORT<ROW.NO>þ   IF INDEX(ROW,'|',1) THENþ      YYYYMM=TRIM(FIELD(ROW,'|',1))þ      YEAR=YYYYMM[1,4]þ      MO.NO=YYYYMM[5,2]+0þ      AMOUNT=TRIM(FIELD(ROW,'|',2))þ      IF YEAR <> '' AND MO.NO AND NUM(AMOUNT) THENþ         YEAR.NO=YEAR-FIRST.YEAR+1þ         IF AMOUNT THENþ            AMOUNT=ICONV(AMOUNT,'MD2')þ            YEAR.MO.TOTALS<YEAR.NO,MO.NO>+=AMOUNTþ          ENDþ       ENDþ    ENDþ NEXT ROW.NOþ*þFOR I = 0 TO 4þ   W$BAR.LABELS<I+1> = FIRST.YEAR+Iþ   W$BAR.LABEL.OPTS<I+1> = "showValues='0'"þ NEXT Iþ*þW$BAR.CAPTION = "Monthly Sales by Year"þW$BAR.XMEMO = "Month"þW$BAR.YMEMO = "Sales"þ*þFOR MO.NO = 1 TO 12þ   FOR YEAR.NO = 1 TO 5þ      W$BAR.VALUES<YEAR.NO,MO.NO>=OCONV(YEAR.MO.TOTALS<YEAR.NO,MO.NO>+0,'MD2')þ    NEXT YEAR.NOþ   W$BAR.XLABELS<1,MO.NO>=FIELD(ALF.MONTHS,',',MO.NO)þ NEXT MO.NOþRETURNþ*þYEAR.TO.YEAR.GP.BY.MONTH:þ*þGOSUB VERIFY.CURRENT.DATAþW$TYPE='FCMSCOLUMN2D'þTHIS.YEAR=OCONV(DATE(),'D4-')[7,4]þFIRST.YEAR=THIS.YEAR-4þSTACKED.1='SELECT DASHBOARD.CLOSING.STATS WITH YYYY GE "':FIRST.YEAR:'"'þSTACKED.2='SORT DASHBOARD.CLOSING.STATS BY YYYYMM BREAK-ON YYYYMM PIPE TOTAL GROSS.PROFIT ID-SUPP DET-SUPP HDR-SUPP COL-HDR-SUPP NOPAGE'þCALL @EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,SYSTEM.11,REPORT)þIF NOT(SYSTEM.11) THENþ   ERROR.MSG='NO SALES CLOSED SINCE ':FIRST.YEARþ   GOSUB DISPLAY.ERRORþ   RETURNþ ENDþYEAR.MO.TOTALS=''þYEAR.NO=1þMAX.ROWS=DCOUNT(REPORT,CHAR(254))þFOR ROW.NO = 1 TO MAX.ROWSþ   ROW=REPORT<ROW.NO>þ   IF INDEX(ROW,'|',1) THENþ      YYYYMM=TRIM(FIELD(ROW,'|',1))þ      YEAR=YYYYMM[1,4]þ      MO.NO=YYYYMM[5,2]+0þ      GROSS.PROFIT=TRIM(FIELD(ROW,'|',2))þ      IF YEAR <> '' AND MO.NO AND NUM(GROSS.PROFIT) THENþ         YEAR.NO=YEAR-FIRST.YEAR+1þ         IF GROSS.PROFIT THENþ            GROSS.PROFIT=ICONV(GROSS.PROFIT,'MD2')þ            YEAR.MO.TOTALS<YEAR.NO,MO.NO>+=GROSS.PROFITþ          ENDþ       ENDþ    ENDþ NEXT ROW.NOþ*þFOR I = 0 TO 4þ   W$BAR.LABELS<I+1> = FIRST.YEAR+Iþ   W$BAR.LABEL.OPTS<I+1> = "showValues='0'"þ NEXT Iþ*þW$BAR.CAPTION = "Monthly Gross Profit by Year"þW$BAR.XMEMO = "Month"þW$BAR.YMEMO = "Gross Profit"þ*þFOR MO.NO = 1 TO 12þ   FOR YEAR.NO = 1 TO 5þ      W$BAR.VALUES<YEAR.NO,MO.NO>=OCONV(YEAR.MO.TOTALS<YEAR.NO,MO.NO>+0,'MD2')þ    NEXT YEAR.NOþ   W$BAR.XLABELS<1,MO.NO>=FIELD(ALF.MONTHS,',',MO.NO)þ NEXT MO.NOþRETURNþ*þMTD.SALES.BY.SALESMAN:þ*þ*OTODAY=OCONV(DATE(),'D4-')þOMO=OTODAY[1,2]þODAY=OTODAY[4,2]+0þOYEAR=OTODAY[7,4]þIF ODAY = 1 THENþ   OMO=OMO-1þ   IF NOT(OMO) THENþ      OMO=12þ      OYEAR=OYEAR-1þ    ENDþ ENDþDATE.SELECT.STRING=''þISTART=ICONV(OMO:'-1-':OYEAR,'D')þIEND=DATE()þNUM.COLS=IEND-ISTART+1þFOR IDATE = ISTART TO IENDþ   DATE.SELECT.STRING:=' "':OCONV(IDATE,'D2-'):'"'þ NEXT IDATEþ**WRITE DATE.SELECT.STRING ON FI.MVDB.SUBS, 'DATE.SELECT.STRING'þSTACKED.1='SELECT ':SALES.FILE.PATH:' WITH ':SALE.DATE.DICT:' = ':DATE.SELECT.STRINGþSTACKED.2='SORT ':SALES.FILE.PATH:' BY ':SALESMAN.DICT:' BREAK-ON ':SALESMAN.DICT:' PIPE TOTAL ':SALE.AMOUNT.DICT:' PIPE TOTAL ':COST.OF.SALE.AMOUNT.DICT:' ID-SUPP DET-SUPP HDR-SUPP COL-HDR-SUPP NOPAGE'þCALL @EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,SYSTEM.11,REPORT)þIF NOT(SYSTEM.11) THENþ   ERROR.MSG='NO SALES CLOSED SINCE BEGINNING OF MONTH'þ   GOSUB DISPLAY.ERRORþ   RETURNþ ENDþW$BAR.XMEMO = "Salesman"þSALESMEN=''þSALESMAN.CNTR=0þLAST.SALESMAN=''þAMOUNTS=''þGROSS.PROFITS=''þMAX.ROWS=DCOUNT(REPORT,CHAR(254))þFOR ROW.NO = 1 TO MAX.ROWSþ   ROW=REPORT<ROW.NO>þ   IF INDEX(ROW,'|',1) THENþ      SALESMAN=TRIM(FIELD(ROW,'|',1))þ      AMOUNT=ICONV(TRIM(FIELD(ROW,'|',2)),'MD2')þ      COST.OF.SALE=ICONV(TRIM(FIELD(ROW,'|',3)),'MD2')þ      IF NUM(AMOUNT) AND NUM(COST.OF.SALE) THENþ         IF AMOUNT > 0 THENþ            IF SALESMAN <> LAST.SALESMAN THENþ               LAST.SALESMAN=SALESMANþ               SALESMAN.CNTR+=1þ               SALESMEN<1,SALESMAN.CNTR>=SALESMANþ               AMOUNTS<1,SALESMAN.CNTR>=0þ               GROSS.PROFITS<1,SALESMAN.CNTR>=0þ             ENDþ            GROSS.PROFIT=AMOUNT-COST.OF.SALEþ            AMOUNTS<1,SALESMAN.CNTR>+=AMOUNTþ            GROSS.PROFITS<1,SALESMAN.CNTR>+=GROSS.PROFITþ          ENDþ       ENDþ    ENDþ NEXT ROW.NOþW$BAR.YMEMO='Total Sales'þW$BAR.CAPTION = "Total Month to Date Sales of ":OCONV(SUM(AMOUNTS),'MD2,$'):" and Gross Profits of ":OCONV(SUM(GROSS.PROFITS),'MD2,$'):" by Salesman"þNUM.AMOUNTS=DCOUNT(AMOUNTS,CHAR(253))þIF SALESMAN.CNTR > 10 THENþ   W$TYPE='FCMSBAR2D'þ   W$CHART.HEIGHT = 200 + (25 * SALESMAN.CNTR)þ END ELSEþ   W$TYPE='FCMSCOLUMN2D'þ ENDþW$BAR.LABELS<1>='Total Sales'þW$BAR.LABELS<2>='Gross Profit'þVALUE.CNTR=0þFOR AMT.CNTR = 1 TO NUM.AMOUNTSþ   AMOUNT=AMOUNTS<1,AMT.CNTR>þ   IF AMOUNT > 0 THENþ      GROSS.PROFIT=GROSS.PROFITS<1,AMT.CNTR>þ      VALUE.CNTR+=1þ      SALESMAN=SALESMEN<1,AMT.CNTR>þ      W$BAR.XLABELS<1,VALUE.CNTR>=SALESMANþ      W$BAR.VALUES<1,VALUE.CNTR>=OCONV(AMOUNT,'MD2')þ      W$BAR.VALUES<2,VALUE.CNTR>=OCONV(GROSS.PROFIT,'MD2')þ    ENDþ NEXT AMT.CNTRþ**WRITE SALESMEN:CHAR(254):AMOUNTS ON FI.MVDB.SUBS, 'MTD.SALES.TEST'þRETURNþ*þYTD.SALES.BY.SALESMAN:þ*þGOSUB VERIFY.CURRENT.DATAþ*OTODAY=OCONV(DATE(),'D4-')þYTD.MO=OTODAY[1,2]+0þOYEAR=OTODAY[7,4]þSTACKED.1= 'SELECT DASHBOARD.CLOSING.STATS WITH YYYY = "':OYEAR:'"'þSTACKED.2='SORT DASHBOARD.CLOSING.STATS BY SALESMAN BREAK-ON SALESMAN PIPE TOTAL AMOUNT PIPE TOTAL GROSS.PROFIT ID-SUPP DET-SUPP HDR-SUPP COL-HDR-SUPP NOPAGE'þCALL @EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,SYSTEM.11,REPORT)þIF NOT(SYSTEM.11) THENþ   ERROR.MSG='NO SALES CLOSED SINCE BEGINNING OF YEAR'þ   GOSUB DISPLAY.ERRORþ   RETURNþ ENDþW$BAR.XMEMO = "Salesman"þW$BAR.LABELS<1>='Total Sales'þW$BAR.LABELS<2>='Gross Profit'þ**WRITE REPORT ON FI.MVDB.SUBS, 'REPORT.RETURNED'þSALESMEN=''þSALESMAN.CNTR=0þLAST.SALESMAN=''þAMOUNTS=''þGROSS.PROFITS=''þMAX.ROWS=DCOUNT(REPORT,CHAR(254))þFOR ROW.NO = 1 TO MAX.ROWSþ   ROW=REPORT<ROW.NO>þ   IF INDEX(ROW,'|',1) THENþ      SALESMAN=TRIM(FIELD(ROW,'|',1))þ      AMOUNT=TRIM(FIELD(ROW,'|',2))þ      GROSS.PROFIT=TRIM(FIELD(ROW,'|',3))þ      IF NUM(AMOUNT) AND NUM(GROSS.PROFIT) THENþ         AMOUNT=ICONV(AMOUNT,'MD2')þ         IF AMOUNT > 0 THENþ            GROSS.PROFIT=ICONV(GROSS.PROFIT,'MD2')þ            IF SALESMAN <> LAST.SALESMAN THENþ               LAST.SALESMAN=SALESMANþ               SALESMAN.CNTR+=1þ               SALESMEN<1,SALESMAN.CNTR>=SALESMANþ               AMOUNTS<1,SALESMAN.CNTR>=0þ               GROSS.PROFITS<1,SALESMAN.CNTR>=0þ             ENDþ            AMOUNTS<1,SALESMAN.CNTR>+=AMOUNTþ            GROSS.PROFITS<1,SALESMAN.CNTR>+=GROSS.PROFITþ          ENDþ       ENDþ    ENDþ NEXT ROW.NOþW$BAR.YMEMO='Total Sales and Gross Profit'þW$BAR.CAPTION = "Total Year to Date Sales of ":OCONV(SUM(AMOUNTS),'MD2,$'):" and Gross Profit of ":OCONV(SUM(GROSS.PROFITS),'MD2,$'):" by Salesman"þIF SALESMAN.CNTR > 10 THENþ   W$TYPE='FCMSBAR2D'þ   W$CHART.HEIGHT = 200 + (25 * SALESMAN.CNTR)þ END ELSEþ   W$TYPE='FCMSCOLUMN2D'þ ENDþVALUE.CNTR=0þFOR AMT.CNTR = 1 TO SALESMAN.CNTRþ   AMOUNT=AMOUNTS<1,AMT.CNTR>þ   GROSS.PROFIT=GROSS.PROFITS<1,AMT.CNTR>þ   IF AMOUNT THENþ      VALUE.CNTR+=1þ      SALESMAN=SALESMEN<1,AMT.CNTR>þ      W$BAR.XLABELS<1,VALUE.CNTR>=SALESMANþ      W$BAR.VALUES<1,VALUE.CNTR>=OCONV(AMOUNT,'MD2')þ      W$BAR.VALUES<2,VALUE.CNTR>=OCONV(GROSS.PROFIT,'MD2')þ    ENDþ NEXT AMT.CNTRþRETURNþ*þYEAR.TO.YEAR.BY.SALESMAN:þ*þGOSUB VERIFY.CURRENT.DATAþW$TYPE='FCMSBAR2D'þTHIS.YEAR=OCONV(DATE(),'D4-')[7,4]þFIRST.YEAR=THIS.YEAR-4þYEARS=''þFOR YEAR.NO = FIRST.YEAR TO THIS.YEARþ   YEARS<-1>=YEAR.NOþ NEXT YEAR.NOþ*þSTACKED.1='SELECT DASHBOARD.CLOSING.STATS WITH YYYY GE "':FIRST.YEAR:'"'þSTACKED.2='SORT DASHBOARD.CLOSING.STATS BY SALESMAN BY YYYY BREAK-ON SALESMAN PIPE BREAK-ON YYYY PIPE TOTAL AMOUNT ID-SUPP DET-SUPP HDR-SUPP COL-HDR-SUPP NOPAGE'þCALL @EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,SYSTEM.11,REPORT)þIF NOT(SYSTEM.11) THENþ   ERROR.MSG='NO SALES CLOSED SINCE ':FIRST.YEARþ   GOSUB DISPLAY.ERRORþ   RETURNþ ENDþ**WRITE REPORT ON FI.MVDB.SUBS, 'REPORT.RETURNED'þYEAR.SALESMAN.TOTALS=''þMAX.ROWS=DCOUNT(REPORT,CHAR(254))þSALESMEN=''þSALESMEN.CNTR=0þYEAR.TOTALS=''þFOR ROW.NO = 1 TO MAX.ROWSþ   ROW=REPORT<ROW.NO>þ   NUM.PIPES=COUNT(ROW,'|')þ   IF INDEX(ROW,'|',1) THENþ      IF COUNT(ROW,'|') < 2 THEN YEAR='' ELSE YEAR=TRIM(FIELD(ROW,'|',2))þ      SALESMAN=TRIM(FIELD(ROW,'|',1))þIF YEAR = '' AND SALESMAN <> '' THEN; *      IF SALESMAN <> '' THENþ         IF SUM(YEAR.TOTALS) THENþ            LOCATE SALESMAN IN SALESMEN SETTING SALESMAN.POS ELSEþ               SALESMEN.CNTR+=1þ               SALESMEN<SALESMEN.CNTR>=SALESMANþ               SALESMAN.POS=SALESMEN.CNTRþ             ENDþ            YEAR.SALESMAN.TOTALS<SALESMAN.POS>=YEAR.TOTALSþ          ENDþ         YEAR.TOTALS=''þ       ENDþ      IF YEAR <> '' THENþ         LOCATE YEAR IN YEARS SETTING YEAR.POS ELSE YEAR.POS=0þ         IF YEAR.POS THENþ            AMOUNT=TRIM(FIELD(ROW,'|',3))þ            IF NUM(AMOUNT) THENþ               AMOUNT=ICONV(AMOUNT,'MD2')þ               YEAR.TOTALS<1,YEAR.POS>+=AMOUNTþ             ENDþ          ENDþ       ENDþ    ENDþ NEXT ROW.NOþ*þFOR I = 1 TO 5þ   W$BAR.LABELS<I> = YEARS<I>þ*   W$BAR.LABEL.OPTS<I> = "showValues='0'"þ NEXT Iþ*þW$BAR.CAPTION = "Year to Year Sales by Salesman"þW$BAR.XMEMO = "Salesman"þW$BAR.YMEMO = "Sales"þW$CHART.HEIGHT = 200 + (70 * SALESMEN.CNTR)þ*þFOR SALESMAN.NO = 1 TO SALESMEN.CNTRþ   FOR YEAR.NO = 1 TO 5þ      SALESMAN.YEAR.AMT=YEAR.SALESMAN.TOTALS<SALESMAN.NO,YEAR.NO>+0þ      IF SALESMAN.YEAR.AMT < 0 THEN SALESMAN.YEAR.AMT=0þ      W$BAR.VALUES<YEAR.NO,SALESMAN.NO>=OCONV(SALESMAN.YEAR.AMT,'MD2')þ    NEXT YEAR.NOþ   W$BAR.XLABELS<1,SALESMAN.NO>=SALESMEN<SALESMAN.NO>þ NEXT SALESMAN.NOþRETURNþ*þYEAR.TO.YEAR.GP.BY.SALESMAN:þ*þGOSUB VERIFY.CURRENT.DATAþW$TYPE='FCMSBAR2D'þTHIS.YEAR=OCONV(DATE(),'D4-')[7,4]þFIRST.YEAR=THIS.YEAR-4þYEARS=''þFOR YEAR.NO = FIRST.YEAR TO THIS.YEARþ   YEARS<-1>=YEAR.NOþ NEXT YEAR.NOþ*þSTACKED.1='SELECT DASHBOARD.CLOSING.STATS WITH YYYY GE "':FIRST.YEAR:'"'þSTACKED.2='SORT DASHBOARD.CLOSING.STATS BY SALESMAN BY YYYY BREAK-ON SALESMAN PIPE BREAK-ON YYYY PIPE TOTAL GROSS.PROFIT ID-SUPP DET-SUPP HDR-SUPP COL-HDR-SUPP NOPAGE'þCALL @EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,SYSTEM.11,REPORT)þIF NOT(SYSTEM.11) THENþ   ERROR.MSG='NO SALES CLOSED SINCE ':FIRST.YEARþ   GOSUB DISPLAY.ERRORþ   RETURNþ ENDþWRITE STACKED.1:@AM:STACKED.2 ON FI.MVDB.SUBS, 'YEAR.TO.YEAR.CMND'þWRITE REPORT ON FI.MVDB.SUBS, 'REPORT.RETURNED'þYEAR.SALESMAN.TOTALS=''þMAX.ROWS=DCOUNT(REPORT,CHAR(254))þSALESMEN=''þSALESMEN.CNTR=0þYEAR.TOTALS=''þFOR ROW.NO = 1 TO MAX.ROWSþ   ROW=REPORT<ROW.NO>þ   IF INDEX(ROW,'|',1) THENþ      IF COUNT(ROW,'|') < 2 THEN YEAR='' ELSE YEAR=TRIM(FIELD(ROW,'|',2))þ      SALESMAN=TRIM(FIELD(ROW,'|',1))þIF YEAR = '' AND SALESMAN <> '' THEN; *      IF SALESMAN <> '' THENþ         IF SUM(YEAR.TOTALS) THENþ            LOCATE SALESMAN IN SALESMEN SETTING SALESMAN.POS ELSEþ               SALESMEN.CNTR+=1þ               SALESMEN<SALESMEN.CNTR>=SALESMANþ               SALESMAN.POS=SALESMEN.CNTRþ             ENDþ            YEAR.SALESMAN.TOTALS<SALESMAN.POS>=YEAR.TOTALSþ          ENDþ         YEAR.TOTALS=''þ       ENDþ      IF YEAR <> '' THENþ         LOCATE YEAR IN YEARS SETTING YEAR.POS ELSE YEAR.POS=0þ         IF YEAR.POS THENþ            GROSS.PROFIT=TRIM(FIELD(ROW,'|',3))þ            IF NUM(GROSS.PROFIT) THENþ               GROSS.PROFIT=ICONV(GROSS.PROFIT,'MD2')þ               YEAR.TOTALS<1,YEAR.POS>+=GROSS.PROFITþ             ENDþ          ENDþ       ENDþ    ENDþWRITE SALESMEN ON FI.MVDB.SUBS, 'SALESMEN'þWRITE YEAR.SALESMAN.TOTALS ON FI.MVDB.SUBS, 'YEAR.SALESMAN.TOTALS'þWRITE YEAR.TOTALS ON FI.MVDB.SUBS, 'YEAR.TOTALS'þ NEXT ROW.NOþ*þFOR I = 1 TO 5þ   W$BAR.LABELS<I> = YEARS<I>þ*   W$BAR.LABEL.OPTS<I> = "showValues='0'"þ NEXT Iþ*þW$BAR.CAPTION = "Year to Year Gross Profit by Salesman"þW$BAR.XMEMO = "Salesman"þW$BAR.YMEMO = "Gross Profit"þW$CHART.HEIGHT = 200 + (70 * SALESMEN.CNTR)þ*þFOR SALESMAN.NO = 1 TO SALESMEN.CNTRþ   FOR YEAR.NO = 1 TO 5þ      SALESMAN.YEAR.AMT=YEAR.SALESMAN.TOTALS<SALESMAN.NO,YEAR.NO>+0þ      IF SALESMAN.YEAR.AMT < 0 THEN SALESMAN.YEAR.AMT=0þ      W$BAR.VALUES<YEAR.NO,SALESMAN.NO>=OCONV(SALESMAN.YEAR.AMT,'MD2')þ    NEXT YEAR.NOþ   W$BAR.XLABELS<1,SALESMAN.NO>=SALESMEN<SALESMAN.NO>þ NEXT SALESMAN.NOþRETURNþ*þ*þMTD.SALES.BY.BRANCH:þ*þ*OTODAY=OCONV(DATE(),'D4-')þOMO=OTODAY[1,2]þODAY=OTODAY[4,2]+0þOYEAR=OTODAY[7,4]þIF ODAY = 1 THENþ   OMO=OMO-1þ   IF NOT(OMO) THENþ      OMO=12þ      OYEAR=OYEAR-1þ    ENDþ ENDþDATE.SELECT.STRING=''þISTART=ICONV(OMO:'-1-':OYEAR,'D')þIEND=DATE()þNUM.COLS=IEND-ISTART+1þFOR IDATE = ISTART TO IENDþ   DATE.SELECT.STRING:=' "':OCONV(IDATE,'D2-'):'"'þ NEXT IDATEþ**WRITE DATE.SELECT.STRING ON FI.MVDB.SUBS, 'DATE.SELECT.STRING'þSTACKED.1='SELECT ':SALES.FILE.PATH:' WITH ':SALE.DATE.DICT:' = ':DATE.SELECT.STRINGþSTACKED.2='SORT ':SALES.FILE.PATH:' BY ':BRANCH.DICT:' BREAK-ON ':BRANCH.DICT:' PIPE TOTAL ':SALE.AMOUNT.DICT:' PIPE TOTAL ':COST.OF.SALE.AMOUNT.DICT:' ID-SUPP DET-SUPP HDR-SUPP COL-HDR-SUPP NOPAGE'þCALL @EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,SYSTEM.11,REPORT)þIF NOT(SYSTEM.11) THENþ   ERROR.MSG='NO SALES CLOSED SINCE BEGINNING OF MONTH'þ   GOSUB DISPLAY.ERRORþ   RETURNþ ENDþW$BAR.XMEMO = "Branch"þBRANCHES=''þBRANCH.CNTR=0þLAST.BRANCH=''þAMOUNTS=''þGROSS.PROFITS=''þMAX.ROWS=DCOUNT(REPORT,CHAR(254))þFOR ROW.NO = 1 TO MAX.ROWSþ   ROW=REPORT<ROW.NO>þ   IF INDEX(ROW,'|',1) THENþ      BRANCH=TRIM(FIELD(ROW,'|',1))þ      AMOUNT=ICONV(TRIM(FIELD(ROW,'|',2)),'MD2')þ      COST.OF.SALE=ICONV(TRIM(FIELD(ROW,'|',3)),'MD2')þ      IF NUM(AMOUNT) AND NUM(COST.OF.SALE) THENþ         IF AMOUNT > 0 THENþ            IF BRANCH <> LAST.BRANCH THENþ               LAST.BRANCH=BRANCHþ               BRANCH.CNTR+=1þ               BRANCHES<1,BRANCH.CNTR>=BRANCHþ               AMOUNTS<1,BRANCH.CNTR>=0þ               GROSS.PROFITS<1,BRANCH.CNTR>=0þ             ENDþ            GROSS.PROFIT=AMOUNT-COST.OF.SALEþ            AMOUNTS<1,BRANCH.CNTR>+=AMOUNTþ            GROSS.PROFITS<1,BRANCH.CNTR>+=GROSS.PROFITþ          ENDþ       ENDþ    ENDþ NEXT ROW.NOþW$BAR.YMEMO='Total Sales and Gross Profit'þW$BAR.CAPTION = "Total Month to Date Sales of ":OCONV(SUM(AMOUNTS),'MD2,$'):" and Gross Profit of ":OCONV(SUM(GROSS.PROFITS),'MD2,$'):" by Branch"þNUM.AMOUNTS=DCOUNT(AMOUNTS,CHAR(253))þIF BRANCH.CNTR > 10 THENþ   W$TYPE='FCMSBAR2D'þ   W$CHART.HEIGHT = 200 + (25 * BRANCH.CNTR)þ END ELSEþ   W$TYPE='FCMSCOLUMN2D'þ ENDþW$BAR.LABELS<1>='Total Sales'þW$BAR.LABELS<2>='Gross Profit'þVALUE.CNTR=0þFOR AMT.CNTR = 1 TO NUM.AMOUNTSþ   AMOUNT=AMOUNTS<1,AMT.CNTR>þ   IF AMOUNT > 0 THENþ      GROSS.PROFIT=GROSS.PROFITS<1,AMT.CNTR>þ      VALUE.CNTR+=1þ      BRANCH=BRANCHES<1,AMT.CNTR>þ      W$BAR.XLABELS<1,VALUE.CNTR>=BRANCHþ      W$BAR.VALUES<1,VALUE.CNTR>=OCONV(AMOUNT,'MD2')þ      W$BAR.VALUES<2,VALUE.CNTR>=OCONV(GROSS.PROFIT,'MD2')þ    ENDþ NEXT AMT.CNTRþ**WRITE BRANCHES:CHAR(254):AMOUNTS ON FI.MVDB.SUBS, 'MTD.SALES.TEST'þRETURNþ*þYTD.SALES.BY.BRANCH:þ*þGOSUB VERIFY.CURRENT.DATAþ*OTODAY=OCONV(DATE(),'D4-')þYTD.MO=OTODAY[1,2]+0þOYEAR=OTODAY[7,4]þSTACKED.1= 'SELECT DASHBOARD.CLOSING.STATS WITH YYYY = "':OYEAR:'"'þSTACKED.2='SORT DASHBOARD.CLOSING.STATS BY BRANCH BREAK-ON BRANCH PIPE TOTAL AMOUNT PIPE TOTAL GROSS.PROFIT ID-SUPP DET-SUPP HDR-SUPP COL-HDR-SUPP NOPAGE'þCALL @EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,SYSTEM.11,REPORT)þIF NOT(SYSTEM.11) THENþ   ERROR.MSG='NO SALES CLOSED SINCE BEGINNING OF YEAR'þ   GOSUB DISPLAY.ERRORþ   RETURNþ ENDþW$BAR.XMEMO = "Branch"þW$BAR.LABELS<1>='Total Sales'þW$BAR.LABELS<2>='Gross Profit'þ**WRITE REPORT ON FI.MVDB.SUBS, 'REPORT.RETURNED'þBRANCHES=''þBRANCH.CNTR=0þLAST.BRANCH=''þAMOUNTS=''þGROSS.PROFITS=''þMAX.ROWS=DCOUNT(REPORT,CHAR(254))þFOR ROW.NO = 1 TO MAX.ROWSþ   ROW=REPORT<ROW.NO>þ   IF INDEX(ROW,'|',1) THENþ      BRANCH=TRIM(FIELD(ROW,'|',1))þ      AMOUNT=TRIM(FIELD(ROW,'|',2))þ      GROSS.PROFIT=TRIM(FIELD(ROW,'|',3))þ      IF NUM(AMOUNT) AND NUM(GROSS.PROFIT) THENþ         AMOUNT=ICONV(AMOUNT,'MD2')þ         IF AMOUNT > 0 THENþ            GROSS.PROFIT=ICONV(GROSS.PROFIT,'MD2')þ            IF BRANCH <> LAST.BRANCH THENþ               LAST.BRANCH=BRANCHþ               BRANCH.CNTR+=1þ               BRANCHES<1,BRANCH.CNTR>=BRANCHþ               AMOUNTS<1,BRANCH.CNTR>=0þ               GROSS.PROFITS<1,BRANCH.CNTR>=0þ             ENDþ            AMOUNTS<1,BRANCH.CNTR>+=AMOUNTþ            GROSS.PROFITS<1,BRANCH.CNTR>+=GROSS.PROFITþ          ENDþ       ENDþ    ENDþ NEXT ROW.NOþW$BAR.YMEMO='Total Sales and Gross Profit'þW$BAR.CAPTION = "Total Year to Date Sales of ":OCONV(SUM(AMOUNTS),'MD2,$'):" and Gross Profit of ":OCONV(SUM(GROSS.PROFITS),'MD2,$'):" by Branch"þIF BRANCH.CNTR > 10 THENþ   W$TYPE='FCMSBAR2D'þ   W$CHART.HEIGHT = 200 + (25 * BRANCH.CNTR)þ END ELSEþ   W$TYPE='FCMSCOLUMN2D'þ ENDþVALUE.CNTR=0þFOR AMT.CNTR = 1 TO BRANCH.CNTRþ   AMOUNT=AMOUNTS<1,AMT.CNTR>þ   IF AMOUNT THENþ      VALUE.CNTR+=1þ      BRANCH=BRANCHES<1,AMT.CNTR>þ      W$BAR.XLABELS<1,VALUE.CNTR>=BRANCHþ      W$BAR.VALUES<1,VALUE.CNTR>=OCONV(AMOUNT,'MD2')þ      W$BAR.VALUES<2,VALUE.CNTR>=OCONV(GROSS.PROFITS<1,AMT.CNTR>,'MD2')þ    ENDþ NEXT AMT.CNTRþ**WRITE DATES:CHAR(254):AMOUNTS ON FI.MVDB.SUBS, 'YTD.SALES.TEST'þRETURNþ*þYEAR.TO.YEAR.BY.BRANCH:þ*þGOSUB VERIFY.CURRENT.DATAþW$TYPE='FCMSBAR2D'þTHIS.YEAR=OCONV(DATE(),'D4-')[7,4]þFIRST.YEAR=THIS.YEAR-4þYEARS=''þFOR YEAR.NO = FIRST.YEAR TO THIS.YEARþ   YEARS<-1>=YEAR.NOþ NEXT YEAR.NOþ*þSTACKED.1='SELECT DASHBOARD.CLOSING.STATS WITH YYYY GE "':FIRST.YEAR:'"'þSTACKED.2='SORT DASHBOARD.CLOSING.STATS BY BRANCH BY YYYY BREAK-ON BRANCH PIPE BREAK-ON YYYY PIPE TOTAL AMOUNT PIPE TOTAL GROSS.PROFIT ID-SUPP DET-SUPP HDR-SUPP COL-HDR-SUPP NOPAGE'þCALL @EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,SYSTEM.11,REPORT)þIF NOT(SYSTEM.11) THENþ   ERROR.MSG='NO SALES CLOSED SINCE ':FIRST.YEARþ   GOSUB DISPLAY.ERRORþ   RETURNþ ENDþ**WRITE REPORT ON FI.MVDB.SUBS, 'REPORT.RETURNED'þYEAR.BRANCH.TOTALS=''þMAX.ROWS=DCOUNT(REPORT,CHAR(254))þBRANCHES=''þBRANCHES.CNTR=0þYEAR.TOTALS=''þFOR ROW.NO = 1 TO MAX.ROWSþ   ROW=REPORT<ROW.NO>þ   IF INDEX(ROW,'|',1) THENþ      IF COUNT(ROW,'|') < 2 THEN YEAR='' ELSE YEAR=TRIM(FIELD(ROW,'|',2))þ      BRANCH=TRIM(FIELD(ROW,'|',1))þIF YEAR = '' AND BRANCH <> '' THEN; *      IF BRANCH <> '' THENþ         IF SUM(YEAR.TOTALS) THENþ            LOCATE BRANCH IN BRANCHES SETTING BRANCH.POS ELSEþ               BRANCHES.CNTR+=1þ               BRANCHES<BRANCHES.CNTR>=BRANCHþ               BRANCH.POS=BRANCHES.CNTRþ             ENDþ            YEAR.BRANCH.TOTALS<BRANCH.POS>=YEAR.TOTALSþ          ENDþ         YEAR.TOTALS=''þ       ENDþ      IF YEAR <> '' THENþ         LOCATE YEAR IN YEARS SETTING YEAR.POS ELSE YEAR.POS=0þ         IF YEAR.POS THENþ            AMOUNT=TRIM(FIELD(ROW,'|',3))þ            GROSS.PROFIT=TRIM(FIELD(ROW,'|',4))þ            IF NUM(AMOUNT) AND NUM(GROSS.PROFIT) THENþ               AMOUNT=ICONV(AMOUNT,'MD2')þ               GROSS.PROFIT=ICONV(GROSS.PROFIT,'MD2')þ               YEAR.TOTALS<1,YEAR.POS>+=AMOUNTþ             ENDþ          ENDþ       ENDþ    ENDþ NEXT ROW.NOþ*þFOR I = 1 TO 5þ   W$BAR.LABELS<I> = YEARS<I>þ*   W$BAR.LABEL.OPTS<I> = "showValues='0'"þ NEXT Iþ*þW$BAR.CAPTION = "Year to Year Sales by Branch"þW$BAR.XMEMO = "Branch"þW$BAR.YMEMO = "Total Sales and Gross Profit"þW$CHART.HEIGHT = 200 + (50 * BRANCHES.CNTR)þ*þFOR BRANCH.NO = 1 TO BRANCHES.CNTRþ   FOR YEAR.NO = 1 TO 5þ      BRANCH.YEAR.AMT=YEAR.BRANCH.TOTALS<BRANCH.NO,YEAR.NO>+0þ      IF BRANCH.YEAR.AMT < 0 THEN BRANCH.YEAR.AMT=0þ      W$BAR.VALUES<YEAR.NO,BRANCH.NO>=OCONV(BRANCH.YEAR.AMT,'MD2')þ    NEXT YEAR.NOþ   W$BAR.XLABELS<1,BRANCH.NO>=BRANCHES<BRANCH.NO>þ NEXT BRANCH.NOþRETURNþ*þYEAR.TO.YEAR.GP.BY.BRANCH:þ*þGOSUB VERIFY.CURRENT.DATAþW$TYPE='FCMSBAR2D'þTHIS.YEAR=OCONV(DATE(),'D4-')[7,4]þFIRST.YEAR=THIS.YEAR-4þYEARS=''þFOR YEAR.NO = FIRST.YEAR TO THIS.YEARþ   YEARS<-1>=YEAR.NOþ NEXT YEAR.NOþ*þSTACKED.1='SELECT DASHBOARD.CLOSING.STATS WITH YYYY GE "':FIRST.YEAR:'"'þSTACKED.2='SORT DASHBOARD.CLOSING.STATS BY BRANCH BY YYYY BREAK-ON BRANCH PIPE BREAK-ON YYYY PIPE TOTAL GROSS.PROFIT ID-SUPP DET-SUPP HDR-SUPP COL-HDR-SUPP NOPAGE'þCALL @EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,SYSTEM.11,REPORT)þIF NOT(SYSTEM.11) THENþ   ERROR.MSG='NO SALES CLOSED SINCE ':FIRST.YEARþ   GOSUB DISPLAY.ERRORþ   RETURNþ ENDþYEAR.BRANCH.TOTALS=''þMAX.ROWS=DCOUNT(REPORT,CHAR(254))þBRANCHES=''þBRANCHES.CNTR=0þYEAR.TOTALS=''þFOR ROW.NO = 1 TO MAX.ROWSþ   ROW=REPORT<ROW.NO>þ   IF INDEX(ROW,'|',1) THENþ      IF COUNT(ROW,'|') < 2 THEN YEAR='' ELSE YEAR=TRIM(FIELD(ROW,'|',2))þ      BRANCH=TRIM(FIELD(ROW,'|',1))þIF YEAR = '' AND BRANCH <> '' THEN; *      IF BRANCH <> '' THENþ         IF SUM(YEAR.TOTALS) THENþ            LOCATE BRANCH IN BRANCHES SETTING BRANCH.POS ELSEþ               BRANCHES.CNTR+=1þ               BRANCHES<BRANCHES.CNTR>=BRANCHþ               BRANCH.POS=BRANCHES.CNTRþ             ENDþ            YEAR.BRANCH.TOTALS<BRANCH.POS>=YEAR.TOTALSþ          ENDþ         YEAR.TOTALS=''þ       ENDþ      IF YEAR <> '' THENþ         LOCATE YEAR IN YEARS SETTING YEAR.POS ELSE YEAR.POS=0þ         IF YEAR.POS THENþ            GROSS.PROFIT=TRIM(FIELD(ROW,'|',3))þ            IF NUM(GROSS.PROFIT) THENþ               GROSS.PROFIT=ICONV(GROSS.PROFIT,'MD2')þ               YEAR.TOTALS<1,YEAR.POS>+=GROSS.PROFITþ             ENDþ          ENDþ       ENDþ    ENDþ NEXT ROW.NOþ*þFOR I = 1 TO 5þ   W$BAR.LABELS<I> = YEARS<I>þ*   W$BAR.LABEL.OPTS<I> = "showValues='0'"þ NEXT Iþ*þW$BAR.CAPTION = "Year to Year Gross Profit by Branch"þW$BAR.XMEMO = "Branch"þW$BAR.YMEMO = "Gross Profit"þW$CHART.HEIGHT = 200 + (70 * BRANCHES.CNTR)þ*þFOR BRANCH.NO = 1 TO BRANCHES.CNTRþ   FOR YEAR.NO = 1 TO 5þ      BRANCH.YEAR.AMT=YEAR.BRANCH.TOTALS<BRANCH.NO,YEAR.NO>+0þ      IF BRANCH.YEAR.AMT < 0 THEN BRANCH.YEAR.AMT=0þ      W$BAR.VALUES<YEAR.NO,BRANCH.NO>=OCONV(BRANCH.YEAR.AMT,'MD2')þ    NEXT YEAR.NOþ   W$BAR.XLABELS<1,BRANCH.NO>=BRANCHES<BRANCH.NO>þ NEXT BRANCH.NOþRETURNþ*þMTD.SALES.BY.REGION:þ*þ*OTODAY=OCONV(DATE(),'D4-')þOMO=OTODAY[1,2]þODAY=OTODAY[4,2]+0þOYEAR=OTODAY[7,4]þIF ODAY = 1 THENþ   OMO=OMO-1þ   IF NOT(OMO) THENþ      OMO=12þ      OYEAR=OYEAR-1þ    ENDþ ENDþDATE.SELECT.STRING=''þISTART=ICONV(OMO:'-1-':OYEAR,'D')þIEND=DATE()þNUM.COLS=IEND-ISTART+1þFOR IDATE = ISTART TO IENDþ   DATE.SELECT.STRING:=' "':OCONV(IDATE,'D2-'):'"'þ NEXT IDATEþ**WRITE DATE.SELECT.STRING ON FI.MVDB.SUBS, 'DATE.SELECT.STRING'þSTACKED.1='SELECT ':SALES.FILE.PATH:' WITH ':SALE.DATE.DICT:' = ':DATE.SELECT.STRINGþSTACKED.2='SORT ':SALES.FILE.PATH:' BY ':REGION.DICT:' BREAK-ON ':REGION.DICT:' PIPE TOTAL ':SALE.AMOUNT.DICT:' PIPE TOTAL ':COST.OF.SALE.AMOUNT.DICT:' ID-SUPP DET-SUPP HDR-SUPP COL-HDR-SUPP NOPAGE'þCALL @EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,SYSTEM.11,REPORT)þIF NOT(SYSTEM.11) THENþ   ERROR.MSG='NO SALES CLOSED SINCE BEGINNING OF MONTH'þ   GOSUB DISPLAY.ERRORþ   RETURNþ ENDþW$BAR.XMEMO = "REGION"þREGIONS=''þREGION.CNTR=0þLAST.REGION=''þAMOUNTS=''þGROSS.PROFITS=''þMAX.ROWS=DCOUNT(REPORT,CHAR(254))þFOR ROW.NO = 1 TO MAX.ROWSþ   ROW=REPORT<ROW.NO>þ   IF INDEX(ROW,'|',1) THENþ      REGION=TRIM(FIELD(ROW,'|',1))þ      AMOUNT=ICONV(TRIM(FIELD(ROW,'|',2)),'MD2')þ      COST.OF.SALE=ICONV(TRIM(FIELD(ROW,'|',3)),'MD2')þ      IF NUM(AMOUNT) AND NUM(COST.OF.SALE) THENþ         IF AMOUNT > 0 THENþ            IF REGION <> LAST.REGION THENþ               LAST.REGION=REGIONþ               REGION.CNTR+=1þ               REGIONS<1,REGION.CNTR>=REGIONþ               AMOUNTS<1,REGION.CNTR>=0þ               GROSS.PROFITS<1,REGION.CNTR>=0þ             ENDþ            GROSS.PROFIT=AMOUNT-COST.OF.SALEþ            AMOUNTS<1,REGION.CNTR>+=AMOUNTþ            GROSS.PROFITS<1,REGION.CNTR>+=GROSS.PROFITþ          ENDþ       ENDþ    ENDþ NEXT ROW.NOþW$BAR.YMEMO='Total Sales and Gross Profit'þW$BAR.CAPTION = "Total Month to Date Sales of ":OCONV(SUM(AMOUNTS),'MD2,$'):" and Gross Profit of ":OCONV(SUM(GROSS.PROFITS),'MD2,$'):" by Region"þNUM.AMOUNTS=DCOUNT(AMOUNTS,CHAR(253))þIF REGION.CNTR > 10 THENþ   W$TYPE='FCMSBAR2D'þ   W$CHART.HEIGHT = 200 + (25 * REGION.CNTR)þ END ELSEþ   W$TYPE='FCMSCOLUMN2D'þ ENDþW$BAR.LABELS<1>='Total Sales'þW$BAR.LABELS<2>='Gross Profit'þVALUE.CNTR=0þFOR AMT.CNTR = 1 TO NUM.AMOUNTSþ   AMOUNT=AMOUNTS<1,AMT.CNTR>þ   IF AMOUNT > 0 THENþ      GROSS.PROFIT=GROSS.PROFITS<1,AMT.CNTR>þ      VALUE.CNTR+=1þ      REGION=REGIONS<1,AMT.CNTR>þ      W$BAR.XLABELS<1,VALUE.CNTR>=REGIONþ      W$BAR.VALUES<1,VALUE.CNTR>=OCONV(AMOUNT,'MD2')þ      W$BAR.VALUES<2,VALUE.CNTR>=OCONV(GROSS.PROFIT,'MD2')þ    ENDþ NEXT AMT.CNTRþ**WRITE REGIONS:CHAR(254):AMOUNTS ON FI.MVDB.SUBS, 'MTD.SALES.TEST'þRETURNþ*þYTD.SALES.BY.REGION:þ*þGOSUB VERIFY.CURRENT.DATAþ*OTODAY=OCONV(DATE(),'D4-')þYTD.MO=OTODAY[1,2]+0þOYEAR=OTODAY[7,4]þSTACKED.1= 'SELECT DASHBOARD.CLOSING.STATS WITH YYYY = "':OYEAR:'"'þSTACKED.2='SORT DASHBOARD.CLOSING.STATS BY REGION BREAK-ON REGION PIPE TOTAL AMOUNT PIPE TOTAL GROSS.PROFIT ID-SUPP DET-SUPP HDR-SUPP COL-HDR-SUPP NOPAGE'þCALL @EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,SYSTEM.11,REPORT)þIF NOT(SYSTEM.11) THENþ   ERROR.MSG='NO SALES CLOSED SINCE BEGINNING OF YEAR'þ   GOSUB DISPLAY.ERRORþ   RETURNþ ENDþW$BAR.XMEMO = "Region"þW$BAR.LABELS<1>='Total Sales'þW$BAR.LABELS<2>='Gross Profit'þ**WRITE REPORT ON FI.MVDB.SUBS, 'REPORT.RETURNED'þREGIONS=''þREGION.CNTR=0þLAST.REGION=''þAMOUNTS=''þGROSS.PROFITS=''þMAX.ROWS=DCOUNT(REPORT,CHAR(254))þFOR ROW.NO = 1 TO MAX.ROWSþ   ROW=REPORT<ROW.NO>þ   IF INDEX(ROW,'|',1) THENþ      REGION=TRIM(FIELD(ROW,'|',1))þ      AMOUNT=TRIM(FIELD(ROW,'|',2))þ      GROSS.PROFIT=TRIM(FIELD(ROW,'|',3))þ      IF NUM(AMOUNT) AND NUM(GROSS.PROFIT) THENþ         AMOUNT=ICONV(AMOUNT,'MD2')þ         IF AMOUNT > 0 THENþ            GROSS.PROFIT=ICONV(GROSS.PROFIT,'MD2')þ            IF REGION <> LAST.REGION THENþ               LAST.REGION=REGIONþ               REGION.CNTR+=1þ               REGIONS<1,REGION.CNTR>=REGIONþ               AMOUNTS<1,REGION.CNTR>=0þ               GROSS.PROFITS<1,REGION.CNTR>=0þ             ENDþ            AMOUNTS<1,REGION.CNTR>+=AMOUNTþ            GROSS.PROFITS<1,REGION.CNTR>+=GROSS.PROFITþ          ENDþ       ENDþ    ENDþ NEXT ROW.NOþW$BAR.YMEMO='Total Sales and Gross Profit'þW$BAR.CAPTION = "Total Year to Date Sales of ":OCONV(SUM(AMOUNTS),'MD2,$'):" and Gross Profit of ":OCONV(SUM(GROSS.PROFITS),'MD2,$'):" by Region"þIF REGION.CNTR > 10 THENþ   W$TYPE='FCMSBAR2D'þ   W$CHART.HEIGHT = 200 + (25 * REGION.CNTR)þ END ELSEþ   W$TYPE='FCMSCOLUMN2D'þ ENDþVALUE.CNTR=0þFOR AMT.CNTR = 1 TO REGION.CNTRþ   AMOUNT=AMOUNTS<1,AMT.CNTR>þ   IF AMOUNT THENþ      VALUE.CNTR+=1þ      REGION=REGIONS<1,AMT.CNTR>þ      W$BAR.XLABELS<1,VALUE.CNTR>=REGIONþ      W$BAR.VALUES<1,VALUE.CNTR>=OCONV(AMOUNT,'MD2')þ      W$BAR.VALUES<2,VALUE.CNTR>=OCONV(GROSS.PROFITS<1,AMT.CNTR>,'MD2')þ    ENDþ NEXT AMT.CNTRþ**WRITE DATES:CHAR(254):AMOUNTS ON FI.MVDB.SUBS, 'YTD.SALES.TEST'þRETURNþ*þ*þYEAR.TO.YEAR.BY.REGION:þ*þGOSUB VERIFY.CURRENT.DATAþW$TYPE='FCMSBAR2D'þTHIS.YEAR=OCONV(DATE(),'D4-')[7,4]þFIRST.YEAR=THIS.YEAR-4þYEARS=''þFOR YEAR.NO = FIRST.YEAR TO THIS.YEARþ   YEARS<-1>=YEAR.NOþ NEXT YEAR.NOþ*þSTACKED.1='SELECT DASHBOARD.CLOSING.STATS WITH YYYY GE "':FIRST.YEAR:'"'þSTACKED.2='SORT DASHBOARD.CLOSING.STATS BY REGION BY YYYY BREAK-ON REGION PIPE BREAK-ON YYYY PIPE TOTAL AMOUNT PIPE TOTAL GROSS.PROFIT ID-SUPP DET-SUPP HDR-SUPP COL-HDR-SUPP NOPAGE'þCALL @EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,SYSTEM.11,REPORT)þIF NOT(SYSTEM.11) THENþ   ERROR.MSG='NO SALES CLOSED SINCE ':FIRST.YEARþ   GOSUB DISPLAY.ERRORþ   RETURNþ ENDþYEAR.REGION.TOTALS=''þMAX.ROWS=DCOUNT(REPORT,CHAR(254))þREGIONS=''þREGIONS.CNTR=0þYEAR.TOTALS=''þFOR ROW.NO = 1 TO MAX.ROWSþ   ROW=REPORT<ROW.NO>þ   IF INDEX(ROW,'|',1) THENþ      IF COUNT(ROW,'|') < 2 THEN YEAR='' ELSE YEAR=TRIM(FIELD(ROW,'|',2))þ      REGION=TRIM(FIELD(ROW,'|',1))þIF YEAR = '' AND REGION <> '' THEN; *      IF REGION <> '' THENþ         IF SUM(YEAR.TOTALS) THENþ            LOCATE REGION IN REGIONS SETTING REGION.POS ELSEþ               REGIONS.CNTR+=1þ               REGIONS<REGIONS.CNTR>=REGIONþ               REGION.POS=REGIONS.CNTRþ             ENDþ            YEAR.REGION.TOTALS<REGION.POS>=YEAR.TOTALSþ          ENDþ         YEAR.TOTALS=''þ       ENDþ      IF YEAR <> '' THENþ         LOCATE YEAR IN YEARS SETTING YEAR.POS ELSE YEAR.POS=0þ         IF YEAR.POS THENþ            AMOUNT=TRIM(FIELD(ROW,'|',3))þ            IF NUM(AMOUNT) THENþ               AMOUNT=ICONV(AMOUNT,'MD2')þ               YEAR.TOTALS<1,YEAR.POS>+=AMOUNTþ             ENDþ          ENDþ       ENDþ    ENDþ NEXT ROW.NOþ*þFOR I = 1 TO 5þ   W$BAR.LABELS<I> = YEARS<I>þ*   W$BAR.LABEL.OPTS<I> = "showValues='0'"þ NEXT Iþ*þW$BAR.CAPTION = "Year to Year Sales by Region"þW$BAR.XMEMO = "Region"þW$BAR.YMEMO = "Sales"þW$CHART.HEIGHT = 200 + (50 * REGIONS.CNTR)þ*þFOR REGION.NO = 1 TO REGIONS.CNTRþ   FOR YEAR.NO = 1 TO 5þ      REGION.YEAR.AMT=YEAR.REGION.TOTALS<REGION.NO,YEAR.NO>+0þ      IF REGION.YEAR.AMT < 0 THEN REGION.YEAR.AMT=0þ      W$BAR.VALUES<YEAR.NO,REGION.NO>=OCONV(REGION.YEAR.AMT,'MD2')þ    NEXT YEAR.NOþ   W$BAR.XLABELS<1,REGION.NO>=REGIONS<REGION.NO>þ NEXT REGION.NOþRETURNþ*þYEAR.TO.YEAR.GP.BY.REGION:þ*þGOSUB VERIFY.CURRENT.DATAþW$TYPE='FCMSBAR2D'þTHIS.YEAR=OCONV(DATE(),'D4-')[7,4]þFIRST.YEAR=THIS.YEAR-4þYEARS=''þFOR YEAR.NO = FIRST.YEAR TO THIS.YEARþ   YEARS<-1>=YEAR.NOþ NEXT YEAR.NOþ*þSTACKED.1='SELECT DASHBOARD.CLOSING.STATS WITH YYYY GE "':FIRST.YEAR:'"'þSTACKED.2='SORT DASHBOARD.CLOSING.STATS BY REGION BY YYYY BREAK-ON REGION PIPE BREAK-ON YYYY PIPE TOTAL GROSS.PROFIT ID-SUPP DET-SUPP HDR-SUPP COL-HDR-SUPP NOPAGE'þCALL @EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,SYSTEM.11,REPORT)þIF NOT(SYSTEM.11) THENþ   ERROR.MSG='NO SALES CLOSED SINCE ':FIRST.YEARþ   GOSUB DISPLAY.ERRORþ   RETURNþ ENDþ**WRITE REPORT ON FI.MVDB.SUBS, 'REPORT.RETURNED'þYEAR.REGION.TOTALS=''þMAX.ROWS=DCOUNT(REPORT,CHAR(254))þREGIONS=''þREGIONS.CNTR=0þYEAR.TOTALS=''þFOR ROW.NO = 1 TO MAX.ROWSþ   ROW=REPORT<ROW.NO>þ   IF INDEX(ROW,'|',1) THENþ      IF COUNT(ROW,'|') < 2 THEN YEAR='' ELSE YEAR=TRIM(FIELD(ROW,'|',2))þ      REGION=TRIM(FIELD(ROW,'|',1))þIF YEAR = '' AND REGION <> '' THEN; *      IF REGION <> '' THENþ         IF SUM(YEAR.TOTALS) THENþ            LOCATE REGION IN REGIONS SETTING REGION.POS ELSEþ               REGIONS.CNTR+=1þ               REGIONS<REGIONS.CNTR>=REGIONþ               REGION.POS=REGIONS.CNTRþ             ENDþ            YEAR.REGION.TOTALS<REGION.POS>=YEAR.TOTALSþ          ENDþ         YEAR.TOTALS=''þ       ENDþ      IF YEAR <> '' THENþ         LOCATE YEAR IN YEARS SETTING YEAR.POS ELSE YEAR.POS=0þ         IF YEAR.POS THENþ            GROSS.PROFIT=TRIM(FIELD(ROW,'|',3))þ            IF NUM(GROSS.PROFIT) THENþ               GROSS.PROFIT=ICONV(GROSS.PROFIT,'MD2')þ               YEAR.TOTALS<1,YEAR.POS>+=GROSS.PROFITþ             ENDþ          ENDþ       ENDþ    ENDþ NEXT ROW.NOþ*þFOR I = 1 TO 5þ   W$BAR.LABELS<I> = YEARS<I>þ*   W$BAR.LABEL.OPTS<I> = "showValues='0'"þ NEXT Iþ*þW$BAR.CAPTION = "Year to Year Gross Profit by Region"þW$BAR.XMEMO = "Region"þW$BAR.YMEMO = "Gross Profit"þW$CHART.HEIGHT = 200 + (70 * REGIONS.CNTR)þ*þFOR REGION.NO = 1 TO REGIONS.CNTRþ   FOR YEAR.NO = 1 TO 5þ      REGION.YEAR.AMT=YEAR.REGION.TOTALS<REGION.NO,YEAR.NO>+0þ      IF REGION.YEAR.AMT < 0 THEN REGION.YEAR.AMT=0þ      W$BAR.VALUES<YEAR.NO,REGION.NO>=OCONV(REGION.YEAR.AMT,'MD2')þ    NEXT YEAR.NOþ   W$BAR.XLABELS<1,REGION.NO>=REGIONS<REGION.NO>þ NEXT REGION.NOþRETURNþ*þVERIFY.CURRENT.DATA:þ*þREAD LAST.UPDATE FROM FI.DICT.DASHBOARD.CLOSING.STATS, '*LAST.UPDATE' ELSE LAST.UPDATE=0þREAD LAST.UPDATED FROM FI.DICT.DASHBOARD.CLOSING.STATS, '*LAST.UPDATED' ELSE LAST.UPDATED=0þCUR.DATE=DATE(); CUR.TIME=TIME()þCUR.TIME=FIELD(CUR.TIME,'.',1)þLEN.CUR.TIME=LEN(CUR.TIME)þCUR.TIME=STR('0',5-LEN.CUR.TIME):CUR.TIMEþCUR.DATE.TIME=CUR.DATE:CUR.TIMEþDELTA.DATE.TIME=CUR.DATE.TIME-LAST.UPDATEDþIF DELTA.DATE.TIME > 900 THENþ   * REFRESH EVERY 15 MINUTESþ   LAST.UPDATED='UPDATING'þ   BEGIN CASEþ      CASE PLATFORM = 'D3' OR PLATFORM = 'JB'þ         EXECUTE "Z REFRESH.DASHBOARD.CLOSING.STATS" CAPTURING DUMMYþ      CASE 1þ         EXECUTE "PHANTOM REFRESH.DASHBOARD.CLOSING.STATS" CAPTURING DUMMYþ   END CASEþ ENDþIF NOT(NUM(LAST.UPDATE)) THENþ   IF INDEX(LAST.UPDATE,'UPDATING',1) THENþ      LAST.UPDATE='Figures are currently updating.'þ      LAST.UPDATE<-1>='Try again in a couple of minutes.'þ    ENDþ   MAX.LINES=DCOUNT(LAST.UPDATE,CHAR(254))þ   ERROR.MSG=''þ   FOR I = 1 TO MAX.LINESþ      THIS.MSG=LAST.UPDATE<I>þ      IF ERROR.MSG <> '' THEN ERROR.MSG:='<br>'þ      ERROR.MSG:=THIS.MSGþ    NEXT Iþ   RETURN TO DISPLAY.ERRORþ ENDþRETURNþ*þGET.CURRENT.REPORT:þ*þBEGIN CASEþ   CASE GET.REPORT.TYPE = 'SALES'þ       FI.DICT=FI.DICT.DASHBOARD.CLOSING.STATSþ       LAST.DATE.INDICATOR='*LAST.UPDATE.SALES'þ       REPORT.STATS.ID='*CURRENT.SALES.STATS'þEND CASEþ*þ** IF MORE THAN 10 MINUTES SINCE LAST UPDATE THEN REFRESH DATAþ*þRECALC.REQUESTED=0þDATA.CURRENT=0þLOOPþ   READ LAST.UPDATE FROM FI.DICT, LAST.DATE.INDICATOR ELSE LAST.UPDATE=''þ   IF NUM(LAST.UPDATE) THENþ      CUR.TIME=OCONV(TIME(),'MT')þ      CONVERT ':' TO '' IN CUR.TIMEþ      CUR.DATE.TIME=DATE():CUR.TIMEþ      LAST.UPDATE.DELTA=CUR.DATE.TIME - LAST.UPDATEþ      IF LAST.UPDATE.DELTA < 10 THEN DATA.CURRENT=1þ    ENDþUNTIL DATA.CURRENT DOþ   IF NUM(LAST.UPDATE) THENþ      IF NOT(RECALC.REQUESTED) THENþ         BEGIN CASEþ            CASE PLATFORM = 'D3' OR PLATFORM = 'JB'þ               EXECUTE "Z REFRESH.DASHBOARD.MTD.STATS ":REPORT.TYPE CAPTURING DUMMYþ            CASE 1þ               EXECUTE "PHANTOM REFRESH.DASHBOARD.MTD.STATS ":REPORT.TYPE CAPTURING DUMMYþ         END CASEþ         RECALC.REQUESTED=1þ       ENDþ    ENDþ   SLEEP 2þREPEATþREAD REPORT.STATS.REC FROM FI.DICT, REPORT.STATS.ID ELSE REPORT.STATS.REC=''þWRITE REPORT.STATS.REC ON FI.MVDB.SUBS, 'REPORT.STATS.REC'þRETURNþEND005165REFRESH.DASHBOARD.MTD.STATSþ0c2*þ* PHANTOM PROGRAM TO CALCULATE MTD SALES, AR, AP, AND NET INCOME NUMBERSþ*þOPEN.ERRORS=''þOPEN '','MVDB.CONTROL' TO FI.MVDB.CONTROL ELSE OPEN.ERRORS:=' MVDB.CONTROL'þREAD PLATFORM FROM FI.MVDB.CONTROL, 'PLATFORM' ELSE PLATFORM='D3'þDIM SETUP.PARAMS(25)þCMND=@SENTENCEþCMND=TRIM(CMND)þOPTION.PARAM=FIELD(CMND,' ',DCOUNT(CMND,' '))þIF OPTION.PARAM = 'SALES' OR OPTION.PARAM = 'ALL' THENþ   OPEN 'DICT','DASHBOARD.CLOSING.STATS' TO FI.DICT.CLOSING.STATS ELSE OPEN.ERRORS:=' DICT DASHBOARD.CLOSING.STATS'þ ENDþIF OPTION.PARAM <> 'SALES' THENþ   OPEN 'DICT','DASHBOARD.BALANCES' TO FI.DICT.BALANCES ELSE OPEN.ERRORS:=' DICT DASHBOARD.BALANCES'þ ENDþEXECUTE "TERM 132,20000"þ*þBEGIN CASEþ   CASE PLATFORM = 'UD'þ      EXECUTE.STACKED.CMNDS='UD.EXECUTE.STACKED.CMNDS'þ      MD.FILE.NAME='VOC'þ   CASE PLATFORM = 'UV'þ      EXECUTE.STACKED.CMNDS='UV.EXECUTE.STACKED.CMNDS'þ      MD.FILE.NAME='VOC'þ   CASE PLATFORM = 'QM'þ      EXECUTE.STACKED.CMNDS='EXECUTE.STACKED.CMNDS'þ      MD.FILE.NAME='VOC'þ   CASE 1þ      * D3 AND JBASE ARE THE SAMEþ      EXECUTE.STACKED.CMNDS='EXECUTE.STACKED.CMNDS'þ      MD.FILE.NAME='MD'þEND CASEþOPEN '',MD.FILE.NAME TO FI.MD ELSEþ   OPEN.ERRORS:=' ':MD.FILE.NAMEþ ENDþIF OPEN.ERRORS <> '' THEN STOPþ*þDAYS.AGO.60=DATE()-60þDAYS.AGO.1000=DATE()-1000þALL.GOOD=1þBEGIN CASEþ   CASE OPTION.PARAM = 'SALES'; GOSUB CALC.SALESþ   CASE OPTION.PARAM = 'AR'; GOSUB CALC.ARþ   CASE OPTION.PARAM = 'AP'; GOSUB CALC.APþ   CASE OPTION.PARAM = 'NET.INCOME'; GOSUB CALC.NET.INCOMEþ   CASE OPTION.PARAM = 'ALL'þ      GOSUB CALC.SALESþ      GOSUB CALC.ARþ      GOSUB CALC.APþ      GOSUB CALC.NET.INCOMEþ      IF ALL.GOOD THENþ         DICT.FILE=FI.DICT.BALANCESþ         TIME.STAMP.TYPE='ALL'þ         GOSUB UPDATE.TIME.STAMPþ       ENDþ   CASE 1; NULLþEND CASEþSTOPþ*þCALC.SALES:þ*þDICT.FILE=FI.DICT.CLOSING.STATSþMATREAD SETUP.PARAMS FROM FI.MVDB.CONTROL, 'PORTAL.SALES.REPORT.SETUP' ELSEþ   MAT SETUP.PARAMS=''þ ENDþEQUATE ACCOUNT TO SETUP.PARAMS(1)þEQUATE REPORT.FILE TO SETUP.PARAMS(2)þEQUATE SALE.DATE.DICT TO SETUP.PARAMS(3)þEQUATE SALE.MONTH.DICT TO SETUP.PARAMS(4)þEQUATE SALE.YEAR.DICT TO SETUP.PARAMS(5)þEQUATE SALE.AMOUNT.DICT TO SETUP.PARAMS(6)þEQUATE COST.OF.SALE.AMOUNT.DICT TO SETUP.PARAMS(7)þEQUATE SALESMAN.DICT TO SETUP.PARAMS(8)þEQUATE BRANCH.DICT TO SETUP.PARAMS(9)þEQUATE REGION.DICT TO SETUP.PARAMS(10)þEQUATE SALE.DATE.AMC TO SETUP.PARAMS(11)þEQUATE SALE.AMOUNT.AMC TO SETUP.PARAMS(12)þEQUATE SALE.AMOUNT.CONV TO SETUP.PARAMS(13)þEQUATE SALE.AMOUNT.COOR TO SETUP.PARAMS(14)þEQUATE COST.OF.SALE.AMOUNT.AMC TO SETUP.PARAMS(15)þEQUATE COST.OF.SALE.AMOUNT.CONV TO SETUP.PARAMS(16)þEQUATE COST.OF.SALE.AMOUNT.COOR TO SETUP.PARAMS(17)þEQUATE SALESMAN.AMC TO SETUP.PARAMS(18)þEQUATE SALESMAN.TFILE TO SETUP.PARAMS(19)þEQUATE BRANCH.AMC TO SETUP.PARAMS(20)þEQUATE BRANCH.TFILE TO SETUP.PARAMS(21)þEQUATE REGION.AMC TO SETUP.PARAMS(22)þEQUATE REGION.TFILE TO SETUP.PARAMS(23)þOTODAY=OCONV(DATE(),'D4-')þOMO=OTODAY[1,2]þODAY=OTODAY[4,2]+0þOYEAR=OTODAY[7,4]þIF ODAY = 1 THENþ   OMO=OMO-1þ   IF NOT(OMO) THENþ      OMO=12þ      OYEAR=OYEAR-1þ    ENDþ ENDþDATE.SELECT.STRING=''þISTART=ICONV(OMO:'-1-':OYEAR,'D')þIEND=DATE()þNUM.COLS=IEND-ISTART+1þFOR IDATE = ISTART TO IENDþ   DATE.SELECT.STRING:=' "':OCONV(IDATE,'D2-'):'"'þ NEXT IDATEþ**WRITE DATE.SELECT.STRING ON FI.MVDB.SUBS, 'DATE.SELECT.STRING'þSALES.FILE.PATH='SALES.FILE.PATH'þ**IF PLATFORM = 'UD' THENþ**   QFILE.NAME=SALES.FILE.PATHþ**   CALL CREATE.UD.QPOINTER(ACCOUNT,REPORT.FILE,QFILE.NAME,FI.QFILE)þ** END ELSEþ**   MD.QFILE='Q'þ**   MD.QFILE<2>=ACCOUNTþ**   MD.QFILE<3>=REPORT.FILEþ**   WRITE MD.QFILE ON FI.MD, 'SALES.FILE.PATH'þ** ENDþQFILE.NAME=SALES.FILE.PATHþCALL CREATE.QPOINTER(PLATFORM,FI.MD,ACCOUNT,REPORT.FILE,QFILE.NAME,FI.QFILE)þTIME.STAMP.TYPE='SALES'þSTACKED.1='SELECT ':SALES.FILE.PATH:' WITH ':SALE.DATE.DICT:' = ':DATE.SELECT.STRINGþSTACKED.2='SORT ':SALES.FILE.PATH:' BY ':SALE.DATE.DICT:' ':SALE.DATE.DICT:' PIPE ':SALE.AMOUNT.DICT:' PIPE ':COST.OF.SALE.AMOUNT.DICT:' ID-SUPP HDR-SUPP COL-HDR-SUPP NOPAGE'þCALL @EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,SYSTEM.11,REPORT)þWRITE STACKED.2 ON FI.MVDB.CONTROL, 'SALES.REPORT.CMND'þWRITE REPORT ON FI.MVDB.CONTROL, 'SALES.REPORT.RESULT'þIF NOT(SYSTEM.11) THENþ   WRITE 'ERROR: NO SALES CLOSED SINCE BEGINNING OF MONTH' ON FI.DICT.CLOSING.STATS, '*CURRENT.SALES.STATS'þ   GOSUB UPDATE.TIME.STAMPþ   SALES.STATS=''þ**   RETURNþ** ENDþ END ELSEþ   DATES=''þ   DATE.CNTR=0þ   LAST.DATE=''þ   AMOUNTS=''þ   COSTS=''þ   MAX.ROWS=DCOUNT(REPORT,CHAR(254))þ   FOR ROW.NO = 1 TO MAX.ROWSþ      ROW=REPORT<ROW.NO>þ      IF INDEX(ROW,'|',1) THENþ         ROW.DATE=TRIM(FIELD(ROW,'|',1))þ         AMOUNT=ICONV(TRIM(FIELD(ROW,'|',2)),'MD2')þ         COST=ICONV(TRIM(FIELD(ROW,'|',3)),'MD2')þ         IF NUM(AMOUNT) THENþ            IF ROW.DATE <> LAST.DATE THENþ               LAST.DATE=ROW.DATEþ               DATE.CNTR+=1þ               DATES<1,DATE.CNTR>=ROW.DATEþ               AMOUNTS<1,DATE.CNTR>=0þ               COSTS<1,DATE.CNTR>=0þ             ENDþ            AMOUNTS<1,DATE.CNTR>+=AMOUNTþ            COSTS<1,DATE.CNTR>+=COSTþ          ENDþ       ENDþ    NEXT ROW.NOþ   VALUE.CNTR=0þ   SALES.STATS=''þ   FOR AMT.CNTR = 1 TO DATE.CNTRþ      COST=COSTS<1,AMT.CNTR>þ      AMOUNT=AMOUNTS<1,AMT.CNTR>þ      IF AMOUNT OR COST THENþ         VALUE.CNTR+=1þ         ROW.DATE=ICONV(DATES<1,AMT.CNTR>,'D')þ         ROW.DATE=OCONV(ROW.DATE,'D0')þ         SALES.STATS<1,VALUE.CNTR>=ROW.DATEþ         SALES.STATS<2,VALUE.CNTR>=AMOUNTþ         SALES.STATS<3,VALUE.CNTR>=COSTþ       ENDþ    NEXT AMT.CNTRþ ENDþWRITE SALES.STATS ON DICT.FILE, '*CURRENT.SALES.STATS'þ*þEXECUTE "REFRESH.DASHBOARD.CLOSING.STATS" CAPTURING DUMMYþ*þGOSUB UPDATE.TIME.STAMPþRETURNþ*þCALC.AR:þ*þ* PERIOD.AMOUNTS DATA LAYOUTþ* 1 PERIOD 1 AMOUNTþ* 2 PERIOS 2 AMOUNTþ* 3 PERIOD 3 AMOUNTþ* 4 PERIOD 4 AMOUNTþ* 5þ* 6 YEAR ] YEAR ] YEARþ* 7 PERIOD 1 NUMBER \ PERIOD 2 NUMBER \ PERIOD 3 NUMBER \ PERIOD 4 NUMBER þ* 8 PERIOD 1 AMOUNT \ PERIOD 2 AMOUNT \ PERIOD 3 AMOUNT \ PERIOD 4 AMOUNT þ* 9 PERIOD 1 TOTAL DAYS ? PERIOD 2 TOTAL DAYS ? ETCþ* 10 YEAR 1 JAN # PAID\ FEB # PAID ... ] YEAR 2 JAN # PAID \þ* 11 YEAR 1 JAN # TOTAL DAYS \ FEB TOTAL DAYS ....þ* 12 CUSTOMER ] CUSTOMER ]þ* 13 CUSTOMER AMT DUE ] ] ]þ* 14 LARGEST DAYS DUE ] ] ]þ* 15 TOTAL DAYS LAST 1000 DAYS ] ] ]þ* 16 NUMBER OF ARS LAST 1000 DAYS ] ] ]þ* 17 TOTAL DAYS LAST 60 DAYS ] ] ]þ* 18 NUMBER OF ARS LAST 60 DAYS ] ] ]þ* 19 customers  ] ] ] for 50 highest amounts dueþ* 20 amounts ] ] ] for 50 highest amounts dueþ* 21 customers ] ] ] for 50 highest days dueþ* 22 days due ] ] ] for 50 highest days dueþ* 23 customer ] ] ] ] ] for 50 highest percent increaseþ* 24 percentage increase from 1000 day average to 60 day average for highest 50þ*þ*þDICT.FILE=FI.DICT.BALANCESþMATREAD SETUP.PARAMS FROM FI.MVDB.CONTROL, 'PORTAL.AR.REPORT.SETUP' ELSEþ   MAT SETUP.PARAMS=''þ ENDþ*þEQUATE AR.ACCOUNT TO SETUP.PARAMS(1)þEQUATE AR.REPORT.FILE TO SETUP.PARAMS(2)þEQUATE AR.DUE.DATE.DICT TO SETUP.PARAMS(3)þEQUATE AR.DATE.PAID.DICT TO SETUP.PARAMS(4)þEQUATE AR.INVOICE.AMT.DICT TO SETUP.PARAMS(5)þEQUATE AR.BALANCE.DICT TO SETUP.PARAMS(6)þEQUATE AR.DUE.DATE.AMC TO SETUP.PARAMS(8)þEQUATE AR.DATE.PAID.AMC TO SETUP.PARAMS(9)þEQUATE AR.INVOICE.AMT.AMC TO SETUP.PARAMS(10)þEQUATE AR.INVOICE.AMT.CONV TO SETUP.PARAMS(11)þEQUATE AR.INVOICE.AMT.COOR TO SETUP.PARAMS(12)þEQUATE AR.BALANCE.AMC TO SETUP.PARAMS(13)þEQUATE AR.BALANCE.CONV TO SETUP.PARAMS(14)þEQUATE AR.BALANCE.COOR TO SETUP.PARAMS(15)þEQUATE AR.CUSTOMER.DICT TO SETUP.PARAMS(16)þEQUATE AR.CUSTOMER.AMC TO SETUP.PARAMS(17)þEQUATE AR.CUSTOMER.TFILE TO SETUP.PARAMS(18)þ*þAR.FILE.PATH='AR.FILE.PATH'þQFILE.NAME=AR.FILE.PATHþ**OPEN '',AR.FILE.PATH TO FI.AR.FILE.PATH ELSEþ**IF PLATFORM = 'UD' THENþ**   QFILE.NAME=AR.FILE.PATHþ**   CALL CREATE.UD.QPOINTER(ACCOUNT,REPORT.FILE,QFILE.NAME,FI.AR.FILE.PATH)þ**   IF QFILE.NAME = '' THENþ**      WRITE 'ERROR: UNABLE TO OPEN ':REPORT.FILE:' IN ':ACCOUNT:' ACCOUNT' ON FI.DICT.BALANCES, '*CURRENT.AR.STATS'þ**      GOSUB UPDATE.TIME.STAMPþ**      ALL.GOOD=0þ**      RETURNþ**    ENDþ** END ELSEþ**   MD.QFILE='Q'þ**   MD.QFILE<2>=ACCOUNTþ**   MD.QFILE<3>=REPORT.FILEþ**   WRITE MD.QFILE ON FI.MD, 'AR.FILE.PATH'þ**   OPEN '','AR.FILE.PATH' TO FI.AR.FILE.PATH ELSEþ**      WRITE 'ERROR: UNABLE TO OPEN ':REPORT.FILE:' IN ':ACCOUNT:' ACCOUNT' ON FI.DICT.BALANCES, '*CURRENT.AR.STATS'þ**      GOSUB UPDATE.TIME.STAMPþ**      ALL.GOOD=0þ**      RETURNþ**    ENDþ** ENDþCALL CREATE.QPOINTER(PLATFORM,FI.MD,ACCOUNT,REPORT.FILE,QFILE.NAME,FI.REPORT.FILE)þIF QFILE.NAME = '' THENþ   WRITE 'ERROR: UNABLE TO OPEN ':REPORT.FILE:' IN ':ACCOUNT:' ACCOUNT' ON FI.DICT.BALANCES, '*CURRENT.AR.STATS'þ   GOSUB UPDATE.TIME.STAMPþ   ALL.GOOD=0þ   RETURNþ ENDþEXECUTE "CREATE-INDEX AR.FILE.PATH ":AR.DUE.DATE.DICT CAPTURING DUMMYþ** ENDþ*þ**EXECUTE 'SELECT ':AR.FILE.PATH:' WITH ':AR.BALANCE.DICT:' > "0"' CAPTURING DUMMYþ**IF NOT(SYSTEM(11)) THENþ**   WRITE 'ERROR: NO OUTSTANDING RECEIVABLES' ON FI.DICT.BALANCES, '*CURRENT.AR.STATS'þ**   GOSUB UPDATE.TIME.STAMPþ**   ALL.GOOD=0þ**   RETURNþ** ENDþ**CMND='SORT ':AR.FILE.PATH:' BY ':AR.DUE.DATE.DICT:' BREAK-ON ':AR.DUE.DATE.DICT:' PIPE TOTAL ':AR.BALANCE.DICT:' ID-SUPP DET-SUPP HDR-SUPP COL-HDR-SUPP NOPAGE'þCMND='SORT ':AR.FILE.PATH:' WITH ':AR.INVOICE.AMT.DICT:' > "0" BY ':AR.DUE.DATE.DICTþCMND:=' PIPE ':AR.DUE.DATE.DICT:' PIPE ':AR.DATE.PAID.DICT:' PIPE ':AR.INVOICE.AMT.DICTþCMND:=' PIPE ':AR.BALANCE.DICT:' PIPE ':AR.CUSTOMER.DICT:' HDR-SUPP COL-HDR-SUPP NOPAGE'þWRITE CMND ON FI.MVDB.CONTROL, 'AR.REPORT.CMND'þEXECUTE CMND CAPTURING REPORTþWRITE REPORT ON FI.MVDB.CONTROL, 'AR.REPORT'þ* SETUP AGING PERIODS OF 0, 1-30, 31-60, 61-90, AND 90+þPERIODS=0:@AM:1:@AM:31:@AM:61:@AM:91þPERIOD.AMOUNTS=''þCUSTOMERS=''þNUM.CUSTS=0þCUST.AMT.DUES=''þCUST.MOST.DAYS.DUE=''þCUST.TOTAL.1000.DAYS=''þCUST.NUM.1000.DAYS=''þCUST.TOTAL.60.DAYS=''þCUST.NUM.60.DAYS=''þDATES=''þDATE.CNTR=0þLAST.DATE=''þAMOUNTS=''þROW.NO=0þ* BUILD LAST 5 YEARSþFIVE.YEARS=''þFIRST.YEAR=(OCONV(DATE(),'D4-')[7,4])-4þFOR YEAR.CNTR = 0 TO 4þ   FIVE.YEARS<1,-1>=FIRST.YEAR+YEAR.CNTRþ NEXT YEAR.CNTRþPERIOD.AMOUNTS<6>=FIVE.YEARSþMAX.ROWS=DCOUNT(REPORT,@AM)þLOOPþ   ROW.NO+=1þ   ROW=REPORT<ROW.NO>þUNTIL ROW.NO > MAX.ROWS DOþ   IF INDEX(ROW,'|',1) THENþ      ROW.DATE=TRIM(FIELD(ROW,'|',2))þ      DUE.DATE=ICONV(ROW.DATE,'D')þ      IF DUE.DATE = ROW.DATE OR NOT(NUM(DUE.DATE)) THEN DUE.DATE=''þ      IF DUE.DATE THENþ         DUE.YEAR=OCONV(DUE.DATE,'D4-')[7,4]þ         LOCATE DUE.YEAR IN FIVE.YEARS<1> SETTING YEAR.POS ELSE YEAR.POS=0þ         PAID.DATE=TRIM(FIELD(ROW,'|',3))þ         NEXT.ROW.NO=ROW.NO+1þ         LOOPþ            NEXT.ROW=TRIM(REPORT<NEXT.ROW.NO>)þ         UNTIL INDEX(NEXT.ROW,'|',1) OR NEXT.ROW = '' DOþ            NEXT.PAID.DATE=NEXT.ROWþ            IF NEXT.PAID.DATE <> '' THEN PAID.DATE=NEXT.PAID.DATEþ            NEXT.ROW.NO+=1þ         REPEATþ         ROW.NO=NEXT.ROW.NO-1þ         IF PAID.DATE <> '' THENþ            PAID.DATE=ICONV(PAID.DATE,'D')þ            PAID.MO=OCONV(PAID.DATE,'D2-')[1,2]þ            PAID.MO+=0þ            PAID.YEAR=OCONV(PAID.DATE,'D4-')[7,4]þ            LOCATE PAID.YEAR IN FIVE.YEARS<1> SETTING PAID.YEAR.POS ELSE PAID.YEAR.POS=0þ            PAID.DAYS=PAID.DATE-DUE.DATEþ          END ELSEþ            PAID.MO=''þ            PAID.YEAR=''þ            PAID.DAYS=''þ            PAID.YEAR.POS=''þ          ENDþ         INV.AMOUNT=ICONV(TRIM(FIELD(ROW,'|',4)),'MD2')þ         REM.BALANCE=ICONV(TRIM(FIELD(ROW,'|',5)),'MD2')þ         CUSTOMER=TRIM(FIELD(ROW,'|',6))þ         CUSTOMER.POS=0þ         IF NUM(INV.AMOUNT) AND NUM(REM.BALANCE) THENþ            IF CUSTOMER <> '' THENþ               IF REM.BALANCE OR PAID.DATE >= DAYS.AGO.1000 THENþ                  LOCATE CUSTOMER IN CUSTOMERS<1> SETTING CUSTOMER.POS ELSEþ                     NUM.CUSTS+=1þ                     CUSTOMER.POS=NUM.CUSTSþ                     CUSTOMERS<1,CUSTOMER.POS>=CUSTOMERþ                   ENDþ                ENDþ             ENDþ            IF REM.BALANCE OR NOT(PAID.DATE) THENþ               DAYS.DUE=DATE()-DUE.DATEþ             END ELSEþ               DAYS.DUE=PAID.DATE-DUE.DATEþ             ENDþ            IF DAYS.DUE < 0 THEN DAYS.DUE=0þ            LOCATE DAYS.DUE IN PERIODS BY "AR" SETTING PERIOD ELSE PERIOD=PERIOD-1þ            IF REM.BALANCE THENþ               PERIOD.AMOUNTS<PERIOD>+=REM.BALANCEþ               IF CUSTOMER.POS AND DAYS.DUE THENþ                  CUST.AMT.DUES<1,CUSTOMER.POS>=CUST.AMT.DUES<1,CUSTOMER.POS>+REM.BALANCEþ                  IF DAYS.DUE > CUST.MOST.DAYS.DUE<1,CUSTOMER.POS> THENþ                     CUST.MOST.DAYS.DUE<1,CUSTOMER.POS>=DAYS.DUEþ                   ENDþ                ENDþ             ENDþ            IF DAYS.DUE AND CUSTOMER.POS THENþ               IF PAID.DATE THENþ                  PAID.OR.TODAY=PAID.DATEþ                END ELSEþ                  PAID.OR.TODAY=DATE()þ                ENDþ               IF PAID.OR.TODAY >= DAYS.AGO.1000 THEN; * PAID IN LAST 1000 DAYSþ                  CUST.TOTAL.1000.DAYS<1,CUSTOMER.POS>=CUST.TOTAL.1000.DAYS<1,CUSTOMER.POS>+DAYS.DUEþ                  CUST.NUM.1000.DAYS<1,CUSTOMER.POS>=CUST.NUM.1000.DAYS<1,CUSTOMER.POS>+1þ                  IF PAID.OR.TODAY >= DAYS.AGO.60 THEN; * PAID IN LAST 60 DAYSþ                     CUST.TOTAL.60.DAYS<1,CUSTOMER.POS>=CUST.TOTAL.60.DAYS<1,CUSTOMER.POS>+DAYS.DUEþ                     CUST.NUM.60.DAYS<1,CUSTOMER.POS>=CUST.NUM.60.DAYS<1,CUSTOMER.POS>+1þ                   ENDþ                ENDþ             ENDþ            IF PAID.YEAR.POS THENþ               IF YEAR.POS AND PERIOD THENþ                  PERIOD.AMOUNTS<7,YEAR.POS,PERIOD>=PERIOD.AMOUNTS<7,YEAR.POS,PERIOD>+1þ                  PERIOD.AMOUNTS<8,YEAR.POS,PERIOD>=PERIOD.AMOUNTS<8,YEAR.POS,PERIOD>+INV.AMOUNTþ                  PERIOD.AMOUNTS<9,YEAR.POS>=PERIOD.AMOUNTS<9,YEAR.POS>+DAYS.DUEþ                ENDþ               PERIOD.AMOUNTS<10,PAID.YEAR.POS,PAID.MO>=PERIOD.AMOUNTS<10,PAID.YEAR.POS,PAID.MO>+1þ               PERIOD.AMOUNTS<11,PAID.YEAR.POS,PAID.MO>=PERIOD.AMOUNTS<11,PAID.YEAR.POS,PAID.MO>+PAID.DAYSþ             ENDþ          ENDþ       ENDþ    ENDþREPEATþPERIOD.AMOUNTS<12>=CUSTOMERSþPERIOD.AMOUNTS<13>=CUST.AMT.DUESþPERIOD.AMOUNTS<14>=CUST.MOST.DAYS.DUEþPERIOD.AMOUNTS<15>=CUST.TOTAL.1000.DAYSþPERIOD.AMOUNTS<16>=CUST.NUM.1000.DAYSþPERIOD.AMOUNTS<17>=CUST.TOTAL.60.DAYSþPERIOD.AMOUNTS<18>=CUST.NUM.60.DAYSþ*þ** GET THE 50 HIGHEST AMOUNTS DUEþ*þHIGHEST.AMTS=''þHIGHEST.AMTS.CUSTS=''þMAX.CUSTS=DCOUNT(CUSTOMERS,@VM)þFOR I = 1 TO MAX.CUSTSþ   MAX.AMT=CUST.AMT.DUES<1,I>þ   IF MAX.AMT THENþ      LOCATE MAX.AMT IN HIGHEST.AMTS<1> BY "DR" SETTING POS ELSE NULLþ      IF POS <= 50 THENþ         HIGHEST.AMTS=INSERT(HIGHEST.AMTS,1,POS,0,MAX.AMT)þ         HIGHEST.AMTS.CUSTS=INSERT(HIGHEST.AMTS.CUSTS,1,POS,0,CUSTOMERS<1,I>)þ       ENDþ    ENDþ NEXT IþPERIOD.AMOUNTS<19>=HIGHEST.AMTS.CUSTSþPERIOD.AMOUNTS<20>=HIGHEST.AMTSþ*þ** GET THE 50 HIGHEST DUE DAYSþ*þHIGHEST.DAYS=''þHIGHEST.DAYS.CUSTS=''þFOR I = 1 TO MAX.CUSTSþ   CUST.DAYS.DUE=CUST.MOST.DAYS.DUE<1,I>þ   IF CUST.DAYS.DUE THENþ      LOCATE CUST.DAYS.DUE IN HIGHEST.DAYS<1> BY "DR" SETTING POS ELSE NULLþ      IF POS <= 50 THENþ         HIGHEST.DAYS=INSERT(HIGHEST.DAYS,1,POS,0,CUST.DAYS.DUE)þ         HIGHEST.DAYS.CUSTS=INSERT(HIGHEST.DAYS.CUSTS,1,POS,0,CUSTOMERS<1,I>)þ       ENDþ    ENDþ NEXT IþPERIOD.AMOUNTS<21>=HIGHEST.DAYS.CUSTSþPERIOD.AMOUNTS<22>=HIGHEST.DAYSþ*þ** GET THE 50 CUSTOMERS WITH HIGHEST PERCENTAGE INCREASESþ*þHIGHEST.INCREASE.PCTS=''þHIGHEST.INCREASE.CUSTS=''þHIGHEST.INCREASE.60.DAYS=''þHIGHEST.INCREASE.1000.DAYS=''þFOR I = 1 TO MAX.CUSTSþ   DAYS.1000=CUST.TOTAL.1000.DAYS<1,I>þ   NUM.1000=CUST.NUM.1000.DAYS<1,I>þ   DAYS.60=CUST.TOTAL.60.DAYS<1,I>þ   NUM.60=CUST.NUM.60.DAYS<1,I>þ   IF NUM.1000 THENþ      AVG.1000=DAYS.1000 / NUM.1000þ    END ELSE AVG.1000=0þ   IF NUM.60 THENþ      AVG.60=DAYS.60 / NUM.60þ    END ELSE AVG.60=0þ   AVG.INCREASE=AVG.60 - AVG.1000þ   IF AVG.INCREASE > 0 AND AVG.60 > 300 THEN;  * MUST BE DUE OVER 30 DAYSþ      IF AVG.1000 THENþ         PCT.INCREASE=INT(AVG.INCREASE * 1000 / AVG.1000 + .5)þ         PCT.INCREASE=OCONV(PCT.INCREASE,'MD1')þ       END ELSE PCT.INCREASE=0þ      LOCATE PCT.INCREASE IN HIGHEST.INCREASE.PCTS<1> BY "DR" SETTING POS ELSE NULLþ      IF POS <= 50 THENþ         HIGHEST.INCREASE.PCTS=INSERT(HIGHEST.INCREASE.PCTS,1,POS,0,PCT.INCREASE)þ         HIGHEST.INCREASE.CUSTS=INSERT(HIGHEST.INCREASE.CUSTS,1,POS,0,CUSTOMERS<1,I>)þ         HIGHEST.INCREASE.1000.DAYS=INSERT(HIGHEST.INCREASE.1000.DAYS,1,POS,0,OCONV(AVG.1000,'MD1'))þ         HIGHEST.INCREASE.60.DAYS=INSERT(HIGHEST.INCREASE.60.DAYS,1,POS,0,OCONV(AVG.60,'MD1'))þ       ENDþ    ENDþ NEXT IþPERIOD.AMOUNTS<23>=HIGHEST.INCREASE.CUSTSþPERIOD.AMOUNTS<24>=HIGHEST.INCREASE.PCTSþPERIOD.AMOUNTS<25>=HIGHEST.INCREASE.60.DAYSþPERIOD.AMOUNTS<26>=HIGHEST.INCREASE.1000.DAYSþ*þTIME.STAMP.TYPE='AR'þDICT.FILE=FI.DICT.BALANCESþGOSUB UPDATE.TIME.STAMPþWRITE PERIOD.AMOUNTS ON DICT.FILE, '*CURRENT.AR.STATS'þRETURNþ*þCALC.AP:þ*þDICT.FILE=FI.DICT.BALANCESþMATREAD SETUP.PARAMS FROM FI.MVDB.CONTROL, 'PORTAL.AP.REPORT.SETUP' ELSEþ   MAT SETUP.PARAMS=''þ ENDþ*þEQUATE AP.ACCOUNT TO SETUP.PARAMS(1)þEQUATE AP.REPORT.FILE TO SETUP.PARAMS(2)þEQUATE AP.DUE.DATE.DICT TO SETUP.PARAMS(3)þEQUATE AP.DATE.PAID.DICT TO SETUP.PARAMS(4)þEQUATE AP.INVOICE.AMT.DICT TO SETUP.PARAMS(5)þEQUATE AP.BALANCE.DICT TO SETUP.PARAMS(6)þEQUATE AP.DUE.DATE.AMC TO SETUP.PARAMS(8)þEQUATE AP.DATE.PAID.AMC TO SETUP.PARAMS(9)þEQUATE AP.INVOICE.AMT.AMC TO SETUP.PARAMS(10)þEQUATE AP.INVOICE.AMT.CONV TO SETUP.PARAMS(11)þEQUATE AP.INVOICE.AMT.COOR TO SETUP.PARAMS(12)þEQUATE AP.BALANCE.AMC TO SETUP.PARAMS(13)þEQUATE AP.BALANCE.CONV TO SETUP.PARAMS(14)þEQUATE AP.BALANCE.COOR TO SETUP.PARAMS(15)þ*þAP.FILE.PATH='AP.FILE.PATH'þQFILE.NAME=AP.FILE.PATHþ**OPEN '',AP.FILE.PATH TO FI.AP.FILE.PATH ELSEþ**IF PLATFORM = 'UD' THENþ**   QFILE.NAME=AP.FILE.PATHþ**   CALL CREATE.UD.QPOINTER(ACCOUNT,AP.REPORT.FILE,QFILE.NAME,FI.AP.FILE.PATH)þ**   IF QFILE.NAME = '' THENþ**      WRITE 'ERROR: UNABLE TO OPEN ':REPORT.FILE:' IN ':ACCOUNT:' ACCOUNT' ON FI.DICT.BALANCES, '*CURRENT.AP.STATS'þ**      GOSUB UPDATE.TIME.STAMPþ**      ALL.GOOD=0þ**      RETURNþ**    ENDþ** END ELSEþ**   MD.QFILE='Q'þ**   MD.QFILE<2>=AP.ACCOUNTþ**   MD.QFILE<3>=AP.REPORT.FILEþ**   WRITE MD.QFILE ON FI.MD, 'AP.FILE.PATH'þ**   OPEN '','AP.FILE.PATH' TO FI.AP.FILE.PATH ELSEþ**      WRITE 'ERROR: UNABLE TO OPEN ':REPORT.FILE:' IN ':ACCOUNT:' ACCOUNT' ON FI.DICT.BALANCES, '*CURRENT.AP.STATS'þ**      GOSUB UPDATE.TIME.STAMPþ**      ALL.GOOD=0þ**      RETURNþ**    ENDþ** ENDþCALL CREATE.QPOINTER(PLATFORM,FI.MD,ACCOUNT,REPORT.FILE,QFILE.NAME,FI.REPORT.FILE)þIF QFILE.NAME = '' THENþ   WRITE 'ERROR: UNABLE TO OPEN ':REPORT.FILE:' IN ':ACCOUNT:' ACCOUNT' ON FI.DICT.BALANCES, '*CURRENT.AP.STATS'þ   GOSUB UPDATE.TIME.STAMPþ   ALL.GOOD=0þ   RETURNþ ENDþEXECUTE "CREATE-INDEX AP.FILE.PATH ":AP.DUE.DATE.DICT CAPTURING DUMMYþ** ENDþ*þSTACKED.1='SELECT ':AP.FILE.PATH:' WITH ':AP.BALANCE.DICT:' > "0"'þSTACKED.2='SORT ':AP.FILE.PATH:' BY ':AP.DUE.DATE.DICT:' BREAK-ON ':AP.DUE.DATE.DICT:' PIPE TOTAL ':AP.BALANCE.DICT:' ID-SUPP DET-SUPP HDR-SUPP COL-HDR-SUPP NOPAGE'þCALL @EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,SYSTEM.11,REPORT)þWRITE STACKED.2 ON FI.MVDB.CONTROL, 'AP.CMND'þWRITE REPORT ON FI.MVDB.CONTROL, 'AP.REPORT'þIF NOT(SYSTEM.11) THENþ   WRITE 'ERROR: NO OUTSTANDING PAYABLES' ON FI.DICT.BALANCES, '*CURRENT.AP.STATS'þ   GOSUB UPDATE.TIME.STAMPþ**   ALL.GOOD=0þ**   RETURNþ** ENDþ   PERIOD.AMOUNTS=''þ END ELSEþ   * SETUP AGING PERIODS OF 0, 1-30, 31-60, 61-90, AND 90+þ   PERIODS=0:@AM:1:@AM:31:@AM:61:@AM:91þ   PERIOD.AMOUNTS=''þ   DATES=''þ   DATE.CNTR=0þ   LAST.DATE=''þ   AMOUNTS=''þ   MAX.ROWS=DCOUNT(REPORT,CHAR(254))þ   FOR ROW.NO = 1 TO MAX.ROWSþ      ROW=REPORT<ROW.NO>þ      IF INDEX(ROW,'|',1) THENþ         ROW.DATE=TRIM(FIELD(ROW,'|',1))þ         DUE.DATE=ICONV(ROW.DATE,'D')þ         IF DUE.DATE = ROW.DATE OR NOT(NUM(DUE.DATE)) THEN DUE.DATE=''þ         IF DUE.DATE THENþ            AMOUNT=ICONV(TRIM(FIELD(ROW,'|',2)),'MD2')þ            IF NUM(AMOUNT) THENþ               DAYS.DUE=DATE()-DUE.DATEþ               IF DAYS.DUE < 0 THEN DAYS.DUE=0þ               LOCATE DAYS.DUE IN PERIODS BY "AR" SETTING PERIOD ELSE PERIOD=PERIOD-1þ               PERIOD.AMOUNTS<PERIOD>+=AMOUNTþ             ENDþ          ENDþ       ENDþ    NEXT ROW.NOþ ENDþ*þTIME.STAMP.TYPE='AP'þDICT.FILE=FI.DICT.BALANCESþGOSUB UPDATE.TIME.STAMPþWRITE PERIOD.AMOUNTS ON DICT.FILE, '*CURRENT.AP.STATS'þ*þCALC.NET.INCOME:þ*þTIME.STAMP.TYPE='NET.INCOME'þDICT.FILE=FI.DICT.BALANCESþGOSUB UPDATE.TIME.STAMPþWRITE 999 ON DICT.FILE, '*CURRENT.NET.INCOME.STATS'þRETURNþ*þUPDATE.TIME.STAMP:þ*þTIME.STAMP=TIME()þTIME.STAMP=STR('0',5-LEN(TIME.STAMP)):TIME.STAMPþWRITE DATE():TIME.STAMP ON DICT.FILE, '*LAST.UPDATE.':TIME.STAMP.TYPEþWRITE DATE():TIME.STAMP ON DICT.FILE, '*LAST.UPDATED.':TIME.STAMP.TYPEþRETURNþEND0007DFSUB.DEMO.SINGLE.MONTH.SALES.BY.REPþ0c2SUBROUTINE SUB.DEMO.SINGLE.MONTH.SALES.BY.REPþ*þ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TYPE = "FCCOLUMN3D"þW$WIDTH = 3þ*þIF G$QUERYMODE THEN RETURNþ*þW$BAR.COLORS<1,1>=COLOR$MAROONþW$BAR.COLORS<1,2>=COLOR$TEALþW$BAR.COLORS<1,3>=COLOR$SILVERþW$BAR.COLORS<1,4>=COLOR$BLUEþMONTHS='Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'þCONVERT ',' TO CHAR(254) IN MONTHSþOPEN '','MVDB.CONTROL' TO FILE.CONTROL ELSE STOPþMATWRITE WIDGET.USER.DATA ON FILE.CONTROL, 'DEBUG'þREADV YEARS FROM FILE.CONTROL, 'DEMO.FINANCIAL.PICTURE', 67 ELSEþ   YEARS='2013,2014,2015'þ   CONVERT ',' TO CHAR(253) IN YEARSþ ENDþREVENUE.OR.GP=WIDGET.USER.DATA(1)þYEAR=WIDGET.USER.DATA(2)þMONTH=WIDGET.USER.DATA(3)þLOCATE MONTH IN MONTHS SETTING MONTH.SVM ELSE MONTH.SVM=1þYEAR.DETAIL.ID=''þBEGIN CASEþ   CASE REVENUE.OR.GP = 'REVENUES'þ      W$TITLE=MONTH:' ':YEAR:' Sales By Sales Rep'þ      W$BAR.YMEMO = "Sales"þ      YEAR.DETAIL.ID='SALES.':YEARþ      MAX.ROUNDER=150000þ   CASE REVENUE.OR.GP = 'GROSSPROFIT'þ      W$TITLE=MONTH:' ':YEAR:' Gross Profit By Sales Rep'þ      W$BAR.YMEMO = "Gross Profit"þ      YEAR.DETAIL.ID='GPS.':YEARþ      MAX.ROUNDER=50000þEND CASEþREAD REC FROM FILE.CONTROL, YEAR.DETAIL.ID ELSE REC=''þ*þREPS=REC<1>þ*þ*þMAX.SALES.AMT=0þN=0þFIRST.YEAR=''þMAX.REPS=DCOUNT(REPS,CHAR(253))þFOR NN = 1 TO MAX.REPSþ   REP=REPS<1,NN>þ   SALES.AMT=REC<2,NN,MONTH.SVM>þ   SALES.AMT=OCONV(SALES.AMT,'MD02')þ   IF SALES.AMT > MAX.SALES.AMT THEN MAX.SALES.AMT=SALES.AMTþ   W$BAR.VALUES<1,NN> = SALES.AMTþ   W$BAR.XLABELS<1,NN> = REPþNEXT NNþW$BAR.XMEMO = "Sales Rep"þ* ROUND MAX AMOUNT UP TO THE NEXT MAX.ROUNDERþMAX.SALES.AMT+=MAX.ROUNDERþMAX.SALES.AMT=INT(MAX.SALES.AMT/MAX.ROUNDER) * MAX.ROUNDERþW$CHART.OPTIONS<-1>='yAxisMaxValue="':MAX.SALES.AMT:'"'þW$CHART.OPTIONS<-1>='decimals="2"'þW$CHART.OPTIONS<-1>='DecimalPrecision="2"'þW$CHART.OPTIONS<-1>='divLineDecimalPrecision="2"'þW$CHART.OPTIONS<-1>='limitsDecimalPrecision="2"'þW$CHART.OPTIONS<-1>='formatNumberScale="1"'þRETURN0002FASUB.TEST.WIDGETþ0c2SUBROUTINE SUB.TEST.WIDGETþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ*þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "Neat Pie Chart"þW$TYPE = "FC2DPIE"þW$WIDTH = 1 ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þW$PIE.CAPTION = "MV Dashboard Survey"þ*þW$PIE.LABELS<1,1> = "Love it"þW$PIE.LABELS<1,2> = "Like it"þW$PIE.LABELS<1,3> = "Very nice"þW$PIE.LABELS<1,4> = "Awesome!"þ*þW$PIE.VALUES<1,1> = "1560"þW$PIE.VALUES<1,2> = "400"þW$PIE.VALUES<1,3> = "1012"þW$PIE.VALUES<1,4> = "4065"þ*þ* For a 2D pie, a specific slice can be separated from the pieþ* by setting this value:þ* W$PIE.VALUE.OPTS<1,3> = 'isSliced="1"'þ*þ* To show percentages instead of values, use this:þW$CHART.OPTIONS<-1> = "showPercentValues='1'"þRETURN003DCBSUB.PORTAL.DASHBOARDþ0c2SUBROUTINE SUB.PORTAL.DASHBOARDþ*þ* Dashboard Widgetþ*þINCLUDE WBPD WWW.INCLUDEþINCLUDE WBPD MVDB.INCLUDEþ*þ* Copyright (C) Zumasys, Incþ*þWEB$TITLE='MVDashboard Portal Financial Picture'þWEB.FORM.NAME='PORTAL.DASHBOARD'þW$TYPE='HTML'þW$WIDTH = 3                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þEQUATE AR.AMOUNTS TO GLOBAL.USER.DATA(1)þEQUATE AP.AMOUNTS TO GLOBAL.USER.DATA(2)þOPEN '','MVDB.CONTROL' TO FI.MVDB.CONTROL ELSE þ   ERROR.MSG<-1>='UNABLE TO OPEN MVDB.CONTROL'þ   GOTO DISPLAY.ERRORþ ENDþREAD PLATFORM FROM FI.MVDB.CONTROL, 'PLATFORM' ELSE PLATFORM='D3'þBEGIN CASEþ   CASE PLATFORM = 'UD'þ      EXECUTE.STACKED.CMNDS='UD.EXECUTE.STACKED.CMNDS'þ   CASE PLATFORM = 'UV'þ      EXECUTE.STACKED.CMNDS='UV.EXECUTE.STACKED.CMNDS'þ   CASE PLATFORM = 'QM'þ      EXECUTE.STACKED.CMNDS='EXECUTE.STACKED.CMNDS'þ   CASE 1þ      * D3 AND JBASE ARE THE SAMEþ      EXECUTE.STACKED.CMNDS='EXECUTE.STACKED.CMNDS'þEND CASEþOPEN '','DASHBOARD.CLOSING.STATS' TO FI.DASHBOARD.CLOSING.STATS ELSE þ   ERROR.MSG<-1>='UNABLE TO OPEN DASHBOARD.CLOSING.STATS'þ   GOTO DISPLAY.ERRORþ ENDþOPEN 'DICT','DASHBOARD.CLOSING.STATS' TO FI.DICT.CLOSING.STATS ELSE þ   ERROR.MSG<-1>='UNABLE TO OPEN DICT DASHBOARD.CLOSING.STATS'þ   GOTO DISPLAY.ERRORþ ENDþOPEN '','DASHBOARD.BALANCES' TO FI.DASHBOARD.BALANCES ELSE þ   ERROR.MSG<-1>='UNABLE TO OPEN DASHBOARD.BALANCES'þ   GOTO DISPLAY.ERRORþ ENDþREAD PLATFORM FROM FI.MVDB.CONTROL, 'PLATFORM' ELSE PLATFORM='D3'þERROR.MSG=''þDIM SALES.SETUP.PARAMS(20), AR.SETUP.PARAMS(20), AP.SETUP.PARAMS(20), NET.INCOME.SETUP.PARAMS(20)þ*þMATREAD SALES.SETUP.PARAMS FROM FI.MVDB.CONTROL, 'PORTAL.SALES.REPORT.SETUP' ELSEþ   MAT SALES.SETUP.PARAMS=''þ ENDþEQUATE SALES.ACCOUNT TO SALES.SETUP.PARAMS(1)þEQUATE SALES.REPORT.FILE TO SALES.SETUP.PARAMS(2)þEQUATE SALES.DATE.DICT TO SALES.SETUP.PARAMS(3)þEQUATE SALES.AMOUNT.DICT TO SALES.SETUP.PARAMS(6)þEQUATE GP.DICT.NAME TO SALES.SETUP.PARAMS(7)þ*þIF SALES.ACCOUNT = '' OR SALES.REPORT.FILE = '' OR SALES.DATE.DICT = '' OR SALES.AMOUNT.DICT = '' THENþ   ERROR.MSG<-1>='SALES FILE ACCOUNT, SALES FILE NAME, DATE OF SALE, AND AMOUNT OF SALE MUST ALL BE DEFINED BEFORE REPORTS CAN BE ATTEMPTED'þ ENDþ*þ** BUILD SAMPLE DATA IF USING MVDB FOR SALES ACCOUNTþ*þIF SALES.ACCOUNT = 'MVDB' THENþ   EXECUTE "BUILD.SAMPLE.PORTAL.FILES" CAPTURING DUMMYþ ENDþ*þ*þOPEN 'DICT','DASHBOARD.BALANCES' TO FI.DICT.DASHBOARD.BALANCES ELSE þ   ERROR.MSG<-1>='UNABLE TO OPEN DICT DASHBOARD.BALANCES'þ   GOTO DISPLAY.ERRORþ ENDþMATREAD AR.SETUP.PARAMS FROM FI.MVDB.CONTROL, 'PORTAL.AR.REPORT.SETUP' ELSEþ   MAT AR.SETUP.PARAMS=''þ ENDþ*þEQUATE AR.ACCOUNT TO AR.SETUP.PARAMS(1)þEQUATE AR.REPORT.FILE TO AR.SETUP.PARAMS(2)þEQUATE AR.DUE.DATE.DICT TO AR.SETUP.PARAMS(3)þEQUATE AR.BALANCE.DICT TO AR.SETUP.PARAMS(6)þ*þ*þ**IF AR.ACCOUNT = '' OR AR.REPORT.FILE = '' OR AR.DUE.DATE.DICT = '' OR AR.BALANCE.DICT = '' THENþ**   ERROR.MSG<-1>='AR FILE ACCOUNT, AR FILE NAME, DUE DATE, AND BALANCE MUST ALL BE DEFINED BEFORE REPORTS CAN BE ATTEMPTED'þ***   GOTO DISPLAY.ERRORþ** ENDþ*þMATREAD AP.SETUP.PARAMS FROM FI.MVDB.CONTROL, 'PORTAL.AP.REPORT.SETUP' ELSEþ   MAT AP.SETUP.PARAMS=''þ ENDþ*þEQUATE AP.ACCOUNT TO AP.SETUP.PARAMS(1)þEQUATE AP.REPORT.FILE TO AP.SETUP.PARAMS(2)þEQUATE AP.DUE.DATE.DICT TO AP.SETUP.PARAMS(3)þEQUATE AP.BALANCE.DICT TO AP.SETUP.PARAMS(6)þ*þ*þ**IF AP.ACCOUNT = '' OR AP.REPORT.FILE = '' OR AP.DUE.DATE.DICT = '' OR AP.BALANCE.DICT = '' THENþ**   ERROR.MSG<-1>='AP FILE ACCOUNT, AP FILE NAME, DUE DATE, AND BALANCE MUST ALL BE DEFINED BEFORE REPORTS CAN BE ATTEMPTED'þ***   GOTO DISPLAY.ERRORþ** ENDþ*þ**MATREAD NET.INCOME.SETUP.PARAMS FROM FI.MVDB.CONTROL, 'PORTAL.NET.INCOME.REPORT.SETUP' ELSEþ**   MAT NET.INCOME.SETUP.PARAMS=''þ** ENDþ*þEQUATE NET.INCOME.ACCOUNT TO NET.INCOME.SETUP.PARAMS(1)þEQUATE NET.INCOME.REPORT.FILE TO NET.INCOME.SETUP.PARAMS(2)þEQUATE NET.INCOME.DUE.DATE.DICT TO NET.INCOME.SETUP.PARAMS(3)þEQUATE NET.INCOME.BALANCE.DICT TO NET.INCOME.SETUP.PARAMS(6)þ*þ*þ**IF NET.INCOME.ACCOUNT = '' OR NET.INCOME.REPORT.FILE = '' OR NET.INCOME.DUE.DATE.DICT = '' OR NET.INCOME.BALANCE.DICT = '' THENþ**   ERROR.MSG<-1>='NET INCOME FILE ACCOUNT, NET INCOME FILE NAME, DUE DATE, AND BALANCE MUST ALL BE DEFINED BEFORE REPORTS CAN BE ATTEMPTED'þ***   GOTO DISPLAY.ERRORþ** ENDþ*þIF ERROR.MSG <> '' THENþ***   GOTO DISPLAY.ERRORþ ENDþ*þ* START ANY REQUIRED BACKGROUND CALCULATIONSþ*þCUR.TIME=TIME()þCUR.TIME=FIELD(CUR.TIME,'.',1)þCUR.TIME=STR('0',5-LEN(CUR.TIME)):CUR.TIMEþCUR.DATE.TIME=DATE():CUR.TIMEþ*þ** SALESþ*þREADU SALES FROM FI.DICT.CLOSING.STATS, '*LAST.UPDATE.SALES' ELSE SALES=''þBEGIN CASEþ   CASE SALES = 'UPDATING'; SALES.STATUS='UPDATING'þ   CASE NOT(NUM(SALES)); SALES.STATUS='NEED CALC'þ   CASE (CUR.DATE.TIME - SALES) < 900;   * LESS THAN 15 MINUTESþ      SALES.STATUS='GOOD'þ      READ SALES.REC FROM FI.DICT.CLOSING.STATS, '*CURRENT.SALES.STATS' ELSEþ         SALES.STATUS='NEED CALC'þ       ENDþ   CASE 1; SALES.STATUS='NEED CALC'þEND CASEþIF SALES.STATUS <> 'NEED CALC' THENþ   RELEASE FI.DICT.CLOSING.STATS, '*LAST.UPDATE.SALES'þ ENDþ*þ** ARþ*þREADU AR FROM FI.DICT.DASHBOARD.BALANCES, '*LAST.UPDATE.AR' ELSE AR=''þBEGIN CASEþ   CASE AR = 'UPDATING'; AR.STATUS='UPDATING'þ   CASE NOT(NUM(AR)); AR.STATUS='NEED CALC'þ   CASE (CUR.DATE.TIME - AR) < 900;   * LESS THAN 15 MINUTESþ      AR.STATUS='GOOD'þ      READ AR.REC FROM FI.DICT.DASHBOARD.BALANCES, '*CURRENT.AR.STATS' ELSEþ         AR.STATUS='NEED CALC'þ       ENDþ   CASE 1; AR.STATUS='NEED CALC'þEND CASEþIF AR.STATUS <> 'NEED CALC' THENþ   RELEASE FI.DICT.DASHBOARD.BALANCES, '*LAST.UPDATE.AR'þ ENDþ*þ** APþ*þREADU AP FROM FI.DICT.DASHBOARD.BALANCES, '*LAST.UPDATE.AP' ELSE AP=''þBEGIN CASEþ   CASE AP = 'UPDATING'; AP.STATUS='UPDATING'þ   CASE NOT(NUM(AP)); AP.STATUS='NEED CALC'þ   CASE (CUR.DATE.TIME - AP) < 900;   * LESS THAN 15 MINUTESþ      AP.STATUS='GOOD'þ      READ AP.REC FROM FI.DICT.DASHBOARD.BALANCES, '*CURRENT.AP.STATS' ELSEþ         AP.STATUS='NEED CALC'þ       ENDþ   CASE 1; AP.STATUS='NEED CALC'þEND CASEþIF AP.STATUS <> 'NEED CALC' THENþ   RELEASE FI.DICT.DASHBOARD.BALANCES, '*LAST.UPDATE.AP'þ ENDþ***þ**** NET.INCOMEþ***þ**READU NET.INCOME FROM FI.DICT.DASHBOARD.BALANCES, '*LAST.UPDATE.NET.INCOME' ELSE NET.INCOME=''þ**BEGIN CASEþ**   CASE NET.INCOME = 'UPDATING'; NET.INCOME.STATUS='UPDATING'þ**   CASE NOT(NUM(NET.INCOME)); NET.INCOME.STATUS='NEED CALC'þ**   CASE (CUR.DATE.TIME - NET.INCOME) < 900;   * LESS THAN 15 MINUTESþ**      NET.INCOME.STATUS='GOOD'þ**      READ NET.INCOME.REC FROM FI.DICT.DASHBOARD.BALANCES, '*CURRENT.NET.INCOME.STATS' ELSEþ**         NET.INCOME.STATUS='NEED CALC'þ**       ENDþ**   CASE 1; NET.INCOME.STATUS='NEED CALC'þ**END CASEþ**IF NET.INCOME.STATUS <> 'NEED CALC' THENþ**   RELEASE FI.DICT.DASHBOARD.BALANCES, '*LAST.UPDATE.NET.INCOME'þ** ENDþ*þIF SALES.STATUS <> 'GOOD' OR AR.STATUS <> 'GOOD' OR AP.STATUS <> 'GOOD' THEN ; *OR NET.INCOME.STATUS <> 'GOOD' THENþ   IF SALES.STATUS = 'NEED CALC' AND AR.STATUS = 'NEED CALC' AND AP.STATUS = 'NEED CALC' THEN; *AND NET.INCOME.STATUS = 'NEED CALC' THENþ      TYPE.CALC='ALL'þ      GOSUB INITIATE.CALC.PHANTOMþ      WRITE 'UPDATING' ON FI.DICT.DASHBOARD.BALANCES, '*LAST.UPDATE.ALL'þ      WRITE 'UPDATING' ON FI.DICT.CLOSING.STATS, '*LAST.UPDATE.SALES'þ      WRITE 'UPDATING' ON FI.DICT.DASHBOARD.BALANCES, '*LAST.UPDATE.AR'þ      WRITE 'UPDATING' ON FI.DICT.DASHBOARD.BALANCES, '*LAST.UPDATE.AP'þ**      WRITE 'UPDATING' ON FI.DICT.DASHBOARD.BALANCES, '*LAST.UPDATE.NET.INCOME'þ    END ELSEþ      IF SALES.STATUS = 'NEED CALC' THENþ         TYPE.CALC='SALES'þ         GOSUB INITIATE.CALC.PHANTOMþ         WRITE 'UPDATING' ON FI.DICT.CLOSING.STATS, '*LAST.UPDATE.SALES'þ       ENDþ      IF AR.STATUS = 'NEED CALC' THENþ         TYPE.CALC='AR'þ         GOSUB INITIATE.CALC.PHANTOMþ         WRITE 'UPDATING' ON FI.DICT.DASHBOARD.BALANCES, '*LAST.UPDATE.AR'þ       ENDþ      IF AP.STATUS = 'NEED CALC' THENþ         TYPE.CALC='AP'þ         GOSUB INITIATE.CALC.PHANTOMþ         WRITE 'UPDATING' ON FI.DICT.DASHBOARD.BALANCES, '*LAST.UPDATE.AP'þ       ENDþ**      IF NET.INCOME.STATUS = 'NEED CALC' THENþ**         TYPE.CALC='NET.INCOME'þ**         GOSUB INITIATE.CALC.PHANTOMþ**         WRITE 'UPDATING' ON FI.DICT.DASHBOARD.BALANCES, '*LAST.UPDATE.NET.INCOME'þ**       ENDþ    ENDþ   *þ   NOW.GOOD=1þ   *þ   ** GIVE IT 10 SECONDS TO COMPLETE ANY CALCS AND TRY AGAINþ   *þ   SLEEP 10þ   *þ   IF SALES.STATUS <> 'GOOD' THENþ      READ SALES.STATUS FROM FI.DICT.CLOSING.STATS, '*LAST.UPDATE.SALES' ELSE SALES.STATUS='UPDATING'þ      IF NUM(SALES.STATUS) THENþ         READ SALES.REC FROM FI.DICT.CLOSING.STATS, '*CURRENT.SALES.STATS' ELSEþ            SALES.STATUS='UPDATING'þ            NOW.GOOD=0þ          ENDþ       END ELSEþ         NOW.GOOD=0þ       ENDþ    ENDþ   *þ   IF AR.STATUS <> 'GOOD' THENþ      READ AR.STATUS FROM FI.DICT.DASHBOARD.BALANCES, '*LAST.UPDATE.AR' ELSE AR.STATUS='UPDATING'þ      IF NUM(AR.STATUS) THENþ         READ AR.REC FROM FI.DICT.DASHBOARD.BALANCES, '*CURRENT.AR.STATS' ELSEþ            AR.STATUS='UPDATING'þ            NOW.GOOD=0þ          ENDþ       END ELSEþ         NOW.GOOD=0þ       ENDþ    ENDþ   *þ   IF AP.STATUS <> 'GOOD' THENþ      READ AP.STATUS FROM FI.DICT.DASHBOARD.BALANCES, '*LAST.UPDATE.AP' ELSE AP.STATUS='UPDATING'þ      IF NUM(AP.STATUS) THENþ         READ AP.REC FROM FI.DICT.DASHBOARD.BALANCES, '*CURRENT.AP.STATS' ELSEþ            AP.STATUS='UPDATING'þ            NOW.GOOD=0þ          ENDþ       END ELSEþ         NOW.GOOD=0þ       ENDþ    ENDþ**   IF NET.INCOME.STATUS <> 'GOOD' THENþ**      READ NET.INCOME.STATUS FROM FI.DICT.DASHBOARD.BALANCES, '*LAST.UPDATE.NET.INCOME' ELSE NET.INCOME.STATUS='UPDATING'þ**      IF NUM(NET.INCOME.STATUS) THENþ**         READ NET.INCOME.REC FROM FI.DICT.DASHBOARD.BALANCES, '*CURRENT.NET.INCOME.STATS' ELSEþ**            NET.INCOME.STATUS='UPDATING'þ**            NOW.GOOD=0þ**          ENDþ**       END ELSEþ**         NOW.GOOD=0þ**       ENDþ**    ENDþ   *þ   IF NOT(NOW.GOOD) THENþ      *þ      ** USE PROMPTS AS A WAY OF SHOWING WHICH ARE CALCULATION.  NOTHING WILL BE DONE WITH THAT CONTENT OF THEþ      ** PROMPT WHEN THE GO BUTTON IS CLICKED.þ      *þ      W$INPUT.PROMPT<1> = "MTD Sales Calcs"þ      W$INPUT.TYPE<1> = "TEXT"þ      W$INPUT.UDPOS<1> = 1þ      W$INPUT.DEFAULT<1> = SALES.STATUSþ      *þ      IF AR.REPORT.FILE <> '' THENþ         W$INPUT.PROMPT<2> = "AR Calcs"þ         W$INPUT.TYPE<2> = "TEXT"þ         W$INPUT.UDPOS<2> = 2þ         W$INPUT.DEFAULT<2> = AR.STATUSþ         *þ         IF AP.REPORT.FILE <> '' THENþ            W$INPUT.PROMPT<3> = "AP Calcs"þ            W$INPUT.TYPE<3> = 'TEXT'þ            W$INPUT.UDPOS<3> = 3þ            W$INPUT.DEFAULT<3> = AP.STATUSþ          ENDþ       ENDþ      *þ**      W$INPUT.PROMPT<4> = "Net Income Calcs"þ**      W$INPUT.TYPE<4> = 'TEXT'þ**      W$INPUT.UDPOS<4> = 4þ**      W$INPUT.DEFAULT<4> = NET.INCOME.STATUSþ      *þ      ERROR.MSG<-1>='Figures are currently updating.'þ      ERROR.MSG<-1>='Try again in a minute or two.'þ      GOTO DISPLAY.ERRORþ   ENDþ ENDþ*þDASH.REC=''þMMM.YYYY=OCONV(DATE(),'D4')[4,8]þDASH.REC<1>=MMM.YYYYþYYYY=FIELD(MMM.YYYY,' ',2)þDASH.REC<2>=YYYYþDASH.REC<9>=DASH.REC<1>þDASH.REC<10>=YYYYþDASH.REC<15>=OCONV(DATE(),'D2-')þMTD.SALES=SUM(SALES.REC<2>); DASH.REC<3>=MTD.SALESþMTD.COST.OF.SALES=SUM(SALES.REC<3>)þGROSS.PROFIT=MTD.SALES-MTD.COST.OF.SALESþDASH.REC<5>=GROSS.PROFITþPERCENT=INT((GROSS.PROFIT*1000)/MTD.SALES + .5)þDASH.REC<7>=PERCENTþ*þ** USE DASHBOARD.CLOSING.STATS TO GET YEAR TO DATE TOTALSþ*þSTACKED.1=''þSTACKED.2='SORT DASHBOARD.CLOSING.STATS WITH YYYY = "':YYYY:'" BY YYYY BREAK-ON YYYY PIPE TOTAL AMOUNT PIPE TOTAL COST.OF.SALE ID-SUPP DET-SUPP HDR-SUPP COL-HDR-SUPP NOPAGE'þCALL @EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,SYSTEM.11,REPORT)þMAX.ROWS=DCOUNT(REPORT,CHAR(254))þYTD.SALES=0þYTD.COST.OF.SALES=0þFOR ROW.NO = 1 TO MAX.ROWSþ   ROW=REPORT<ROW.NO>þ   IF INDEX(ROW,'|',1) THENþ      TEST.YYYY=TRIM(FIELD(ROW,'|',1))þ      IF TEST.YYYY = YYYY THENþ         YTD.SALES=TRIM(FIELD(ROW,'|',2))þ         YTD.SALES=ICONV(YTD.SALES,'MD2')þ         YTD.COST.OF.SALES=TRIM(FIELD(ROW,'|',3))þ         YTD.COST.OF.SALES=ICONV(YTD.COST.OF.SALES,'MD2')þ       ENDþ    ENDþ NEXT ROW.NOþDASH.REC<4>=YTD.SALESþGROSS.PROFIT=YTD.SALES-YTD.COST.OF.SALESþIF NOT(YTD.SALES) THENþ   MARGIN=0þ END ELSEþ   MARGIN=INT(GROSS.PROFIT*1000 / YTD.SALES + .5)þ ENDþDASH.REC<6>=GROSS.PROFITþDASH.REC<8>=MARGINþ*þTEMP.AR.REC=AR.REC<1>:@AM:AR.REC<2>:@AM:AR.REC<3>:@AM:AR.REC<4>:@AM:AR.REC<5>þSUM.AR.BALANCES=SUM(TEMP.AR.REC)þDASH.REC<28>=SUM.AR.BALANCESþIF SUM.AR.BALANCES THENþ   DAYS.CURRENT=AR.REC<1>; DASH.REC<30>=DAYS.CURRENT; DASH.REC<31>=INT(DAYS.CURRENT*1000/SUM.AR.BALANCES + .5)þ   DAYS.1.30=AR.REC<2>; DASH.REC<16>=DAYS.1.30; DASH.REC<17>=INT(DAYS.1.30*1000/SUM.AR.BALANCES + .5)þ   DAYS.31.60=AR.REC<3>; DASH.REC<19>=DAYS.31.60; DASH.REC<20>=INT(DAYS.31.60*1000/SUM.AR.BALANCES + .5)þ   DAYS.61.90=AR.REC<4>; DASH.REC<22>=DAYS.61.90; DASH.REC<23>=INT(DAYS.61.90*1000/SUM.AR.BALANCES + .5)þ   DAYS.91=AR.REC<5>; DASH.REC<25>=DAYS.91; DASH.REC<26>=INT(DAYS.91*1000/SUM.AR.BALANCES + .5)þ ENDþCONVERT CHAR(254) TO CHAR(253) IN TEMP.AR.RECþAR.AMOUNTS=TEMP.AR.RECþ*þSUM.AP.BALANCES=SUM(AP.REC)þDASH.REC<29>=SUM.AP.BALANCESþDAYS.CURRENT=AP.REC<1>; DASH.REC<32>=DAYS.CURRENTþDAYS.1.30=AP.REC<2>; DASH.REC<18>=DAYS.1.30þDAYS.31.60=AP.REC<3>; DASH.REC<21>=DAYS.31.60þDAYS.61.90=AP.REC<4>; DASH.REC<24>=DAYS.61.90þDAYS.91=AP.REC<5>; DASH.REC<27>=DAYS.91þTEMP.AP.REC=AP.RECþCONVERT CHAR(254) TO CHAR(253) IN TEMP.AP.RECþAP.AMOUNTS=TEMP.AP.RECþ*þ* DEFAULT CONVERSIONS TO $þCONVS=''þFOR I = 3 TO 32þ      CONVS<I>='$'þ NEXT Iþ* CHANGE THOSE THAT AREN'TþCONVS<7>='%'; CONVS<8>='%'þCONVS<17>='%'; CONVS<20>='%'; CONVS<23>='%'; CONVS<26>='%'; CONVS<31>='%'þCONVS<1>=''; CONVS<2>=''þCONVS<9>=''; CONVS<10>=''þCONVS<13>=''; CONVS<14>=''; CONVS<15>=''þ*þ*þW$PRINTABLE=1þW$PDFABLE=1þOPEN '','WEB.FORMS' TO FILE.WEB.FORMS ELSE RETURNþBEGIN CASEþ   CASE AR.REPORT.FILE <> '' AND AP.REPORT.FILE <> '' AND GP.DICT.NAME <> ''þ      WEB.FORM.NAME='PORTAL.DASHBOARD'þ   CASE GP.DICT.NAME <> '' AND AR.REPORT.FILE <> ''þ      WEB.FORM.NAME='PORTAL.DASHBOARD.SALES.GP.AR'þ   CASE GP.DICT.NAME <> ''þ      WEB.FORM.NAME='PORTAL.DASHBOARD.SALES.GP'þ   CASE AR.REPORT.FILE <> '' AND AP.REPORT.FILE <> ''þ      WEB.FORM.NAME='PORTAL.DASHBOARD.SALES.AR.AP'þ   CASE AR.REPORT.FILE <> ''þ      WEB.FORM.NAME='PORTAL.DASHBOARD.SALES.AR'þ   CASE 1þ      WEB.FORM.NAME='PORTAL.DASHBOARD.SALES'þEND CASEþREAD HTML FROM FILE.WEB.FORMS, WEB.FORM.NAME ELSE HTML=''þ*þ**USER.ID=G$USERIDþ*þW$TITLE='  Portal Dashboard'; CALL PORTAL.SHOW.LAST.UPDATED('ALL')þ*þ*WRITE HTML ON FILE.WEB.FORMS, 'TEST.HTML'þ*þ** DYNAMIC VARIABLESþ*þFOR I = 1 TO 32þ   INSERT.FIELD=DASH.REC<I>þ   IF INSERT.FIELD = '' THEN INSERT.FIELD=Iþ   CONV=CONVS<I>þ   BEGIN CASEþ      CASE CONV = ''; NULLþ      CASE CONV = '$'; INSERT.FIELD=OCONV(INSERT.FIELD+0,'MD2,$')þ      CASE CONV = '%'; INSERT.FIELD=OCONV(INSERT.FIELD+0,'MD1'):'%'þ      CASE 1; INSERT.FIELD=OCONV(INSERT.FIELD,CONV)þ   END CASEþ   IF INSERT.FIELD = '' THEN INSERT.FIELD='&nbsp;'þ   CALL SWAP(HTML,'~':I:'~',INSERT.FIELD)þ NEXT Iþ   *þW$TEXT.DATA=HTMLþWRITE HTML ON FILE.WEB.FORMS, 'LAST.':WEB.FORM.NAMEþRETURNþ*þ*þDISPLAY.ERROR:þ*þW$TYPE='HTML'þMAX.LINES=DCOUNT(ERROR.MSG,CHAR(254))þIF MAX.LINES > 1 THENþ   TEMP.ERROR.MSG=ERROR.MSGþ   ERROR.MSG=''þ   FOR ERROR.LINE = 1 TO MAX.LINESþ      THIS.MSG=TEMP.ERROR.MSG<ERROR.LINE>þ      IF ERROR.MSG <> '' THEN ERROR.MSG:='<br>'þ      ERROR.MSG:=THIS.MSGþ    NEXT ERROR.LINEþ ENDþW$HTML.DATA='<h3>':ERROR.MSG:'</h3>'þRETURNþ*þINITIATE.CALC.PHANTOM:þ*þBEGIN CASEþ   CASE PLATFORM = 'D3' OR PLATFORM = 'JB'þ      EXECUTE "Z REFRESH.DASHBOARD.MTD.STATS ":TYPE.CALC CAPTURING DUMMYþ   CASE 1þ      EXECUTE "PHANTOM REFRESH.DASHBOARD.MTD.STATS ":TYPE.CALC CAPTURING DUMMYþEND CASEþRETURN0011A3SUB.RUNTIME.ERRORSþ0c2SUBROUTINE SUB.RUNTIME.ERRORSþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Report Runtime Errorsþ*þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "MVDB Runtime Errors"þW$TYPE = "HTML"þW$WIDTH = 3þ*þIF G$QUERYMODE THEN RETURN ;* Dont process, just provide title, type & widthþ*þIF WIDGET.USER.DATA(2) # "" THENþ  ACCTFILTER = WIDGET.USER.DATA(2)þ  W$TITLE = "Runtime Errors (User/Account filter = ":ACCTFILTER:")"þEND ELSEþ  IF G$SUBMITTED THENþ    ACCTFILTER = "ALL"þ  END ELSE ;* It's empty, but only becuase nobody has specified a valueþ    ACCTFILTER = OCONV('a','U50BB')þ  ENDþ  WIDGET.USER.DATA(2) = ACCTFILTERþENDþIF WIDGET.USER.DATA(3) # "" THENþ  PROGFILTER = WIDGET.USER.DATA(3)þEND ELSE PROGFILTER = ""þOPEN '','DM,RUNTIME-ERRORS,' TO F.RUNTIME.ERRORS ELSE STOP 201, 'RUNTIME-ERRORS'þXLINE = 'SSELECT DM,RUNTIME-ERRORS, BY-DSND DATE BY-DSND TIME'þIF ACCTFILTER # "ALL" THENþ  XLINE := ' WITH USERPIB = "[':ACCTFILTER:']"'þ  WITH.USED = 1þEND ELSE WITH.USED = 0þIF PROGFILTER # "ALL" AND PROGFILTER # "" THENþ  IF WITH.USED THEN XLINE := ' AND'þ  XLINE := ' WITH PROGNAME = "':PROGFILTER:'"'þENDþEXECUTE XLINE CAPTURING JUNKþIF WIDGET.USER.DATA(1) = 'CLEAR' THENþ  LOOPþ    READNEXT ID ELSE EXITþ    DELETE F.RUNTIME.ERRORS, IDþ  REPEATþ  WIDGET.USER.DATA(1) = ""þENDþIF SYSTEM(11) THENþ  IF SYSTEM(11) > 100 THEN MAX.DISPLAY = 100 ELSE MAX.DISPLAY = SYSTEM(11)þ  W$HTML.DATA = '<h3>1 - ':MAX.DISPLAY:' of ':SYSTEM(11):'</h3>'þ  W$HTML.DATA := '<table><tr>'þ  W$HTML.DATA := '<th>Date / Time</th><th>User</th><th>Error</th>'þ  W$HTML.DATA := '</tr>'þEND ELSEþ  W$HTML.DATA = '<h3>No Errors</h3>'þENDþERR.CNT = 0þLOOPþ  READNEXT ID ELSE EXITþ  READ RECORD FROM F.RUNTIME.ERRORS, ID ELSE CONTINUEþ  DATA RECORD<2,1>þ  EXECUTE "PRINT-ERR DM,MESSAGES, ":RECORD<1>:" (S" CAPTURING ERRþ  *þ  CONVERT @AM TO " " IN ERRþ  ERR = OCONV(ERR,'MCP')þ  ERR = TRIM(ERR)þ  PROG = RECORD<4>þ  DESC = PROG:" ":ERRþ  USERPIB = RECORD<3>þ  STACK = ""þ  FOR N = DCOUNT(RECORD<5>,@VM) TO 1 STEP -1þ    STACK := RECORD<5,N>þ    IF STACK # "" AND N # 1 THEN STACK := ' --> 'þ  NEXT Nþ  IF RECORD<5> # '' THEN DESC := "Stack: ":STACKþ  MD = FIELD( RECORD<3>, ' ', 3 )þ  *þ  * Try and find the source code to include in the feed.þ  *þ  SREC = "" ; FNAME = ""þ  OPEN MD:",MD," TO F.MD THENþ    FNAME = ""þ    READ CREC FROM F.MD, RECORD<4> THENþ      IF CREC<1> = "VR" THEN ;* This is a catalog pointer, file name is in field 4þ        FNAME = FIELD(CREC<4>,' ',1)þ      END ELSE IF CREC<1> = "PQ" THENþ        IF FIELD(CREC<2>, ' ', 1 ) = "HRUN" THENþ          FNAME = FIELD( CREC<2>, ' ', 2 )þ        ENDþ      ENDþ    ENDþ    IF FNAME # "" THENþ      OPEN MD:",":FNAME:"," TO SFILE THENþ        READ SREC FROM SFILE, RECORD<4> ELSE SREC = ""þ      ENDþ    ENDþ  ENDþ  SOURCE.SNIP = ""þ  IF SREC # "" THENþ    CALL SWAP(SREC,'&','&amp;')þ    CALL SWAP(SREC,'<','&lt;')þ    CALL SWAP(SREC,'>','&gt;')þ    LINENO = RECORD<2,1>þ    IF LINENO MATCHES "1N0N" THENþ      START.LINE = LINENO - 3þ      IF START.LINE < 0 THEN START.LINE = 1þ    END ELSE LINENO = 1 ; START.LINE = 1þ    END.LINE = LINENO + 3þ    SOURCE.SNIP = \<code style="font-size:12px" >\þ    FOR LN = START.LINE TO END.LINEþ      LINE = LN "R#4":" ":SREC<LN>þ      SOURCE.SNIP := LINE:'<br />'þ    NEXT LNþ    SOURCE.SNIP := '</code>'þ    EDIT.LINK = '<a href="/dbc/MVDB.WEB.ED?ed_acct=':MD:'&ed_file=':FNAME:'&ed_item=':PROG:'" target="':MD:'_':FNAME:'_':PROG:'">Edit Source</a>'þ    SOURCE.SNIP := EDIT.LINKþ  END ELSEþ    SOURCE.SNIP = 'Unable to open source code for ':RECORD<4>:' in account ':MDþ  ENDþ  DATE = FIELD(ID,'*',1)þ  TIME = FIELD(ID,'*',2)þ  *þ  W$HTML.DATA<-1> = '<tr valign="top"><td>':OCONV(DATE,'D2/'):" ":OCONV(TIME,'MTS'):'</td>'þ  W$HTML.DATA<-1> = '<td>':USERPIB:'</td>'þ  W$HTML.DATA<-1> = '<td>':DESC:'</td>'þ  W$HTML.DATA<-1> = '</tr>'þ  W$HTML.DATA<-1> = '<tr valign="top"><td>&nbsp;</td><td colspan="2">':SOURCE.SNIP:'</td></tr>'þ  ERR.CNT += 1þUNTIL ERR.CNT > 100 DO REPEATþW$HTML.DATA<-1> = '</table>'þ*þW$LINK.LABEL<1> = "Clear Errors"þW$LINK.LOCATION<1> = '1'þW$LINK.UD.POS<1> = 1þW$LINK.UD.VAL<1> = 'CLEAR'þ*þW$LINK.LABEL<2> = "Print"þW$LINK.LOCATION<2> = "C"þW$LINK.ICON<2> = "print.png"þW$LINK.URL<2> = "javascript:printThis(this);"þ*þW$INPUT.PROMPT<1> = "User/Acct Filter"þW$INPUT.TYPE<1> = "TEXT"þW$INPUT.UDPOS<1> = 2þW$INPUT.DEFAULT<1> = WIDGET.USER.DATA(2)þ*þW$INPUT.PROMPT<2> = "Program Filter"þW$INPUT.TYPE<2> = "TEXT"þW$INPUT.UDPOS<2> = 3þW$INPUT.DEFAULT<2> = WIDGET.USER.DATA(3)þ*þRETURN0006B0SUB.SYS.ERRSþ0c2SUBROUTINE SUB.SYS.ERRSþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Show system errorsþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TYPE = "TABLE"þW$TITLE = "Recent System Errors"þW$WIDTH = 3þ*þIF G$QUERYMODE = "1" THEN RETURNþ*þOPEN '','SYSTEM-ERRORS' TO F.SYSTEM.ERRORS ELSE RETURNþ*þXLINE = 'SSELECT SYSTEM-ERRORS BY-DSND DATE BY-DSND TIME'þEXECUTE XLINE CAPTURING JUNKþ*þW$TABLE.COL.LABELS = "Date":@VM:"Time":@VM:"Message":@VM:"Last TCL":@VM:"Pib / User":@VM:"Data"þW$TABLE.COL.JUST = "right":@VM:"right"þ*þ* User data 2 is the number of items to skip forward or backward. Calculateþ* the offset by adding this number to the current offset position in field 1.þ* Then clear out the skip fowrad/backward value.þ*þWIDGET.USER.DATA(1) = WIDGET.USER.DATA(1) + WIDGET.USER.DATA(2)þWIDGET.USER.DATA(2) = 0þIF WIDGET.USER.DATA(1) < 0 THEN WIDGET.USER.DATA(1) = 0þ*þIF WIDGET.USER.DATA(1) > 0 THENþ  W$TITLE := " (":WIDGET.USER.DATA(1)+1:" - ":WIDGET.USER.DATA(1)+11:")"þENDþ*þOFFSET = WIDGET.USER.DATA(1)þFOR SKIPITEM = 1 TO OFFSETþ  READNEXT THROWAWAY ELSE EXITþNEXT SKIPITEMþFOR X = 1 TO 10þ  READNEXT ID ELSE EXITþ  READ EREC FROM F.SYSTEM.ERRORS, ID THENþ    W$TABLE.DATA<X,1> = OCONV( FIELD( ID,'*',1),'D2/')þ    W$TABLE.DATA<X,2> = OCONV( FIELD( ID,'*',2),'MTS')þ    W$TABLE.DATA<X,3> = EREC<4,1>þ    W$TABLE.DATA<X,4> = EREC<22,DCOUNT(EREC<22>,@VM)>þ    W$TABLE.DATA<X,5> = EREC<12,1>þ    W$TABLE.DATA<X,6> = EREC<5,1>þ  ENDþNEXT Xþ*þW$LINK.LABEL<1,1> = "Prev 10"þW$LINK.LABEL<1,2> = "Next 10"þW$LINK.LOCATION<1,1> = "23"þW$LINK.LOCATION<1,2> = "14"þW$LINK.UD.POS<1,1> = 2þW$LINK.UD.POS<1,2> = 2þW$LINK.UD.VAL<1,1> = "-10"þW$LINK.UD.VAL<1,2> = "10"þ*þRETURN00022DUD.EXECUTE.STACKED.CMNDSþ0c2SUBROUTINE UD.EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,NUM.RETURNED,REPORT)þ*þREPORT=''þNUM.RETURNED=1þLIST_VAR = 1þIF STACKED.1 <> '' THENþ   MDPERFORM STACKED.1 RTNLIST LIST_VAR RETURNING RETNO CAPTURING CAPTþ   IF INDEX(RETNO,'No data',1) OR INDEX(CAPT,'No data',1) THENþ      NUM.RETURNED=0þ      RETURNþ    ENDþ   MDPERFORM STACKED.2 PASSLIST LIST_VAR CAPTURING REPORTþ END ELSEþ   MDPERFORM STACKED.2 CAPTURING REPORTþ ENDþIF INDEX(REPORT,'No records',1) THENþ   NUM.RETURNED=0þ ENDþCONVERT '$,' TO '' IN REPORTþRETURNþEND002557BUILD.SAMPLE.PORTAL.FILESþ0c2OPEN '','PORTAL.SALES' TO FI.SALES ELSE STOP 201,'PORTAL.SALES'þOPEN '','PORTAL.AR' TO FI.AR ELSE STOP 201,'PORTAL.AR'þOPEN '','PORTAL.AP' TO FI.AP ELSE STOP 201,'PORTAL.AP'þREAD SALES.1 FROM FI.SALES, 1 ELSE SALES.1=''þREAD AR.1 FROM FI.AR, 1 ELSE AR.1=''þREAD AP.1 FROM FI.AP, 1 ELSE AP.1=''þIF SALES.1 <> '' AND AR.1 <> '' AND AP.1 <> '' THEN STOPþOTODAY=OCONV(DATE(),'D4-')þOYYYY=OTODAY[7,4]þOMM=OTODAY[1,2]+0þREPS=''þREPS<-1>='GREG GRIFFIN'þREPS<-1>='KELLEY JOHNSON'þREPS<-1>='KEVIN PEPE'þREPS<-1>='KIM GONZALEZ'þREPS<-1>='MICHAEL HOUSE'þREPS<-1>='MICHELLE BLACK'þREPS<-1>='MITCH STREET'þREPS<-1>='NATALIE MCFARLAND'þREPS<-1>='PETE COX'þREPS<-1>='PHIL CRAMER'þREPS<-1>='ROBERT HUNT'þREPS<-1>='STEVE SMITH'þREPS<-1>='TAMMY HENDER'þREPS<-1>='TIFFANEY MILLER'þBRANCHES=''þBRANCHES<-1>='CHICAGO'þBRANCHES<-1>='DALLAS'þBRANCHES<-1>='DENVER'þBRANCHES<-1>='FLORIDA'þBRANCHES<-1>='NEW YORK'þBRANCHES<-1>='NORCAL'þBRANCHES<-1>='SOCAL'þBRANCHES<-1>='VEGAS'þREGIONS=''þREGIONS<-1>='CENTRAL'þREGIONS<-1>='EAST'þREGIONS<-1>='MOUNTAIN'þREGIONS<-1>='WEST'þEXECUTE "CLEAR-FILE DATA PORTAL.SALES" CAPTURING DUMMYþJAN12016=ICONV('1-1-16','D')þDATE.RANGE=DATE()-JAN12016þFOR I = 1 TO 10000þ   SALES.REC=''þ   CLOSE.DATE=JAN12016 + RND(DATE.RANGE) + 1þ   SALES.REC<1>=CLOSE.DATEþ   RND.REP=RND(14)+1þ   IF RND.REP < 12 THENþ      RND.PCT=((RND(10)+1)/10)þ      RND.REP=INT(RND.REP * RND.PCT + .5)þ      IF NOT(RND.REP) THEN RND.REP=1þ    ENDþ   REP=REPS<RND.REP>þ   SALES.REC<5>=REPþ   AMOUNT=RND(975000)+25000; * 250 TO 10000þ   SALES.REC<8>=AMOUNTþ   COST.PCT=RND(40) + 50; * 50 TO 90 PERCENTþ   COST.PCT=COST.PCT / 100þ   COST=INT(AMOUNT * COST.PCT + .5)þ   SALES.REC<9>=COSTþ   RND.BRANCH=RND(8)+1þ   IF RND.BRANCH < 6 THENþ      RND.PCT=((RND(10)+1)/10)þ      RND.BRANCH=INT(RND.BRANCH * RND.PCT + .5)þ      IF NOT(RND.BRANCH) THEN RND.BRANCH=1þ    ENDþ   BRANCH=BRANCHES<RND.BRANCH>þ   SALES.REC<13>=BRANCHþ   RND.REGION=RND(4)+1þ   IF RND.REGION < 4 THENþ      RND.PCT=((RND(10)+1)/10)þ      RND.REGION=INT(RND.REGION * RND.PCT + .5)þ      IF NOT(RND.REGION) THEN RND.REGION=1þ    ENDþ   REGION=REGIONS<RND.REGION>þ   SALES.REC<14>=REGIONþ   WRITE SALES.REC ON FI.SALES, Iþ NEXT IþCUSTS=''þCUSTS<-1>="ABC Computers"þCUSTS<-1>="ABC Electronics Corp"þCUSTS<-1>="Ajax Computer Electronics"þCUSTS<-1>="Alfreds Futterkiste"þCUSTS<-1>="Ana Trujillo Emparedados y helados"þCUSTS<-1>="Antonio Moreno Taqueria"þCUSTS<-1>="Around the Horn"þCUSTS<-1>="B'S Beverages"þCUSTS<-1>="Bakers Goods"þCUSTS<-1>="Berglunds snabbkop"þCUSTS<-1>="Best Computer Company"þCUSTS<-1>="Better Bytes"þCUSTS<-1>="Better Computing"þCUSTS<-1>="Better Connection"þCUSTS<-1>="Bills Shoes & Gopeds"þCUSTS<-1>="Bits and Bytes Inc"þCUSTS<-1>="Blauer See Delikatessen"þCUSTS<-1>="Blondel pere et fils"þCUSTS<-1>="Bobs Used Cycles"þCUSTS<-1>="Bon app"þCUSTS<-1>="Bottom-Dollar Markets"þCUSTS<-1>="Cactus Comidas para llevar"þCUSTS<-1>="Centro comercial Moctezuma"þCUSTS<-1>="Chop-suey Chinese"þCUSTS<-1>="Classic Computers"þCUSTS<-1>="Comp Data Inc."þCUSTS<-1>="Comp Products"þCUSTS<-1>="Computer Fancy"þCUSTS<-1>="Computer Portables Inc."þCUSTS<-1>="Computer Sitters"þCUSTS<-1>="Computer Tech"þCUSTS<-1>="Computer Tips"þCUSTS<-1>="Computer Town"þCUSTS<-1>="Computer Trainers"þCUSTS<-1>="Computer Warehouse"þCUSTS<-1>="Computers Etc."þCUSTS<-1>="Computers Galore"þCUSTS<-1>="Computers Inc.Systems"þCUSTS<-1>="Computers N More"þCUSTS<-1>="Computers R Us"þCUSTS<-1>="Consolidated Holdings"þCUSTS<-1>="Cyber Products"þCUSTS<-1>="Data Bits"þCUSTS<-1>="Data Comp"þCUSTS<-1>="Data Net"þCUSTS<-1>="Die Wandernde Kuh"þCUSTS<-1>="Disk Products"þCUSTS<-1>="Disks N More"þCUSTS<-1>="Drachenblut Delikatessen"þCUSTS<-1>="Du monde entier"þCUSTS<-1>="Eastern Connection"þCUSTS<-1>="Electronic Company"þCUSTS<-1>="Ernst Handel"þCUSTS<-1>="Familia Arquibaldo"þCUSTS<-1>="FISSA Fabrica Inter. Salchichas S.A."þCUSTS<-1>="Folies gourmandes"þCUSTS<-1>="For Computers Inc."þCUSTS<-1>="France restauration"þCUSTS<-1>="Franchi S.p.A."þCUSTS<-1>="Frankenversand"þCUSTS<-1>="Furia Bacalhau e Frutos do Mar"þCUSTS<-1>="Future Computers"þCUSTS<-1>="Future In Computing"þCUSTS<-1>="Galeria del gastronomo"þCUSTS<-1>="Godos Cocina Tipica"þCUSTS<-1>="Gourmet Lanchonetes"þCUSTS<-1>="Great Lakes Food Market"þCUSTS<-1>="GROSELLA-Restaurante"þCUSTS<-1>="Hanari Carnes"þCUSTS<-1>="HILARION-Abastos"þCUSTS<-1>="Hungry Coyote Import Store"þCUSTS<-1>="HUNGRY HOWIES PIZZA"þCUSTS<-1>="Hungry Owl All-Night Grocers"þCUSTS<-1>="Intercom Products"þCUSTS<-1>="Island Trading"þCUSTS<-1>="Joe'S Computers"þCUSTS<-1>="Koniglich Essen"þCUSTS<-1>="La corne d'abondance"þCUSTS<-1>="Lazy K Kountry Store"þCUSTS<-1>="Lehmanns Marktstand"þCUSTS<-1>="Let'S Stop N Shop"þCUSTS<-1>="LILA-Supermercado"þCUSTS<-1>="LINO-Delicateses"þCUSTS<-1>="Logical Computers"þCUSTS<-1>="Lonesome Pine Restaurant"þCUSTS<-1>="Longo Toyota"þCUSTS<-1>="Magazzini Alimentari Riuniti"þCUSTS<-1>="Memory Capturers"þCUSTS<-1>="Memory Plus Inc."þCUSTS<-1>="Modem Products"þCUSTS<-1>="Morgenstern Gesundkost"þCUSTS<-1>="Net Connect"þCUSTS<-1>="North/South"þCUSTS<-1>="Number One in Computing"þCUSTS<-1>="Oceano Atlantico Ltda."þCUSTS<-1>="Old World Delicatessen"þCUSTS<-1>="Ones & Zeros Inc."þCUSTS<-1>="Ottilies Kaseladen"þCUSTS<-1>="Paris specialites"þCUSTS<-1>="Pericles Comidas clasicas"þCUSTS<-1>="Piccolo und mehr"þCUSTS<-1>="Printer Products"þCUSTS<-1>="Que Delicia"þCUSTS<-1>="Queen Cozinha"þCUSTS<-1>="QUICK-Stop"þCUSTS<-1>="Rancho grande"þCUSTS<-1>="Rattlesnake Canyon Grocery"þCUSTS<-1>="Real Computers"þCUSTS<-1>="Reggiani Caseifici"þCUSTS<-1>="Ricardo Adocicados"þCUSTS<-1>="Richter Supermarkt"þCUSTS<-1>="Sante Gourmet"þCUSTS<-1>="Save-a-lot Markets"þCUSTS<-1>="Secure Computers"þCUSTS<-1>="Seven Seas Imports"þCUSTS<-1>="Software Inc"þCUSTS<-1>="Specialites du monde"þCUSTS<-1>="Split Rail Beer & Ale"þCUSTS<-1>="Supremes delices"þCUSTS<-1>="The Big Cheese"þCUSTS<-1>="The Cracker Box"þCUSTS<-1>="The Only Computers"þCUSTS<-1>="Tortuga Restaurante"þCUSTS<-1>="Tradicao Hipermercados"þCUSTS<-1>="Trail'S Head Gourmet Provisioners"þCUSTS<-1>="TRG"þCUSTS<-1>="USA Computers"þCUSTS<-1>="Victuailles en stock"þCUSTS<-1>="Vins et alcools Chevalier"þCUSTS<-1>="Wartian Herkku"þCUSTS<-1>="Wellington Importadora"þCUSTS<-1>="White Clover Markets"þCUSTS<-1>="White House"þCUSTS<-1>="Wilman Kala"þCUSTS<-1>="Wolski  Zajazd"þEXECUTE "CLEAR-FILE DATA PORTAL.AR" CAPTURING DUMMYþFOR I = 1 TO 5000þ   AR.REC=""þ   CUST=CUSTS<RND(135)+1>þ   AR.REC<1>=CUSTþ   PCT=RND(100)+1þ   IF PCT > 4 THENþ      * PAIDþ      QTR=RND(18)+1; * BASED ON DATE BEFORE 7-1-20þ      BEGIN CASEþ         CASE OYYYY > 2020; QTR+=2þ         CASE OMM >= 10; QTR+=2þ         CASE OMM >= 7;  QTR+=1þ      END CASEþ      BEGIN CASEþ         CASE QTR <= 4;   * 2016þ            BREAKS=71:@AM:87:@AM:93þ            BOY=ICONV("01-01-16","D")þ            QTR.IN.YEAR=QTRþ         CASE QTR <= 8;   * 2017þ            BREAKS=73:@AM:89:@AM:94þ            BOY=ICONV("01-01-17","D")þ            QTR.IN.YEAR=QTR-4þ         CASE QTR <= 12;   * 2018þ            BREAKS=77:@AM:89:@AM:94þ            BOY=ICONV("01-01-18","D")þ            QTR.IN.YEAR=QTR-8þ         CASE QTR <= 16;   * 2019þ            BREAKS=77:@AM:90:@AM:94þ            BOY=ICONV("01-01-19","D")þ            QTR.IN.YEAR=QTR-12þ         CASE 1;          * 2020þ            BREAKS=71:@AM:87:@AM:93þ            BOY=ICONV("01-01-20","D")þ            QTR.IN.YEAR=QTR-16þ      END CASEþ      BOQ=BOY + (QTR.IN.YEAR-1)*90þ      DATE.PAID=BOQ + RND(90) + 1þ      DAYS.IN.PERIOD=RND(30)+1þ      PCT=RND(100)þ      LOCATE PCT IN BREAKS BY "AR" SETTING CATEGORY ELSE NULLþ      MOS.BEFORE=CATEGORY-1þ      DUE.DATE=DATE.PAID - (MOS.BEFORE*30) - DAYS.IN.PERIODþ      AR.REC<20>=DUE.DATEþ      AR.REC<8>=DATE.PAIDþ      AR.REC<50>=0; * BALANCEþ      AMOUNT=RND(975000)+25000; * 250 TO 10000þ      AR.REC<6>=AMOUNTþ      WRITE AR.REC ON FI.AR, Iþ    END ELSEþ      BREAKS=60:@AM:81:@AM:91:@AM:96þ      PCT=RND(100)+1þ      LOCATE PCT IN BREAKS BY "AR" SETTING CATEGORY ELSE NULLþ      DAY.IN.MONTH=RND(30)þ      BEGIN CASEþ         CASE CATEGORY = 1þ            * NOT YET DUEþ            DUE.DATE=DATE()+DAY.IN.MONTHþ         CASE CATEGORY = 2þ            * 1-30þ            DUE.DATE=DATE()-DAY.IN.MONTHþ         CASE CATEGORY = 3þ            * 31-60þ            DUE.DATE=DATE() - (30 + DAY.IN.MONTH)þ         CASE CATEGORY = 4þ            * 60-90þ            DUE.DATE=DATE() - (60 + DAY.IN.MONTH)þ         CASE 1þ            * 90+þ            DUE.DATE=DATE() - (90 + RND(120))þ      END CASEþ      AR.REC<20>=DUE.DATEþ      AR.REC<8>=''; * DATE PAIDþ      AMOUNT=RND(975000)+25000; * 250 TO 10000þ      AR.REC<6>=AMOUNTþ      AR.REC<50>=AMOUNT; * BALANCEþ      WRITE AR.REC ON FI.AR, Iþ    ENDþ NEXT IþEXECUTE "CLEAR-FILE DATA PORTAL.AP" CAPTURING DUMMYþFOR I = 1 TO 100þ   AP.REC=""þ   BREAKS=56:@AM:90:@AM:95:@AM:97þ   PCT=RND(100)+1þ   LOCATE PCT IN BREAKS BY "AR" SETTING CATEGORY ELSE NULLþ   DAY.IN.MONTH=RND(30)þ   BEGIN CASEþ      CASE CATEGORY = 1þ         * NOT YET DUEþ         DUE.DATE=DATE()+DAY.IN.MONTHþ      CASE CATEGORY = 2þ         * 1-30þ         DUE.DATE=DATE()-DAY.IN.MONTHþ      CASE CATEGORY = 3þ         * 31-60þ         DUE.DATE=DATE() - (30 + DAY.IN.MONTH)þ      CASE CATEGORY = 4þ         * 60-90þ         DUE.DATE=DATE() - (60 + DAY.IN.MONTH)þ      CASE 1þ         * 90+þ         DUE.DATE=DATE() - (90 + DAY.IN.MONTH)þ   END CASEþ   AP.REC<20>=DUE.DATEþ   AP.REC<8>=''; * DATE PAIDþ   AMOUNT=RND(975000)+25000; * 250 TO 10000þ   AP.REC<6>=AMOUNTþ   AP.REC<50>=AMOUNT; * BALANCEþ   WRITE AP.REC ON FI.AP, Iþ NEXT I000715SUB.DEMO.MAP.CANADAþ0c2SUBROUTINE SUB.DEMO.MAP.CANADAþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: US Map demonstrationþ* 6-1-15 ZUMASYS CONVERT MAP.DATA ID DELIMETER FROM * TO #þ*þ* Modified by Peter Schellenbach of Zumasys 06-08-15:þ*  Changed test of ENUM after EXECUTE to test SYSTEM(11) instead.þ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "Demo - Canadian Provinces by Alphabet"þW$TYPE = "MAP:Canada"þW$WIDTH = 3þ*þIF G$QUERYMODE THEN RETURNþ*þOPEN '','MVDB.MAP.DATA' TO F.MVDB.MAP.DATA ELSE STOP 201, 'MVDB.MAP.DATA'þ*þW$CHART.OPTIONS<-1> = 'animation="0"'þW$CHART.OPTIONS<-1> = 'showShadow="1"'þ* 10-17-16 deprecated * W$CHART.OPTIONS<-1> = 'showBevel="1"'þW$CHART.OPTIONS<-1> = 'legendShadow="1"'þW$CHART.OPTIONS<-1> = 'legendAllowDrag="1"'þ*þ*6-1-15*EXECUTE \SSELECT MVDB.MAP.DATA = "CANADA*]" BY A1\ RETURNING ENUM CAPTURING ETXTþEXECUTE \SSELECT MVDB.MAP.DATA = "CANADA#]" BY A1\ RETURNING ENUM CAPTURING ETXT; *6-1-15þ*PJS 06-08-15*IF ENUM[1,3]="404" THENþIF SYSTEM(11) THEN ; *PJS 06-08-15*þ LOOPþ   READNEXT ID ELSE ID="\\EOF"þ UNTIL ID="\\EOF" DOþ   READ I FROM F.MVDB.MAP.DATA,ID THENþ*6-1-15*     W$MAP.IDS<1,-1> = FIELD(ID,'*',2)þ     W$MAP.IDS<1,-1> = FIELD(ID,'#',2); *6-1-15*þ     W$MAP.VALUES<1,-1> = (SEQ(I<1>[1,1]) - (SEQ('A')-1))þ     W$MAP.VALUE.TOOLTEXT<1,-1> := I<2>:' (':I<1>:')'þ   ENDþ REPEATþENDþ*þW$MAP.RANGE.NAME<1,1> = "Early in Alphabet"þW$MAP.RANGE.LOW<1,1> = "1"þW$MAP.RANGE.HIGH<1,1> = "10"þW$MAP.RANGE.COLOR<1,1> = "GREEN"þW$MAP.RANGE.NAME<1,2> = "Middle of Alphabet"þW$MAP.RANGE.LOW<1,2> = "10"þW$MAP.RANGE.HIGH<1,2> = "18"þW$MAP.RANGE.COLOR<1,2> = "YELLOW"þW$MAP.RANGE.NAME<1,3> = "Late in Alphabet"þW$MAP.RANGE.LOW<1,3> = "18"þW$MAP.RANGE.HIGH<1,3> = "27"þW$MAP.RANGE.COLOR<1,3> = "RED"þ*þINCLUDE WBPD SOURCE.VIEW.ICONþ*þRETURN00029ESUB.DEMO.DNUTþ0c2SUBROUTINE SUB.DEMO.DNUTþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Doughnut Chart Demonstrationþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "Demo - Defects by Reason"þW$TYPE = "FCDOUGHNUT2D"þW$WIDTH = 1þ*þIF G$QUERYMODE THEN RETURNþ*þCATEG = ""þCATEG<1> = 20þCATEG<2> = 30þCATEG<3> = 20þCATEG<4> = 9þ*þCATEG.NAMES = ''þCATEG.NAMES<1> = "Choices"þCATEG.NAMES<2> = "Material"þCATEG.NAMES<3> = "Errors"þCATEG.NAMES<4> = "Shipping"þ*þFOR N = 1 TO DCOUNT(CATEG.NAMES,@AM)þ  W$PIE.LABELS<1,N> = CATEG.NAMES<N>þ  W$PIE.VALUES<1,N> = CATEG<N>þNEXT NþW$PIE.CAPTION = "Defects"þ*þINCLUDE WBPD SOURCE.VIEW.ICONþ*þRETURN001B05REFRESH.DASHBOARD.CLOSING.STATSþ0c2EXECUTE "TERM 132" CAPTURING DUMMYþOPEN '','MVDB.SUBS' TO FI.MVDB.SUBS ELSE NULLþERRORS=''þOPEN '','DASHBOARD.CLOSING.STATS' TO FI.CLOSING.STATS ELSE ERRORS<-1>='UNABLE TO OPEN DASHBOARD.CLOSING.STATS'þHAVE.DICT.STATS=1þOPEN 'DICT','DASHBOARD.CLOSING.STATS' TO FI.DICT.CLOSING.STATS ELSE HAVE.DICT.STATS=0; ERRORS<-1>='UNABLE TO OPEN DICT DASHBOARD.CLOSING.STATS'þOPEN '','MVDB.CONTROL' TO FI.MVDB.CONTROL ELSE NULLþIF ERRORS <> '' THENþ   WRITE ERRORS ON FI.MVDB.CONTROL, 'CLOSING.STATS.ERRORS'þ   IF HAVE.DICT.STATS THENþ      WRITE 'CLOSING.STATS.ERRORS' ON FI.DICT.CLOSING.STATS, '*LAST.UPDATE'þ    ENDþ   STOPþ ENDþREAD PLATFORM FROM FI.MVDB.CONTROL, 'PLATFORM' ELSE PLATFORM='D3'þBEGIN CASEþ   CASE PLATFORM = 'UD'þ      EXECUTE.STACKED.CMNDS='UD.EXECUTE.STACKED.CMNDS'þ   CASE PLATFORM = 'UV'þ      EXECUTE.STACKED.CMNDS='UV.EXECUTE.STACKED.CMNDS'þ   CASE PLATFORM = 'QM'þ      EXECUTE.STACKED.CMNDS='EXECUTE.STACKED.CMNDS'þ   CASE 1þ      * D3 AND JBASE ARE THE SAMEþ      EXECUTE.STACKED.CMNDS='EXECUTE.STACKED.CMNDS'þEND CASEþ*þDIM SETUP.PARAMS(30)þMATREAD SETUP.PARAMS FROM FI.MVDB.CONTROL, 'PORTAL.SALES.REPORT.SETUP' ELSEþ   MAT SETUP.PARAMS=''þ ENDþEQUATE ACCOUNT TO SETUP.PARAMS(1)þEQUATE REPORT.FILE TO SETUP.PARAMS(2)þEQUATE SALE.DATE.DICT TO SETUP.PARAMS(3)þEQUATE SALE.MONTH.DICT TO SETUP.PARAMS(4)þEQUATE SALE.YEAR.DICT TO SETUP.PARAMS(5)þEQUATE SALE.AMOUNT.DICT TO SETUP.PARAMS(6)þEQUATE COST.OF.SALE.AMOUNT.DICT TO SETUP.PARAMS(7)þEQUATE SALESMAN.DICT TO SETUP.PARAMS(8)þEQUATE BRANCH.DICT TO SETUP.PARAMS(9)þEQUATE REGION.DICT TO SETUP.PARAMS(10)þEQUATE SALE.DATE.AMC TO SETUP.PARAMS(11)þEQUATE SALE.AMOUNT.AMC TO SETUP.PARAMS(12)þEQUATE SALE.AMOUNT.CONV TO SETUP.PARAMS(13)þEQUATE SALE.AMOUNT.COOR TO SETUP.PARAMS(14)þEQUATE COST.OF.SALE.AMOUNT.AMC TO SETUP.PARAMS(15)þEQUATE COST.OF.SALE.AMOUNT.CONV TO SETUP.PARAMS(16)þEQUATE COST.OF.SALE.AMOUNT.COOR TO SETUP.PARAMS(17)þEQUATE SALESMAN.AMC TO SETUP.PARAMS(18)þEQUATE SALESMAN.TFILE TO SETUP.PARAMS(19)þEQUATE BRANCH.AMC TO SETUP.PARAMS(20)þEQUATE BRANCH.TFILE TO SETUP.PARAMS(21)þEQUATE REGION.AMC TO SETUP.PARAMS(22)þEQUATE REGION.TFILE TO SETUP.PARAMS(23)þ*þ**FILE.PATH=ACCOUNT:',':REPORT.FILE:','þFILE.PATH='DASHBOARD.SALES.FILE'þ*þWRITE 'UPDATING' ON FI.DICT.CLOSING.STATS, '*LAST.UPDATE'þODATE=OCONV(DATE(),'D4-')þYYYY=ODATE[7,4]þFIRST.YYYY=YYYY-4þCMND='SELECT DASHBOARD.CLOSING.STATS WITH YYYY GE "':FIRST.YYYY:'"'þEXECUTE CMND CAPTURING DUMMYþSYSTEM.11=0þLOOPþ   READNEXT DCS.ID ELSE DCS.ID='DONE'þUNTIL DCS.ID = 'DONE' DOþ   SYSTEM.11=1þ   DELETE FI.CLOSING.STATS, DCS.IDþREPEATþIF SYSTEM.11 THENþ   IF PLATFORM = 'D3' THENþ      READV INDEX.DEFS FROM FI.DICT.CLOSING.STATS, 'DASHBOARD.CLOSING.STATS', 8 ELSE INDEX.DEFS=''þ      IF NOT(INDEX(INDEX.DEFS,'(G*1)',1)) THENþ         EXECUTE "CREATE-INDEX DASHBOARD.CLOSING.STATS A0(G*1)" CAPTURING DUMMYþ       ENDþ      IF NOT(INDEX(INDEX.DEFS,'(G2*1)',1)) THENþ         EXECUTE "CREATE-INDEX DASHBOARD.CLOSING.STATS A0(G2*1)" CAPTURING DUMMYþ       ENDþ      IF NOT(INDEX(INDEX.DEFS,'(G*2)',1)) THENþ         EXECUTE "CREATE-INDEX DASHBOARD.CLOSING.STATS A0(G*2)" CAPTURING DUMMYþ       ENDþ      IF NOT(INDEX(INDEX.DEFS,'(G1*2)',1)) THENþ         EXECUTE "CREATE-INDEX DASHBOARD.CLOSING.STATS A0(G1*2)" CAPTURING DUMMYþ       ENDþ      IF NOT(INDEX(INDEX.DEFS,'(G1*1)',1)) THENþ         EXECUTE "CREATE-INDEX DASHBOARD.CLOSING.STATS A0(G1*1)" CAPTURING DUMMYþ         EXECUTE "CREATE-INDEX DASHBOARD.CLOSING.STATS A0(G3*1)" CAPTURING DUMMYþ         EXECUTE 'CREATE-INDEX DASHBOARD.CLOSING.STATS A0(G3*1):"*":0(G1*1)' CAPTURING DUMMYþ       ENDþ    END ELSEþ      EXECUTE "CREATE-INDEX DASHBOARD.CLOSING.STATS SALESMAN" CAPTURING DUMMYþ      EXECUTE "CREATE-INDEX DASHBOARD.CLOSING.STATS BRANCH" CAPTURING DUMMYþ      EXECUTE "CREATE-INDEX DASHBOARD.CLOSING.STATS SALESMAN*YYYYMM" CAPTURING DUMMYþ      EXECUTE "CREATE-INDEX DASHBOARD.CLOSING.STATS YYYYMM*BRANCH" CAPTURING DUMMYþ      EXECUTE "CREATE-INDEX DASHBOARD.CLOSING.STATS YYYYMM" CAPTURING DUMMYþ      EXECUTE "CREATE-INDEX DASHBOARD.CLOSING.STATS REGION" CAPTURING DUMMYþ      EXECUTE "CREATE-INDEX DASHBOARD.CLOSING.STATS REGION*YYYYMM" CAPTURING DUMMYþ    ENDþ ENDþ*þFOR YEAR = FIRST.YYYY TO YYYYþ    WRITE 'UPDATING ':YEAR ON FI.DICT.CLOSING.STATS, '*LAST.UPDATE'þ   *þ  ** DO FOR EACH YEAR SEPARATELY TO LIMIT SIZE OF LIST RETURNINGþ   *þ   STACKED.1='SELECT ':FILE.PATH:' WITH ':SALE.YEAR.DICT:' = "':YEAR:'"'þ**WRITE DUMMY ON FI.DICT.CLOSING.STATS, '*124.SELECT'þ   STACKED.2='SORT ':FILE.PATH:' WITH ':SALESMAN.DICT:' # "" BY ':SALE.MONTH.DICT:' BY ':SALESMAN.DICT:' ID-SUPP ':SALE.MONTH.DICT:' PIPE ':SALESMAN.DICT:' PIPE ':SALE.AMOUNT.DICT:' PIPE ':COST.OF.SALE.AMOUNT.DICTþ   STACKED.2:=' PIPE ':BRANCH.DICT:' PIPE ':REGION.DICTþ   STACKED.2:=' HDR-SUPP COL-HDR-SUPP NOPAGE'þ   CALL @EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,SYSTEM.11,REPORT)þ   IF SYSTEM.11 THENþ      MAX.ROWS=DCOUNT(REPORT,CHAR(254))þ      STATS.IDS=''þ      STATS.AMTS=''þ      STATS.COS.AMTS=''þ      STATS.IDS.CNTR=0þ      FOR ROW.NO = 1 TO MAX.ROWSþ         ROW=REPORT<ROW.NO>þ         IF INDEX(ROW,'|',1) THENþ            MONTH=TRIM(FIELD(ROW,'|',1))+0þ            IF MONTH < 10 THENþ               YYYYMM=YEAR:'0':MONTHþ             END ELSE YYYYMM=YEAR:MONTHþ            REP=TRIM(FIELD(ROW,'|',2))þ            AMOUNT=TRIM(FIELD(ROW,'|',3))þ            CONVERT '$,' TO '' IN AMOUNTþ            AMOUNT=ICONV(AMOUNT,'MD2')þ            IF NOT(NUM(AMOUNT)) THEN AMOUNT=0þ            COST.OF.SALE.AMOUNT=TRIM(FIELD(ROW,'|',4))þ            CONVERT '$,' TO '' IN COST.OF.SALE.AMOUNTþ            COST.OF.SALE.AMOUNT=ICONV(COST.OF.SALE.AMOUNT,'MD2')þ            IF NOT(NUM(COST.OF.SALE.AMOUNT)) THEN COST.OF.SALE.AMOUNT=0þ            IF AMOUNT OR COST.OF.SALE.AMOUNT THENþ               BRANCH=TRIM(FIELD(ROW,'|',5))þ               REGION=TRIM(FIELD(ROW,'|',6))þ               STATS.ID=REP:'*':YYYYMM:'*':BRANCH:'*':REGIONþ               LOCATE STATS.ID IN STATS.IDS SETTING STATS.PNTR ELSEþ                  STATS.IDS.CNTR+=1þ                  STATS.PNTR=STATS.IDS.CNTRþ                  STATS.IDS<STATS.PNTR>=STATS.IDþ                ENDþ               STATS.AMTS<STATS.PNTR>+=AMOUNTþ               STATS.COS.AMTS<STATS.PNTR>+=COST.OF.SALE.AMOUNTþ             ENDþ          ENDþ       NEXT ROW.NOþ      MAX.STATS.IDS=DCOUNT(STATS.IDS,CHAR(254))þ      FOR ID.CNTR = 1 TO MAX.STATS.IDSþ         AMOUNT=STATS.AMTS<ID.CNTR>þ         COST.OF.SALE.AMOUNT=STATS.COS.AMTS<ID.CNTR>þ         IF AMOUNT > 0 OR COST.OF.SALE.AMOUNT THENþ            WRITE AMOUNT:CHAR(254):COST.OF.SALE.AMOUNT ON FI.CLOSING.STATS, STATS.IDS<ID.CNTR>þ          ENDþ       NEXT ID.CNTRþ    ENDþ NEXT YEARþTIME.STAMP=TIME()þTIME.STAMP=FIELD(TIME.STAMP,'.',1)þTIME.STAMP=STR('0',5-LEN(TIME.STAMP)):TIME.STAMPþWRITE DATE():TIME.STAMP ON FI.DICT.CLOSING.STATS, '*LAST.UPDATE'þWRITE DATE():TIME.STAMP ON FI.DICT.CLOSING.STATS, '*LAST.UPDATED'þEND0002FASUB.PORTAL.REPORTS.DOCUMENTATIONþ0c2SUBROUTINE SUB.PORTAL.REPORTS.DOCUMENTATIONþ*þ* Dashboard Widgetþ*þINCLUDE WBPD MVDB.INCLUDEþ*þ* Copyright (C) information here if relevantþ* Any other descriptive comments hereþ* and hereþ*þW$TITLE = "Portal Reports Documentation"þW$TYPE = "HTML"               ;* Filled in by editorþW$WIDTH = 3                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þ*** Extract data from GLOBAL, WIDGET variables hereþ*þ*** Open files hereþ*þOPEN '','WEB.FORMS' TO FI.WEB.FORMS ELSE RETURNþREAD WEB.FORM FROM FI.WEB.FORMS, 'PORTAL.REPORT.DOCUMENTATION' ELSE RETURNþW$HTML.DATA=WEB.FORMþ*þ*** Load any relevant data into GLOBAL, WIDGET variables hereþ*   as needed for subsequent use by other widgetsþ*þRETURN000667SUB.FREEþ0c2SUBROUTINE SUB.FREEþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Display disk usageþ*þINCLUDE WBPD MVDB.INCLUDEþ*þIF WIDGET.USER.DATA(1) = "TEXT" THENþ  W$TYPE = "TEXT"þ  W$PRINTABLE = 1þEND ELSEþ  W$TYPE = "FC3DPIE"þENDþW$TITLE = "D3 Free Space"þW$WIDTH = 2þ*þIF G$QUERYMODE THEN RETURNþ*þIF WIDGET.USER.DATA(1) = "TEXT" THENþ  W$TITLE := ' (Text Display)'þ  EXECUTE "FREE" CAPTURING OUTPUTþ  W$TEXT.DATA = OUTPUTþEND ELSEþ  W$TITLE := ' (Chart Display)'þ  EXECUTE "WHAT (LSW" CAPTURING WHATþ  ATTR = DCOUNT(WHAT,@AM)þ  LOOP WHILE WHAT<ATTR> = "" DO ATTR -= 1 REPEATþ  *þ  WHAT = TRIM(WHAT<ATTR>)þ  FRAMESIZE = FIELD(WHAT, ' ', 8)þ  MAXFID = FIELD( WHAT, ' ', 6 )þ  SYSBASE = FIELD( WHAT, ' ', 4 )þ  SYS.BYTE = SYSBASE * FRAMESIZEþ  SYS.FRAME = SYS.BYTE/FRAMESIZEþ  AVAIL.FRAME = FIELD( WHAT, ' ', 7 )þ  USED.FRAME = (MAXFID-SYSBASE)-AVAIL.FRAMEþ  *þ  MAXBYTE = MAXFID * FRAMESIZEþ  MAXMB = ICONV(MAXBYTE/1000000,"MD0")þ  SYS.MB = SYS.BYTE/1000000þ  USED.BYTE = USED.FRAME * FRAMESIZEþ  USED.MB = USED.BYTE/1000000þ  AVAIL.BYTE = AVAIL.FRAME * FRAMESIZEþ  AVAIL.MB = AVAIL.BYTE/1000000þ  *þ  W$PIE.LABELS<1,1> = "Used (":OCONV(SYS.MB+USED.MB,'MD0,'):")"þ  W$PIE.LABELS<1,2> = "Available (":OCONV(AVAIL.MB,'MD0,'):")"þ  *þ  W$PIE.VALUES<1,1> = SYS.MB+USED.MBþ  W$PIE.VALUES<1,2> = AVAIL.MBþ  *þ  W$PIE.CAPTION = "D3 Free Space"þENDþ*þ* Set up linksþ*þW$LINK.LABEL<1,1> = "Pie"þW$LINK.LABEL<1,2> = "Text"þW$LINK.LOCATION<1,1> = "2"þW$LINK.LOCATION<1,2> = "2"þW$LINK.UD.POS<1,1> = 1þW$LINK.UD.POS<1,2> = 1þW$LINK.UD.VAL<1,1> = "FC3DPIE"þW$LINK.UD.VAL<1,2> = "TEXT"þ*þINCLUDE WBPD SOURCE.VIEW.ICONþ*þRETURN	0002FESUB.PORTAL.RUN.DOCUMENTATIONþ0c2SUBROUTINE SUB.PORTAL.RUN.DOCUMENTATIONþ*þ* Dashboard Widgetþ*þINCLUDE WBPD MVDB.INCLUDEþ*þ* Copyright (C) information here if relevantþ* Any other descriptive comments hereþ* and hereþ*þW$TITLE = "Running the Portal Dashboard Reports"þW$TYPE = "HTML"               ;* Filled in by editorþW$WIDTH = 3                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þ*** Extract data from GLOBAL, WIDGET variables hereþ*þ*** Open files hereþ*þOPEN '','WEB.FORMS' TO FI.WEB.FORMS ELSE RETURNþREAD WEB.FORM FROM FI.WEB.FORMS, 'PORTAL.REPORT.RUN.DOCUMENTATION' ELSE RETURNþW$HTML.DATA=WEB.FORMþ*þ*** Load any relevant data into GLOBAL, WIDGET variables hereþ*   as needed for subsequent use by other widgetsþ*þRETURN000925SUB.DEMO.BULLETXXþ0c2    SUBROUTINE SUB.DEMO.BULLETXXþ* Changed by PORTBAS -> SUBROUTINE SUB.DEMO.BULLETþ* @(#) SUB.DEMO.BULLETXX Ported to jBASE 17:55:31  08 JUL 2015þ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Bullet widget demoþ*þ*#MAKE# RL $OPTIONS D3þ    INCLUDE WBPD MVDB.INCLUDEþ*þ    W$TITLE = "Bullet Chart Demo - Sales Volume"þ    W$TYPE = "VBULLET"þ    W$WIDTH = 2þ*þ    IF G$QUERYMODE THEN RETURNþ*þ    IF WIDGET.USER.DATA(1) # "" THENþ        W$TYPE = WIDGET.USER.DATA(1)þ    END ELSE WIDGET.USER.DATA(1) = "VBULLET"þ    IF WIDGET.USER.DATA(2) = "" THEN WIDGET.USER.DATA(2) = 1þ    PALETTE = WIDGET.USER.DATA(2)þ*þ    W$FW.LOWER.LIMIT = 0þ    W$FW.UPPER.LIMIT = 800000þ*þ    W$FW.COLOR.RANGE<1,1> = 0þ    W$FW.COLOR.RANGE<2,1> = 400000þ    W$FW.COLOR.RANGE<3,1> = "RED"þ*þ    W$FW.COLOR.RANGE<1,2> = 400000þ    W$FW.COLOR.RANGE<2,2> = 650000þ    W$FW.COLOR.RANGE<3,2> = "YELLOW"þ*þ    W$FW.COLOR.RANGE<1,3> = 650000þ    W$FW.COLOR.RANGE<2,3> = 800000þ    W$FW.COLOR.RANGE<3,3> = "GREEN"þ*þ    W$FW.METER.VALUE = 725000þ    W$FW.METER.TARGET = 775000þ*þ    W$FW.CAPTION = "July Sales"þ    W$FW.SUBCAPTION = "Billings"þ    W$FW.CHART.PALETTE = PALETTEþ*þ    W$FW.NUMBER.PREFIX = "$"þ    W$FW.NUMBER.SUFFIX = ""þ*þ    W$FW.TICKMARKS<1> = 1     ;* Display tickmarksþ    W$FW.TICKMARKS<2> = 1     ;* Display values by tickmarksþ    W$FW.TICKMARKS<3> = "B"   ;* Show tickmarks below the graphþ    W$FW.TICKMARKS<4> = ""    ;* Let it calculate thisþ    W$FW.TICKMARKS<5> = 4     ;* 4 minor tickmarks between the major onesþ*þ*W$CHART.OPTIONS = "paletteThemeColor='#a2287a'"þ*þ    W$FW.DD.WIDGET<1,1> = "Drilldown Demo"þ    W$FW.DD.UD.POS<1,1,1> = 1þ    W$FW.DD.UD.VAL<1,1,1> = W$FW.METER.VALUEþ    W$FW.DD.UD.POS<1,1,2> = 2þ    W$FW.DD.UD.VAL<1,1,2> = WIDGET.USER.DATA(1)þ*þ    W$INPUT.PROMPT = "Bullet Chart Style"þ    W$INPUT.TYPE = "SELECT"þ    W$INPUT.SELOPTS = "Horizontal":@VM:"Vertical"þ    W$INPUT.SELVALS = "HBULLET":@VM:"VBULLET"þ    W$INPUT.UDPOS = 1þ    W$INPUT.DEFAULT = WIDGET.USER.DATA(1)þ*þ    W$INPUT.PROMPT<2> = "Palette"þ    W$INPUT.TYPE<2> = "SELECT"þ    W$INPUT.SELOPTS<2> = "1":@VM:"2":@VM:"3":@VM:"4":@VM:"5"þ    W$INPUT.SELVALS<2> = "1":@VM:"2":@VM:"3":@VM:"4":@VM:"5"þ    W$INPUT.UDPOS<2> = 2þ    W$INPUT.DEFAULT<2> = WIDGET.USER.DATA(2)þ*þ    INCLUDE WBPD SOURCE.VIEW.ICONþ*þ    RETURN000478SUB.DEMO.SS.LINEþ0c2SUBROUTINE SUB.DEMO.SS.LINEþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Single Series Line Chart Demonstrationþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "Demo - Monthly Sales Summary"þW$TYPE = "FCLINE"þW$WIDTH = 1þ*þIF G$QUERYMODE THEN RETURNþ*þW$BAR.LABELS = "Sales (USD)"þW$BAR.CAPTION = "Monthly Sales (USD)"þW$BAR.XMEMO = "Month"þW$BAR.YMEMO = "Sales (USD)"þ*þSALES = ""þSALES<1> = "28452536"þSALES<2> = "31208425"þSALES<3> = "30245519"þSALES<4> = "40425111"þSALES<5> = "36515188"þSALES<6> = "39144100"þSALES<7> = "41655215"þSALES<8> = "36615152"þSALES<9> = "43944161"þSALES<10> = "42251594"þSALES<11> = "48833151"þSALES<12> = "50122415"þ*þFOR N = 1 TO 12þ  W$BAR.VALUES<1,N> = OCONV(SALES<N>,'MD02')þ*  W$BAR.XLABELS<1,N> = OCONV(ICONV(N:"/1",'D'),'DMA')[1,1]þ  W$BAR.XLABELS<1,N> = OCONV(N*30-15,'DMA')[1,3]þNEXT Nþ*þW$BAR.TREND.BEG = OCONV(SALES<1>,'MD02')þW$BAR.TREND.END = OCONV(SALES<12>,'MD02')þW$BAR.TREND.OPTS = "thickness='2' displayValue='Trend'"þW$CHART.OPTIONS<-1> = "showValues='0'"þW$CHART.OPTIONS<-1> = "animation='1'"þ*þINCLUDE WBPD SOURCE.VIEW.ICONþ*þRETURN0020BFBUILD.DEMO.FINANCIAL.PICTUREþ0c2SUBROUTINE BUILD.DEMO.FINANCIAL.PICTURE(YYYY,TODAY,LAST.EOM)þOPEN '','MVDB.CONTROL' TO FILE.CONTROL ELSE STOP 201,'MVDB.CONTROL'þREAD REC FROM FILE.CONTROL, 'DEMO.FINANCIAL.PICTURE' ELSE REC=''þREC<1>=YYYYþREC<2>=YYYY-1þREC<3>=YYYY-1þLAST.THREE=YYYY-2:CHAR(253):YYYY-1:CHAR(253):YYYYþ*þOPEN '','MVDB.CONTROL' TO FILE.SALES ELSE STOP 201,'SALES'þREAD THIS.YEAR.SALES FROM FILE.SALES, 'MONTHLY.':YYYY ELSE THIS.YEAR.SALES=''þREAD LAST.YEAR.SALES FROM FILE.SALES, 'MONTHLY.':(YYYY-1) ELSE LAST.YEAR.SALES=''þREAD PREV.YEAR.SALES FROM FILE.SALES, 'MONTHLY.':(YYYY-2) ELSE PREV.YEAR.SALES=''þREAD PREV.YEAR.GPS FROM FILE.SALES, 'MONTHLY.GPS.':(YYYY-2) ELSE SALES.2.YEARS.AGO=''þREAD THIS.YEAR.GPS FROM FILE.SALES, 'MONTHLY.GPS.':YYYY ELSE THIS.YEAR.GPS=''þREAD LAST.YEAR.GPS FROM FILE.SALES, 'MONTHLY.GPS.':(YYYY-1) ELSE LAST.YEAR.GPS=''þREAD THIS.YEAR.PARTS FROM FILE.SALES, 'MONTHLY.PARTS.':YYYY ELSE THIS.YEAR.PARTS=''þREAD LAST.YEAR.PARTS FROM FILE.SALES, 'MONTHLY.PARTS.':(YYYY-1) ELSE LAST.YEAR.PARTS=''þREAD THIS.YEAR.SERVICES FROM FILE.SALES, 'MONTHLY.SERVICES.':YYYY ELSE THIS.YEAR.SERVICES=''þREAD LAST.YEAR.SERVICES FROM FILE.SALES, 'MONTHLY.SERVICES.':(YYYY-1) ELSE LAST.YEAR.SERVICES=''þFY.LAST=SUM(LAST.YEAR.SALES)þREC<7>=FY.LASTþFY.PARTS=SUM(LAST.YEAR.PARTS)þREC<18>=FY.PARTSþFY.SERVICES=SUM(LAST.YEAR.SERVICES)þREC<25>=FY.SERVICESþLAST.MONTH.NO=OCONV(LAST.EOM,'D2-')[1,2]+0þYTD.THIS=0þYTD.LAST=0þYTD.PREV=0þGPS.THIS=0þGPS.LAST=0þGPS.PREV=0þPARTS.THIS=0þPARTS.LAST=0þSERVICES.THIS=0þSERVICES.LAST=0þTHIS.YEAR.MONTHLY.SALES=''þTHIS.YEAR.MONTHLY.GPS=''þFOR MO.NO = 1 TO LAST.MONTH.NOþ   YTD.THIS+=THIS.YEAR.SALES<MO.NO>þ   THIS.YEAR.MONTHLY.SALES<1,1,MO.NO>=THIS.YEAR.SALES<MO.NO>þ   YTD.LAST+=LAST.YEAR.SALES<MO.NO>þ   YTD.PREV+=PREV.YEAR.SALES<MO.NO>þ   GPS.THIS+=THIS.YEAR.GPS<MO.NO>þ   THIS.YEAR.MONTHLY.GPS<1,1,MO.NO>=THIS.YEAR.GPS<MO.NO>þ   GPS.LAST+=LAST.YEAR.GPS<MO.NO>þ   GPS.PREV+=PREV.YEAR.GPS<MO.NO>þ   PARTS.THIS+=THIS.YEAR.PARTS<MO.NO>þ   PARTS.LAST+=LAST.YEAR.PARTS<MO.NO>þ   SERVICES.THIS+=THIS.YEAR.SERVICES<MO.NO>þ   SERVICES.LAST+=LAST.YEAR.SERVICES<MO.NO>þ NEXT MO.NOþREC<67>=LAST.THREEþREC<68,3>=THIS.YEAR.MONTHLY.SALESþREC<69,3>=THIS.YEAR.MONTHLY.GPSþREC<36>=YTD.PREVþREC<37>=GPS.PREVþCONVERT CHAR(254) TO CHAR(252) IN PREV.YEAR.SALESþREC<68,1>=PREV.YEAR.SALESþCONVERT CHAR(254) TO CHAR(252) IN PREV.YEAR.GPSþREC<69,1>=PREV.YEAR.GPSþCONVERT CHAR(254) TO CHAR(252) IN LAST.YEAR.SALESþREC<68,2>=LAST.YEAR.SALESþCONVERT CHAR(254) TO CHAR(252) IN LAST.YEAR.GPSþREC<69,2>=LAST.YEAR.GPSþLAST.FY.GPS=SUM(LAST.YEAR.GPS)þREC<4>=YTD.THISþREC<5>=YTD.LASTþDELTA.SALES=YTD.THIS-YTD.LASTþDELTA.PCT=(DELTA.SALES*100)/YTD.LASTþREC<6>=DELTA.PCTþREC<8>=GPS.THISþREC<9>=GPS.LASTþDELTA.GPS=GPS.THIS-GPS.LASTþDELTA.PCT=(DELTA.GPS*100)/GPS.LASTþREC<10>=DELTA.PCTþREC<11>=LAST.FY.GPSþTHIS.GPS.PCT=INT(GPS.THIS * 1000 / YTD.THIS + .5)þREC<12>=THIS.GPS.PCTþLAST.GPS.PCT=INT(GPS.LAST * 1000 / YTD.LAST + .5)þPREV.GPS.PCT=INT(GPS.PREV * 1000 / YTD.PREV + .5)þREC<13>=LAST.GPS.PCTþFY.LAST.GPS.PCT=INT(LAST.FY.GPS * 1000 / FY.LAST + .5)þREC<14>=FY.LAST.GPS.PCTþREC<15>=PARTS.THISþREC<22>=SERVICES.THISþREC<16>=PARTS.LASTþREC<23>=SERVICES.LASTþDELTA.PARTS=PARTS.THIS-PARTS.LASTþDELTA.PARTS.PCT=(DELTA.PARTS*100)/PARTS.LASTþREC<17>=DELTA.PARTS.PCTþDELTA.SERVICES=SERVICES.THIS-SERVICES.LASTþDELTA.SERVICES.PCT=(DELTA.SERVICES*100)/SERVICES.LASTþREC<24>=DELTA.SERVICES.PCTþTHIS.PARTS.PCT=INT(PARTS.THIS * 1000 / YTD.THIS + .5)þREC<19>=THIS.PARTS.PCTþLAST.PARTS.PCT=INT(PARTS.LAST * 1000 / YTD.LAST + .5)þREC<20>=LAST.PARTS.PCTþFY.PARTS.PCT=INT(FY.PARTS * 1000 / FY.LAST + .5)þREC<21>=FY.PARTS.PCTþTHIS.SERVICES.PCT=INT(SERVICES.THIS * 1000 / YTD.THIS + .5)þREC<26>=THIS.SERVICES.PCTþLAST.SERVICES.PCT=INT(SERVICES.LAST * 1000 / YTD.LAST + .5)þREC<27>=LAST.SERVICES.PCTþFY.SERVICES.PCT=INT(FY.SERVICES * 1000 / FY.LAST + .5)þREC<28>=FY.SERVICES.PCTþREC<29>=YYYYþREC<30>=OCONV(LAST.EOM,'D2/')þREC<31>=YYYY-1þREC<32>=YYYY-2þ*þ** DETERMINE PCT OF PARTS FOR PREVIOUS YEAR BETWEEN 40.0% AND 60.0%þ*þDELTA=RND(200);  * -10.0 TO 10.0þPREV.PART.PCT=500+(DELTA-100)þPREV.PART.AMT=INT(YTD.PREV * PREV.PART.PCT/1000 + .5)þPREV.SERVICE.AMT=YTD.PREV-PREV.PART.AMTþPREV.SERVICE.PCT=1000-PREV.PART.PCTþ*þ** MARGINS, PARTS, AND SERVICES FOR DRILLDOWNSþ*þREC<38>=LAST.THREEþYEARS=LAST.THREEþMAX.YEARS=DCOUNT(YEARS,CHAR(253))þREC<39>=PREV.GPS.PCT:CHAR(253):LAST.GPS.PCT:CHAR(253):THIS.GPS.PCTþREC<40>=PREV.PART.AMT:CHAR(253):PARTS.LAST:CHAR(253):PARTS.THISþREC<41>=PREV.PART.PCT:CHAR(253):LAST.PARTS.PCT:CHAR(253):THIS.PARTS.PCTþREC<42>=PREV.SERVICE.AMT:CHAR(253):SERVICES.LAST:CHAR(253):SERVICES.THISþREC<43>=PREV.SERVICE.PCT:CHAR(253):LAST.SERVICES.PCT:CHAR(253):THIS.SERVICES.PCTþ*þ** NET INCOME 10% OF SALESþ*þREC<33>=INT(GPS.THIS * .1 + .5)þREC<34>=INT(LAST.FY.GPS * .1 + .5)þREC<35>=INT(SUM(PREV.YEAR.GPS) * .1 + .5)þ*þ** HARD CODE DAYS TO PAYþ*þREC<44>=35þREC<45>=39þREC<46>=41þREC<54>=65:CHAR(253):20:CHAR(253):10:CHAR(253):5þREC<55>=63:CHAR(253):21:CHAR(253):10:CHAR(253):6þREC<56>=64:CHAR(253):19:CHAR(253):8:CHAR(253):9þ*þ** BUILD REP TOTALSþ*þREPS='John,Katherine,Chris,Carrie,Sally,Jan,Bart,Linus,Max'þCONVERT ',' TO CHAR(253) IN REPSþMAX.REPS=DCOUNT(REPS,CHAR(253))þREC<47>=REPSþDEVIATION=35;  * 35% DEVIATIONþMOS.IN.YEAR=''þFOR YEAR.CNTR = 1 TO MAX.YEARSþ   YEAR.AMTS=REC<68,YEAR.CNTR>þ   MOS.IN.YEAR<1,YEAR.CNTR>=DCOUNT(YEAR.AMTS,CHAR(252))þ   ANN.SALES.AMT=SUM(YEAR.AMTS)þ   ANN.GP.AMT=SUM(REC<69,YEAR.CNTR>)þ   GP.FACTOR=ANN.GP.AMT/ANN.SALES.AMTþ   NUM.ITEMS=MAX.REPSþ   TOT.SCAT.AMT=ANN.SALES.AMTþ   GOSUB SCATTER.VALUESþ   FOR REP.CNTR = 1 TO MAX.REPSþ      REP.SALES.AMT=RETURN.AMOUNTS<1,1,REP.CNTR>þ      REC<48,REP.CNTR,YEAR.CNTR>=REP.SALES.AMTþ      REP.GP.AMT=INT(REP.SALES.AMT * GP.FACTOR + .5)þ      REC<49,REP.CNTR,YEAR.CNTR>=REP.GP.AMTþ    NEXT REP.CNTRþ NEXT YEAR.CNTRþ*þ** CREATE MONTHLIES FOR EACH REP AND SAVE IN SALES.YYYYþ*þDEVIATION=20þFOR YEAR.CNTR = 1 TO MAX.YEARSþ   YEAR=YEARS<1,YEAR.CNTR>þ   NUM.ITEMS=MOS.IN.YEAR<1,YEAR.CNTR>þ   SALES.REC=''þ   GPS.REC=''þ   FOR REP.CNTR = 1 TO MAX.REPSþ      REP=REPS<1,REP.CNTR>þ      SALES.REC<1,REP.CNTR>=REPþ      GPS.REC<1,REP.CNTR>=REPþ      TOT.SCAT.AMT=REC<48,REP.CNTR,YEAR.CNTR>þ      GOSUB SCATTER.VALUESþ      SALES.REC<2,REP.CNTR>=RETURN.AMOUNTSþ      TOT.SCAT.AMT=REC<49,REP.CNTR,YEAR.CNTR>þ      GOSUB SCATTER.VALUESþ      GPS.REC<2,REP.CNTR>=RETURN.AMOUNTSþ    NEXT REP.CNTRþ   WRITE SALES.REC ON FILE.CONTROL, 'SALES.':YEARþ   WRITE GPS.REC ON FILE.CONTROL, 'GPS.':YEARþ NEXT YEAR.CNTRþ*þ** BUILD SERVICES AND PARTSþ*þPARTS='Doohickey A,Doohickey B,Doohickey C,Doohickey D'þCONVERT ',' TO CHAR(253) IN PARTSþMAX.PARTS=DCOUNT(PARTS,CHAR(253))þREC<52>=PARTSþDEVIATION=35þFOR YEAR.CNTR = 1 TO MAX.YEARSþ   ANN.PART.AMT=REC<40,YEAR.CNTR>þ   NUM.ITEMS=MAX.PARTSþ   TOT.SCAT.AMT=ANN.PART.AMTþ   GOSUB SCATTER.VALUESþ   FOR PART.CNTR = 1 TO MAX.PARTSþ      REC<53,PART.CNTR,YEAR.CNTR>=RETURN.AMOUNTS<1,1,PART.CNTR>þ    NEXT PART.CNTRþ NEXT YEAR.CNTRþ*þSERVICES='Diagnostics,Repair,Custom Machining,Preventative Maintenance'þCONVERT ',' TO CHAR(253) IN SERVICESþMAX.SERVICES=DCOUNT(SERVICES,CHAR(253))þREC<50>=SERVICESþDEVIATION=35þFOR YEAR.CNTR = 1 TO MAX.YEARSþ   ANN.SERVICE.AMT=REC<42,YEAR.CNTR>þ   NUM.ITEMS=MAX.SERVICESþ   TOT.SCAT.AMT=ANN.SERVICE.AMTþ   GOSUB SCATTER.VALUESþ**CRT 'YEAR.CNTR=':YEAR.CNTRþ**CRT 'ANN.SERVICE.AMT=':ANN.SERVICE.AMTþ**CRT 'RETURN.AMOUNTS=':RETURN.AMOUNTS:; DEBUGþ   FOR SERVICE.CNTR = 1 TO MAX.SERVICESþ      REC<51,SERVICE.CNTR,YEAR.CNTR>=RETURN.AMOUNTS<1,1,SERVICE.CNTR>þ    NEXT SERVICE.CNTRþ NEXT YEAR.CNTRþWRITE REC ON FILE.CONTROL, 'DEMO.FINANCIAL.PICTURE'þRETURNþ*þSCATTER.VALUES:þ*þRETURN.AMOUNTS=''þRUNNING.AMT=0þLINEAR.PCT=100/NUM.ITEMSþMAX.DEVIATION=INT((LINEAR.PCT * DEVIATION/100) * 200)þHALF.DEVIATION=INT(MAX.DEVIATION/2 + .5)þRUNNING.PCT=0þLESS.1=NUM.ITEMS-1þMID.WAY=INT(NUM.ITEMS/2 + .5)þFOR SCAT.CNTR = 1 TO LESS.1þ   RANDOM.SCAT=RND(MAX.DEVIATION)þ   PCT=LINEAR.PCT + ((HALF.DEVIATION-RANDOM.SCAT) / 100)þ   RUNNING.PCT+=PCTþ   AMT=INT(TOT.SCAT.AMT * PCT/100 + .5)þ   RUNNING.AMT+=AMTþ   IF MID.WAY THENþ      IF RUNNING.AMT > (TOT.SCAT.AMT / 2 + .5) THENþ         * RUNNING TOO HIGH SO REDUCTþ         MAX.DEVIATION=INT((LINEAR.PCT * DEVIATION/100) * 125)þ         HALF.DEVIATION=INT(MAX.DEVIATION/2 + .5)þ       ENDþ    ENDþ   RETURN.AMOUNTS<1,1,-1>=AMTþ NEXT SCAT.CNTRþRETURN.AMOUNTS<1,1,-1>=TOT.SCAT.AMT - RUNNING.AMTþRETURNþEND0001CDSUB.PORTAL.DOCUMENTATIONþ0c2SUBROUTINE SUB.PORTAL.DOCUMENTATIONþ*þ* Dashboard Widgetþ*þINCLUDE WBPD WWW.INCLUDEþINCLUDE WBPD MVDB.INCLUDEþ*þ* Copyright (C) Zumasys, Incþ*þW$TITLE='Portal Documentation'þW$TYPE='HTML'þW$WIDTH = 1                    ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þOPEN '','WEB.FORMS' TO FILE.WEB.FORMS ELSE RETURNþREAD WEB.FORM FROM FILE.WEB.FORMS, 'PORTAL.DOCUMENTATION' ELSE RETURNþW$HTML.DATA=WEB.FORMþRETURN00062BSUB.SYS.ERR.BARþ0c2    SUBROUTINE SUB.SYS.ERR.BARþ* Changed by PORTBAS -> SUBROUTINE SUB.SYS.ERRSþ* @(#) SUB.SYS.ERR.BAR Ported to jBASE 17:55:32  08 JUL 2015þ*  The following variable names were convertedþ*   DATEþ* þ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Show system errorsþ*þ    INCLUDE WBPD MVDB.INCLUDEþ*þ    W$TYPE = "FCCOLUMN2D"þ    W$TITLE = "System Errors by Day For Each Day"þ    W$WIDTH = 3þ*þ    IF G$QUERYMODE = "1" THEN RETURNþ*þ    OPEN '','SYSTEM-ERRORS' TO F.SYSTEM.ERRORS ELSE RETURNþ*þ    BASE.DATE = DATE() - 29þ    XLINE = 'SSELECT SYSTEM-ERRORS BY-DSND DATE BY-DSND TIME WITH DATE GT "':OCONV(BASE.DATE,'D2/'):'"'þ    EXECUTE XLINE CAPTURING JUNKþ*þ*þ    W$BAR.LABELS<1> = "Errors from ":OCONV(BASE.DATE,'D2/'):" Thru ":OCONV(DATE(),'D2/')þ    W$BAR.TYPE = "clustered"þ*þ    LOOPþ        READNEXT ID ELSE EXITþ        Date = FIELD(ID,'*',1)þ        IF Date < BASE.DATE THEN EXITþ*þ        W$BAR.VALUES<1,(Date-BASE.DATE)+1> += 1þ    REPEATþ*þ    FOR X = BASE.DATE TO DATE()þ        OFFSET = (BASE.DATE-X)+1þ        W$BAR.XLABELS<1,OFFSET> = OCONV(X,'DD')þ    NEXT Xþ*þ    W$BAR.YMEMO = "Error Records"þ    W$BAR.XMEMO = "Day of Month"þ*þ    W$BAR.TREND.BEG<1> = "3"þ    W$BAR.TREND.END<1> = "13"þ    W$BAR.TREND.OPTS<1> = "thickness='4' color='ff0000' displayValue='Bad Trend'"þ    W$BAR.TREND.BEG<2> = "11"þ    W$BAR.TREND.END<2> = "8"þ    W$BAR.TREND.OPTS<2> = "thickness='10' color='00ff00' displayValue='Good Trend'"þ*þ    W$LINK.LABEL = "Detail"þ    W$LINK.LOCATION = "2"þ    W$LINK.DD.WIDGET = "System Errors"þ*þ    RETURN0002BASUB.SHOW.SESSIONþ0c2SUBROUTINE SUB.SHOW.SESSIONþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Show session contentsþ*þINCLUDE WBPD MVDB.INCLUDEþINCLUDE WBPD WWW.INCLUDEþ*þW$TYPE = "TABLE"þW$TITLE = "Web Session Contents"þW$WIDTH = 3þ* þIF G$QUERYMODE THEN RETURNþ*þREAD REC FROM F.WEB.SESSION, SESSION$ID ELSE REC = ""þW$TABLE.COL.LABELS<1,1> = "Variable"þW$TABLE.COL.LABELS<1,2> = "Value"þW$TABLE.DATA<1,1> = "Session ID"þW$TABLE.DATA<1,2> = SESSION$IDþFOR N = 1 TO DCOUNT(REC<1>, @VM)þ  W$TABLE.DATA<N+1,1> = REC<1,N>þ  VAL = REC<2,N>þ  CONVERT CHAR(2) TO "^" IN VALþ  CONVERT CHAR(3) TO "]" IN VALþ  CONVERT CHAR(4) TO "\" IN VALþ  W$TABLE.DATA<N+1,2> = VALþNEXT Nþ*þRETURN001133SUB.ADMIN.CONFIGþ0c2SUBROUTINE SUB.ADMIN.CONFIGþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Administrative configuration widget.þ*þINCLUDE WBPD WWW.INCLUDEþINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "Administrative Configuration Widget"þW$TYPE = "HTML" ;* or HTML, FCPIE, FCBAR, etc.þW$WIDTH = 2 ;* 1 = narrow, 2 = medium, 3 = full-widthþ*þIF G$QUERYMODE THEN RETURN ;* Dont process, just provide title, type & widthþ*þOPEN '','MVDB.CONTROL' TO F.MVDB.CONTROL ELSEþ  W$TEXT.INFO = "Unable to open MVDB.CONTROL"þ  RETURNþENDþOPEN '','MVDB.THEMES' TO F.MVDB.THEMES ELSE þ  W$TEXT.INFO = "Unable to open MVDB.THEMES"þ  RETURNþENDþW$TEXT.INFO = "" ;* No widget content at this point.þ*þREAD SETTINGS.REC FROM F.MVDB.CONTROL, 'MVDB.SETTINGS' ELSE SETTINGS.REC = ""þIF G$SUBMITTED = 1 THENþ  FOR N = 1 TO 15þ    SETTINGS.REC<N> = WIDGET.USER.DATA(N)þ  NEXT Nþ  WRITE SETTINGS.REC ON F.MVDB.CONTROL, 'MVDB.SETTINGS'þ  W$HTML.DATA = "Settings saved."þENDþIF SETTINGS.REC<1> # "" THENþ  W$HTML.DATA := '<br /><a href="/dbc/MVDB.WEB.ED?ed_file=MVDB.SUBS&ed_item=':SETTINGS.REC<1>:'" target="MVDB.SUBS_':SETTINGS.REC<1>:'">Edit Subroutine: ':SETTINGS.REC<1>:'</a>'þENDþIF SETTINGS.REC<5> = "" THEN SETTINGS.REC<5> = 24þIF SETTINGS.REC<3> = "" THEN SETTINGS.REC<3> = 20þIF SETTINGS.REC<4> = "" THENþ  LOCATE "SERVER_PORT" IN CGI$VARS SETTING POS THENþ    SETTINGS.REC<4> = CGI$VALS<POS>þ  ENDþENDþIF SETTINGS.REC<9> = '' THEN SETTINGS.REC<9> = 'UTF-8'þ*þW$INPUT.PROMPT<1> = "User Auth Sub"þW$INPUT.TYPE<1> = "TEXT"þW$INPUT.UDPOS<1> = 1þW$INPUT.DEFAULT<1> = SETTINGS.REC<1>þW$INPUT.PARAMS<1> = 'size="40"'þ*þW$INPUT.PROMPT<2> = "Password Req?"þW$INPUT.TYPE<2> = "SELECT"þW$INPUT.SELOPTS<2> = "Yes":@VM:"No"þW$INPUT.SELVALS<2> = "0":@VM:"1"þW$INPUT.UDPOS<2> = 2þW$INPUT.DEFAULT<2> = SETTINGS.REC<2>þ*þW$INPUT.PROMPT<3> = "Failure Tolerance Period"þW$INPUT.TYPE<3> = "TEXT"þW$INPUT.UDPOS<3> = 3þW$INPUT.DEFAULT<3> = SETTINGS.REC<3>þW$INPUT.PARAMS<3> = 'size="5"'þ*þW$INPUT.PROMPT<4> = "TCP Port"þW$INPUT.TYPE<4> = "TEXT"þW$INPUT.UDPOS<4> = 4þW$INPUT.DEFAULT<4> = SETTINGS.REC<4>þW$INPUT.PARAMS<4> = 'size="5"'þ*þW$INPUT.PROMPT<5> = "Session Timeout (hours)"þW$INPUT.TYPE<5> = "TEXT"þW$INPUT.UDPOS<5> = 5þW$INPUT.DEFAULT<5> = SETTINGS.REC<5>þW$INPUT.PARAMS<5> = 'size="5"'þ*þIF SETTINGS.REC<6> = '' THEN SETTINGS.REC<6> = 0þW$INPUT.PROMPT<6> = "GMT Offset"þW$INPUT.TYPE<6> = "SELECT"þGMT.VAL.LIST = ''; GMT.OPT.LIST = ''þFOR X = 12 TO 1 STEP -1þ  GMT.OPT.LIST<1,-1> = 'GMT -':Xþ  GMT.VAL.LIST<1,-1> = X * (-1)þNEXT XþGMT.OPT.LIST<1,-1> = 'GMT'þGMT.VAL.LIST<1,-1> = 0þFOR X = 1 TO 12þ  GMT.OPT.LIST<1,-1> = 'GMT +':Xþ  GMT.VAL.LIST<1,-1> = XþNEXT XþW$INPUT.SELOPTS<6> = GMT.OPT.LISTþW$INPUT.SELVALS<6> = GMT.VAL.LISTþW$INPUT.UDPOS<6> = 6þW$INPUT.DEFAULT<6> = SETTINGS.REC<6>þ*þW$INPUT.PROMPT<7> = "Alternate Logo Image"þW$INPUT.TYPE<7> = "TEXT"þW$INPUT.UDPOS<7> = 7þW$INPUT.DEFAULT<7> = SETTINGS.REC<7>þ*þEXECUTE 'SSELECT MVDB.THEMES' CAPTURING JUNKþTHEME.LIST = ''þLOOPþ  READNEXT THEME.ID ELSE EXITþ  READV CSS.NAME FROM F.MVDB.THEMES, THEME.ID, 1 ELSE CSS.NAME = ''þ  IF CSS.NAME # '' THENþ    THEME.LIST<1,-1> = CSS.NAMEþ    THEME.LIST<2,-1> = THEME.IDþ  ENDþREPEATþW$INPUT.PROMPT<8> = "Dashboard Theme"þW$INPUT.TYPE<8> = "SELECT"þW$INPUT.SELOPTS<8> = 'Default Theme':@VM:THEME.LIST<2>þW$INPUT.SELVALS<8> = '':@VM:THEME.LIST<2>þW$INPUT.UDPOS<8> = 8þW$INPUT.DEFAULT<8> = SETTINGS.REC<8>þ*þW$INPUT.PROMPT<9> = 'Character Set'þW$INPUT.TYPE<9> = "TEXT"þW$INPUT.UDPOS<9> = 9þW$INPUT.DEFAULT<9> = SETTINGS.REC<9>þ*þW$INPUT.PROMPT<10> = "Auto-Trim Sessions"þW$INPUT.TYPE<10> = "SELECT"þW$INPUT.SELOPTS<10> = 'No':@VM:'Yes'þW$INPUT.SELVALS<10> = 'N':@VM:'Y'þW$INPUT.UDPOS<10> = 10þW$INPUT.DEFAULT<10> = SETTINGS.REC<10>þ*þW$INPUT.PROMPT<11> = "Auto-Refresh"þW$INPUT.TYPE<11> = "SELECT"þW$INPUT.SELOPTS<11> = 'No':@VM:'Yes'þW$INPUT.SELVALS<11> = 'N':@VM:'Y'þW$INPUT.UDPOS<11> = 11þW$INPUT.DEFAULT<11> = SETTINGS.REC<11>þ*þ*WEBSERVICE*þW$INPUT.PROMPT<12> = "Allow 'webservice' logins"þW$INPUT.TYPE<12> = "SELECT"þW$INPUT.SELOPTS<12> = 'No':@VM:'Yes'þW$INPUT.SELVALS<12> = 'N':@VM:'Y'þW$INPUT.UDPOS<12> = 12þW$INPUT.DEFAULT<12> = SETTINGS.REC<12>þ*þ*EMAILED REPORTS*þW$INPUT.PROMPT<13> = "Allow 'emailed' logins"þW$INPUT.TYPE<13> = "SELECT"þW$INPUT.SELOPTS<13> = 'No':@VM:'Yes'þW$INPUT.SELVALS<13> = 'N':@VM:'Y'þW$INPUT.UDPOS<13> = 13þW$INPUT.DEFAULT<13> = SETTINGS.REC<13>þ*þW$INPUT.BUTTON = "Save"þ*þRETURN003063SUB.PORTAL.AR.REPORTSþ0c2SUBROUTINE SUB.PORTAL.AR.REPORTSþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE='Portal AR'; CALL PORTAL.SHOW.LAST.UPDATED('AR')þW$TYPE = "FC2DPIE"þW$WIDTH = 2þ*þIF G$QUERYMODE THEN RETURNþ*þEQUATE REPORT.TYPE TO WIDGET.USER.DATA(1)þW$PDFABLE=1þOPEN 'DICT','DASHBOARD.BALANCES' TO FI.DICT.DASHBOARD.BALANCES ELSEþ   W$TYPE='TEXT'þ   W$TEXT.DATA='UNABLE TO OPEN DICT DASHBOARD.BALANCES'þ   RETURNþ ENDþ*þ* LAYOUT OF THE *CURRENT.AR.STATS RECORDþ*þ* PERIOD.AMOUNTS DATA LAYOUTþ* 1 PERIOD 1 AMOUNTþ* 2 PERIOS 2 AMOUNTþ* 3 PERIOD 3 AMOUNTþ* 4 PERIOD 4 AMOUNTþ* 5þ* 6 YEAR ] YEAR ] YEARþ* 7 PERIOD 1 NUMBER \ PERIOD 2 NUMBER \ PERIOD 3 NUMBER \ PERIOD 4 NUMBERþ* 8 PERIOD 1 AMOUNT \ PERIOD 2 AMOUNT \ PERIOD 3 AMOUNT \ PERIOD 4 AMOUNTþ* 9 YEAR 1 TOTAL DAYS ] YEAR TOTAL DAYS ] YEAR 3 TOTAL DAYS ] YEAR 4 TOTAL DAYSþ* 10 YEAR 1 JAN # PAID\ FEB # PAID ... ] YEAR 2 JAN # PAID \þ* 11 YEAR 1 JAN # TOTAL DAYS \ FEB TOTAL DAYS ....þ*þDIM AR.AMOUNTS(30)þMATREAD AR.AMOUNTS FROM FI.DICT.DASHBOARD.BALANCES, '*CURRENT.AR.STATS' ELSE MAT AR.AMOUNTS=''þEQUATE YEARS TO AR.AMOUNTS(6)þNUM.YEARS=DCOUNT(YEARS,@VM)þEQUATE ANNUAL.NUMBERS TO AR.AMOUNTS(7)þEQUATE ANNUAL.AMOUNTS TO AR.AMOUNTS(8)þEQUATE ANNUAL.TOTAL.DAYS TO AR.AMOUNTS(9)þEQUATE MONTHLY.NUMBER.PAID TO AR.AMOUNTS(10)þEQUATE MONTHLY.TOTAL.DAYS TO AR.AMOUNTS(11)þEQUATE CUSTOMERS TO AR.AMOUNTS(12)þEQUATE CUST.AMT.DUES TO AR.AMOUNTS(13)þEQUATE CUST.MOST.DAYS.DUE TO AR.AMOUNTS(14)þEQUATE CUST.TOTAL.1000.DAYS TO AR.AMOUNTS(15)þEQUATE CUST.NUM.1000.DAYS TO AR.AMOUNTS(16)þEQUATE CUST.TOTAL.60.DAYS TO AR.AMOUNTS(17)þEQUATE CUST.NUM.60.DAYS TO AR.AMOUNTS(18)þEQUATE HIGHEST.AMTS.CUSTS TO AR.AMOUNTS(19)þEQUATE HIGHEST.AMTS TO AR.AMOUNTS(20)þEQUATE HIGHEST.DAYS.CUSTS TO AR.AMOUNTS(21)þEQUATE HIGHEST.DAYS TO AR.AMOUNTS(22)þEQUATE HIGHEST.INCREASE.CUSTS TO AR.AMOUNTS(23)þEQUATE HIGHEST.INCREASE.PCTS TO AR.AMOUNTS(24)þEQUATE HIGHEST.INCREASE.60.DAY.AVG TO AR.AMOUNTS(25)þEQUATE HIGHEST.INCREASE.1000.DAY.AVG TO AR.AMOUNTS(26)þ*þW$INPUT.PROMPT<1>='Type of Report 'þW$INPUT.TYPE<1>='SELECT'þW$INPUT.SELOPTS<1>='Current Receivables':@VM:'Average Days by Year':@VM:'Average Days Last 12 Months'þ*þ** Add Average Days by Month for past 3 years with activity in every monthþ*þYEAR.POS=NUM.YEARSþYEARS.ALREADY=0þLOOPþ   YEAR.POS=YEAR.POS-1þ   IF NOT(YEAR.POS) THENþ      JAN.NUMBER=0þ    END ELSEþ      JAN.NUMBER=MONTHLY.NUMBER.PAID<1,YEAR.POS,1>þ    ENDþUNTIL NOT(JAN.NUMBER) OR YEARS.ALREADY >= 3 DOþ   YEAR=YEARS<1,YEAR.POS>þ   YEARS.ALREADY+=1þ   W$INPUT.SELOPTS<1,-1>='Average Days by Month ':YEARþREPEATþ**W$INPUT.SELOPTS<1,-1>='Customers By Largest Receivables'þ**W$INPUT.SELOPTS<1,-1>='Customers By Most Aged Receivables'þ**W$INPUT.SELOPTS<1,-1>='Customers By Largest Aging Increases'þW$INPUT.SELOPTS<1,-1>='Customers Needing Aging Attention'þW$INPUT.SELVALS=W$INPUT.SELOPTSþIF REPORT.TYPE = '' THENþ   REPORT.TYPE='Current Receivables'þ ENDþW$INPUT.UDPOS = 1þW$INPUT.DEFAULT<1>=REPORT.TYPEþ*þBEGIN CASEþ   CASE REPORT.TYPE = 'Current Receivables'þ      GOSUB DO.CURRENTþ   CASE REPORT.TYPE = 'Average Days by Year'þ      GOSUB AVERAGE.DAYS.BY.YEARþ   CASE REPORT.TYPE = 'Average Days Last 12 Months'þ      GOSUB AVERAGE.DAYS.LAST.12.MONTHSþ   CASE REPORT.TYPE[1,21] = 'Average Days by Month'þ      AVERAGE.YEAR=FIELD(REPORT.TYPE,' ',5)þ      GOSUB AVERAGE.DAYS.BY.MONTH.PER.YEARþ   CASE REPORT.TYPE = 'CUSTOMERS BY LARGEST RECEIVABLES'þ      GOSUB CUSTOMERS.BY.LARGEST.RECEIVABLESþ   CASE REPORT.TYPE = 'CUSTOMERS BY MOST AGED RECEIVABLES'þ      GOSUB CUSTOMERS.BY.MOST.AGED.RECEIVABLESþ   CASE REPORT.TYPE = 'CUSTOMERS BY LARGEST AGING INCREASES'þ      GOSUB CUSTOMERS.BY.LARGEST.AGING.INCREASESþ   CASE REPORT.TYPE = 'Customers Needing Aging Attention'þ      GOSUB CUSTOMERS.BY.LARGEST.RECEIVABLESþ   CASE 1þ      W$TYPE='TEXT'þ      W$TEXT.DATA='INVALID REPORT TYPE=':REPORT.TYPEþEND CASEþRETURNþ*þDO.CURRENT:þ*þW$TITLE = "Current - AR Balances by Days Due"; CALL PORTAL.SHOW.LAST.UPDATED('AR')þAMTS=AR.AMOUNTS(1):@AM:AR.AMOUNTS(2):@AM:AR.AMOUNTS(3):@AM:AR.AMOUNTS(4):@AM:AR.AMOUNTS(5)þW$PIE.CAPTION='Total AR Balance of 'þ*þTOT.AMT=SUM(AMTS)þW$PIE.CAPTION:=OCONV(TOT.AMT,'MD02,$')þ*þCATEGORIES='Current'þCATEGORIES<2>='1 - 30 Days'þCATEGORIES<3>='31 - 60 Days'þCATEGORIES<4>='61 - 90 Days'þCATEGORIES<5>='Over 90 Days'þ*þCATEGORY.AMTS=AMTSþ*þ*þW$CHART.OPTIONS<-1>='showValues="1"'þW$CHART.OPTIONS<-1>='showPercentageValues="0"'þW$CHART.OPTIONS<-1>='showPercentageInLabel="1"'þW$CHART.OPTIONS<-1>='formatNumber="1"'þW$CHART.OPTIONS<-1>='formatNumberScale="0"'þW$CHART.OPTIONS<-1>='decimalPrecision="0"'þW$CHART.OPTIONS<-1>='thousandSeparator=","'þW$CHART.OPTIONS<-1>='pieradius="150"'þFOR N = 1 TO 5þ  W$PIE.LABELS<1,N> = CATEGORIES<N>þ  W$PIE.VALUES<1,N> = INT(CATEGORY.AMTS<N>/100 + .5)þNEXT Nþ*þRETURNþ*þAVERAGE.DAYS.BY.YEAR:þ*þW$TITLE = "Average Days To Pay"; CALL PORTAL.SHOW.LAST.UPDATED('AR')þW$TYPE = "FCCOLUMN3D"þ*þW$BAR.COLORS<1,1>=COLOR$MAROONþW$BAR.COLORS<1,2>=COLOR$TEALþW$BAR.COLORS<1,3>=COLOR$SILVERþW$BAR.COLORS<1,4>=COLOR$BLUEþFIRST.YEAR=''; CURRENT.YEAR=''þ*þW$BAR.XMEMO = "Year (drill down for detail)"þW$BAR.YMEMO = "Average Days to Pay"þ*þYEAR.NO=0þ*þFOR NN = 1 TO NUM.YEARSþ  ANNUAL.BY.TYPE.NUMBER=ANNUAL.NUMBERS<1,NN>þ  BY.TYPE.NUMBER=SUM(ANNUAL.BY.TYPE.NUMBER)þ  TOTAL.DAYS=ANNUAL.TOTAL.DAYS<1,NN>þ  IF BY.TYPE.NUMBER AND TOTAL.DAYS THENþ     AVERAGE.DAYS=INT(TOTAL.DAYS * 10 / BY.TYPE.NUMBER + .5)þ     AVERAGE.DAYS=OCONV(AVERAGE.DAYS,'MD1')þ     YEAR.NO+=1þ     YEAR=YEARS<1,NN>þ     IF NOT(FIRST.YEAR) THEN FIRST.YEAR=YEARþ     CURRENT.YEAR=YEARþ     W$BAR.VALUES<1,YEAR.NO> = AVERAGE.DAYSþ     W$BAR.XLABELS<1,YEAR.NO> = YEARþ     W$FW.DD.WIDGET<1,YEAR.NO>='PORTAL DAYS TO PAY PIE'þ     W$FW.DD.UD.POS<1,YEAR.NO,1>=1þ     W$FW.DD.UD.VAL<1,YEAR.NO,1>=YEARþ   ENDþNEXT NNþ*þW$BAR.CAPTION = "Average Days to Pay From ":FIRST.YEAR:' to ':CURRENT.YEARþW$CHART.OPTIONS<-1>='showValues="1"'þW$CHART.OPTIONS<-1>='formatNumber="1"'þW$CHART.OPTIONS<-1>='formatNumberScale="0"'þW$CHART.OPTIONS<-1>='decimalPrecision="1"'þW$CHART.OPTIONS<-1>='thousandSeparator=","'þW$CHART.OPTIONS<-1>='pieradius="150"'þ*þRETURNþ*þAVERAGE.DAYS.LAST.12.MONTHS:þ*þLAST.YEAR=YEARS<1,NUM.YEARS>þ**DEBUG=''þMOS.IN.LAST.YEAR=DCOUNT(MONTHLY.NUMBER.PAID<1,NUM.YEARS>,CHAR(252))þ**DEBUG<-1>=MOS.IN.LAST.YEARþMOS.IN.PREV.YEAR=12-MOS.IN.LAST.YEARþ**DEBUG<-1>=MOS.IN.PREV.YEARþIF MOS.IN.PREV.YEAR = 12 THENþ   LAST.YEAR=LAST.YEAR-1þ   THIS.MONTHLY.NUMBERS=MONTHLY.NUMBER.PAID<1,NUM.YEARS-1>þ   THIS.MONTHLY.TOTAL.DAYS=MONTHLY.TOTAL.DAYS<1,NUM.YEARS-1>þ   MONTHLY.LABELS='Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'þ   CONVERT ',' TO CHAR(252) IN MONTHLY.LABELSþ   START.MONTH="January ":LAST.YEARþ   END.MONTH="December ":LAST.YEARþ END ELSEþ   FULL.MONTHS='January,February,March,April,May,June,July,August,September,October,November,December'þ   PREV.YEAR.MO.NO=12-MOS.IN.PREV.YEAR+1þ**DEBUG<-1>=PREV.YEAR.MO.NOþ   START.MONTH=FIELD(FULL.MONTHS,',',PREV.YEAR.MO.NO):' ':(LAST.YEAR-1)þ   END.MONTH=FIELD(FULL.MONTHS,',',MOS.IN.LAST.YEAR):' ':LAST.YEARþ   ABREV.MONTHS='Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'þ   COMMA.POS=INDEX(ABREV.MONTHS,',',PREV.YEAR.MO.NO-1)þ   MONTHLY.LABELS=ABREV.MONTHS[COMMA.POS+1,9999]:',':(ABREV.MONTHS[1,COMMA.POS-1])þ   CONVERT ',' TO CHAR(252) IN MONTHLY.LABELSþ   *þ   ** ISOLATE THE NUMBERS FOR THE PREVIOUS YEARþ   *þ   THIS.MONTHLY.NUMBERS=MONTHLY.NUMBER.PAID<1,NUM.YEARS-1>þ   POS.BEFORE.FIRST=INDEX(THIS.MONTHLY.NUMBERS,CHAR(252),PREV.YEAR.MO.NO-1)þ   THIS.MONTHLY.NUMBERS=THIS.MONTHLY.NUMBERS[POS.BEFORE.FIRST+1,99999]þ   THIS.MONTHLY.NUMBERS:=CHAR(252):MONTHLY.NUMBER.PAID<1,NUM.YEARS>þ   THIS.MONTHLY.TOTAL.DAYS=MONTHLY.TOTAL.DAYS<1,NUM.YEARS-1>þ   POS.BEFORE.FIRST=INDEX(THIS.MONTHLY.TOTAL.DAYS,CHAR(252),PREV.YEAR.MO.NO-1)þ   THIS.MONTHLY.TOTAL.DAYS=THIS.MONTHLY.TOTAL.DAYS[POS.BEFORE.FIRST+1,99999]þ   THIS.MONTHLY.TOTAL.DAYS:=CHAR(252):MONTHLY.TOTAL.DAYS<1,NUM.YEARS>þENDþGOSUB AVERAGE.DAYS.BY.MONTHþRETURNþ*þAVERAGE.DAYS.BY.MONTH.PER.YEAR:þ*þLOCATE AVERAGE.YEAR IN YEARS<1> SETTING YEAR.POS ELSE RETURNþTHIS.MONTHLY.NUMBERS=MONTHLY.NUMBER.PAID<1,YEAR.POS>þTHIS.MONTHLY.TOTAL.DAYS=MONTHLY.TOTAL.DAYS<1,YEAR.POS>þSTART.MONTH="January ":AVERAGE.YEARþEND.MONTH="December ":AVERAGE.YEARþMONTHLY.LABELS='Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'þCONVERT ',' TO CHAR(252) IN MONTHLY.LABELSþGOSUB AVERAGE.DAYS.BY.MONTHþRETURNþ*þAVERAGE.DAYS.BY.MONTH:þ*þW$TITLE = "Average Days To Pay"; CALL PORTAL.SHOW.LAST.UPDATED('AR')þW$TYPE = "FCCOLUMN3D"þ*þW$BAR.COLORS<1,1>=COLOR$MAROONþW$BAR.COLORS<1,2>=COLOR$TEALþW$BAR.COLORS<1,3>=COLOR$SILVERþW$BAR.COLORS<1,4>=COLOR$BLUEþ*þW$BAR.XMEMO = "Month"þW$BAR.YMEMO = "Average Days to Pay"þ*þMONTH.NO=0þ*þFOR NN = 1 TO 12þ  MONTHLY.NUMBER=THIS.MONTHLY.NUMBERS<1,1,NN>þ  MONTHLY.DAYS=THIS.MONTHLY.TOTAL.DAYS<1,1,NN>þ  MONTHLY.LABEL=MONTHLY.LABELS<1,1,NN>þ  IF MONTHLY.NUMBER AND MONTHLY.DAYS THENþ     AVERAGE.DAYS=INT(MONTHLY.DAYS * 10 / MONTHLY.NUMBER + .5)þ     AVERAGE.DAYS=OCONV(AVERAGE.DAYS,'MD1')þ   END ELSE AVERAGE.DAYS=0þ  W$BAR.VALUES<1,NN> = AVERAGE.DAYSþ  W$BAR.XLABELS<1,NN> = MONTHLY.LABELþNEXT NNþ*þW$BAR.CAPTION = "Average Days to Pay From ":START.MONTH:' to ':END.MONTHþW$CHART.OPTIONS<-1>='showValues="1"'þW$CHART.OPTIONS<-1>='formatNumber="1"'þW$CHART.OPTIONS<-1>='formatNumberScale="0"'þW$CHART.OPTIONS<-1>='decimalPrecision="1"'þRETURNþ*þCUSTOMERS.BY.LARGEST.RECEIVABLES:þ*þW$TYPE='TABLE'þW$WIDTH = 3þMAX.HIGHEST.AMTS=DCOUNT(HIGHEST.AMTS.CUSTS,@VM)þIF MAX.HIGHEST.AMTS > 50 THEN MAX.HIGHEST.AMTS=50þW$TABLE.COL.LABELS<1,1> = "| --- Customers ---<br>| ":MAX.HIGHEST.AMTS:" With Most Amount Owed"þW$TABLE.COL.LABELS<1,2> = "Amount<br>Owed"þW$TABLE.COL.LABELS<1,3> = "Most Days|<br>&nbsp;&nbsp;&nbsp;&nbsp;Aged&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|"þW$TABLE.COL.JUST<1,1> = "left"þW$TABLE.COL.JUST<1,2> = "center"þW$TABLE.COL.JUST<1,3> = "center"þIF MAX.HIGHEST.AMTS > 50 THEN MAX.HIGHEST.AMTS=50þW$TITLE = MAX.HIGHEST.AMTS:' Customers With Largest Receivables'; CALL PORTAL.SHOW.LAST.UPDATED('AR')þFOR I = 1 TO MAX.HIGHEST.AMTSþ   CUSTOMER=HIGHEST.AMTS.CUSTS<1,I>þ   HIGHEST.AMT=HIGHEST.AMTS<1,I>þ   HIGHEST.AMT=OCONV(HIGHEST.AMT,'MD2,')þ   LOCATE CUSTOMER IN CUSTOMERS<1> SETTING CUST.POS ELSE CUST.POS=9999þ   CUST.HIGHEST.DAYS=CUST.MOST.DAYS.DUE<1,CUST.POS>þ   W$TABLE.DATA<I,1>=CUSTOMERþ   W$TABLE.DATA<I,2>=HIGHEST.AMTþ   W$TABLE.DATA<I,3>=CUST.HIGHEST.DAYSþ NEXT Iþ*RETURNþ*þCUSTOMERS.BY.MOST.AGED.RECEIVABLES:þ*þ**W$TYPE='TABLE'þ**W$WIDTH = 2þMAX.HIGHEST.DAYS=DCOUNT(HIGHEST.DAYS.CUSTS,@VM)þIF MAX.HIGHEST.DAYS > 50 THEN MAX.HIGHEST.DAYS=50þW$TABLE.COL.LABELS<1,4> = "| --- Customers ---<br>| ":MAX.HIGHEST.DAYS:" With Most Days Aged"þW$TABLE.COL.LABELS<1,5> = "Most Days<br>Aged"þW$TABLE.COL.LABELS<1,6> = "&nbsp;Amount&nbsp;|<br>&nbsp;&nbsp;&nbsp;Owed&nbsp;&nbsp;&nbsp;|"þW$TABLE.COL.JUST<1,4> = "left"þW$TABLE.COL.JUST<1,5> = "center"þW$TABLE.COL.JUST<1,6> = "right"þW$TITLE = MAX.HIGHEST.DAYS:' Customers With Most Aged Receivables'; CALL PORTAL.SHOW.LAST.UPDATED('AR')þFOR I = 1 TO MAX.HIGHEST.DAYSþ   CUSTOMER=HIGHEST.DAYS.CUSTS<1,I>þ   HIGHEST.DAY=HIGHEST.DAYS<1,I>þ   LOCATE CUSTOMER IN CUSTOMERS<1> SETTING CUST.POS ELSE CUST.POS=9999þ   AMT.DUE=CUST.AMT.DUES<1,CUST.POS>þ   W$TABLE.DATA<I,4>=CUSTOMERþ   W$TABLE.DATA<I,5>=HIGHEST.DAYþ   W$TABLE.DATA<I,6>=OCONV(AMT.DUE,'MD2,')þ NEXT Iþ*RETURNþ*þCUSTOMERS.BY.LARGEST.AGING.INCREASES:þ*þ*W$TYPE='TABLE'þ*W$WIDTH = 2þMAX.HIGHEST.INCREASE=DCOUNT(HIGHEST.INCREASE.CUSTS,@VM)þIF MAX.HIGHEST.INCREASE > 50 THEN MAX.HIGHEST.INCREASE=50þW$TABLE.COL.LABELS<1,7> = "| --- Customers ---<br>| ":MAX.HIGHEST.INCREASE:" With Significant Aging Increase"þW$TABLE.COL.LABELS<1,8> = "PCT<br>Increase"þW$TABLE.COL.LABELS<1,9> = "60<br>Day Avg"þW$TABLE.COL.LABELS<1,10> = "&nbsp;&nbsp;&nbsp;1000&nbsp;&nbsp;&nbsp;|<br>Day Avg|"þW$TABLE.COL.JUST<1,7> = "left"þW$TABLE.COL.JUST<1,8> = "center"þW$TABLE.COL.JUST<1,9> = "center"þW$TABLE.COL.JUST<1,10> = "center"þW$TITLE = MAX.HIGHEST.INCREASE:' Customers With Largest Aging Increase'; CALL PORTAL.SHOW.LAST.UPDATED('AR')þFOR I = 1 TO MAX.HIGHEST.INCREASEþ   CUSTOMER=HIGHEST.INCREASE.CUSTS<1,I>þ   HIGHEST.INCREASE.PCT=HIGHEST.INCREASE.PCTS<1,I>þ   LOCATE CUSTOMER IN CUSTOMERS<1> SETTING CUST.POS ELSE CUST.POS=9999þ   W$TABLE.DATA<I,7>=CUSTOMERþ   W$TABLE.DATA<I,8>=HIGHEST.INCREASE.PCTþ   W$TABLE.DATA<I,9>=HIGHEST.INCREASE.60.DAY.AVG<1,I>þ   W$TABLE.DATA<I,10>=HIGHEST.INCREASE.1000.DAY.AVG<1,I>þ NEXT IþRETURN0014E0SUB.MOBILE.APPSþ0c2    SUBROUTINE SUB.MOBILE.APPSþ* @(#) SUB.MOBILE.APPS Ported to jBASE 17:55:32  08 JUL 2015þ*  The following variable names were convertedþ*   STATUSþ* þ*þ* Dashboard Widgetþ*þ    INCLUDE WBPD MVDB.INCLUDEþ*þ    W$TITLE = "Mobile Web App Registration"þ    W$TYPE = "TABLE"þ    W$WIDTH = 3     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þ    IF G$QUERYMODE THEN RETURNþ*þ* Set up column labelsþ    W$TABLE.COL.LABELS<1,1> = "Subroutine Name"þ    W$TABLE.COL.LABELS<1,2> = "Application Name"þ    W$TABLE.COL.LABELS<1,3> = "Status"þ    W$TABLE.COL.LABELS<1,4> = "Action"þ*þ* Column justification = left, right, centerþ    W$TABLE.COL.JUST<1,1> = "left"þ    W$TABLE.COL.JUST<1,2> = "left"þ    W$TABLE.COL.JUST<1,3> = "left"þ    W$TABLE.COL.JUST<1,4> = "left"þ*þ* Table Rowsþ*þ    OPEN '','MVDB.CONTROL' TO F.MVDB.CONTROL ELSEþ        W$TYPE = "TEXT"þ        W$TEXT.DATA = "Unable to open MVDB.CONTROL"þ        RETURNþ    ENDþ    READ MOBI.APPS FROM F.MVDB.CONTROL, "MOBI.APPS" ELSE MOBI.APPS = ""þ*þ    IF WIDGET.USER.DATA(1) # "" THENþ        BEGIN CASEþ        CASE G$SUBMITTEDþ            SUBNAME = WIDGET.USER.DATA(1)þ            IF SUBNAME # "" THENþ                LOCATE SUBNAME IN MOBI.APPS<1> BY "AL" SETTING POS THENþ                    MOBI.APPS<2,POS> = WIDGET.USER.DATA(3)þ                    MOBI.APPS<3,POS> = WIDGET.USER.DATA(2)þ                END ELSEþ                    MOBI.APPS = INSERT( MOBI.APPS, 1, POS, 0, SUBNAME )þ                    MOBI.APPS = INSERT( MOBI.APPS, 2, POS, 0, WIDGET.USER.DATA(3) )þ                    MOBI.APPS = INSERT( MOBI.APPS, 3, POS, 0, WIDGET.USER.DATA(2) )þ                ENDþ            ENDþ        CASE WIDGET.USER.DATA(2) = "delete"þ            MOBI.APPS = DELETE( MOBI.APPS, 1, WIDGET.USER.DATA(1), 0 )þ            MOBI.APPS = DELETE( MOBI.APPS, 2, WIDGET.USER.DATA(1), 0 )þ            MOBI.APPS = DELETE( MOBI.APPS, 3, WIDGET.USER.DATA(1), 0 )þ        CASE WIDGET.USER.DATA(2) = "play"þ            MOBI.APPS<2,WIDGET.USER.DATA(1)> = "A"þ        CASE WIDGET.USER.DATA(2) = "pause"þ            MOBI.APPS<2,WIDGET.USER.DATA(1)> = "I"þ        CASE WIDGET.USER.DATA(2) = "default"þ            LOCATE "D" IN MOBI.APPS<2> SETTING CURR.D THENþ                MOBI.APPS<2,CURR.D> = "A"þ            ENDþ            MOBI.APPS<2,WIDGET.USER.DATA(1)> = "D"þ        CASE 1þ        END CASEþ        WRITE MOBI.APPS ON F.MVDB.CONTROL, 'MOBI.APPS'þ        WIDGET.USER.DATA(1) = ""þ        WIDGET.USER.DATA(2) = ""þ        WIDGET.USER.DATA(3) = ""þ    ENDþ*þ    TOPROW = ""þ    FOR ROW = 1 TO DCOUNT(MOBI.APPS<1>, @VM )þ        SUB.NAME = MOBI.APPS<1,ROW>þ        ENC.SUB.NAME = SUB.NAMEþ        CALL SUB.URL.ENCODE(ENC.SUB.NAME)þ        SUB.LINK = '<a href="/dbc/MVDB.WEB.ED?ed_file=MOBI.SUBS&ed_item=':ENC.SUB.NAME:'" target="MOBI.SUBS_':ENC.SUB.NAME:'">':SUB.NAME:'</a>'þ        W$TABLE.DATA<ROW,1> = SUB.LINKþ        W$TABLE.DATA<ROW,2> = MOBI.APPS<3,ROW>þ        Status = MOBI.APPS<2,ROW>þ        BEGIN CASEþ        CASE Status = "A"þ            Status = '<img src="/db/icons/bullet_green.png" />Active'þ        CASE Status = "I"þ            Status = '<img src="/db/icons/bullet_red.png" />Inactive'þ        CASE Status = "D"þ            Status = '<img src="/db/icons/bullet_green.png" /><b>Active/Default</b>'þ            Status := '&nbsp;<a href="/dbc/MVDB.MAIN?udview=':G$WIDGET.NAME:'&udpos1=1&udval1=':ROW:'&udpos2=2&udval2=play"><img src="/db/icons/control_stop.png" title="Un-set Default" /></a>'þ            TOPROW = ROWþ        END CASEþ        W$TABLE.DATA<ROW,3> = Statusþ        ACTIONS = '<a href="/dbc/MVDB.MAIN?udview=':G$WIDGET.NAME:'&udpos1=1&udval1=':ROW:'&udpos2=2&udval2=delete" 'þ        ACTIONS := \onClick='confirm("Delete this entry?");'><img src="/db/icons/delete.png" title="Delete" /></a>\þ        ACTIONS := '&nbsp;'þ        IF MOBI.APPS<2,ROW> = "A" OR MOBI.APPS<2,ROW> = "D" THENþ            ICON = "control_pause.png"þ            ACTION = "pause"þ            ALT = "Set as inactive"þ        END ELSEþ            ICON = "control_play.png"þ            ACTION = "play"þ            ALT = "Set as active"þ        ENDþ        ACTIONS := '<a href="/dbc/MVDB.MAIN?udview=':G$WIDGET.NAME:'&udpos1=1&udval1=':ROW:'&udpos2=2&udval2=':ACTION:'" ><img src="/db/icons/':ICON:'" title="':ALT:'" /></a>'þ        IF MOBI.APPS<2,ROW> # "D" THENþ            ICON = "star.png"þ            ACTION = "default"þ            ALT = "Set as default"þ            ACTIONS := '&nbsp;<a href="/dbc/MVDB.MAIN?udview=':G$WIDGET.NAME:'&udpos1=1&udval1=':ROW:'&udpos2=2&udval2=':ACTION:'" ><img src="/db/icons/':ICON:'" title="':ALT:'" /></a>'þ        ENDþ        W$TABLE.DATA<ROW,4> = ACTIONSþ    NEXT ROWþ*þ    IF TOPROW # "" THENþ* Float this row to the top of the list (the default application)þ        ROW = W$TABLE.DATA<TOPROW>þ        W$TABLE.DATA = DELETE( W$TABLE.DATA, TOPROW, 0, 0 )þ        W$TABLE.DATA = INSERT( W$TABLE.DATA, 1, 0, 0, ROW )þ    ENDþ*þ    W$INPUT.PROMPT<1> = "Add Subroutine"þ    W$INPUT.TYPE<1> = "TEXT"þ    W$INPUT.UDPOS<1> = 1þ*þ    W$INPUT.PROMPT<2> = "Description"þ    W$INPUT.TYPE<2> = "TEXT"þ    W$INPUT.UDPOS<2> = 2þ*þ    W$INPUT.PROMPT<3> = "Status"þ    W$INPUT.TYPE<3> = "SELECT"þ    W$INPUT.UDPOS<3> = 3þ    W$INPUT.DEFAULT<3> = "A"þ    W$INPUT.SELOPTS<3> = "Active":@VM:"Default":@VM:"Inactive"þ    W$INPUT.SELVALS<3> = "A":@VM:"D":@VM:"I"þ*þ    RETURN0003F5EXECUTE.STACKED.CMNDSþ0c2SUBROUTINE EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,NUM.RETURNED,REPORT)þ*þREPORT=''þNUM.RETURNED=1þIF STACKED.1 <> '' THENþ   EXECUTE STACKED.1 CAPTURING DUMMYþ   NUM.RETURNED=SYSTEM(11)þ   IF NOT(NUM.RETURNED) THEN RETURNþ ENDþBREAK.ON.POS2=INDEX(STACKED.2,'BREAK-ON ',2)þIF BREAK.ON.POS2 THENþ   BREAK.ON.POS=INDEX(STACKED.2,'BREAK-ON ',1)þ   PLATFORM=OCONV('PLATFORM','TMVDB.CONTROL;X;1;1')þ   IF PLATFORM = '' THEN PLATFORM='D3'þ   IF PLATFORM = 'JB' THENþ      STR1=STACKED.2[1,BREAK.ON.POS-1]þ      STR2=STACKED.2[BREAK.ON.POS,9999999]þ      PIPE.POS=INDEX(STR2,' PIPE ',1)þ      IF PIPE.POS THENþ         BREAK.VAR=STR2[1,PIPE.POS-1]þ         BREAK.VAR=TRIM(BREAK.VAR)þ         BREAK.VAR=FIELD(BREAK.VAR,' ',2)þ         BREAK.VAR=' BREAK-ON ':BREAK.VAR:' "':"'V'|":'" 'þ         STR2=STR2[PIPE.POS,9999999]þ       END ELSEþ         BREAK.VAR=''þ       ENDþ      STACKED.2=STR1:BREAK.VAR:STR2þ    ENDþ ENDþEXECUTE STACKED.2 CAPTURING REPORTþCONVERT '$,' TO '' IN REPORTþRETURNþEND0000D7TEST.TOMþ0c2PROMPT ''þINPUT A,1þCRT AþINPUT A,0þCRT Aþ****DATA "LIST SALES.FILE.PATH"þ****EXECUTE 'SELECT SALES.FILE.PATH WITH CLOSE.DATE = "5-1-20"'þ**IF 0 THEN XXX=@SENTENCE ELSE XXX=SENTENCE()þ**CRT XXXþ**CRT XXX0003E3CREATE.UD.QPOINTERþ0c2SUBROUTINE CREATE.UD.QPOINTER(ACCOUNT,FILENAME,CALL.IT,FI.QPOINTER)þOPEN '',CALL.IT TO FI.QPOINTER THENþ   IF CALL.IT <> 'QFILE' THEN RETURNþ ENDþCALL.IT.PARAM=CALL.ITþCALL.IT=''þOPEN '','VOC' TO FI.VOC ELSE RETURNþOPEN '','UD.ACCOUNTS' TO FI.UD.ACCOUNTS ELSEþ   UD.ACCOUNTS='F'þ   UD.ACCOUNTS<-1>='@UDTHOME/sys/UD.ACCOUNT'þ   UD.ACCOUNTS<-1>='@UDTHOME/sys/D_UD.ACCOUNT'þ   WRITE UD.ACCOUNTS ON FI.VOC, 'UD.ACCOUNTS'þ   OPEN '','UD.ACCOUNTS' TO FI.UD.ACCOUNTS ELSE RETURNþ ENDþREADV PATH FROM FI.UD.ACCOUNTS, ACCOUNT, 1 ELSE RETURNþF.POINTER='F'þF.POINTER<2>=PATH:'/':FILENAMEþF.POINTER<3>=PATH:'/D_':FILENAMEþWRITE F.POINTER ON FI.VOC, CALL.IT.PARAMþOPEN '',CALL.IT.PARAM TO FI.QPOINTER THENþ   CALL.IT=CALL.IT.PARAMþ   RETURNþ ENDþF.POINTER<3>=PATH:'/D_VOC'þWRITE F.POINTER ON FI.VOC, CALL.IT.PARAMþOPEN '',CALL.IT.PARAM TO FI.QPOINTER THENþ   * CHANGE CALL.IT TO SUCCESSFUL NAMEþ   * OTHERWISE IT WILL RETURN WITH NULL SAYING FAILUREþ   CALL.IT=CALL.IT.PARAMþ ENDþRETURN00266FSUB.HERVEþ0c2SUBROUTINE SUB.HERVEþ*þ* Dashboard Widgetþ*þINCLUDE WBPD MVDB.INCLUDEþ*þ* Copyright (C) information here if relevantþ* Any other descriptive comments hereþ* and hereþ*þW$TITLE = "Herve html to pdf test"     ;* Title for widget title barþW$TYPE = "HTML"               ;* Filled in by editorþW$WIDTH = 3                   ;* Full width (1=1/3, 2=2/3, 3=3/3)þW$PDFABLE = 1                 ;* Can be converted to PDFþW$PRINTABLE = 1               ;* Can be printedþ*þIF G$QUERYMODE THEN RETURNþ*þ*** Extract data from GLOBAL, WIDGET variables hereþ*þOPEN '','WEB.FORMS' TO FILE.WEB.FORMS ELSE NULLþREAD HTML FROM FILE.WEB.FORMS, 'VALENCOURS2368' ELSE HTML=''þ*þ*** Create a HTML stringþ*þ*þ* In this example, we are including our own styles & scripts in <head>.þ* This causes MV Dashboard to display this content in an <iframe>.þ* Because this content does not render properly using the built-inþ* DOCTYPE:þ*þ*   <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"þ*   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">þ*þ* we supply our own DOCTYPE to override the standard DOCTYPE.þ*þHTML = ''þHTML<-1> = \<!DOCTYPE HTML PUBLIC>\þHTML<-1> = \<html>\þHTML<-1> = \<head>\þHTML<-1> = \<title>Etat de la Valorisation des Encours</title>\þHTML<-1> = \<style type="text/css"> \þHTML<-1> = \body {background:#CCC; height:100%;}\þHTML<-1> = \h1 { color:#000000; font-weight:bold; font-size:40px; }\þHTML<-1> = \h2 { color:#000000; font-weight:bold; font-size:30px; }\þHTML<-1> = \h3 { color:#000000; font-size:20px; }\þHTML<-1> = \table { width: 97%; border: 1px solid #777; border-collapse:collapse; font-family:sans_serif, Verdana, Arial, Helvetica; }\þHTML<-1> = \thead { background-color:#fa3; }\þHTML<-1> = \tfoot { background-color:#fea; }\þHTML<-1> = \td { border-style:solid; border-width:1px; border-color:silver; font-size:10px; }\þHTML<-1> = \th { border-style:solid; border-width:1px; border-color:#6f5b85; font-size:11px; }\þHTML<-1> = \.titre { color:blue; font-weight:bold; font-size:40px; }\þHTML<-1> = \.stitre { color:BLACK; font-weight:bold; font-size:20px; }\þHTML<-1> = \.over { background-color: #ef2e25; color: white; }\þHTML<-1> = \.normal { background-color: white; }\þHTML<-1> = \.lig0 { background-color: #dcdcdc; } /* lignes paires */\þHTML<-1> = \.lig1 { background-color: #white; }  /* lignes impaires */\þHTML<-1> = \.alink { font-weight: bold; text-decoration: none; color: blue; }\þHTML<-1> = \#date { position: absolute; top: 10px; right: 15px; font-size: 14px; }\þHTML<-1> = \#titre { position: absolute;top: 30px; left: 300px; font-weight: bold; font-size: 30px; }\þHTML<-1> = \#stitre { position: absolute; top: 60px; left: 300px; font-weight: bold; font-size: 14px; }\þHTML<-1> = \#dateheure { position: absolute; top: 0px; width: 95%; text-align: right; font-size: 12px; }\þHTML<-1> = \#container { width: 100%; padding:15px;}\þHTML<-1> = \#banniere { margin:auto; background:url(logo.png) no-repeat; width:1000px; height:100px; padding-top:10px;position: relative;}\þHTML<-1> = \#content { width:1050px; background:#FFF; border-radius:15px; margin: auto; -moz-border-radius: 15px; display: block;}\þHTML<-1> = \.titre_tab { font-size:14px; font-weight:bold; text-align:left; padding-left:5px;}\þHTML<-1> = \.entete_tab_sem { background:#CCC;font-size:12px; font-weight:bold; text-align:center;}\þHTML<-1> = \.entete_tab_we { background:#fa3;font-size:12px; font-weight:bold; text-align:center;}\þHTML<-1> = \.cell_sem { text-align:center;background:#CFC;margin:0;padding:0;font-size:12px;}\þHTML<-1> = \.cell_we { background:#Fea};\þHTML<-1> = \</style>\þHTML<-1> = \<script>\þHTML<-1> = \  var affiche = "-";\þHTML<-1> = \function changetout(max) {\þHTML<-1> = \   var i    = 0;\þHTML<-1> = \   var val  = "";\þHTML<-1> = \   for (i=1; i <= max; i++) {\þHTML<-1> = \        if (affiche == "-") { val = "G" } else { val = "D" }\þHTML<-1> = \        val = val + i;\þHTML<-1> = \        change(val);\þHTML<-1> = \   }\þHTML<-1> = \   document.getElementById("idth1").innerText = affiche;\þHTML<-1> = \   if (affiche == "-") {\þHTML<-1> = \       affiche = "+"\þHTML<-1> = \   } else {\þHTML<-1> = \       affiche = "-"\þHTML<-1> = \   }\þHTML<-1> = \}\þHTML<-1> = \function change(lig) {\þHTML<-1> = \   car1 = lig.slice(0,1);\þHTML<-1> = \   car2 = lig.slice(1,lig.length);\þHTML<-1> = \   obj = document.getElementById(lig);\þHTML<-1> = \   val = obj.style.display;\þHTML<-1> = \   obj.style.display = "none";\þHTML<-1> = \   if (car1 == "G") {\þHTML<-1> = \      val = "D" + car2;\þHTML<-1> = \   } else {\þHTML<-1> = \      val = "G" + car2;\þHTML<-1> = \   }\þHTML<-1> = \   document.getElementById(val).style.display = "";\þHTML<-1> = \}\þHTML<-1> = \</script>\þHTML<-1> = \</head>\þHTML<-1> = \<body>\þHTML<-1> = \<div id="BANNIERE">\þHTML<-1> = \<div id="titre">Etat de la Valorisation des Encours<br/></div>\þHTML<-1> = \<div id="dateheure">le 14/12/2015 &agrave; 18:05:24</div></div>\þHTML<-1> = \<div id="container">\þHTML<-1> = \<table>\þHTML<-1> = \<thead>\þHTML<-1> = \<tr>\þHTML<-1> = \<th colspan="4">Composant</th>\þHTML<-1> = \<th colspan="2">OF</th>\þHTML<-1> = \<th colspan="2">OF Lanc&eacute;</th>\þHTML<-1> = \<th colspan="4">Pr&eacute;vu</th>\þHTML<-1> = \<th colspan="4">R&eacute;el</th>\þHTML<-1> = \</tr>\þHTML<-1> = \<tr>\þHTML<-1> = \<th>Type</th>\þHTML<-1> = \<th>ABC</th>\þHTML<-1> = \<th>Code</th>\þHTML<-1> = \<th>D&eacute;signation</th>\þHTML<-1> = \<th>No</th>\þHTML<-1> = \<th>Etat</th>\þHTML<-1> = \<th>No</th>\þHTML<-1> = \<th>Qt&eacute;</th>\þHTML<-1> = \<th>PU</th>\þHTML<-1> = \<th>Co&ucirc;t</th>\þHTML<-1> = \<th>Co&ucirc;t Prod</th>\þHTML<-1> = \<th>No<br/>OF</th>\þHTML<-1> = \<th>PU</th>\þHTML<-1> = \<th>Co&ucirc;t</th>\þHTML<-1> = \<th>Co&ucirc;t Prod</th>\þHTML<-1> = \<th>No<br/>OF</th>\þHTML<-1> = \</tr>\þHTML<-1> = \</thead><tbody>\þHTML<-1> = \<tr class="lig1"><td></td><td></td>\þHTML<-1> = \<td>T370366-0204-A0</td><td></td><td>3362</td><td>37</td><td>1</td><td>2</td><td align=right>76300</td><td align=right></td><td align=right></td><td align=right>0.00</td><td align=right></td><td align=right></td><td align=right></td><td align=right>0.00</td>\þHTML<-1> = \</tr>\þHTML<-1> = \<tr class="lig0"><td>MS</td><td></td>\þHTML<-1> = \<td>1041</td><td>Bouchon AMORIM</td><td>3362</td><td>37</td><td>1</td><td>2</td><td align=right>76300</td><td align=right></td><td align=right>0.00</td><td align=right></td><td align=right>76300</td><td align=right>0</td><td align=right>0.00</td><td align=right></td>\þHTML<-1> = \</tr>\þHTML<-1> = \<tr class="ligtot"><td colspan="8">Total MS</td><td></td><td></td><td align=right>0</td><td align=right>0</td><td></td><td></td><td align=right>0</td><td align=right>0</td>\þHTML<-1> = \<tr class="lig1"><td>N</td><td></td>\þHTML<-1> = \<td>0000750-R1052-0</td><td>Capsule R1052-0</td><td>3362</td><td>37</td><td>1</td><td>2</td><td align=right>76300</td><td align=right></td><td align=right>0.00</td><td align=right></td><td align=right>76300</td><td align=right>0</td><td align=right>0.00</td><td align=right></td>\þHTML<-1> = \</tr>\þHTML<-1> = \<tr class="lig0"><td>N</td><td></td>\þHTML<-1> = \<td>6X75CL.DBT.SS.CR</td><td>CARTON DE 6 BTL DE 0.75</td><td>3362</td><td>37</td><td>1</td><td>2</td><td align=right>12743</td><td align=right></td><td align=right>0.00</td><td align=right></td><td align=right>12743</td><td align=right>0</td><td align=right>0.00</td><td align=right></td>\þHTML<-1> = \</tr>\þHTML<-1> = \<tr class="lig1"><td>N</td><td></td>\þHTML<-1> = \<td>B01.001</td><td>Bouteille 0.75 all&eacute;g&eacute;e</td><td>3362</td><td>37</td><td>1</td><td>2</td><td align=right>76300</td><td align=right></td><td align=right>0.00</td><td align=right></td><td align=right>76300</td><td align=right>0</td><td align=right>0.00</td><td align=right></td>\þHTML<-1> = \</tr>\þHTML<-1> = \<tr class="lig0"><td>N</td><td></td>\þHTML<-1> = \<td>P2E.EURO</td><td>Palette EURO<br/>80x120<br/>24kg &agrave; vide</td><td>3362</td><td>37</td><td>1</td><td>2</td><td align=right>130</td><td align=right></td><td align=right>0.00</td><td align=right></td><td align=right>130</td><td align=right>0</td><td align=right>0.00</td><td align=right></td>\þHTML<-1> = \</tr>\þHTML<-1> = \<tr class="ligtot"><td colspan="8">Total N</td><td></td><td></td><td align=right>0</td><td align=right>0</td><td></td><td></td><td align=right>0</td><td align=right>0</td>\þHTML<-1> = \<tr class="lig1"><td>P</td><td>2013</td>\þHTML<-1> = \<td>U370018-0000B-1</td><td>PINOT GRIS<br/>QUALITE SYSTEM U<br/>MILLESIME 2013</td><td>3362</td><td>37</td><td>1</td><td>2</td><td align=right>573</td><td align=right></td><td align=right>0.00</td><td align=right></td><td align=right>574</td><td align=right>0</td><td align=right>0.00</td><td align=right></td>\þHTML<-1> = \</tr>\þHTML<-1> = \<tr class="ligtot"><td></td><td colspan="7">Total 2013</td><td></td><td></td><td align=right>0</td><td align=right>0</td><td></td><td></td><td align=right>0</td><td align=right>0</td>\þHTML<-1> = \</tr>\þHTML<-1> = \<tr class="ligtot"><td colspan="8">Total P</td><td></td><td></td><td align=right>0</td><td align=right>0</td><td></td><td></td><td align=right>0</td><td align=right>0</td>\þHTML<-1> = \</tr>\þHTML<-1> = \</tbody>\þHTML<-1> = \<tfoot><tr><td colspan="8">Total G&eacute;n&eacute;ral </td><td></td><td></td><td align=right>0</td><td align=right>0</td><td></td><td></td><td align=right>0</td><td align=right>0</td>\þHTML<-1> = \</tr><tr><td colspan="8"></td><td></td><td></td><td colspan="2" align=center>0</td><td></td><td></td><td colspan="2" align=center>0</td>\þHTML<-1> = \</tr>\þHTML<-1> = \</tfoot>\þHTML<-1> = \</table>\þHTML<-1> = \</div>\þHTML<-1> = \</body>\þHTML<-1> = \</html>\þþW$HTML.DATA = HTMLþ*þ*** Load any relevant data into GLOBAL, WIDGET variables hereþ*   as needed for subsequent use by other widgetsþ*þRETURN000DFADEMO.FINANCIALS.DASHBOARDþ0c2SUBROUTINE DEMO.FINANCIALS.DASHBOARDþ*þ* Dashboard Widgetþ*þINCLUDE WBPD WWW.INCLUDEþINCLUDE WBPD MVDB.INCLUDEþ*þ* Copyright (C) information here if relevantþ* Any other descriptive comments hereþ* and hereþ*þWEB$TITLE='Demo Company, Financial Picture'þWEB.FORM.NAME='DEMO.FINANCIALS.DASHBOARD'þW$TYPE='HTML'þW$TITLE='Demo Financial Company'þW$WIDTH = 3                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þOPEN '','MVDB.CONTROL' TO FILE ELSE STOPþNOV15=ICONV('11-15-15','D')þTODAY=DATE()þIF TODAY > NOV15 THENþ   TODAY=NOV15þ   TIME.DATE=OCONV(TIME(),'MTHS'):' ':OCONV(TODAY,'D4')þ END ELSEþ   TIME.DATE=TIMEDATE()þ ENDþOTODAY=OCONV(TODAY,'D4-')þTODAY.MO=OTODAY[1,2]+0þTODAY.YYYY=OTODAY[7,4]þIF INDEX(TIME.DATE,'CALCULATIONS THROUGH',1) THENþ   * LAST CALCULATION WAS FOR END OF LAST YEARþ   DASHBOARD.YYYY=TODAY.YYYY-1þ END ELSE DASHBOARD.YYYY=TODAY.YYYYþIF LEN(WIDGET.USER.DATA(1)) = 4 THENþ   WRITE WIDGET.USER.DATA(1) ON FILE, 'DASHBOARD.YYYY'þ END ELSEþ   WIDGET.USER.DATA(1)=DASHBOARD.YYYYþ ENDþCONVS=''þLAST.YYYY=TODAY.YYYY-1þLAST.EOM=ICONV(TODAY.MO:'-01-':TODAY.YYYY,'D')-1þ*þ** BUILD FRESH STATIC DATA IF A NEW RUN DATEþ*þREAD LAST.BUILT FROM FILE, 'LAST.STATIC.BUILD' ELSE LAST.BUILT=''þIF LAST.BUILT <> DATE() THENþ   CALL BUILD.DEMO.FINANCIAL.PICTURE(TODAY.YYYY,TODAY,LAST.EOM)þ   WRITE LAST.BUILT ON FILE, 'LAST.STATIC.BUILD'þ ENDþREAD REC FROM FILE, 'DEMO.FINANCIAL.PICTURE' ELSE REC=''þ*þ* DEFAULT CONVERSIONS TO $þFOR I = 4 TO 35þ   IF I < 29 OR I > 32 THENþ      CONVS<I>='$'þ    ENDþ NEXT Iþ* CHANGE THOSE THAT AREN'TþCONVS<6>='%'; CONVS<10>='%'; CONVS<17>='%'; CONVS<24>='%'þCONVS<12>='%'; CONVS<13>='%'; CONVS<14>='%'þCONVS<19>='%'; CONVS<20>='%'; CONVS<21>='%'þCONVS<26>='%'; CONVS<27>='%'; CONVS<28>='%'þ*MATWRITE WIDGET.USER.DATA ON FILE, 'TEST.LINK'þ*þW$PRINTABLE=1þW$PDFABLE=1þOPEN '','WEB.FORMS' TO FILE.WEB.FORMS ELSE RETURNþREAD HTML FROM FILE.WEB.FORMS, WEB.FORM.NAME ELSE HTML=''þ*þ**USER.ID=G$USERIDþ*þW$TITLE:='  Demo Financials  -- last updated --  ':TIME.DATEþ*þ*WRITE HTML ON FILE.WEB.FORMS, 'TEST.HTML'þ*þ** DYNAMIC VARIABLESþ*þ*INSERT.FIELD=DB.REC<4>;  * CUSTOMERþ*IF INSERT.FIELD = '' THEN INSERT.FIELD='&nbsp;'þ*CALL SWAP(HTML,'~1~',INSERT.FIELD)þFOR I = 1 TO 46þ   INSERT.FIELD=REC<I>þIF INSERT.FIELD = '' THEN INSERT.FIELD=Iþ   CONV=CONVS<I>þ   BEGIN CASEþ      CASE CONV = ''; NULLþ      CASE CONV = '$'; INSERT.FIELD=OCONV(INSERT.FIELD+0,'MD2,$')þ      CASE CONV = '%'; INSERT.FIELD=OCONV(INSERT.FIELD+0,'MD1'):'%'þ      CASE 1; INSERT.FIELD=OCONV(INSERT.FIELD,CONV)þ   END CASEþ   IF INSERT.FIELD = '' THEN INSERT.FIELD='&nbsp;'þ   CALL SWAP(HTML,'~':I:'~',INSERT.FIELD)þ NEXT Iþ   *þW$TEXT.DATA=HTMLþIF 0 THEN; *IF TODAY.MO = 1 THENþ   W$INPUT.PROMPT<1>='As of Date'þ   W$INPUT.TYPE<1> = "SELECT"þ   W$INPUT.DEFAULT<1> = WIDGET.USER.DATA(1)þ   W$INPUT.UDPOS<1> = 1þ   W$INPUT.BUTTON<1> = "Apply"þ   W$INPUT.SELVALS<1>=TODAY.YYYY-1:CHAR(253):TODAY.YYYYþ   W$INPUT.SELOPTS<1>='12-31-':TODAY.YYYY-1:CHAR(253):OCONV(DATE(),'D4-')þ   ITIME=ICONV(FIELD(TIME.DATE,' ',1),'MT')þ   NEXT.TIME=ITIME+1800;  * 30 MINUTESþ   IF ABS(TIME()-NEXT.TIME) < 300 THEN;  * WITHIN 5 MINUTES TELL LONGERþ      NEXT.TIME+=1800þ    ENDþ   REFRESH.TIME=' - Wont refresh until app. ':OCONV(NEXT.TIME,'MTH')þ   IF DASHBOARD.YYYY = TODAY.YYYY THENþ      * DECEMBER WILL REQUIRE A RECALCþ      W$INPUT.SELOPTS<1,1>:=REFRESH.TIMEþ    END ELSEþ      * TODAY WILL REQUIRE A RECALCþ      W$INPUT.SELOPTS<1,2>:=REFRESH.TIMEþ    ENDþ   *þ ENDþWRITE HTML ON FILE.WEB.FORMS, 'LAST.':WEB.FORM.NAMEþRETURNþEND000551SUB.SC.LIB.PIEþ0c2SUBROUTINE SUB.SC.LIB.PIEþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Pie Demoþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þIF INDEX(G$WIDGET.NAME,'Progs',1) THENþ  PIE.CNT = "PROG"þ  W$TITLE = "Source Code: Programs by Library"þEND ELSEþ  PIE.CNT = "LINES"þ  W$TITLE = "Source Code: Lines by Library"þENDþW$TYPE = "FC3DPIE"þW$WIDTH = 1þ*þIF G$QUERYMODE THEN RETURNþ*þDIM LIB.FILES(3), PROGS(3), LINES(3), LIBS(3)þ*þLIBS(1) = "MVDB.SUBS"þLIBS(2) = "RSS.BP"þLIBS(3) = "WBPD"þ*þMAT PROGS = 0; MAT LINES = 0þ*þTOT.LINES = 0 ; TOT.PROGS = 0þFOR N = 1 TO 3þ  OPEN LIBS(N) TO LIB.FILES(N) ELSE STOP 201, LIBS(N)þ  W$PIE.LABELS<1,N> = LIBS(N)þ  SELECT LIB.FILES(N)þ  LOOPþ    READNEXT ID ELSE EXITþ    PROGS(N) += 1þ    IF PIE.CNT # "PROG" THENþ      READ REC FROM LIB.FILES(N), ID THENþ        LINES(N) += DCOUNT(REC, @AM)þ      ENDþ    ENDþ  REPEATþ  TOT.LINES += LINES(N)þ  TOT.PROGS += PROGS(N)þ  IF PIE.CNT = "PROG" THENþ    W$PIE.VALUES<1,N> = PROGS(N)þ  END ELSEþ    W$PIE.VALUES<1,N> = LINES(N)þ  END þNEXT Nþ*þW$PIE.CAPTION = "By Program File"þIF PIE.CNT = "PROG" THENþ  W$CHART.OPTIONS<-1> = "subCaption='":TOT.PROGS:" Total Programs'"þ  W$CHART.OPTIONS<-1> = "showValues='1'"þEND ELSEþ  W$CHART.OPTIONS<-1> = "subCaption='":OCONV(TOT.LINES,'MD,'):" Total Lines'"þENDþ*þINCLUDE WBPD SOURCE.VIEW.ICONþ*þRETURN000512SUB.DEMO.NET.INCOME.CHARTþ0c2SUBROUTINE SUB.DEMO.NET.INCOME.CHARTþ*þ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "Net Income"þW$TYPE = "FCCOLUMN3D"þW$WIDTH = 2þW$PDFABLE = 1þ*þIF G$QUERYMODE THEN RETURNþ*þW$BAR.COLORS<1,1>=COLOR$MAROONþW$BAR.COLORS<1,2>=COLOR$TEALþW$BAR.COLORS<1,3>=COLOR$SILVERþW$BAR.COLORS<1,4>=COLOR$BLUEþOPEN '','MVDB.CONTROL' TO FILE.CONTROL ELSE STOPþREAD REC FROM FILE.CONTROL, 'DEMO.FINANCIAL.PICTURE' ELSE REC=''þYEARS=REC<67>þNET.INCOMES=REC<75>þMAX.YEARS=DCOUNT(YEARS,CHAR(253))þFIRST.YEAR=YEARS<1,1>þCURRENT.YEAR=YEARS<1,MAX.YEARS>þ*þW$BAR.CAPTION = "Net Income From ":FIRST.YEAR:' to ':CURRENT.YEARþW$BAR.XMEMO = "Year"þW$BAR.YMEMO = "Net Income"þ*þ*þMAX.INCOME=0þFOR N = 1 TO MAX.YEARSþ  NET.INCOME=OCONV(REC<36-N>,'MD02')þ  IF NET.INCOME > MAX.INCOME THEN MAX.INCOME=NET.INCOMEþ  YEAR=YEARS<1,N>þ  W$BAR.VALUES<1,N> = NET.INCOMEþ  W$BAR.XLABELS<1,N> = YEARþNEXT Nþ* ROUND MAX INCOME UP TO THE NEXT 250000þMAX.INCOME+=250000þMAX.INCOME=INT(MAX.INCOME/250000) * 250000þW$CHART.OPTIONS<-1>='yAxisMaxValue="':MAX.INCOME:'"'þW$CHART.OPTIONS<-1>='decimals="2"'þW$CHART.OPTIONS<-1>='formatNumberScale="1"'þW$CHART.OPTIONS<-1>='forceDecimals="1"'þW$CHART.OPTIONS<-1>='divLineDecimalPrecision="2"'þW$CHART.OPTIONS<-1>='limitsDecimalPrecision="2"'þ*þ*þRETURN000277SUB.GRID.TESTþ0c2SUBROUTINE SUB.GRID.TESTþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ*þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "Untitled TABLE"þW$TYPE = "TABLE"þW$WIDTH = 3 ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þ* Set up column labelsþW$TABLE.COL.LABELS<1,1> = "Column 1"þW$TABLE.COL.LABELS<1,2> = "Column 2"þ*þ* Column justification = left, right, centerþW$TABLE.COL.JUST<1,1> = "left"þW$TABLE.COL.JUST<1,2> = "right"þ*þ* Table RowsþFOR ROW = 1 TO 5þ  W$TABLE.DATA<ROW,1> = ROW:",1"þ  W$TABLE.DATA<ROW,2> = ROW:",2"þNEXT ROWþ*þ* TotalsþW$TABLE.TOTALS<1,1> = "2"þW$TABLE.TOTALS<1,2> = "4"þRETURN000255SUB.DEMO.DRILLDOWNþ0c2SUBROUTINE SUB.DEMO.DRILLDOWNþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Demo drill-down widgetþ*þINCLUDE WBPD MVDB.INCLUDEþ*þW$TYPE = "TEXT"þW$TITLE = "Drilldown Widget"þW$WIDTH = 3þW$PRINTABLE = 1þ*þIF G$QUERYMODE = 1 THEN RETURNþ*þW$TEXT.DATA = "Source Widget: ":G$DD.REFERRERþW$TEXT.DATA<-1> = " "þW$TEXT.DATA<-1> = "Contents of WIDGET.USER.DATA:"þW$TEXT.DATA<-1> = " "þFOR X = 1 TO 100þ  IF WIDGET.USER.DATA(X) # "" THENþ    W$TEXT.DATA<-1> = "WIDGET.USER.DATA(":X:") = ":WIDGET.USER.DATA(X)þ  ENDþNEXT Xþ*þINCLUDE WBPD SOURCE.VIEW.ICONþ*þRETURN0005AASUB.PORTAL.SETUP.DOCUMENTATIONþ0c2SUBROUTINE SUB.PORTAL.SETUP.DOCUMENTATIONþ*þ* Dashboard Widgetþ*þINCLUDE WBPD MVDB.INCLUDEþ*þ* Copyright (C) information here if relevantþ* Any other descriptive comments hereþ* and hereþ*þW$TITLE = "Portal Setup Instructions"     ;* Title for widget title barþW$TYPE = "HTML"               ;* Filled in by editorþW$WIDTH = 3                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þ*** Extract data from GLOBAL, WIDGET variables hereþ*þ*** Open files hereþ*þOPEN '','MVDB.CONTROL' TO FI.MVDB.CONTROL ELSE þ   MESSAGE='MVDB.CONTROL'þ   GOTO MESSAGE.DISPLAYþENDþREAD PLATFORM FROM FI.MVDB.CONTROL, 'PLATFORM' ELSEþ   MESSAGE='No Platform Type Defined'þ   GOTO MESSAGE.DISPLAYþ ENDþOPEN '','WEB.FORMS' TO FI.WEB.FORMS ELSE þ   MESSAGE='CANT OPEN WEB.FORMS'þ   GOTO MESSAGE.DISPLAYþENDþIF PLATFORM = 'JB' THENþ   DOCU.ID='JBASE.PORTAL.SETUP.DOCUMENTATION'þEND ELSEþ   DOCU.ID='PORTAL.SETUP.DOCUMENTATION'þENDþREAD WEB.FORM FROM FI.WEB.FORMS, DOCU.ID ELSE þ   MESSAGE='UNABLE TO READ ':DOCU.IDþ   GOTO MESSAGE.DISPLAYþENDþW$HTML.DATA=WEB.FORMþ*þ*** Load any relevant data into GLOBAL, WIDGET variables hereþ*   as needed for subsequent use by other widgetsþ*þRETURNþ*þMESSAGE.DISPLAY:þ*þMAX.MSG=DCOUNT(MESSAGE,CHAR(254))þW$HTML.DATA='<h3>':MESSAGE<1>þIF MAX.MSG > 1 THENþ   FOR MSG.NO = 2 TO MAX.MSGþ      W$HTML.DATA:='<br>':MESSAGE<MSG.NO>þ    NEXT MSG.NOþ ENDþW$HTML.DATA:='</h3>'þRETURN005950SUB.PORTAL.SALES.REPORT.SETUPþ0c2SUBROUTINE SUB.PORTAL.SALES.REPORT.SETUPþ*þ* DEFINE PARAMETERS FOR PORTAL SALES REPORTþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþOPEN '','MVDB.SUBS' TO FI.MVDB.SUBS ELSE STOPþ*þW$TITLE = "Portal Sales Report Setup"þW$TYPE = "HTML"þW$WIDTH = 3þ*þIF G$QUERYMODE THEN RETURNþ*þEQUATE ACCOUNT TO WIDGET.USER.DATA(1)þEQUATE REPORT.FILE TO WIDGET.USER.DATA(2)þEQUATE SALE.DATE.DICT TO WIDGET.USER.DATA(3)þEQUATE SALE.MONTH.DICT TO WIDGET.USER.DATA(4)þEQUATE SALE.YEAR.DICT TO WIDGET.USER.DATA(5)þEQUATE SALE.AMOUNT.DICT TO WIDGET.USER.DATA(6)þEQUATE COST.OF.SALE.AMOUNT.DICT TO WIDGET.USER.DATA(7)þEQUATE SALESMAN.DICT TO WIDGET.USER.DATA(8)þEQUATE BRANCH.DICT TO WIDGET.USER.DATA(9)þEQUATE REGION.DICT TO WIDGET.USER.DATA(10)þEQUATE SALE.DATE.AMC TO WIDGET.USER.DATA(11)þEQUATE SALE.AMOUNT.AMC TO WIDGET.USER.DATA(12)þEQUATE SALE.AMOUNT.CONV TO WIDGET.USER.DATA(13)þEQUATE SALE.AMOUNT.COOR TO WIDGET.USER.DATA(14)þEQUATE COST.OF.SALE.AMOUNT.AMC TO WIDGET.USER.DATA(15)þEQUATE COST.OF.SALE.AMOUNT.CONV TO WIDGET.USER.DATA(16)þEQUATE COST.OF.SALE.AMOUNT.COOR TO WIDGET.USER.DATA(17)þEQUATE SALESMAN.AMC TO WIDGET.USER.DATA(18)þEQUATE SALESMAN.TFILE TO WIDGET.USER.DATA(19)þEQUATE BRANCH.AMC TO WIDGET.USER.DATA(20)þEQUATE BRANCH.TFILE TO WIDGET.USER.DATA(21)þEQUATE REGION.AMC TO WIDGET.USER.DATA(22)þEQUATE REGION.TFILE TO WIDGET.USER.DATA(23)þOPEN '','MVDB.CONTROL' TO FI.MVDB.CONTROL ELSE STOP 201,'MVDB.CONTROL'þREAD PLATFORM FROM FI.MVDB.CONTROL, 'PLATFORM' ELSEþ   MESSAGE='No Platform Type Defined'þ   GOTO MESSAGE.DISPLAYþ ENDþFIRST.TIME=0þIF G$SUBMITTED <> '1' THENþ   IF PLATFORM = 'UV' OR PLATFORM = 'UD' THENþ      OPEN '','UD.DICT.DASHBOARD.CLOSING.STATS' TO FI THENþ         OPEN 'DICT','DASHBOARD.CLOSING.STATS' TO DFI THENþ            SELECT FIþ            LOOPþ               READNEXT ID ELSE ID='DONE'þ            UNTIL ID = 'DONE' DOþ               READ REC FROM FI, ID ELSE REC=''þ               IF REC <> '' THENþ                  WRITE REC ON DFI, IDþ                ENDþ            REPEATþ          ENDþ       ENDþ      OPEN '','UD.DICT.SALES' TO FI THENþ         OPEN 'DICT','PORTAL.SALES' TO DFI THENþ            SELECT FIþ            LOOPþ               READNEXT ID ELSE ID='DONE'þ            UNTIL ID = 'DONE' DOþ               READ REC FROM FI, ID ELSE REC=''þ               IF REC <> '' THENþ                  WRITE REC ON DFI, IDþ                ENDþ            REPEATþ          ENDþ       ENDþ      OPEN '','UD.DICT.AR' TO FI THENþ         OPEN 'DICT','PORTAL.AR' TO DFI THENþ            SELECT FIþ            LOOPþ               READNEXT ID ELSE ID='DONE'þ            UNTIL ID = 'DONE' DOþ               READ REC FROM FI, ID ELSE REC=''þ               IF REC <> '' THENþ                  WRITE REC ON DFI, IDþ                ENDþ            REPEATþ          ENDþ       ENDþ      OPEN '','UD.DICT.AP' TO FI THENþ         OPEN 'DICT','PORTAL.AP' TO DFI THENþ            SELECT FIþ            LOOPþ               READNEXT ID ELSE ID='DONE'þ            UNTIL ID = 'DONE' DOþ               READ REC FROM FI, ID ELSE REC=''þ               IF REC <> '' THENþ                  WRITE REC ON DFI, IDþ                ENDþ            REPEATþ          ENDþ       ENDþ    ENDþ   MATREAD WIDGET.USER.DATA FROM FI.MVDB.CONTROL, 'PORTAL.SALES.REPORT.SETUP' ELSEþ      MAT WIDGET.USER.DATA = ''þ      FIRST.TIME=1þ    ENDþ   IF NOT(FIRST.TIME) THENþ      GOSUB VALIDATE.PREVIOUS.INPUTSþ    ENDþ END ELSEþ   GOSUB VALIDATE.PREVIOUS.INPUTSþ   MATWRITE WIDGET.USER.DATA ON FI.MVDB.CONTROL, 'PORTAL.SALES.REPORT.SETUP'þ ENDþGOSUB SET.PROMPTSþRETURNþ*þSET.PROMPTS:þ*þIF PLATFORM = 'JB' THENþ   W$INPUT.PROMPT<1> = "Sales File Account Path"þEND ELSEþ   W$INPUT.PROMPT<1> = "Sales File Account"þENDþW$INPUT.TYPE<1> = "TEXT"þW$INPUT.UDPOS<1> = 1þW$INPUT.DEFAULT<1> = ACCOUNTþ*þW$INPUT.PROMPT<2> = "Name Of Sales File"þW$INPUT.TYPE<2> = "TEXT"þW$INPUT.UDPOS<2> = 2þW$INPUT.DEFAULT<2> = REPORT.FILEþ*þW$INPUT.PROMPT<3> = "Date Of Sale Dict Name"þW$INPUT.TYPE<3> = 'TEXT'þW$INPUT.UDPOS<3> = 3þW$INPUT.DEFAULT<3> = SALE.DATE.DICTþ*þW$INPUT.PROMPT<4> = "Month Of Sale Dict Name"þW$INPUT.TYPE<4> = 'TEXT'þW$INPUT.UDPOS<4> = 4þW$INPUT.DEFAULT<4> = SALE.MONTH.DICTþ*þW$INPUT.PROMPT<5> = "Year Of Sale Dict Name"þW$INPUT.TYPE<5> = 'TEXT'þW$INPUT.UDPOS<5> = 5þW$INPUT.DEFAULT<5> = SALE.YEAR.DICTþ*þW$INPUT.PROMPT<6> = "Amount Of Sale Dict Name"þW$INPUT.TYPE<6> = 'TEXT'þW$INPUT.UDPOS<6> = 6þW$INPUT.DEFAULT<6> = SALE.AMOUNT.DICTþ*þW$INPUT.PROMPT<7> = "Cost Of Sale Dict Name"þW$INPUT.TYPE<7> = 'TEXT'þW$INPUT.UDPOS<7> = 7þW$INPUT.DEFAULT<7> = COST.OF.SALE.AMOUNT.DICTþ*þW$INPUT.PROMPT<8> = "Salesman Dict Name"þW$INPUT.TYPE<8> = 'TEXT'þW$INPUT.UDPOS<8> = 8þW$INPUT.DEFAULT<8> = SALESMAN.DICTþ*þW$INPUT.PROMPT<9> = "Branch Dict Name"þW$INPUT.TYPE<9> = 'TEXT'þW$INPUT.UDPOS<9> = 9þW$INPUT.DEFAULT<9> = BRANCH.DICTþ*þW$INPUT.PROMPT<10> = "Region Dict Name"þW$INPUT.TYPE<10> = 'TEXT'þW$INPUT.UDPOS<10> = 10þW$INPUT.DEFAULT<10> = REGION.DICTþ*þRETURNþ*þVALIDATE.PREVIOUS.INPUTS:þ*þMESSAGE=''þBEGIN CASEþ   CASE PLATFORM = 'D3'þ      MD.TYPE='MD'þ   CASE PLATFORM = 'JB'þ      MD.TYPE='MD'þ   CASE 1þ      MD.TYPE='VOC'þEND CASEþOPEN '',MD.TYPE TO FI.MD ELSEþ   MESSAGE='Unable to open ':MD.TYPE:' for validation purposes'þ   GOTO MESSAGE.DISPLAYþ ENDþVALID.ACCOUNT=1þIF ACCOUNT <> '' THENþ**   EXECUTE "SET-FILE ":ACCOUNT:" ":MD.TYPE:' QFILE' CAPTURING DUMMYþ   ERR.MSG=''þ   IF PLATFORM <> 'JB' THENþ      QFILE.NAME='QFILE'þ      CALL CREATE.QPOINTER(PLATFORM,FI.MD,ACCOUNT,MD.TYPE,QFILE.NAME,FI.ACCOUNT.MD)þ      IF QFILE.NAME = '' THEN ERR.MSG=ACCOUNT:' is not a valid account'þ    END ELSEþ      IF INDEX(ACCOUNT,'/',1) THEN PATH.DELIM='/' ELSE PATH.DELIM='\'þ      F.PTR='F':@AM:ACCOUNT:PATH.DELIM:'MD'þ      F.PTR<3>=F.PTR<2>:']D'þ      QFILE.NAME='QFILE'þ      WRITE F.PTR ON FI.MD, QFILE.NAMEþ      OPEN '','QFILE' TO TEST.MD ELSE ERR.MSG=ACCOUNT:' is not a valid account path!'þ    ENDþ    IF ERR.MSG <> '' THENþ      MESSAGE<-1>=ERR.MSGþ      VALID.ACCOUNT=0þ    ENDþ**   IF PLATFORM = 'UD' THENþ**      QFILE.NAME='QFILE'þ**      CALL CREATE.UD.QPOINTER(ACCOUNT,MD.TYPE,QFILE.NAME,FI.ACCOUNT.MD)þ**      IF QFILE.NAME = '' THENþ**         MESSAGE<-1>=ACCOUNT:' is not a valid account!'þ**         VALID.ACCOUNT=0þ**       ENDþ**    END ELSEþ**      WRITE 'Q':@AM:ACCOUNT:@AM:MD.TYPE ON FI.MD, 'QFILE'þ**      VALID.ACCOUNT=1þ**      OPEN '','QFILE' TO FI.ACCOUNT.MD ELSEþ**         MESSAGE<-1>=ACCOUNT:' is not a valid account!'þ**         VALID.ACCOUNT=0þ**       ENDþ**    ENDþ END ELSEþ   VALID.ACCOUNT=0þ   MESSAGE<-1>='No Account defined!'þ ENDþIF REPORT.FILE <> '' THENþ   IF NOT(VALID.ACCOUNT) THENþ      IF PLATFORM = 'JB' THENþ         MESSAGE<-1>='Unable to verify ':REPORT.FILE:' file because account path not properly defined!'þ      END ELSEþ         MESSAGE<-1>='Unable to verify ':REPORT.FILE:' file because account not properly defined!'þ      ENDþ      VALID.REPORT.FILE=0þ    END ELSEþ      VALID.REPORT.FILE=1þ      QFILE.NAME='QFILE'þ      IF PLATFORM <> 'JB' THENþ         CALL CREATE.QPOINTER(PLATFORM,FI.MD,ACCOUNT,REPORT.FILE,QFILE.NAME,FI.REPORT.FILE)þ         IF QFILE.NAME = '' THENþ            MESSAGE<-1>=REPORT.FILE:' is not a valid file in the ':ACCOUNT:' account!'þ            VALID.REPORT.FILE=0þ          ENDþ       END ELSEþ         F.PTR='F':@AM:ACCOUNT:PATH.DELIM:REPORT.FILEþ         F.PTR<3>=F.PTR<2>:']D'þ         QFILE.NAME='QFILE'þ         WRITE F.PTR ON FI.MD, QFILE.NAMEþ         OPEN '','QFILE' TO TEST.MD ELSE þ            MESSAGE<-1>=REPORT.FILE:' is not a valid file in the ':ACCOUNT:' path!'þ            VALID.REPORT.FILE=0þ   þ       ENDþ    END     þ**      EXECUTE "SET-FILE ":ACCOUNT:" ":REPORT.FILE:' QFILE' CAPTURING DUMMYþ**       IF PLATFORM = 'UD' THENþ**          QFILE.NAME='QFILE'þ**          CALL CREATE.UD.QPOINTER(ACCOUNT,REPORT.FILE,QFILE.NAME,FI.REPORT.FILE)þ**          IF QFILE.NAME = '' THENþ**             MESSAGE<-1>=REPORT.FILE:' is not a valid file in the ':ACCOUNT:' account!'þ**             VALID.REPORT.FILE=0þ**           ENDþ**        END ELSEþ**         WRITE 'Q':@AM:ACCOUNT:@AM:REPORT.FILE ON FI.MD, 'QFILE'þ**         OPEN '','QFILE' TO FI.REPORT.FILE ELSEþ**            MESSAGE<-1>=REPORT.FILE:' is not a valid file in the ':ACCOUNT:' account!'þ**            VALID.REPORT.FILE=0þ**          ENDþ**       ENDþ      IF VALID.REPORT.FILE THENþ         HAVE.QFILE.REC=1þ         READ QFILE.REC FROM FI.MD, 'QFILE' ELSEþ            HAVE.QFILE.REC=0þ            MESSAGE<-1>='Unable to create QFILE pointer to ':ACCOUNT:' ':REPORT.FILEþ          ENDþ         IF HAVE.QFILE.REC THENþ            WRITE QFILE.REC ON FI.MD, 'DASHBOARD.SALES.FILE'þ            OPEN 'DICT','DASHBOARD.SALES.FILE' TO FI.DICT.REPORT.FILE ELSE þ               MESSAGE<-1>='Unable to open DICT ':REPORT.FILEþ             ENDþ          ENDþ       ENDþ    ENDþ END ELSEþ   MESSAGE<-1>='No Sales Report file defined!'þ ENDþIF SALE.DATE.DICT = '' THENþ   IF VALID.REPORT.FILE THENþ      MESSAGE<-1>='No Date Of Sale Dictionary Defined!'þ    ENDþ END ELSEþ   IF NOT(VALID.REPORT.FILE) THENþ      MESSAGE<-1>="Cant Verify Dict ":SALE.DATE.DICT:' Because No Sales File!'þ    END ELSEþ      READ SALE.DATE.DICT.REC FROM FI.DICT.REPORT.FILE, SALE.DATE.DICT ELSEþ         SALE.DATE.DICT.REC=''þ         MESSAGE<-1>=SALE.DATE.DICT:' Does Not Exist!'þ       ENDþ      IF SALE.DATE.DICT.REC <> '' THENþ         VALID.DATE.DICT=1þ         DICT.TYPE=SALE.DATE.DICT.REC<1>þ         BEGIN CASEþ            CASE DICT.TYPE = 'A' OR DICT.TYPE = 'S' þ               IF SALE.DATE.DICT.REC<7>[1,1] <> 'D' AND SALE.DATE.DICT.REC<8>[1,1] <> 'D' THENþ                  VALID.DATE.DICT=0þ                ENDþ               SALE.DATE.AMC=SALE.DATE.DICT.REC<2>þ            CASE DICT.TYPE = 'D' OR DICT.TYPE = 'I' OR DICT.TYPE = 'C'þ               IF SALE.DATE.DICT.REC<3>[1,1] <> 'D' THENþ                  VALID.DATE.DICT=0þ                ENDþ               SALE.DATE.AMC=SALE.DATE.DICT.REC<2>þ            CASE 1þ               VALID.DATE.DICT=0þ               SALE.DATE.AMC=SALE.DATE.DICT.REC<2>þ         END CASEþ         IF NOT(VALID.DATE.DICT) THENþ            MESSAGE<-1>='Dictionary Item ':SALE.DATE.DICT:' Does Not Appear To Be A Date!'þ          ENDþ       ENDþ    ENDþ ENDþIF SALE.AMOUNT.DICT = '' THENþ   IF VALID.REPORT.FILE THENþ      MESSAGE<-1>='No Sale Amount Dictionary Defined!'þ    ENDþ END ELSEþ   IF NOT(VALID.REPORT.FILE) THENþ      MESSAGE<-1>="Cant Verify Dict ":SALE.AMOUNT.DICT:' Because No Sales File!'þ    END ELSEþ      READ SALE.AMOUNT.DICT.REC FROM FI.DICT.REPORT.FILE, SALE.AMOUNT.DICT ELSEþ         SALE.AMOUNT.DICT.REC=''þ         MESSAGE<-1>=SALE.AMOUNT.DICT:' Does Not Exist!'þ       ENDþ      IF SALE.AMOUNT.DICT.REC <> '' THENþ         VALID.AMOUNT.DICT=1þ         DICT.TYPE=SALE.AMOUNT.DICT.REC<1>þ         BEGIN CASEþ            CASE DICT.TYPE = 'A' OR DICT.TYPE = 'S' þ               DICT.7.1.2=SALE.AMOUNT.DICT.REC<7>[1,2]þ               DICT.8.1.2=SALE.AMOUNT.DICT.REC<8>[1,2]þ               IF DICT.7.1.2 <> 'MD' AND DICT.7.1.2 <> 'MR' AND DICT.8.1.2 <> 'MD' AND DICT.8.1.2 <> 'MR' THENþ                  VALID.AMOUNT.DICT=0þ                ENDþ               SALE.AMOUNT.AMC=SALE.AMOUNT.DICT.REC<2>þ            CASE DICT.TYPE = 'D' OR DICT.TYPE = 'I' OR DICT.TYPE = 'C'þ               DICT.3.1.2=SALE.AMOUNT.DICT.REC<3>[1,2]þ               IF DICT.3.1.2 <> 'MR' AND DICT.3.1.2 <> 'MD' THENþ                  VALID.AMOUNT.DICT=0þ                ENDþ               SALE.AMOUNT.AMC=SALE.AMOUNT.DICT.REC<2>þ            CASE 1þ               VALID.AMOUNT.DICT=0þ               SALE.AMOUNT.AMC=SALE.AMOUNT.DICT.REC<2>þ         END CASEþ         IF NOT(VALID.AMOUNT.DICT) THENþ            MESSAGE<-1>='Dictionary Item ':SALE.AMOUNT.DICT:' Does Not Appear To Be An Amount!'þ          ENDþ       ENDþ    ENDþIF COST.OF.SALE.AMOUNT.DICT = '' THENþ   IF VALID.REPORT.FILE THENþ      MESSAGE<-1>='No Cost of Sale Amount Dictionary Defined - Gross Profit and Margin reporting will not be possible'þ    ENDþ END ELSEþ   IF NOT(VALID.REPORT.FILE) THENþ      MESSAGE<-1>="Cant Verify Dict ":COST.OF.SALE.AMOUNT.DICT:' Because No Sales File!'þ    END ELSEþ      READ COST.OF.SALE.AMOUNT.DICT.REC FROM FI.DICT.REPORT.FILE, COST.OF.SALE.AMOUNT.DICT ELSEþ         COST.OF.SALE.AMOUNT.DICT.REC=''þ         MESSAGE<-1>=COST.OF.SALE.AMOUNT.DICT:' Does Not Exist!'þ       ENDþ      IF COST.OF.SALE.AMOUNT.DICT.REC <> '' THENþ         VALID.AMOUNT.DICT=1þ         DICT.TYPE=COST.OF.SALE.AMOUNT.DICT.REC<1>þ         BEGIN CASEþ            CASE DICT.TYPE = 'A' OR DICT.TYPE = 'S' þ               DICT.7.1.2=COST.OF.SALE.AMOUNT.DICT.REC<7>[1,2]þ               DICT.8.1.2=COST.OF.SALE.AMOUNT.DICT.REC<8>[1,2]þ               IF DICT.7.1.2 <> 'MD' AND DICT.7.1.2 <> 'MR' AND DICT.8.1.2 <> 'MD' AND DICT.8.1.2 <> 'MR' THENþ                  VALID.AMOUNT.DICT=0þ                ENDþ               COST.OF.SALE.AMOUNT.AMC=COST.OF.SALE.AMOUNT.DICT.REC<2>þ            CASE DICT.TYPE = 'D' OR DICT.TYPE = 'I' OR DICT.TYPE = 'C'þ               DICT.3.1.2=COST.OF.SALE.AMOUNT.DICT.REC<3>[1,2]þ               IF DICT.3.1.2 <> 'MR' AND DICT.3.1.2 <> 'MD' THENþ                  VALID.AMOUNT.DICT=0þ                ENDþ               COST.OF.SALE.AMOUNT.AMC=COST.OF.SALE.AMOUNT.DICT.REC<2>þ            CASE 1þ               VALID.AMOUNT.DICT=0þ               COST.OF.SALE.AMOUNT.AMC=COST.OF.SALE.AMOUNT.DICT.REC<2>þ         END CASEþ         IF NOT(VALID.AMOUNT.DICT) THENþ            MESSAGE<-1>='Dictionary Item ':COST.OF.SALE.AMOUNT.DICT:' Does Not Appear To Be An Amount!'þ          ENDþ       ENDþ    ENDþ ENDþIF SALE.MONTH.DICT = '' THENþ   IF VALID.REPORT.FILE THENþ      MESSAGE<-1>='No Month Of Sale Dictionary Defined!'þ    ENDþ END ELSEþ   IF NOT(VALID.REPORT.FILE) THENþ      MESSAGE<-1>="Cant Verify Dict ":SALE.MONTH.DICT:' Because No Sales File!'þ    END ELSEþ      READ SALE.MONTH.DICT.REC FROM FI.DICT.REPORT.FILE, SALE.MONTH.DICT ELSEþ         SALE.MONTH.DICT.REC=''þ         MESSAGE<-1>=SALE.MONTH.DICT:' Does Not Exist!'þ       ENDþ      IF SALE.MONTH.DICT.REC <> '' THENþ         VALID.MONTH.DICT=1þ         DICT.TYPE=SALE.MONTH.DICT.REC<1>þ         BEGIN CASEþ            CASE DICT.TYPE = 'A' OR DICT.TYPE = 'S' þ               IF SALE.MONTH.DICT.REC<7>[1,1] <> 'D' AND SALE.MONTH.DICT.REC<8>[1,1] <> 'D' THENþ                  VALID.MONTH.DICT=0þ                ENDþ               SALE.MONTH.AMC=SALE.MONTH.DICT.REC<2>þ            CASE DICT.TYPE = 'D' OR DICT.TYPE = 'I' OR DICT.TYPE = 'C'þ               IF SALE.MONTH.DICT.REC<3>[1,1] <> 'D' THENþ                  VALID.MONTH.DICT=0þ                ENDþ               SALE.MONTH.AMC=SALE.MONTH.DICT.REC<2>þ            CASE 1þ               VALID.MONTH.DICT=0þ               SALE.MONTH.AMC=SALE.MONTH.DICT.REC<2>þ         END CASEþ         IF NOT(VALID.MONTH.DICT) THENþ            MESSAGE<-1>='Dictionary Item ':SALE.MONTH.DICT:' Does Not Appear To Be A Date Month!'þ          ENDþ       ENDþ    ENDþ ENDþIF SALE.YEAR.DICT = '' THENþ   IF VALID.REPORT.FILE THENþ      MESSAGE<-1>='No Year Of Sale Dictionary Defined!'þ    ENDþ END ELSEþ   IF NOT(VALID.REPORT.FILE) THENþ      MESSAGE<-1>="Cant Verify Dict ":SALE.YEAR.DICT:' Because No Sales File!'þ    END ELSEþ      READ SALE.YEAR.DICT.REC FROM FI.DICT.REPORT.FILE, SALE.YEAR.DICT ELSEþ         SALE.YEAR.DICT.REC=''þ         MESSAGE<-1>=SALE.YEAR.DICT:' Does Not Exist!'þ       ENDþ      IF SALE.YEAR.DICT.REC <> '' THENþ         VALID.YEAR.DICT=1þ         DICT.TYPE=SALE.YEAR.DICT.REC<1>þ         BEGIN CASEþ            CASE DICT.TYPE = 'A' OR DICT.TYPE = 'S' þ               IF SALE.YEAR.DICT.REC<7>[1,1] <> 'D' AND NOT(INDEX(SALE.YEAR.DICT.REC<8>,'D',1)) THENþ                  VALID.YEAR.DICT=0þ                ENDþ               SALE.YEAR.AMC=SALE.YEAR.DICT.REC<2>þ            CASE DICT.TYPE = 'D' OR DICT.TYPE = 'I' OR DICT.TYPE = 'C'þ               ATT2=SALE.YEAR.DICT.REC<2>þ               IF INDEX(ATT2,"'D",1) OR INDEX(ATT2,'"D',1) OR ATT2[1,1] = 'D' THENþ                  VALID.YEAR.DICT=1þ                END ELSEþ                  VALID.YEAR.DICT=0þ                ENDþ            CASE 1þ               VALID.YEAR.DICT=0þ               SALE.YEAR.AMC=SALE.YEAR.DICT.REC<2>þ         END CASEþ         IF NOT(VALID.YEAR.DICT) THENþ            MESSAGE<-1>='Dictionary Item ':SALE.YEAR.DICT:' Does Not Appear To Be A Date Year!'þ          ENDþ       ENDþ    ENDþ ENDþIF SALESMAN.DICT = '' THENþ   IF VALID.REPORT.FILE THENþ      MESSAGE<-1>='No Salesman Dictionary Defined!'þ    ENDþ END ELSEþ   IF NOT(VALID.REPORT.FILE) THENþ      MESSAGE<-1>="Cant Verify Dict ":SALESMAN.DICT:' Because No Sales File!'þ    END ELSEþ      READ SALESMAN.DICT.REC FROM FI.DICT.REPORT.FILE, SALESMAN.DICT ELSEþ         SALESMAN.DICT.REC=''þ         MESSAGE<-1>=SALESMAN.DICT:' Does Not Exist!'þ       ENDþ      IF SALESMAN.DICT.REC <> '' THENþ         VALID.SALESMAN.DICT=1þ         DICT.TYPE=SALESMAN.DICT.REC<1>þ         BEGIN CASEþ            CASE DICT.TYPE = 'A' OR DICT.TYPE = 'S'þ               IF SALESMAN.DICT.REC<7>[1,1] <> 'T' AND SALESMAN.DICT.REC<8>[1,1] <> 'T' THENþ                  VALID.SALESMAN.DICT=0þ                END ELSEþ                  IF SALESMAN.DICT.REC<7>[1,1] = 'T' THENþ                     SALESMAN.TFILE=SALESMAN.DICT.REC<7>þ                   END ELSEþ                     SALESMAN.TFILE=SALESMAN.DICT.REC<8>þ                   ENDþ                ENDþ               SALESMAN.AMC=SALESMAN.DICT.REC<2>þ            CASE DICT.TYPE = 'D' OR DICT.TYPE = 'I' OR DICT.TYPE = 'C'þ               IF INDEX(SALESMAN.DICT.REC<3>,'TRANS',1) THENþ                  VALID.SALESMAN.DICT=0þ                END ELSEþ                  SALESMAN.TFILE=SALESMAN.DICT.REC<3>þ                ENDþ               SALE.SALESMAN.AMC=SALESMAN.DICT.REC<2>þ            CASE 1þ               VALID.SALESMAN.DICT=0þ               SALE.SALESMAN.AMC=SALESMAN.DICT.REC<2>þ         END CASEþ         IF NOT(VALID.SALESMAN.DICT) THENþ            MESSAGE<-1>='Dictionary Item ':SALESMAN.DICT:' May Not Be Correct'þ            MESSAGE:=" Because It Doesn't Translate To Another File For The Full Name"þ          ENDþ       ENDþ    ENDþ ENDþIF BRANCH.DICT <> '' THENþ   IF NOT(VALID.REPORT.FILE) THENþ      MESSAGE<-1>="Cant Verify Dict ":BRANCH.DICT:' Because No Sales File!'þ    END ELSEþ      READ BRANCH.DICT.REC FROM FI.DICT.REPORT.FILE, BRANCH.DICT ELSEþ         BRANCH.DICT.REC=''þ         MESSAGE<-1>=BRANCH.DICT:' Does Not Exist!'þ       ENDþ      IF BRANCH.DICT.REC <> '' THENþ         VALID.BRANCH.DICT=1þ         DICT.TYPE=BRANCH.DICT.REC<1>þ         BEGIN CASEþ            CASE DICT.TYPE = 'A' OR DICT.TYPE = 'S'þ               IF BRANCH.DICT.REC<7>[1,1] <> 'T' AND BRANCH.DICT.REC<8>[1,1] <> 'T' THENþ                  VALID.BRANCH.DICT=0þ                END ELSEþ                  IF BRANCH.DICT.REC<7>[1,1] = 'T' THENþ                     BRANCH.TFILE=BRANCH.DICT.REC<7>þ                   END ELSEþ                     BRANCH.TFILE=BRANCH.DICT.REC<8>þ                   ENDþ                ENDþ               BRANCH.AMC=BRANCH.DICT.REC<2>þ            CASE DICT.TYPE = 'D' OR DICT.TYPE = 'I' OR DICT.TYPE = 'C'þ               IF INDEX(BRANCH.DICT.REC<3>,'TRANS',1) THENþ                  VALID.BRANCH.DICT=0þ                END ELSEþ                  BRANCH.TFILE=BRANCH.DICT.REC<3>þ                ENDþ               SALE.BRANCH.AMC=BRANCH.DICT.REC<2>þ            CASE 1þ               VALID.BRANCH.DICT=0þ               SALE.BRANCH.AMC=BRANCH.DICT.REC<2>þ         END CASEþ         IF NOT(VALID.BRANCH.DICT) THENþ            MESSAGE<-1>='Dictionary Item ':BRANCH.DICT:' May Not Be Correct'þ            MESSAGE:=" Because It Doesn't Translate To Another File For The Full Name"þ          ENDþ       ENDþ    ENDþ ENDþIF REGION.DICT <> '' THENþ   IF NOT(VALID.REPORT.FILE) THENþ      MESSAGE<-1>="Cant Verify Dict ":REGION.DICT:' Because No Sales File!'þ    END ELSEþ      READ REGION.DICT.REC FROM FI.DICT.REPORT.FILE, REGION.DICT ELSEþ         REGION.DICT.REC=''þ         MESSAGE<-1>=REGION.DICT:' Does Not Exist!'þ       ENDþ      IF REGION.DICT.REC <> '' THENþ         VALID.REGION.DICT=1þ         DICT.TYPE=REGION.DICT.REC<1>þ         BEGIN CASEþ            CASE DICT.TYPE = 'A' OR DICT.TYPE = 'S'þ               IF REGION.DICT.REC<7>[1,1] <> 'T' AND REGION.DICT.REC<8>[1,1] <> 'T' THENþ                  VALID.REGION.DICT=0þ                END ELSEþ                  IF REGION.DICT.REC<7>[1,1] = 'T' THENþ                     REGION.TFILE=REGION.DICT.REC<7>þ                   END ELSEþ                     REGION.TFILE=REGION.DICT.REC<8>þ                   ENDþ                ENDþ               REGION.AMC=REGION.DICT.REC<2>þ            CASE DICT.TYPE = 'D' OR DICT.TYPE = 'I' OR DICT.TYPE = 'C'þ               IF INDEX(REGION.DICT.REC<3>,'TRANS',1) THENþ                  VALID.REGION.DICT=0þ                END ELSEþ                  REGION.TFILE=REGION.DICT.REC<3>þ                ENDþ               SALE.REGION.AMC=REGION.DICT.REC<2>þ            CASE 1þ               VALID.REGION.DICT=0þ               SALE.REGION.AMC=REGION.DICT.REC<2>þ         END CASEþ         IF NOT(VALID.REGION.DICT) THENþ            MESSAGE<-1>='Dictionary Item ':REGION.DICT:' May Not Be Correct'þ            MESSAGE:=" Because It Doesn't Translate To Another File For The Full Name"þ          ENDþ       ENDþ    ENDþ ENDþCREATE.INDEXES=1þIF MESSAGE = '' THENþ   MESSAGE='Sales Report parameters properly defined!'þ END ELSEþ   IF INDEX(MESSAGE,'!',1) THENþ      MESSAGE=INSERT(MESSAGE,1,0,0,'!!! ERRORS !!!')þ      CREATE.INDEXES=0þ    ENDþ ENDþIF CREATE.INDEXES THENþ   * CREATE PIPE DICTIONARY ITEMþ   IF PLATFORM = 'D3' OR PLATFORM = 'QM' OR PLATFORM = 'JB' THENþ      PIPE='A'þ      PIPE<2>=0þ      PIPE<3>=' 'þ      PIPE<8>='F;C|'þ      PIPE<9>='L'þ      PIPE<10>=1þ    END ELSEþ      PIPE='I'þ      PIPE<2>='"|"'þ      PIPE<4>='|'þ      PIPE<5>='1L'þ      PIPE<6>='S'þ    ENDþ   WRITE PIPE ON FI.DICT.REPORT.FILE, 'PIPE'þ   *þ   ** INDEX LOGICþ   *þ   BEGIN CASEþ      CASE PLATFORM = 'D3'þ         INDEX.TEST='A':SALE.DATE.AMC:'(DY):':SALE.DATE.AMC:'(DM)'þ         READ FILE.DEF.REC FROM FI.DICT.REPORT.FILE, REPORT.FILE ELSE FILE.DEF.REC=''þ         IF FILE.DEF.REC <> '' AND NOT(INDEX(FILE.DEF.REC<8>,INDEX.TEST,1)) THENþ            MESSAGE<-1>='Creating Indexes'þ            CMND1="CREATE-INDEX DASHBOARD.SALES.FILE A":SALE.DATE.AMCþ            EXECUTE CMND1 CAPTURING RESULT1þ            CMND2="CREATE-INDEX DASHBOARD.SALES.FILE ":INDEX.TESTþ            EXECUTE CMND2 CAPTURING RESULT2þ          ENDþ      CASE 1þ         EXECUTE "CREATE-INDEX DASHBOARD.SALES.FILE ":SALE.DATE.DICT CAPTURING RESULT1þ   END CASEþ ENDþGOSUB MESSAGE.DISPLAYþRETURNþ*þMESSAGE.DISPLAY:þ*þMAX.MSG=DCOUNT(MESSAGE,CHAR(254))þW$HTML.DATA='<h3>':MESSAGE<1>þIF MAX.MSG > 1 THENþ   FOR MSG.NO = 2 TO MAX.MSGþ      W$HTML.DATA:='<br>':MESSAGE<MSG.NO>þ    NEXT MSG.NOþ ENDþW$HTML.DATA:='</h3>'þRETURNþEND00099ASUB.SC.LIB.COLþ0c2    SUBROUTINE SUB.SC.LIB.COLþ* Changed by PORTBAS -> SUBROUTINE SUB.SC.LIB.PIEþ* @(#) SUB.SC.LIB.COL Ported to jBASE 17:55:32  08 JUL 2015þ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Pie Demoþ*þ*#MAKE# RL $OPTIONS D3þ    INCLUDE WBPD MVDB.INCLUDEþ*þ    W$TITLE = "Source Code: Lines by Program"þ    W$TYPE = "FCBAR2D"þ    W$WIDTH = 2þ*þ    IF G$QUERYMODE THEN RETURNþ*þ    IF WIDGET.USER.DATA(1) = "" THEN WIDGET.USER.DATA(1) = "1"þ    IF WIDGET.USER.DATA(2) = "" THEN WIDGET.USER.DATA(2) = "1"þ    N = WIDGET.USER.DATA(1)þ*þ    IF WIDGET.USER.DATA(2) = "1" THENþ        CNT.TYPE = "LINES"þ    END ELSEþ        CNT.TYPE = "BYTES"þ    ENDþ*þ    W$BAR.LABELS<1> = "Lines by Program"þ*þ    DIM LIB.FILES(3), LIBS(3)þ*þ    LIBS(1) = "RSS.BP"þ    LIBS(2) = "WBPD"þ    LIBS(3) = "MVDB.SUBS"þ*þ    W$TITLE := " (":LIBS(N):")"þ*þ    TOT.LINES = 0 ; TOT.PROGS = 0þ    OPEN LIBS(N) TO LIB.FILES(N) ELSE STOP 201, LIBS(N)þ    SELECT LIB.FILES(N)þ    LOOPþ        READNEXT ID ELSE EXITþ        READ REC FROM LIB.FILES(N), ID ELSE REC = ""þ        IF CNT.TYPE = "LINES" THENþ            LINES = DCOUNT(REC, @AM)þ        END ELSEþ            LINES = LEN(REC)þ        ENDþ        W$BAR.XLABELS<1,-1> = IDþ        W$BAR.VALUES<1,-1> = LINESþ        TOT.PROGS += 1þ        TOT.LINES += LINESþ    REPEATþ*þ    IF TOT.PROGS > 0 THENþ        AVG = INT( TOT.LINES / TOT.PROGS )þ    END ELSE AVG = 0þ*þ    W$BAR.XMEMO = "Programs"þ    IF CNT.TYPE = "LINES" THENþ        W$BAR.YMEMO = "Lines of Code"þ    END ELSEþ        W$BAR.YMEMO = "Bytes of Code"þ    ENDþ    W$BAR.TREND.BEG = AVGþ    W$BAR.TREND.OPTS = "color='20FF20' thickness='3' showOnTop='1'"þ*þ    W$CHART.HEIGHT = 200 + 8 * TOT.PROGSþ    W$CHART.OPTIONS<-1> = 'numDivLines="3"'þ*þ    W$BAR.CAPTION = "In Program File ":LIBS(N)þ*þ    W$INPUT.PROMPT<1> = "Program File"þ    W$INPUT.TYPE<1> = "SELECT"þ    W$INPUT.SELOPTS<1> = "RSS Feeds (RSS.BP)":@VM:"Includes (WBPD)":@VM:"Widget Subs (MVDB.SUBS)"þ    W$INPUT.SELVALS<1> = "1":@VM:"2":@VM:"3"þ    W$INPUT.DEFAULT<1> = WIDGET.USER.DATA(1)þ    W$INPUT.UDPOS<1> = 1      ;* WIDGET.USER.DATA(1)þ*þ    W$INPUT.PROMPT<2> = "Count"þ    W$INPUT.TYPE<2> = "SELECT"þ    W$INPUT.SELOPTS<2> = "Lines of code":@VM:"Bytes of code"þ    W$INPUT.SELVALS<2> = "1":@VM:"2"þ    W$INPUT.DEFAULT<2> = WIDGET.USER.DATA(2)þ    W$INPUT.UDPOS<2> = 2      ;* WIDGET.USER.DATA(2)þ    W$INPUT.BUTTON = "Go"þ*þ    INCLUDE WBPD SOURCE.VIEW.ICONþ*þ    RETURN000708SUB.DEMO.SS.COLþ0c2SUBROUTINE SUB.DEMO.SS.COLþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Single Series Column Chart Demonstrationþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "Demo - Monthly Unit Sales"þW$TYPE = "FCCOLUMN2D"þW$WIDTH = 2þ*þIF G$QUERYMODE THEN RETURNþ*þIF WIDGET.USER.DATA(1) = "" THEN WIDGET.USER.DATA(1) = "2D"þBEGIN CASEþ  CASE WIDGET.USER.DATA(1) = "2D"þ    W$TYPE = "FCCOLUMN2D"þ  CASE WIDGET.USER.DATA(1) = "3D"þ    W$TYPE = "FCCOLUMN3D"þ  CASE WIDGET.USER.DATA(1) = "BAR"þ    W$TYPE = "FCBAR2D"þ  CASE WIDGET.USER.DATA(1) = "AREA2D"þ    W$TYPE = "FCAREA2D"þ  CASE 1þ    W$TYPE = WIDGET.USER.DATA(1)þEND CASEþ*þW$BAR.CAPTION = "Revenue by Branch for Period 2008-08"þW$BAR.XMEMO = "Branch"þW$BAR.YMEMO = "Sales Revenue"þ*þUNITS = ""þUNITS<1> = "15177"þUNITS<2> = "11700"þUNITS<3> = "12833"þUNITS<4> = "13529"þUNITS<5> = "21953"þUNITS<6> = "35792"þUNITS<7> = "35202"þUNITS<8> = "28206"þUNITS<9> = "23168"þUNITS<10> = "42657"þUNITS<11> = "35595"þUNITS<12> = "28328"þUNITS<13> = "297674"þUNITS<14> = "26111"þUNITS<15> = "243295"þUNITS<16> = "323846"þUNITS<17> = "42615"þUNITS<18> = "-29"þUNITS<19> = "38787"þUNITS<20> = "71023"þUNITS<21> = "130106"þ*þFOR N = 1 TO 12þ  W$BAR.VALUES<1,N> = UNITS<N>þ*  W$BAR.XLABELS<1,N> = OCONV(ICONV(N:"/1",'D'),'DMA')[1,3]þ  W$BAR.XLABELS<1,N> = Nþ  W$FW.DD.WIDGET<1,N> = "Drilldown Demo"þ  W$FW.DD.UD.POS<1,N,1> = 1þ  W$FW.DD.UD.VAL<1,N,1> = UNITS<N>þ  W$FW.DD.UD.POS<1,N,2> = 2þ  W$FW.DD.UD.VAL<1,N,2> = NþNEXT Nþ*þW$INPUT.PROMPT = "Chart Style"þW$INPUT.TYPE = "SELECT"þW$INPUT.SELOPTS = "2D Column":@VM:"3D Column":@VM:"Bar Chart":@VM:"2D Area Chart"þW$INPUT.SELVALS = "2D":@VM:"3D":@VM:"BAR":@VM:"AREA2D"þW$INPUT.UDPOS = 1þW$INPUT.DEFAULT = WIDGET.USER.DATA(1)þ*þINCLUDE WBPD SOURCE.VIEW.ICONþ*þRETURN000B92SUB.DEMO.MAP.USAþ0c2SUBROUTINE SUB.DEMO.MAP.USAþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: US Map demonstrationþ* 6-1-15 ZUMASYS CHANGE MAP ID DELIMITER FROM * TO #þ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "Demo - States by Alphabet"þW$TYPE = "USAMAP"þW$WIDTH = 3þ*þIF G$QUERYMODE THEN RETURNþ*þOPEN '','MVDB.CONTROL' TO F.MVDB.CONTROL ELSE STOP 201, 'MVDB.CONTROL'þREAD STATE.NAMES FROM F.MVDB.CONTROL, 'STATE.NAMES' ELSE STATE.NAMES = ''þCONVERT "," TO @VM IN STATE.NAMESþ*þW$CHART.OPTIONS<-1> = 'animation="0"'þW$CHART.OPTIONS<-1> = 'showShadow="1"'þ* 10-17-16 deprecated * W$CHART.OPTIONS<-1> = 'showBevel="1"'þW$CHART.OPTIONS<-1> = 'legendShadow="1"'þW$CHART.OPTIONS<-1> = 'legendAllowDrag="1"'þ*þIF WIDGET.USER.DATA(1) # "" THENþ  * This is a drill-down run on this widget - we are now to display info for a specific stateþ  OPEN '','MVDB.MAP.DATA' TO F.MVDB.MAP.DATA ELSE STOP 201, 'MVDB.MAP.DATA'þ  EXECUTE 'SELECT MVDB.MAP.DATA WITH NAME = "':WIDGET.USER.DATA(2):'"' CAPTURING JUNKþ  N = 0þ  LOOPþ    READNEXT ID ELSE EXITþ    READ REC FROM F.MVDB.MAP.DATA, ID THENþ      N += 1þ      NAME = REC<2>þ*6-1-15*      W$MAP.IDS<1,N> = FIELD( ID, '*', 2 )þ      W$MAP.IDS<1,N> = FIELD( ID, '#', 2 ); *6-1-15þ      W$MAP.VALUES<1,N> = (SEQ(REC<2>[1,1]) - SEQ('A')) + 1þ      W$MAP.VALUE.TOOLTEXT<1,N> = NAMEþ      W$FW.DD.WIDGET<1,N> = "Drilldown Demo"þ      W$FW.DD.UD.POS<1,N,1> = 1þ*6-1-15*      W$FW.DD.UD.VAL<1,N,1> = FIELD(ID,'*',1)þ      W$FW.DD.UD.VAL<1,N,1> = FIELD(ID,'#',1); *6-1-15*þ      W$FW.DD.UD.POS<1,N,2> = 2þ      W$FW.DD.UD.VAL<1,N,2> = IDþ      W$FW.DD.UD.POS<1,N,3> = 3þ      W$FW.DD.UD.VAL<1,N,3> = WIDGET.USER.DATA(2)þ      W$FW.DD.UD.POS<1,N,4> = 4þ      W$FW.DD.UD.VAL<1,N,4> = REC<2>þ    ENDþ  REPEATþ  W$LINK.LABEL<1,1> = "Return to USA Map"þ  W$LINK.LOCATION<1,1> = "C"þ  W$LINK.UD.POS<1,1> = 1þ  W$LINK.UD.VAL<1,1> = ""þ  W$LINK.ICON<1,1> = "arrow_left.png"þ  W$LINK.ICON.TXT<1,1> = "Back to US Map"þ  *þ  W$LINK.LABEL<1,2> = "Return to USA Map"þ  W$LINK.LOCATION<1,2> = "1"þ  W$LINK.UD.POS<1,2> = 1þ  W$LINK.UD.VAL<1,2> = ""þ  *þ  W$TITLE = "Demo - ":WIDGET.USER.DATA(1):" Counties by Alphabet"þEND ELSE ;* National map displayþ  STATE.CNT = DCOUNT( STATE.NAMES<1>, @VM )þ  FOR N = 1 TO STATE.CNTþ    W$MAP.IDS<1,N> = STATE.NAMES<1,N>þ    W$MAP.VALUES<1,N> = (SEQ(STATE.NAMES<1,N>[1,1]) - SEQ('A')) + 1þ    W$MAP.VALUE.TOOLTEXT<1,N> := STATE.NAMES<2,N>:' (':STATE.NAMES<1,N>:')'þ    W$MAP.VALUE.DD<1,N> = 1 ;* Allow drill-downþ  NEXT NþENDþ*þW$MAP.RANGE.NAME<1,1> = "Early in Alphabet"þW$MAP.RANGE.LOW<1,1> = "1"þW$MAP.RANGE.HIGH<1,1> = "10"þW$MAP.RANGE.COLOR<1,1> = "GREEN"þW$MAP.RANGE.NAME<1,2> = "Middle of Alphabet"þW$MAP.RANGE.LOW<1,2> = "10"þW$MAP.RANGE.HIGH<1,2> = "18"þW$MAP.RANGE.COLOR<1,2> = "YELLOW"þW$MAP.RANGE.NAME<1,3> = "Late in Alphabet"þW$MAP.RANGE.LOW<1,3> = "18"þW$MAP.RANGE.HIGH<1,3> = "27"þW$MAP.RANGE.COLOR<1,3> = "RED"þ*þINCLUDE WBPD SOURCE.VIEW.ICONþ*þRETURN000355SUB.EMAILED.REPORTþ0c2SUBROUTINE SUB.EMAILED.REPORTþ*þ* Dashboard Widgetþ*þINCLUDE WBPD WWW.INCLUDEþINCLUDE WBPD MVDB.INCLUDEþEQU REPORT.ID TO WIDGET.USER.DATA(1)þEMAILED.REPORT=''þIF REPORT.ID = '' THENþ   EMAILED.REPORT='No report id found'þ END ELSEþ   OPEN '','MVDB.EMAILED.HTML' TO F.MVDB.EMAILED.HTML ELSEþ      EMAILED.REPORT='No MVDB.EMAILED.HTML file on system'þ    ENDþ   IF EMAILED.REPORT = '' THENþ      READ EMAILED.REPORT FROM F.MVDB.EMAILED.HTML, REPORT.ID ELSEþ         EMAILED.REPORT='No report data found for ':REPORT.IDþ       ENDþ    ENDþ ENDþW$TYPE='TEXT'þW$TITLE='View TEXT report'þIF INDEX(EMAILED.REPORT,'HTML',1) THENþ   W$TYPE='HTML'þ   W$TITLE='View HTML report'þ ENDþW$WIDTH = 3                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þIF G$QUERYMODE THEN RETURNþW$PRINTABLE=1þW$PDFABLE=1þW$TEXT.DATA=EMAILED.REPORTþRETURNþEND000C87SUB.MAP.VARIABLEþ0c2SUBROUTINE SUB.MAP.VARIABLEþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Variable Mapþ* 6-1-15 ZUMASYS CHANGE MAP.DATA DELIMITER TO #þ*þ* Modified by Peter Schellenbach of Zumasys 06-08-15:þ*  Changed test of ENUM after EXECUTE to test SYSTEM(11) instead.þ*þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "Variable Map"þW$TYPE = "MAP:World"þW$WIDTH = 3þ*þIF G$QUERYMODE THEN RETURNþ*þIF WIDGET.USER.DATA(1) = "" THEN WIDGET.USER.DATA(1) = "World"þ*þOPEN '','MVDB.MAP.DATA' TO F.MVDB.MAP.DATA ELSE STOP 201, 'MVDB.MAP.DATA'þ*þW$CHART.OPTIONS<-1> = 'animation="0"'þW$CHART.OPTIONS<-1> = 'showShadow="1"'þ* 10-17-16 deprecated * W$CHART.OPTIONS<-1> = 'showBevel="1"'þW$CHART.OPTIONS<-1> = 'legendShadow="1"'þW$CHART.OPTIONS<-1> = 'legendAllowDrag="1"'þ*þLAST.WTYPE = ""þSELOPT.MAX = 0þSELOPTX = 1þEXECUTE \SSELECT MVDB.MAP.DATA BY NAME BY A1\ RETURNING ENUM CAPTURING ETXTþ*PJS 06-08-15*IF ENUM[1,3]="404" THENþIF SYSTEM(11) THEN ; *PJS 06-08-15*þ LOOPþ  READNEXT ID ELSE ID="\\EOF"þ UNTIL ID="\\EOF" DOþ*6-1-15*  WTYPE = FIELD(ID,"*",1)þ  WTYPE = FIELD(ID,"#",1); *6-1-15þ  IF WTYPE # LAST.WTYPE THENþ    SELOPT.MAX += 1þ    W$INPUT.SELOPTS<1,SELOPT.MAX> = WTYPEþ    IF WTYPE = WIDGET.USER.DATA(1) THEN SELOPTX = SELOPT.MAXþ    LAST.WTYPE = WTYPEþ  ENDþ REPEATþENDþ*þIF WIDGET.USER.DATA(2) = "NEXT" AND SELOPTX < SELOPT.MAX THENþ SELOPTX += 1þ WIDGET.USER.DATA(1) = W$INPUT.SELOPTS<1,SELOPTX>þENDþIF WIDGET.USER.DATA(2) = "PREV" AND SELOPTX > 1 THENþ SELOPTX -= 1þ WIDGET.USER.DATA(1) = W$INPUT.SELOPTS<1,SELOPTX>þENDþWIDGET.USER.DATA(2) = ""þ*þEXECUTE \SSELECT MVDB.MAP.DATA BY NAME BY A1\ RETURNING ENUM CAPTURING ETXTþMAPX = 0þ*PJS 06-08-15*IF ENUM[1,3]="404" THENþIF SYSTEM(11) THEN ; *PJS 06-08-15*þ LOOPþ  READNEXT ID ELSE ID="\\EOF"þ UNTIL ID="\\EOF" DOþ*6-1-15*  WTYPE = FIELD(ID,"*",1)þ  WTYPE = FIELD(ID,"#",1); *6-1-15*þ  IF WTYPE # LAST.WTYPE THENþ    W$INPUT.SELOPTS<1,-1> = WTYPEþ    LAST.WTYPE = WTYPEþ  ENDþ  IF WTYPE = WIDGET.USER.DATA(1) THENþ    READ I FROM F.MVDB.MAP.DATA,ID THENþ      MAPX += 1þ*6-1-15*      W$MAP.IDS<1,MAPX> = FIELD(ID,'*',2)þ      W$MAP.IDS<1,MAPX> = FIELD(ID,'#',2); *6-1-15þ      W$MAP.VALUES<1,MAPX> = (SEQ(I<1>[1,1]) - (SEQ('A')-1))þ      W$MAP.VALUE.TOOLTEXT<1,MAPX> := I<2>:' (':I<1>:')'þ    ENDþ  ENDþ REPEATþENDþ*þW$TYPE = "MAP:":WIDGET.USER.DATA(1)þW$MAP.RANGE.NAME<1,1> = "Early in Alphabet"þW$MAP.RANGE.LOW<1,1> = "1"þW$MAP.RANGE.HIGH<1,1> = "10"þW$MAP.RANGE.COLOR<1,1> = "GREEN"þW$MAP.RANGE.NAME<1,2> = "Middle of Alphabet"þW$MAP.RANGE.LOW<1,2> = "10"þW$MAP.RANGE.HIGH<1,2> = "18"þW$MAP.RANGE.COLOR<1,2> = "YELLOW"þW$MAP.RANGE.NAME<1,3> = "Late in Alphabet"þW$MAP.RANGE.LOW<1,3> = "18"þW$MAP.RANGE.HIGH<1,3> = "27"þW$MAP.RANGE.COLOR<1,3> = "RED"þ*þW$INPUT.PROMPT = "Map Of"þW$INPUT.TYPE = "SELECT"þW$INPUT.SELVALS = W$INPUT.SELOPTSþW$INPUT.UDPOS = 1þW$INPUT.DEFAULT = WIDGET.USER.DATA(1)þ*þIF SELOPTX > 1 THENþ W$LINK.LABEL<1,-1> = "Prev Map"þ W$LINK.LOCATION<1,-1> = 23þ W$LINK.UD.POS<1,-1> = 2þ W$LINK.UD.VAL<1,-1> = "PREV"þENDþ*þIF SELOPTX < SELOPT.MAX THENþ W$LINK.LABEL<1,-1> = "Next Map"þ W$LINK.LOCATION<1,-1> = 14þ W$LINK.UD.POS<1,-1> = 2þ W$LINK.UD.VAL<1,-1> = "NEXT"þENDþ*þINCLUDE WBPD SOURCE.VIEW.ICONþ*þRETURN000261UV.EXECUTE.STACKED.CMNDSþ0c2SUBROUTINE UV.EXECUTE.STACKED.CMNDS(STACKED.1,STACKED.2,NUM.RETURNED,REPORT)þ*þREPORT=''þNUM.RETURNED=1þIF STACKED.1 <> '' THENþ   EXECUTE STACKED.1 RTNLIST STACKED.LIST CAPTURING NUM.RETURNEDþ   NUM.RETURNED=TRIM(NUM.RETURNED<2>)þ   NUM.RETURNED=FIELD(NUM.RETURNED,' ',1)þ   IF NOT(NUM.RETURNED) THEN RETURNþ   EXECUTE STACKED.2 PASSLIST STACKED.LIST CAPTURING REPORTþ END ELSEþ   EXECUTE STACKED.2 CAPTURING REPORTþ ENDþIF INDEX(REPORT,'0 records',1) THENþ   IF DCOUNT(REPORT,@AM) < 5 THENþ      NUM.RETURNED=0þ      REPORT=''þ    ENDþ ENDþCONVERT '$,' TO '' IN REPORTþRETURNþEND000FCCSUB.DEMO.MS.COLþ0c2SUBROUTINE SUB.DEMO.MS.COLþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ* Description: Multi Series Column Chart Demonstrationþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "Demo - Monthly Unit Sales"þW$TYPE = "FCMSCOLUMN2D"þW$WIDTH = 2þ*þIF G$QUERYMODE THEN RETURNþ*þIF WIDGET.USER.DATA(1) = "" THEN WIDGET.USER.DATA(1) = "2D"þBEGIN CASEþ  CASE WIDGET.USER.DATA(1) = "2D"þ    W$TYPE = "FCMSCOLUMN2D"þ  CASE WIDGET.USER.DATA(1) = "3D"þ    W$TYPE = "FCMSCOLUMN3D"þ  CASE WIDGET.USER.DATA(1) = "BAR"þ    W$TYPE = "FCMSBAR2D"þ  CASE WIDGET.USER.DATA(1) = "AREA2D"þ    W$TYPE = "FCMSAREA2D"þ  CASE WIDGET.USER.DATA(1) = "LINE"þ    W$TYPE = "FCMSLINE"þ  CASE WIDGET.USER.DATA(1) = "STACKEDAREA"þ    W$TYPE = "FCSTACKEDAREA2D"þ  CASE WIDGET.USER.DATA(1) = "STACKEDCOLUMN2D"þ    W$TYPE = "FCSTACKEDCOLUMN2D"þ  CASE WIDGET.USER.DATA(1) = "STACKEDCOLUMN3D"þ    W$TYPE = "FCSTACKEDCOLUMN3D"þ  CASE WIDGET.USER.DATA(1) = "STACKEDBAR"þ    W$TYPE = "FCSTACKEDBAR2D"þ  CASE 1þ    W$TYPE = WIDGET.USER.DATA(1):"?"þEND CASEþ*þW$BAR.LABELS<1> = "Regular"þW$BAR.LABELS<2> = "Mid-Grade"þW$BAR.LABELS<3> = "Premium"þW$BAR.LABELS<4> = "Ethanol"þ*þW$BAR.CAPTION = "Monthly Sales by Type"þW$BAR.XMEMO = "Month"þW$BAR.YMEMO = "Sales (USD)"þ*þSALES = ""þSALES<1> = "28452536"þSALES<2> = "31208425"þSALES<3> = "30245519"þSALES<4> = "40425111"þSALES<5> = "36515188"þSALES<6> = "39144100"þSALES<7> = "41655215"þSALES<8> = "36615152"þSALES<9> = "43944161"þSALES<10> = "42251594"þSALES<11> = "48833151"þSALES<12> = "50122415"þ*þTOT.SALES = SUM(SALES)þ*þLARGEST = 0þLARGEST.N = 0þFOR N = 1 TO 12þ  W$BAR.VALUES<1,N> = OCONV(SALES<N>*.4,'MD02')þ  W$BAR.VALUES<2,N> = OCONV(SALES<N>*.3,'MD02')þ  W$BAR.VALUES<3,N> = OCONV(SALES<N>*.1,'MD02')þ  W$BAR.VALUES<4,N> = OCONV(SALES<N>*.2,'MD02')þ  W$BAR.XLABELS<1,N> = OCONV(N*30-15,'DMA')[1,3]þ  IF SALES<N> > LARGEST THEN LARGEST = SALES<N> ; LARGEST.N = N þNEXT NþDD.SALES = OCONV(TOT.SALES*.4,'MD02')þDD.SALES<2> = OCONV(TOT.SALES*.3,'MD02') þDD.SALES<3> = OCONV(TOT.SALES*.1,'MD02') þDD.SALES<4> = OCONV(TOT.SALES*.2,'MD02') þ**FOR N = 1 TO 4þ**  W$FW.DD.WIDGET<1,N> = "Drilldown Demo"þ**  W$FW.DD.UD.POS<1,N,1> = 1þ**  W$FW.DD.UD.VAL<1,N,1> = DD.SALES<N>þ**  W$FW.DD.UD.POS<1,N,2> = 2þ**  W$FW.DD.UD.VAL<1,N,2> = W$BAR.LABELS<N> þ**NEXT N þVAL.CNTR = 0þFOR N = 1 TO 12þ**  W$FW.DD.WIDGET<1,N> = "Drilldown Demo"þ**  W$FW.DD.UD.POS<1,N,1> = 1þ**  W$FW.DD.UD.VAL<1,N,1>=W$BAR.XLABELS<1,N>þ  FOR NN = 1 TO 4þ     VAL.CNTR+=1þ     W$FW.DD.WIDGET<1,VAL.CNTR> = "Drilldown Demo"þ     W$FW.DD.UD.POS<1,VAL.CNTR,1>=1þ     W$FW.DD.UD.VAL<1,VAL.CNTR,1>=VAL.CNTRþ     W$FW.DD.UD.POS<1,VAL.CNTR,2>=2þ**     W$FW.DD.UD.VAL<1,VAL.CNTR,2> = W$BAR.VALUES<NN,N>þ     W$FW.DD.UD.VAL<1,VAL.CNTR,2> = 'MS.VALUE'þ     W$FW.DD.UD.POS<1,VAL.CNTR,3> = 3þ**     W$FW.DD.UD.VAL<1,VAL.CNTR,3>=W$BAR.XLABELS<1,N>þ     W$FW.DD.UD.VAL<1,VAL.CNTR,3>='MS.LABEL'þ     W$FW.DD.UD.POS<1,VAL.CNTR,4> = 4þ     W$FW.DD.UD.VAL<1,VAL.CNTR,4>=W$BAR.LABELS<NN>þ   NEXT NNþ**  W$FW.DD.UD.POS<1,N,2> = 2þ**  W$FW.DD.UD.VAL<1,N,2> = W$BAR.LABELS<N>þNEXT NþMAX.VALUE = OCONV((LARGEST * .4)*1.1,'MD02') þW$CHART.OPTIONS<-1> = "yAxisMaxValue='":MAX.VALUE:"'"þ*þW$BAR.LABEL.OPTS<1> = "showValues='0'"þW$BAR.LABEL.OPTS<2> = "showValues='0'"þW$BAR.LABEL.OPTS<3> = "showValues='0'"þW$BAR.LABEL.OPTS<4> = "showValues='0'"þ*þIF W$TYPE = "FCMSAREA2D" THENþ  W$BAR.LABEL.OPTS<1> := " areaAlpha='50'"þ  W$BAR.LABEL.OPTS<2> := " areaAlpha='70'"þ  W$BAR.LABEL.OPTS<3> := " areaAlpha='90'"þ  W$BAR.LABEL.OPTS<4> := " areaAlpha='40'"þENDþ*þW$INPUT.PROMPT = "Chart Style"þW$INPUT.TYPE = "SELECT"þW$INPUT.SELOPTS = "2D Column":@VM:"3D Column":@VM:"Bar Chart":@VM:"2D Area Chart":@VM:"Line Chart":@VM:"Stacked Area Chart":@VM:"2D Stacked Column Chart":@VM:"3D Stacked Column Chart":@VM:"Stacked Bar Chart"þW$INPUT.SELVALS = "2D":@VM:"3D":@VM:"BAR":@VM:"AREA2D":@VM:"LINE":@VM:"STACKEDAREA":@VM:"STACKEDCOLUMN2D":@VM:"STACKEDCOLUMN3D":@VM:"STACKEDBAR"þW$INPUT.UDPOS = 1þW$INPUT.DEFAULT = WIDGET.USER.DATA(1)þ*þINCLUDE WBPD SOURCE.VIEW.ICONþ*þRETURN0012C2SUB.PDF.CONFIGþ0c2SUBROUTINE SUB.PDF.CONFIGþ*þ* Copyright (c) 2016 Zumasys, Inc. All rights reserved.þ* Description: PDF configuration widget.þ*þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "PDF Configuration"   ;* Title for widget title barþW$TYPE = "HTML"                 ;* Filled in by editorþW$WIDTH = 2                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þW$PDFABLE = 1                   ;* Enable conversion to PDFþ*þIF G$QUERYMODE THEN RETURNþ*þOPEN '','MVDB.CONTROL' TO F.MVDB.CONTROL ELSEþ  W$TEXT.INFO = "Unable to open MVDB.CONTROL"þ  RETURNþENDþW$TEXT.INFO = "" ;* No widget content at this point.þ*þIF SYSTEM(38)<1> = 4 THEN isWindows = 1 ELSE isWindows = 0þIF isWindows THEN DIRSEP = '\' ELSE DIRSEP = '/'þ*þREAD SETTINGS.REC FROM F.MVDB.CONTROL, 'PDF.SETTINGS' ELSE SETTINGS.REC = ""þIF G$SUBMITTED = 1 THENþ  * Save PDF settingsþ  FOR N = 1 TO 4þ    SETTINGS.REC<N> = WIDGET.USER.DATA(N)þ  NEXT Nþ  OK = 0þ  IF SETTINGS.REC<1> THENþ    * Validate NATIVE.CONTENT file    þ    *D3* þ    OPEN 'DICT NATIVE.CONTENT' TO D.NATIVE.CONTENT ELSEþ      EXECUTE 'CREATE-FILE DICT NATIVE.CONTENT 1' CAPTURING OUTPUTþ    ENDþ    OPEN 'DICT NATIVE.CONTENT' TO D.NATIVE.CONTENT THENþ      READ QPTR FROM D.NATIVE.CONTENT,'NATIVE.CONTENT' ELSE QPTR = 'Q'þ      IF QPTR = 'Q' OR QPTR = 'q' THENþ        IF isWindows THEN MKDIR = 'cmd.exe /c mkdir' ELSE MKDIR = 'mkdir -p -m 775'        þ        EXECUTE '!':MKDIR:' "':SETTINGS.REC<3>:'"' CAPTURING OUTPUTþ        QPTR='Q'þ        IF isWindows THEN QPTR<3> = 'dos:':SETTINGS.REC<3> ELSE QPTR<3>='unix:':SETTINGS.REC<3>þ        WRITE QPTR ON D.NATIVE.CONTENT,'NATIVE.CONTENT'þ      ENDþ      READ QPTR FROM D.NATIVE.CONTENT,'NATIVE.CONTENT' THENþ        IF QPTR<1> = 'Q' OR QPTR<1> = 'q' THENþ          IF isWindows THENþ            OK = OCONV(QPTR<3>,'MCU') = OCONV('dos:':SETTINGS.REC<3>,'MCU')þ          END ELSEþ            OK = (QPTR<3> = 'unix:':SETTINGS.REC<3>)þ          ENDþ          IF NOT(OK) THENþ            W$HTML.DATA = "MV file 'NATIVE.CONTENT' does not refer to PDF directory ":SETTINGS.REC<3>:"!"þ          ENDþ        ENDþ      ENDþ    ENDþ    IF OK THENþ      OPEN 'NATIVE.CONTENT' TO F.NATIVE.CONTENT ELSE OK = 0þ    ENDþ  END ELSEþ    OK = 1þ  ENDþ  IF OK THENþ    WRITE SETTINGS.REC ON F.MVDB.CONTROL, 'PDF.SETTINGS'þ    W$HTML.DATA = "Settings saved."þ  END ELSEþ    IF W$HTML.DATA = "" THEN W$HTML.DATA = "Unable to open PDF directory!"þ  ENDþEND ELSEþ  * Initialize default settingsþ  IF SETTINGS.REC<1> = "" THENþ    SETTINGS.REC<1> = 0 ;* PDF generation is disabledþ  ENDþ  IF SETTINGS.REC<2> = "" THENþ    IF isWindows THENþ      * Windowsþ      EXEPATH = 'C:\Program Files (x86)\wkhtmltopdf\bin\wkhtmltopdf.exe'þ      CMDLINE = 'cmd.exe /c ""':EXEPATH:'" "[INPUT_FILE]" "[OUTPUT_FILE]""'þ      SETTINGS.REC<2> = CMDLINEþ    END ELSEþ      * Linuxþ      EXEPATH = '/usr/local/bin/wkhtmltopdf'þ      SETTINGS.REC<2> = EXEPATH:' [INPUT_FILE] [OUTPUT_FILE]'þ    ENDþ  ENDþ  IF SETTINGS.REC<3> = "" THENþ    IF isWindows THENþ      * Windowsþ      NATIVE.DIR = "C:\ProgramData\MVDashboard\NativeContent"þ      SETTINGS.REC<3> = NATIVE.DIRþ    END ELSEþ      * Linuxþ      NATIVE.DIR = "/tmp/mvdashboard/nativecontent"þ      SETTINGS.REC<3> = NATIVE.DIRþ    ENDþ  ENDþ  IF SETTINGS.REC<4> = "" THENþ    SETTINGS.REC<4> = 0 ;* delete generated files immediatelyþ  ENDþENDþ*þW$INPUT.PROMPT<1> = "Enable PDF generation"þW$INPUT.TYPE<1> = "SELECT"þW$INPUT.SELOPTS<1> = "No":@VM:"Yes"þW$INPUT.SELVALS<1> = "0":@VM:"1"þW$INPUT.UDPOS<1> = 1þW$INPUT.DEFAULT<1> = SETTINGS.REC<1>þ*þW$INPUT.PROMPT<2> = "PDF converter command"þW$INPUT.TYPE<2> = "TEXT"þW$INPUT.UDPOS<2> = 2þTMP = SETTINGS.REC<2>þCALL SWAP(TMP, '"', '&quot;')þW$INPUT.DEFAULT<2> = TMPþW$INPUT.PARAMS<2> = 'size="100"'þ*þ*D3 requires directory to store PDF files; other platforms use DIR type fileþW$INPUT.PROMPT<3> = "Directory for PDF files"þW$INPUT.TYPE<3> = "TEXT"þW$INPUT.UDPOS<3> = 3þW$INPUT.DEFAULT<3> = SETTINGS.REC<3>þW$INPUT.PARAMS<3> = 'size="100"'þ*þW$INPUT.PROMPT<4> = "Delete PDF files after"þW$INPUT.TYPE<4> = "SELECT"þW$INPUT.UDPOS<4> = 4þW$INPUT.SELOPTS<4,1> = "immediately"; W$INPUT.SELVALS<4,1> = 0þW$INPUT.SELOPTS<4,2> = "1 day"; W$INPUT.SELVALS<4,2> = 1þW$INPUT.SELOPTS<4,3> = "2 days"; W$INPUT.SELVALS<4,3> = 2þW$INPUT.SELOPTS<4,4> = "3 days"; W$INPUT.SELVALS<4,4> = 3þW$INPUT.SELOPTS<4,5> = "4 days"; W$INPUT.SELVALS<4,5> = 4þW$INPUT.SELOPTS<4,6> = "5 days"; W$INPUT.SELVALS<4,6> = 5þW$INPUT.SELOPTS<4,7> = "6 days"; W$INPUT.SELVALS<4,7> = 6þW$INPUT.SELOPTS<4,8> = "7 days"; W$INPUT.SELVALS<4,8> = 7þW$INPUT.SELOPTS<4,9> = "14 days"; W$INPUT.SELVALS<4,9> = 14þW$INPUT.SELOPTS<4,10> = "30 days"; W$INPUT.SELVALS<4,10> = 30þW$INPUT.SELOPTS<4,11> = "never"; W$INPUT.SELVALS<4,11> = 999999þW$INPUT.DEFAULT<4> = SETTINGS.REC<4>þ*þW$INPUT.BUTTON = "Save"þ*þRETURN003B92SUB.PORTAL.AR.REPORT.SETUPþ0c2SUBROUTINE SUB.PORTAL.AR.REPORT.SETUPþ*þ* DEFINE PARAMETERS FOR PORTAL AR REPORTþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþOPEN '','MVDB.SUBS' TO FI.MVDB.SUBS ELSE STOPþ*þW$TITLE = "Portal AR Report Setup"þW$TYPE = "HTML"þW$WIDTH = 3þ*þIF G$QUERYMODE THEN RETURNþ*þEQUATE ACCOUNT TO WIDGET.USER.DATA(1)þEQUATE REPORT.FILE TO WIDGET.USER.DATA(2)þEQUATE DUE.DATE.DICT TO WIDGET.USER.DATA(3)þEQUATE DATE.PAID.DICT TO WIDGET.USER.DATA(4)þEQUATE INVOICE.AMT.DICT TO WIDGET.USER.DATA(5)þEQUATE BALANCE.DICT TO WIDGET.USER.DATA(6)þEQUATE DUE.DATE.AMC TO WIDGET.USER.DATA(8)þEQUATE DATE.PAID.AMC TO WIDGET.USER.DATA(9)þEQUATE INVOICE.AMT.AMC TO WIDGET.USER.DATA(10)þEQUATE INVOICE.AMT.CONV TO WIDGET.USER.DATA(11)þEQUATE INVOICE.AMT.COOR TO WIDGET.USER.DATA(12)þEQUATE BALANCE.AMC TO WIDGET.USER.DATA(13)þEQUATE BALANCE.CONV TO WIDGET.USER.DATA(14)þEQUATE BALANCE.COOR TO WIDGET.USER.DATA(15)þEQUATE CUSTOMER.DICT TO WIDGET.USER.DATA(16)þEQUATE CUSTOMER.AMC TO WIDGET.USER.DATA(17)þEQUATE CUSTOMER.TFILE TO WIDGET.USER.DATA(18)þ*þOPEN '','MVDB.CONTROL' TO FI.MVDB.CONTROL ELSE STOP 201,'MVDB.CONTROL'þREAD PLATFORM FROM FI.MVDB.CONTROL, 'PLATFORM' ELSEþ   MESSAGE='No Platform Type Defined'þ   GOTO MESSAGE.DISPLAYþ ENDþFIRST.TIME=0þIF G$SUBMITTED <> '1' THENþ   MATREAD WIDGET.USER.DATA FROM FI.MVDB.CONTROL, 'PORTAL.AR.REPORT.SETUP' ELSEþ      MAT WIDGET.USER.DATA = ''þ      FIRST.TIME=1þ    ENDþ   IF NOT(FIRST.TIME) THENþ      GOSUB VALIDATE.PREVIOUS.INPUTSþ    ENDþ END ELSEþ   GOSUB VALIDATE.PREVIOUS.INPUTSþ   MATWRITE WIDGET.USER.DATA ON FI.MVDB.CONTROL, 'PORTAL.AR.REPORT.SETUP'þ ENDþGOSUB SET.PROMPTSþRETURNþ*þSET.PROMPTS:þ*þW$INPUT.PROMPT<1> = "AR File Account"þW$INPUT.TYPE<1> = "TEXT"þW$INPUT.UDPOS<1> = 1þW$INPUT.DEFAULT<1> = ACCOUNTþ*þW$INPUT.PROMPT<2> = "Name Of AR File"þW$INPUT.TYPE<2> = "TEXT"þW$INPUT.UDPOS<2> = 2þW$INPUT.DEFAULT<2> = REPORT.FILEþ*þW$INPUT.PROMPT<3> = "Due Date Dict Name"þW$INPUT.TYPE<3> = 'TEXT'þW$INPUT.UDPOS<3> = 3þW$INPUT.DEFAULT<3> = DUE.DATE.DICTþ*þW$INPUT.PROMPT<4> = "Date Paid Dict Name"þW$INPUT.TYPE<4> = 'TEXT'þW$INPUT.UDPOS<4> = 4þW$INPUT.DEFAULT<4> = DATE.PAID.DICTþ*þW$INPUT.PROMPT<5> = "Invoice Amount Dict Name"þW$INPUT.TYPE<5> = 'TEXT'þW$INPUT.UDPOS<5> = 5þW$INPUT.DEFAULT<5> = INVOICE.AMT.DICTþ*þW$INPUT.PROMPT<6> = "Remaining Balance Dict Name"þW$INPUT.TYPE<6> = 'TEXT'þW$INPUT.UDPOS<6> = 6þW$INPUT.DEFAULT<6> = BALANCE.DICTþ*þW$INPUT.PROMPT<7> = "Customer Dict Name"þW$INPUT.TYPE<7> = 'TEXT'þW$INPUT.UDPOS<7> = 16þW$INPUT.DEFAULT<7> = CUSTOMER.DICTþ*þRETURNþ*þVALIDATE.PREVIOUS.INPUTS:þ*þMESSAGE=''þBEGIN CASEþ   CASE PLATFORM = 'D3'þ      MD.TYPE='MD'þ   CASE PLATFORM = 'JB'þ      MD.TYPE='MD'þ   CASE 1þ      MD.TYPE='VOC'þEND CASEþOPEN '',MD.TYPE TO FI.MD ELSEþ   MESSAGE='Unable to open ':MD.TYPE:' for validation purposes'þ   GOTO MESSAGE.DISPLAYþ ENDþVALID.ACCOUNT=1þIF ACCOUNT <> '' THENþ**   EXECUTE "SET-FILE ":ACCOUNT:" ":MD.TYPE:' QFILE' CAPTURING DUMMYþ   ERR.MSG=''þ   IF PLATFORM <> 'JB' THENþ      QFILE.NAME='QFILE'þ      CALL CREATE.QPOINTER(PLATFORM,FI.MD,ACCOUNT,MD.TYPE,QFILE.NAME,FI.ACCOUNT.MD)þ      IF QFILE.NAME = '' THEN ERR.MSG=ACCOUNT:' is not a valid account'þ    END ELSEþ      IF INDEX(ACCOUNT,'/',1) THEN PATH.DELIM='/' ELSE PATH.DELIM='\'þ      F.PTR='F':@AM:ACCOUNT:PATH.DELIM:'MD'þ      F.PTR<3>=F.PTR<2>:']D'þ      QFILE.NAME='QFILE'þ      WRITE F.PTR ON FI.MD, QFILE.NAMEþ      OPEN '','QFILE' TO TEST.MD ELSE ERR.MSG=ACCOUNT:' is not a valid account path!'þ    ENDþ    IF ERR.MSG <> '' THENþ      MESSAGE<-1>=ERR.MSGþ      VALID.ACCOUNT=0þ    ENDþ**   IF PLATFORM = 'UD' THENþ**      QFILE.NAME='QFILE'þ**      CALL CREATE.UD.QPOINTER(ACCOUNT,MD.TYPE,QFILE.NAME,FI.ACCOUNT.MD)þ**      IF QFILE.NAME = '' THENþ**         MESSAGE<-1>=ACCOUNT:' is not a valid account!'þ**         VALID.ACCOUNT=0þ**       ENDþ**    END ELSEþ**      WRITE 'Q':@AM:ACCOUNT:@AM:MD.TYPE ON FI.MD, 'QFILE'þ**      VALID.ACCOUNT=1þ**      OPEN '','QFILE' TO FI.ACCOUNT.MD ELSEþ**         MESSAGE<-1>=ACCOUNT:' is not a valid account!'þ**         VALID.ACCOUNT=0þ**       ENDþ**    ENDþ END ELSEþ   VALID.ACCOUNT=0þ   MESSAGE<-1>='No Account defined!'þ ENDþIF REPORT.FILE <> '' THENþ   IF NOT(VALID.ACCOUNT) THENþ      IF PLATFORM = 'JB' THENþ         MESSAGE<-1>='Unable to verify ':REPORT.FILE:' file because account path not properly defined!'þ      END ELSEþ         MESSAGE<-1>='Unable to verify ':REPORT.FILE:' file because account not properly defined!'þ      ENDþ      VALID.REPORT.FILE=0þ    END ELSEþ      VALID.REPORT.FILE=1þ      QFILE.NAME='QFILE'þ      IF PLATFORM <> 'JB' THENþ         CALL CREATE.QPOINTER(PLATFORM,FI.MD,ACCOUNT,REPORT.FILE,QFILE.NAME,FI.REPORT.FILE)þ         IF QFILE.NAME = '' THENþ            MESSAGE<-1>=REPORT.FILE:' is not a valid file in the ':ACCOUNT:' account!'þ            VALID.REPORT.FILE=0þ          ENDþ       END ELSEþ         F.PTR='F':@AM:ACCOUNT:PATH.DELIM:REPORT.FILEþ         F.PTR<3>=F.PTR<2>:']D'þ         QFILE.NAME='QFILE'þ         WRITE F.PTR ON FI.MD, QFILE.NAMEþ         OPEN '','QFILE' TO TEST.MD ELSE þ            MESSAGE<-1>=REPORT.FILE:' is not a valid file in the ':ACCOUNT:' path!'þ            VALID.REPORT.FILE=0þ   þ       ENDþ    END     þ**      EXECUTE "SET-FILE ":ACCOUNT:" ":REPORT.FILE:' QFILE' CAPTURING DUMMYþ**       IF PLATFORM = 'UD' THENþ**          QFILE.NAME='QFILE'þ**          CALL CREATE.UD.QPOINTER(ACCOUNT,REPORT.FILE,QFILE.NAME,FI.REPORT.FILE)þ**          IF QFILE.NAME = '' THENþ**             MESSAGE<-1>=REPORT.FILE:' is not a valid file in the ':ACCOUNT:' account!'þ**             VALID.REPORT.FILE=0þ**           ENDþ**        END ELSEþ**         WRITE 'Q':@AM:ACCOUNT:@AM:REPORT.FILE ON FI.MD, 'QFILE'þ**         OPEN '','QFILE' TO FI.REPORT.FILE ELSEþ**            MESSAGE<-1>=REPORT.FILE:' is not a valid file in the ':ACCOUNT:' account!'þ**            VALID.REPORT.FILE=0þ**          ENDþ**       ENDþ      IF VALID.REPORT.FILE THENþ         HAVE.QFILE.REC=1þ         READ QFILE.REC FROM FI.MD, 'QFILE' ELSEþ            HAVE.QFILE.REC=0þ            MESSAGE<-1>='Unable to create QFILE pointer to ':ACCOUNT:' ':REPORT.FILEþ          ENDþ         IF HAVE.QFILE.REC THENþ            WRITE QFILE.REC ON FI.MD, 'DASHBOARD.AR.FILE'þ            OPEN 'DICT','DASHBOARD.AR.FILE' TO FI.DICT.REPORT.FILE ELSE þ               MESSAGE<-1>='Unable to open DICT ':REPORT.FILEþ             ENDþ          ENDþ       ENDþ    ENDþ END ELSEþ   MESSAGE<-1>='No AR Report file defined!'þ ENDþIF DUE.DATE.DICT = '' THENþ   IF VALID.REPORT.FILE THENþ      MESSAGE<-1>='No Due Date Dictionary Defined!'þ    ENDþ END ELSEþ   IF NOT(VALID.REPORT.FILE) THENþ      MESSAGE<-1>="Cant Verify Dict ":DUE.DATE.DICT:' Because No AR File!'þ    END ELSEþ      READ DUE.DATE.DICT.REC FROM FI.DICT.REPORT.FILE, DUE.DATE.DICT ELSEþ         DUE.DATE.DICT.REC=''þ         MESSAGE<-1>=DUE.DATE.DICT:' Does Not Exist!'þ       ENDþ      IF DUE.DATE.DICT.REC <> '' THENþ         VALID.DATE.DICT=1þ         DICT.TYPE=DUE.DATE.DICT.REC<1>þ         BEGIN CASEþ            CASE DICT.TYPE = 'A' OR DICT.TYPE = 'S' þ               IF DUE.DATE.DICT.REC<7>[1,1] <> 'D' AND DUE.DATE.DICT.REC<8>[1,1] <> 'D' THENþ                  VALID.DATE.DICT=0þ                ENDþ               DUE.DATE.AMC=DUE.DATE.DICT.REC<2>þ            CASE DICT.TYPE = 'D' OR DICT.TYPE = 'I' OR DICT.TYPE = 'C'þ               IF DUE.DATE.DICT.REC<3>[1,1] <> 'D' THENþ                  VALID.DATE.DICT=0þ                ENDþ               DUE.DATE.AMC=DUE.DATE.DICT.REC<2>þ            CASE 1þ               VALID.DATE.DICT=0þ               DUE.DATE.AMC=DUE.DATE.DICT.REC<2>þ         END CASEþ         IF NOT(VALID.DATE.DICT) THENþ            MESSAGE<-1>='Dictionary Item ':DUE.DATE.DICT:' Does Not Appear To Be A Date!'þ          ENDþ       ENDþ    ENDþ ENDþIF DATE.PAID.DICT = '' THENþ   IF VALID.REPORT.FILE THENþ      MESSAGE<-1>='No Date Paid Dictionary Defined!'þ    ENDþ END ELSEþ   IF NOT(VALID.REPORT.FILE) THENþ      MESSAGE<-1>="Cant Verify Dict ":DATE.PAID.DICT:' Because No AR File!'þ    END ELSEþ      READ DATE.PAID.DICT.REC FROM FI.DICT.REPORT.FILE, DATE.PAID.DICT ELSEþ         DATE.PAID.DICT.REC=''þ         MESSAGE<-1>=DATE.PAID.DICT:' Does Not Exist!'þ       ENDþ      IF DATE.PAID.DICT.REC <> '' THENþ         VALID.DATE.DICT=1þ         DICT.TYPE=DATE.PAID.DICT.REC<1>þ         BEGIN CASEþ            CASE DICT.TYPE = 'A' OR DICT.TYPE = 'S' þ               IF DATE.PAID.DICT.REC<7>[1,1] <> 'D' AND DATE.PAID.DICT.REC<8>[1,1] <> 'D' THENþ                  VALID.DATE.DICT=0þ                ENDþ               DATE.PAID.AMC=DATE.PAID.DICT.REC<2>þ            CASE DICT.TYPE = 'D' OR DICT.TYPE = 'I' OR DICT.TYPE = 'C'þ               IF DATE.PAID.DICT.REC<3>[1,1] <> 'D' THENþ                  VALID.DATE.DICT=0þ                ENDþ               DATE.PAID.AMC=DATE.PAID.DICT.REC<2>þ            CASE 1þ               VALID.DATE.DICT=0þ               DATE.PAID.AMC=DATE.PAID.DICT.REC<2>þ         END CASEþ         IF NOT(VALID.DATE.DICT) THENþ            MESSAGE<-1>='Dictionary Item ':DATE.PAID.DICT:' Does Not Appear To Be A Date!'þ          ENDþ       ENDþ    ENDþ ENDþIF INVOICE.AMT.DICT = '' THENþ   IF VALID.REPORT.FILE THENþ      MESSAGE<-1>='No Invoice Amount Dictionary Defined!'þ    ENDþ END ELSEþ   IF NOT(VALID.REPORT.FILE) THENþ      MESSAGE<-1>="Cant Verify Dict ":INVOICE.AMT.DICT:' Because No AR File!'þ    END ELSEþ      READ INVOICE.AMT.DICT.REC FROM FI.DICT.REPORT.FILE, INVOICE.AMT.DICT ELSEþ         INVOICE.AMT.DICT.REC=''þ         MESSAGE<-1>=INVOICE.AMT.DICT:' Does Not Exist!'þ       ENDþ      IF INVOICE.AMT.DICT.REC <> '' THENþ         VALID.AMOUNT.DICT=1þ         DICT.TYPE=INVOICE.AMT.DICT.REC<1>þ         BEGIN CASEþ            CASE DICT.TYPE = 'A' OR DICT.TYPE = 'S' þ               DICT.7.1.2=INVOICE.AMT.DICT.REC<7>[1,2]þ               DICT.8.1.2=INVOICE.AMT.DICT.REC<8>[1,2]þ               IF DICT.7.1.2 <> 'MD' AND DICT.7.1.2 <> 'MR' AND DICT.8.1.2 <> 'MD' AND DICT.8.1.2 <> 'MR' THENþ                  VALID.AMOUNT.DICT=0þ                ENDþ               INVOICE.AMT.AMC=INVOICE.AMT.DICT.REC<2>þ            CASE DICT.TYPE = 'D' OR DICT.TYPE = 'I' OR DICT.TYPE = 'C'þ               DICT.3.1.2=INVOICE.AMT.DICT.REC<3>[1,2]þ               IF DICT.3.1.2 <> 'MR' AND DICT.3.1.2 <> 'MD' THENþ                  VALID.AMOUNT.DICT=0þ                ENDþ               INVOICE.AMT.AMC=INVOICE.AMT.DICT.REC<2>þ            CASE 1þ               VALID.AMOUNT.DICT=0þ               INVOICE.AMT.AMC=INVOICE.AMT.DICT.REC<2>þ         END CASEþ         IF NOT(VALID.AMOUNT.DICT) THENþ            MESSAGE<-1>='Dictionary Item ':INVOICE.AMT.DICT:' Does Not Appear To Be An Amount!'þ          ENDþ       ENDþ    ENDþ ENDþIF BALANCE.DICT = '' THENþ   IF VALID.REPORT.FILE THENþ      MESSAGE<-1>='No Balance Dictionary Defined!'þ    ENDþ END ELSEþ   IF NOT(VALID.REPORT.FILE) THENþ      MESSAGE<-1>="Cant Verify Dict ":BALANCE.DICT:' Because No AR File!'þ    END ELSEþ      READ BALANCE.DICT.REC FROM FI.DICT.REPORT.FILE, BALANCE.DICT ELSEþ         BALANCE.DICT.REC=''þ         MESSAGE<-1>=BALANCE.DICT:' Does Not Exist!'þ       ENDþ      IF BALANCE.DICT.REC <> '' THENþ         VALID.AMOUNT.DICT=1þ         DICT.TYPE=BALANCE.DICT.REC<1>þ         BEGIN CASEþ            CASE DICT.TYPE = 'A' OR DICT.TYPE = 'S' þ               DICT.7.1.2=BALANCE.DICT.REC<7>[1,2]þ               DICT.8.1.2=BALANCE.DICT.REC<8>[1,2]þ               IF DICT.7.1.2 <> 'MD' AND DICT.7.1.2 <> 'MR' AND DICT.8.1.2 <> 'MD' AND DICT.8.1.2 <> 'MR' THENþ                  VALID.AMOUNT.DICT=0þ                ENDþ               BALANCE.AMC=BALANCE.DICT.REC<2>þ            CASE DICT.TYPE = 'D' OR DICT.TYPE = 'I' OR DICT.TYPE = 'C'þ               DICT.3.1.2=BALANCE.DICT.REC<3>[1,2]þ               IF DICT.3.1.2 <> 'MR' AND DICT.3.1.2 <> 'MD' THENþ                  VALID.AMOUNT.DICT=0þ                ENDþ               BALANCE.AMC=BALANCE.DICT.REC<2>þ            CASE 1þ               VALID.AMOUNT.DICT=0þ               BALANCE.AMC=BALANCE.DICT.REC<2>þ         END CASEþ         IF NOT(VALID.AMOUNT.DICT) THENþ            MESSAGE<-1>='Dictionary Item ':BALANCE.DICT:' Does Not Appear To Be An Amount!'þ          ENDþ       ENDþ    ENDþ ENDþIF CUSTOMER.DICT <> '' THENþ   IF NOT(VALID.REPORT.FILE) THENþ      MESSAGE<-1>="Cant Verify Dict ":CUSTOMER.DICT:' Because No AR File!'þ    END ELSEþ      READ CUSTOMER.DICT.REC FROM FI.DICT.REPORT.FILE, CUSTOMER.DICT ELSEþ         CUSTOMER.DICT.REC=''þ         MESSAGE<-1>=CUSTOMER.DICT:' Does Not Exist!'þ       ENDþ      IF CUSTOMER.DICT.REC <> '' THENþ         VALID.CUSTOMER.DICT=1þ         DICT.TYPE=CUSTOMER.DICT.REC<1>þ         BEGIN CASEþ            CASE DICT.TYPE = 'A' OR DICT.TYPE = 'S'þ               IF CUSTOMER.DICT.REC<7>[1,1] <> 'T' AND CUSTOMER.DICT.REC<8>[1,1] <> 'T' THENþ                  VALID.CUSTOMER.DICT=0þ                END ELSEþ                  IF CUSTOMER.DICT.REC<7>[1,1] = 'T' THENþ                     CUSTOMER.TFILE=CUSTOMER.DICT.REC<7>þ                   END ELSEþ                     CUSTOMER.TFILE=CUSTOMER.DICT.REC<8>þ                   ENDþ                ENDþ               CUSTOMER.AMC=CUSTOMER.DICT.REC<2>þ            CASE DICT.TYPE = 'D' OR DICT.TYPE = 'I' OR DICT.TYPE = 'C'þ               IF INDEX(CUSTOMER.DICT.REC<3>,'TRANS',1) THENþ                  VALID.CUSTOMER.DICT=0þ                END ELSEþ                  CUSTOMER.TFILE=CUSTOMER.DICT.REC<3>þ                ENDþ            CASE 1þ               VALID.CUSTOMER.DICT=0þ         END CASEþ         IF NOT(VALID.CUSTOMER.DICT) THENþ            MESSAGE<-1>='Dictionary Item ':CUSTOMER.DICT:' May Not Be Correct'þ            MESSAGE:=" Because It Doesn't Translate To Another File For The Full Name"þ          ENDþ       ENDþ    ENDþ ENDþCREATE.INDEXES=1þIF MESSAGE = '' THENþ   MESSAGE='AR Report parameters properly defined!'þ END ELSEþ   IF INDEX(MESSAGE,'!',1) THENþ      MESSAGE=INSERT(MESSAGE,1,0,0,'!!! ERRORS !!!')þ      CREATE.INDEXES=0þ    ENDþ ENDþIF CREATE.INDEXES THENþ   * CREATE PIPE DICTIONARY ITEMþ   IF PLATFORM = 'D3' OR PLATFORM = 'QM' OR PLATFORM = 'JB' THENþ      PIPE='A'þ      PIPE<2>=0þ      PIPE<3>=' 'þ      PIPE<8>='F;C|'þ      PIPE<9>='L'þ      PIPE<10>=1þ    END ELSEþ      PIPE='I'þ      PIPE<2>='"|"'þ      PIPE<4>='|'þ      PIPE<5>='1L'þ      PIPE<6>='S'þ    ENDþ   WRITE PIPE ON FI.DICT.REPORT.FILE, 'PIPE'þ   *þ   ** INDEX LOGICþ   *þ   BEGIN CASEþ      CASE PLATFORM = 'D3'þ         INDEX.TEST='A':DUE.DATE.AMC:'(DY):':DUE.DATE.AMC:'(DM)'þ         READ FILE.DEF.REC FROM FI.DICT.REPORT.FILE, REPORT.FILE ELSE FILE.DEF.REC=''þ         IF FILE.DEF.REC <> '' AND NOT(INDEX(FILE.DEF.REC<8>,INDEX.TEST,1)) THENþ            MESSAGE<-1>='Creating Indexes'þ            CMND1="CREATE-INDEX DASHBOARD.AR.FILE A":DUE.DATE.AMCþ            EXECUTE CMND1 CAPTURING RESULT1þ            CMND2="CREATE-INDEX DASHBOARD.AR.FILE ":INDEX.TESTþ            EXECUTE CMND2 CAPTURING RESULT2þ          ENDþ      CASE 1þ         EXECUTE "CREATE-INDEX DASHBOARD.AR.FILE ":DUE.DATE.DICT CAPTURING RESULT1þ   END CASEþ ENDþGOSUB MESSAGE.DISPLAYþRETURNþ*þMESSAGE.DISPLAY:þ*þMAX.MSG=DCOUNT(MESSAGE,CHAR(254))þW$HTML.DATA='<h3>':MESSAGE<1>þIF MAX.MSG > 1 THENþ   FOR MSG.NO = 2 TO MAX.MSGþ      W$HTML.DATA:='<br>':MESSAGE<MSG.NO>þ    NEXT MSG.NOþ ENDþW$HTML.DATA:='</h3>'þRETURNþEND0003F4SUB.DEMO.DAYS.TO.PAY.CHARTþ0c2SUBROUTINE SUB.DEMO.DAYS.TO.PAY.CHARTþ*þ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "Average Days To Pay"þW$TYPE = "FCCOLUMN3D"þW$WIDTH = 2þW$PDFABLE = 1þ*þIF G$QUERYMODE THEN RETURNþ*þW$BAR.COLORS<1,1>=COLOR$MAROONþW$BAR.COLORS<1,2>=COLOR$TEALþW$BAR.COLORS<1,3>=COLOR$SILVERþW$BAR.COLORS<1,4>=COLOR$BLUEþOPEN '','MVDB.CONTROL' TO FILE.CONTROL ELSE STOPþREAD REC FROM FILE.CONTROL, 'DEMO.FINANCIAL.PICTURE' ELSE REC=''þYEARS=REC<67>þMAX.YEARS=DCOUNT(YEARS,CHAR(253))þFIRST.YEAR=0þ*þW$BAR.XMEMO = "Year (drill down for detail)"þW$BAR.YMEMO = "Average Days to Pay"þ*þN=0þ*þFOR NN = 1 TO MAX.YEARSþ  AVERAGE.DAYS=REC<47-NN>þ  YEAR=YEARS<1,NN>þ  IF NOT(FIRST.YEAR) THEN FIRST.YEAR=YEARþ  CURRENT.YEAR=YEARþ  W$BAR.VALUES<1,NN> = AVERAGE.DAYSþ  W$BAR.XLABELS<1,NN> = YEARþ  W$FW.DD.WIDGET<1,NN>='DEMO DAYS TO PAY PIE'þ  W$FW.DD.UD.POS<1,NN,1>=1þ  W$FW.DD.UD.VAL<1,NN,1>=YEARþNEXT NNþ*þW$BAR.CAPTION = "Average Days to Pay From ":FIRST.YEAR:' to ':CURRENT.YEARþ*þRETURN000341PORTAL.SHOW.LAST.UPDATEDþ0c2SUBROUTINE PORTAL.SHOW.LAST.UPDATED(CALC.TYPE)þINCLUDE WBPD MVDB.INCLUDEþIF CALC.TYPE = 'SALES' THENþ   OPEN 'DICT','DASHBOARD.CLOSING.STATS' TO DICT.FI ELSE RETURNþ END ELSEþ   OPEN 'DICT','DASHBOARD.BALANCES' TO DICT.FI ELSE RETURNþ ENDþREAD LAST.UPDATED FROM DICT.FI, '*LAST.UPDATED.':CALC.TYPE ELSE RETURNþCUR.DATE=DATE()þCUR.TIME=TIME()þCUR.TIME=FIELD(CUR.TIME,'.',1)þCUR.TIME=STR('0',5-LEN(CUR.TIME)):CUR.TIMEþCUR.DATE.TIME=CUR.DATE:CUR.TIMEþDELTA.DATE.TIME=CUR.DATE.TIME-LAST.UPDATEDþ*þ* IF LAST 5 MINUTES THEN NO MESSAGE NEEDEDþ*þIF DELTA.DATE.TIME < 300 THENþ   W$TITLE=W$TITLE:' - Updated in Last 5 Minutes'þ   RETURNþ ENDþ*þLAST.DATE=LAST.UPDATED[1,5]þLAST.TIME=LAST.UPDATED[6,9]þAPPEND.IT=' - Last Updated ':OCONV(LAST.DATE,'D4-'):' at ':OCONV(LAST.TIME,'MTH')þW$TITLE=W$TITLE:APPEND.ITþRETURN0007C4SUB.DEMO.ANNUAL.SALES.BY.REPþ0c2SUBROUTINE SUB.DEMO.ANNUAL.SALES.BY.REPþ*þ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TYPE = "FCCOLUMN3D"þW$WIDTH = 3þ*þIF G$QUERYMODE THEN RETURNþ*þW$BAR.COLORS<1,1>=COLOR$MAROONþW$BAR.COLORS<1,2>=COLOR$TEALþW$BAR.COLORS<1,3>=COLOR$SILVERþW$BAR.COLORS<1,4>=COLOR$BLUEþOPEN '','MVDB.CONTROL' TO FILE.CONTROL ELSE STOPþREAD REC FROM FILE.CONTROL, 'DEMO.FINANCIAL.PICTURE' ELSE REC=''þREVENUE.OR.GP=WIDGET.USER.DATA(1)þYEAR=WIDGET.USER.DATA(2)þMONTH=WIDGET.USER.DATA(3)þVAL.TYPE='$'þDRILLDOWN.WIDGET=''þDRILLDOWN.TYPE=''þBEGIN CASEþ   CASE REVENUE.OR.GP = 'REVENUES'þ      W$TITLE=YEAR:' Sales By Sales Rep'þ      W$BAR.YMEMO = "Sales"þ      SALES.AMTS=REC<48>þ   CASE REVENUE.OR.GP = 'GROSSPROFIT'þ      W$TITLE=YEAR:' Gross Profit By Sales Rep'þ      W$BAR.YMEMO = "Gross Profit"þ      SALES.AMTS=REC<49>þEND CASEþ*þREPS=REC<47>þLOCATE YEAR IN REC<67> SETTING YEAR.SVM ELSE YEAR.SVM=1þ*þ*þMAX.SALES.AMT=0þN=0þFIRST.YEAR=''þMAX.REPS=DCOUNT(REPS,CHAR(253))þFOR NN = 1 TO MAX.REPSþ   REP=REPS<1,NN>þ   SALES.AMT=SUM(SALES.AMTS<1,NN,YEAR.SVM>)þ   SALES.AMT=OCONV(SALES.AMT,'MD02')þ   IF SALES.AMT > MAX.SALES.AMT THEN MAX.SALES.AMT=SALES.AMTþ   W$BAR.VALUES<1,NN> = SALES.AMTþ   W$BAR.XLABELS<1,NN> = REPþ   W$FW.DD.WIDGET<1,NN> = "DEMO MONTHLY SALES BY REP"þ   W$FW.DD.UD.POS<1,NN,1> = 1þ   W$FW.DD.UD.VAL<1,NN,1> = WIDGET.USER.DATA(1); * REVENUE OR GPþ   W$FW.DD.UD.POS<1,NN,2> = 2þ   W$FW.DD.UD.VAL<1,NN,2> = YEARþ   W$FW.DD.UD.POS<1,NN,3> = 3þ   W$FW.DD.UD.VAL<1,NN,3> = REPþNEXT NNþW$BAR.XMEMO = "Sales Rep (drilldown for ":W$BAR.YMEMO:" by month)"þ* ROUND MAX AMOUNT UP TO THE NEXT 250000þMAX.SALES.AMT+=250000þMAX.SALES.AMT=INT(MAX.SALES.AMT/250000) * 250000þW$CHART.OPTIONS<-1>='yAxisMaxValue="':MAX.SALES.AMT:'"'þW$CHART.OPTIONS<-1>='decimals="2"'þW$CHART.OPTIONS<-1>='DecimalPrecision="2"'þW$CHART.OPTIONS<-1>='divLineDecimalPrecision="2"'þW$CHART.OPTIONS<-1>='limitsDecimalPrecision="2"'þW$CHART.OPTIONS<-1>='formatNumberScale="1"'þRETURN0004C7SUB.PORTAL.DAYS.TO.PAY.PIEþ0c2SUBROUTINE SUB.PORTAL.DAYS.TO.PAY.PIEþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TYPE = "FC2DPIE"þW$WIDTH = 3þW$TITLE = 'Chart - Days To Pay 'þ*þIF G$QUERYMODE THEN RETURNþ*þW$BAR.COLORS<1,1>=COLOR$MAROONþW$BAR.COLORS<1,2>=COLOR$TEALþW$BAR.COLORS<1,3>=COLOR$SILVERþW$BAR.COLORS<1,4>=COLOR$BLUEþYEAR=WIDGET.USER.DATA(1)þOPEN 'DICT','DASHBOARD.BALANCES' TO FI.DICT ELSE RETURNþREAD STATS.REC FROM FI.DICT, '*CURRENT.AR.STATS' ELSE RETURNþWRITE 'READ' ON FI.DICT, 'DEBUG'þLOCATE YEAR IN STATS.REC<6> SETTING YEAR.POS ELSE RETURNþWRITEV YEAR.POS ON FI.DICT, 'DEBUG', 2þNUMBERS=STATS.REC<7,YEAR.POS>þWRITEV NUMBERS ON FI.DICT, 'DEBUG', 3þTOT.NUMBERS=SUM(NUMBERS)þTOT.NUMBERS=TOT.NUMBERS-NUMBERS<1,1,1>þWRITEV TOT.NUMBERS ON FI.DICT, 'DEBUG', 4þW$TITLE:=YEARþDAYS.TYPES='0 - 30 Days,31 - 60 Days,61 - 90 Days,Over 90 Days'þCONVERT ',' TO CHAR(253) IN DAYS.TYPESþMAX.DAYS.TYPES=DCOUNT(DAYS.TYPES,CHAR(253))þFOR DAYS.CNTR = 1 TO MAX.DAYS.TYPESþ   NUMBER=NUMBERS<1,1,DAYS.CNTR+1>þ   PCT=INT(NUMBER * 1000/TOT.NUMBERS + .5)þ   W$PIE.LABELS<1,DAYS.CNTR>=DAYS.TYPES<1,DAYS.CNTR>þ   W$PIE.VALUES<1,DAYS.CNTR>=(PCT/10)þ NEXT DAYS.CNTRþW$PIE.CAPTION='Days To Pay By Period For ':YEARþ*þ*þ*þRETURN00060ASUB.USER.AUTHþ0c2SUBROUTINE SUB.USER.AUTH(USERID,PASSWORD,MODE,VALID,MESSAGE,MAT USER.ITEM)þ*þ* Custom user authentication subroutine. Authenticate user from the USERS file.þ*þ* Input Values:þ*  USERID - User ID entered by the user on the login formþ*  PASSWORD - Password entered by the user on the login formþ*  MODE - "AUTH" - User is logging in, authorize.þ*       - "READ" - User is already authorized, just provide the USER.ITEMþ*                  Ignore PASSWORD.þ*                  VALID and MESSAGE will be ignored by caller.þ* þ* Output valuesþ*  VALID - 1=User authenticated, 0=User NOT authenticatedþ*  MESSAGE - Alternative Message to display when user is NOT authenticated.þ*  MAT USER.ITEM - Dashboard user informationþ*þINCLUDE WBPD FI.MVDB.USERSþ*þ* USER.ITEM values that may be populated by this program:þ*þ* EQU USER.DEFAULT.DB   TO USER.ITEM(2)þ* EQU USER.NAME         TO USER.ITEM(3)þ* EQU USER.ROLE         TO USER.ITEM(6)þ*þMAT USER.ITEM = ""þ*þOPEN '','DM,USERS,' TO F.USERS ELSEþ  MESSAGE = "Unable to open DM,USERS, file."þ  VALID = 0þ  RETURNþENDþREAD UREC FROM F.USERS, USERID ELSEþ  VALID = 0þ  RETURNþENDþIF MODE = "AUTH" THENþ  IF PASSWORD # "" THEN EPWD = ICONV( PASSWORD, 'UC' ) ELSE EPWD = ""þEND ELSEþ  EPWD = "" ; UREC<7> = "" ;* Make them match since we're not really authenticatingþENDþIF EPWD = UREC<7> THENþ  VALID = 1þ  USER.DEFAULT.DB = "Chart Demo"þ  USER.NAME = UREC<1>þ  IF UREC<2> = "DBADMIN" THENþ    USER.ROLE = "Administrator"þ  END ELSE USER.ROLE = "User"þ  RETURNþEND ELSEþ  VALID = 0þENDþRETURN000403SUB.DEMO.SALES.PERCENTSþ0c2SUBROUTINE SUB.DEMO.SALES.PERCENTSþ*þ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TYPE = "FCMSCOLUMN3D"þW$WIDTH = 3þW$PDFABLE = 1þ*þIF G$QUERYMODE THEN RETURNþ*þW$BAR.COLORS<1,1>=COLOR$MAROONþW$BAR.COLORS<1,2>=COLOR$TEALþW$BAR.COLORS<1,3>=COLOR$SILVERþW$BAR.COLORS<1,4>=COLOR$BLUEþOPEN '','MVDB.CONTROL' TO FILE.CONTROL ELSE STOPþREAD REC FROM FILE.CONTROL, 'DEMO.FINANCIAL.PICTURE' ELSE REC=''þW$BAR.LABELS<1>='Parts'þW$BAR.LABELS<2>='Services'þW$BAR.CAPTION='YTD Percentage of Sales by Type'þW$BAR.XMEMO='Year'þW$BAR.YMEMO='Percent of Sales'þ*þYEARS=REC<38>þPART.AMTS=REC<40>þPART.PCTS=REC<41>þSERVICE.AMTS=REC<42>þSERVICE.PCTS=REC<43>þMAX.YEARS=DCOUNT(YEARS,CHAR(253))þ*þ*þFOR YEAR.CNTR = 1 TO MAX.YEARSþ   W$BAR.XLABELS<1,YEAR.CNTR>=YEARS<1,YEAR.CNTR>þ   W$BAR.VALUES<1,YEAR.CNTR>=OCONV(PART.PCTS<1,YEAR.CNTR>,'MD1')þ   W$BAR.VALUES<2,YEAR.CNTR>=OCONV(SERVICE.PCTS<1,YEAR.CNTR>,'MD1')þ NEXT YEAR.CNTRþW$CHART.OPTIONS<-1>='decimals="1"'þW$CHART.OPTIONS<-1>='forceDecimals="1"'þRETURNþEND00078BSUB.DEMO.MONTHLY.SALES.BY.REPþ0c2SUBROUTINE SUB.DEMO.MONTHLY.SALES.BY.REPþ*þ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TYPE = "FCCOLUMN2D"þW$WIDTH = 3þ*þIF G$QUERYMODE THEN RETURNþ*þW$BAR.COLORS<1,1>=COLOR$MAROONþW$BAR.COLORS<1,2>=COLOR$TEALþW$BAR.COLORS<1,3>=COLOR$SILVERþW$BAR.COLORS<1,4>=COLOR$BLUEþMONTHS='Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'þOPEN '','MVDB.CONTROL' TO FILE.CONTROL ELSE STOPþREVENUE.OR.GP=WIDGET.USER.DATA(1)þYEAR=WIDGET.USER.DATA(2)þREP=WIDGET.USER.DATA(3)þBEGIN CASEþ   CASE REVENUE.OR.GP = 'REVENUES'þ      W$TITLE=YEAR:' Monthly Sales For Rep: ':REPþ      W$BAR.YMEMO = "Sales"þ      READ ANNUAL.REC FROM FILE.CONTROL, 'SALES.':YEAR ELSE ANNUAL.REC=''þ      LOCATE REP IN ANNUAL.REC<1> SETTING REP.POS ELSE REP.POS=1þ      SALES.AMTS=ANNUAL.REC<2,REP.POS>þ      MAX.ROUNDER=250000þ   CASE REVENUE.OR.GP = 'GROSSPROFIT'þ      W$TITLE=YEAR:' Monthly Gross Profits For Rep: ':REPþ      W$BAR.YMEMO = "Gross Profits"þ      READ ANNUAL.REC FROM FILE.CONTROL, 'GPS.':YEAR ELSE ANNUAL.REC=''þ      LOCATE REP IN ANNUAL.REC<1> SETTING REP.POS ELSE REP.POS=1þ      SALES.AMTS=ANNUAL.REC<2,REP.POS>þ      MAX.ROUNDER=50000þEND CASEþ*þMAX.MOS=DCOUNT(SALES.AMTS,CHAR(252))þMAX.SALES.AMT=0þFIRST.MOS=''þFOR NN = 1 TO MAX.MOSþ   MONTH=FIELD(MONTHS,',',NN)þ   SALES.AMT=SALES.AMTS<1,1,NN>þ   SALES.AMT=OCONV(SALES.AMT,'MD02')þ   IF SALES.AMT > MAX.SALES.AMT THEN MAX.SALES.AMT=SALES.AMTþ   W$BAR.VALUES<1,NN> = SALES.AMTþ   W$BAR.XLABELS<1,NN> = MONTHþNEXT NNþW$BAR.XMEMO = "Month"þ* ROUND MAX AMOUNT UP TO THE NEXT MAX.ROUNDERþMAX.SALES.AMT+=MAX.ROUNDERþMAX.SALES.AMT=INT(MAX.SALES.AMT/MAX.ROUNDER) * MAX.ROUNDERþW$CHART.OPTIONS<-1>='yAxisMaxValue="':MAX.SALES.AMT:'"'þW$CHART.OPTIONS<-1>='decimals="2"'þW$CHART.OPTIONS<-1>='DecimalPrecision="2"'þW$CHART.OPTIONS<-1>='divLineDecimalPrecision="2"'þW$CHART.OPTIONS<-1>='limitsDecimalPrecision="2"'þW$CHART.OPTIONS<-1>='formatNumberScale="1"'þRETURN001DF6SUB.MW.CODE.FACTORYþ0c2SUBROUTINE SUB.MW.CODE.FACTORYþ*þ* Copyright (c) 2010 SB, Inc. All rights reserved.þ*þ* Dashboard Widgetþ*þINCLUDE WBPD MVDB.INCLUDEþ*þW$TITLE = "Mobile Web Code Factory"þW$TYPE = "HTML"þW$WIDTH = 3 ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þW$HTML.DATA = '<form action="/dbc/MVDB.MAIN" method="GET">'þW$HTML.DATA<-1> = '<input type="hidden" name="udview" value="':G$WIDGET.NAME:'" />'þ*þNSELECTED = "" ; TSELECTED = "" ; FSELECTED = ""þCODE.TEXT = ""þIF WIDGET.USER.DATA(1) # WIDGET.USER.DATA(100) THENþ  TMP1 = WIDGET.USER.DATA(1)þ  TMP100 = WIDGET.USER.DATA(100)þ  MAT WIDGET.USER.DATA = ""þ  WIDGET.USER.DATA(1) = TMP1þ  WIDGET.USER.DATA(100) = TMP100þENDþW$HTML.DATA<-1> = '<table width="100%">'þBEGIN CASEþ  CASE WIDGET.USER.DATA(1) = "N"þ    NSELECTED = "selected"þ    GOSUB TYPE.SELECTORþ    W$HTML.DATA<-1> = '<tr><td><input type="hidden" name="udpos2" value="2" />'þ    W$HTML.DATA<-1> = 'Nav Labels (comma-separated):</td><td><input type="text" name="udval2" value="':WIDGET.USER.DATA(2):'" /></td></tr>'þ    W$HTML.DATA<-1> = '<tr><td><input type="hidden" name="udpos3" value="3" />'þ    W$HTML.DATA<-1> = 'Nav Links (comma-separated):</td><td><input type="text" name="udval3" value="':WIDGET.USER.DATA(3):'" /></td></tr>'þ    W$HTML.DATA<-1> = '</table>'þ    *þ    IF WIDGET.USER.DATA(2) # "" THENþ      CODE.TEXT = 'P$NAV.OPTS = ""'þ      VARNAME = "P$NAV.LABEL" ; LIST = WIDGET.USER.DATA(2)þ      GOSUB MAKE.CODEþ      VARNAME = "P$NAV.LINK" ; LIST = WIDGET.USER.DATA(3)þ      GOSUB MAKE.CODEþ    ENDþ    W$HTML.DATA<-1> = '<br /><input type="submit" value="Make Code" />'þ  CASE WIDGET.USER.DATA(1) = "T"þ    TSELECTED = "selected"þ    GOSUB TYPE.SELECTORþ    *þ    W$HTML.DATA<-1> = '<tr><td><input type="hidden" name="udpos2" value="2" />'þ    W$HTML.DATA<-1> = 'Column Headings (comma-separated):</td><td><input type="text" name="udval2" value="':WIDGET.USER.DATA(2):'" /></td></tr>'þ    W$HTML.DATA<-1> = '<tr><td><input type="hidden" name="udpos3" value="3" />'þ    W$HTML.DATA<-1> = 'Column Just (L/R) (comma-separated):</td><td><input type="text" name="udval3" value="':WIDGET.USER.DATA(3):'" /></td></tr>'þ    W$HTML.DATA<-1> = '</table>'þ    IF WIDGET.USER.DATA(2) # "" THENþ      CODE.TEXT<-1> = 'MAT TABLE.DEFS = ""'þ      VARNAME = "TABLE$LABELS" ; LIST = WIDGET.USER.DATA(2)þ      GOSUB MAKE.CODEþ      VARNAME = "TABLE$ALIGN" ; LIST = WIDGET.USER.DATA(3)þ      GOSUB MAKE.CODEþ      *þ      CODE.TEXT<-1> = 'TABLE$DATA = "" ;* Fill in your data here'þ      CODE.TEXT<-1> = 'CALL SUB.MOBI.TABLE(MAT TABLE.DEFS)'þ    ENDþ    W$HTML.DATA<-1> = '<br /><input type="submit" value="Make Code" />'þ  CASE WIDGET.USER.DATA(1) = "F"þ    FSELECTED = "selected"þ    GOSUB TYPE.SELECTORþ    *þ    W$HTML.DATA<-1> = '<tr><td><input type="hidden" name="udpos2" value="2" />'þ    W$HTML.DATA<-1> = 'Field Labels (comma-separated):</td><td><input type="text" name="udval2" value="':WIDGET.USER.DATA(2):'" /></td></tr>'þ    W$HTML.DATA<-1> = '<tr><td><input type="hidden" name="udpos3" value="3" />'þ    W$HTML.DATA<-1> = 'Field Types (comma-separated):</td><td><input type="text" name="udval3" value="':WIDGET.USER.DATA(3):'" /></td></tr>'þ    W$HTML.DATA<-1> = '<tr><td><input type="hidden" name="udpos4" value="4" />'þ    W$HTML.DATA<-1> = 'Values (comma-separated):</td><td><input type="text" name="udval4" value="':WIDGET.USER.DATA(4):'" /></td></tr>'þ    *þ    IF WIDGET.USER.DATA(2) # "" THENþ      *þ      DIM SEL.REF(20)þ      DIM SEL.LISTS(20)þ      DIM SEL.VALS(20)þ      TMP.TYPES = WIDGET.USER.DATA(3)þ      CALL SWAP(TMP.TYPES,'\,',CHAR(9))þ      CONVERT "," TO @AM IN TMP.TYPESþ      CONVERT " " TO "" IN TMP.TYPESþ      CONVERT CHAR(9) TO "," IN TMP.TYPESþ      TMP.NAMES = WIDGET.USER.DATA(2)þ      CALL SWAP(TMP.NAMES,'\,',CHAR(9))þ      CONVERT "," TO @AM IN TMP.NAMESþ      CONVERT CHAR(9) TO "," IN TMP.NAMESþ      SEL.POS = 0þ      POS.LIST = ""þ      UDPOS = 6 ;* Next user data position (hold 5 open)þ      LOOPþ        LOCATE "SELECT" IN TMP.TYPES SETTING POS THENþ          TMP.TYPES<POS> = "XXX"þ          SEL.POS += 1þ          POS.LIST<-1> = POSþ          W$HTML.DATA<-1> = '<tr><td><input type="hidden" name="udpos':UDPOS:'" value="':UDPOS:'" />'þ          W$HTML.DATA<-1> = 'Options for "':TMP.NAMES<POS>:'":</td><td><input type="text" name="udval':UDPOS:'" value="':WIDGET.USER.DATA(UDPOS):'" /></td></tr>'þ          UDPOS += 1þ          W$HTML.DATA<-1> = '<tr><td><input type="hidden" name="udpos':UDPOS:'" value="':UDPOS:'" />'þ          W$HTML.DATA<-1> = 'Values for "':TMP.NAMES<POS>:'":</td><td><input type="text" name="udval':UDPOS:'" value="':WIDGET.USER.DATA(UDPOS):'" /></td></tr>'þ          UDPOS += 1þ        END ELSE EXITþ      REPEATþ      W$HTML.DATA<-1> = '</table>'þ      UDPOS = 5þ      CONVERT @AM TO "," IN POS.LISTþ      W$HTML.DATA<-1> = '<input type="hidden" name="udpos':UDPOS:'" value="5" />'þ      W$HTML.DATA<-1> = '<input type="hidden" name="udval':UDPOS:'" value="':POS.LIST:'" />'þ    END ELSEþ      W$HTML.DATA<-1> = '</table>'þ    ENDþ    W$HTML.DATA<-1> = '<input type="submit" value="Make Code" />'þ    *þ    IF WIDGET.USER.DATA(2) # "" THENþ      CODE.TEXT<-1> = "FORM.ID = 1"þ      CODE.TEXT<-1> = 'INPUT.OPTS = "" ; SEL.LISTS = "" ; SEL.VALS = ""'þ      CODE.TEXT<-1> = 'FIELDSET.LABEL = "Fieldset Label"'þ      VARNAME = "LABELS" ; LIST = WIDGET.USER.DATA(2)þ      GOSUB MAKE.CODEþ      VARNAME = "INPUT.TYPES" ; LIST = WIDGET.USER.DATA(3)þ      GOSUB MAKE.CODEþ      VARNAME = "VALUES" ; LIST = WIDGET.USER.DATA(4)þ      GOSUB MAKE.CODEþ      *þ      POS.LIST = WIDGET.USER.DATA(5)þ      CONVERT "," TO @AM IN POS.LISTþ      POS.CNT = DCOUNT( POS.LIST, @AM )þ      SXPOS = 6þ      FOR SX = 1 TO POS.CNTþ        LIST = WIDGET.USER.DATA(SXPOS)þ        SXPOS += 1þ        VALS = WIDGET.USER.DATA(SXPOS)þ        SXPOS += 1þ        CONVERT "," TO @AM IN LISTþ        CONVERT "," TO @AM IN VALSþ        FOR SVX = 1 TO DCOUNT( LIST, @AM )þ          CODE.TEXT<-1> = "SEL.LISTS<":POS.LIST<SX>:",":SVX:"> = \":TRIM(LIST<SVX>):"\"þ          CODE.TEXT<-1> = "SEL.VALS<":POS.LIST<SX>:",":SVX:"> = \":TRIM(VALS<SVX>):"\"þ        NEXT SVXþ      NEXT SXþ      CODE.TEXT<-1> = 'FIELDSET.OPTIONS = ""'þ      CODE.TEXT<-1> = "CALL SUB.MOBI.FIELDSET(LABELS,VALUES,INPUT.TYPES,INPUT.OPTS,SEL.LISTS,SEL.VALS,FIELDSET.LABEL,FORM.ID,FIELDSET.OPTIONS)"þ    ENDþ  CASE 1þ    GOSUB TYPE.SELECTORþ    MAT WIDGET.USER.DATA = ""þ    W$HTML.DATA<-1> = '</table>'þEND CASEþ*þWIDGET.USER.DATA(100) = WIDGET.USER.DATA(1) ;* Current typeþW$HTML.DATA<-1> = '</form>'þIF CODE.TEXT # "" THENþ  CALL SWAP(CODE.TEXT,'&','&amp;')þ  CALL SWAP(CODE.TEXT,'<','&lt;')þ  CALL SWAP(CODE.TEXT,'>','&gt;')þ  CALL SWAP(CODE.TEXT,@AM,'<br />')þ  W$HTML.DATA<-1> = '<hr />'þ  W$HTML.DATA<-1> = '<pre>'þ  W$HTML.DATA<-1> = CODE.TEXTþ  W$HTML.DATA<-1> = '</pre>'þENDþRETURNþ*þMAKE.CODE: *þ*þCALL SWAP(LIST,'\,',CHAR(9))þCONVERT "," TO @AM IN LISTþCONVERT CHAR(9) TO ',' IN LISTþCNT = DCOUNT( LIST, @AM )þCODE.TEXT<-1> = VARNAME:' = ""'þFOR N = 1 TO CNTþ  WORD = TRIM(LIST<N>)þ  IF WORD # "" THENþ    CODE.TEXT<-1> = VARNAME:'<':N:'> = \':WORD:'\'þ  ENDþNEXT NþRETURNþ*þTYPE.SELECTOR: *þ*þW$HTML.DATA<-1> = '<tr><td><input type="hidden" name="udpos1" value="1" />'þW$HTML.DATA<-1> = 'Create code for:</td><td><select name="udval1" onChange="this.form.submit();">'þW$HTML.DATA<-1> = '<option value="">Select Code Type</option>'þW$HTML.DATA<-1> = '<option value="N" ':NSELECTED:'>P$NAV Navigation</option>'þW$HTML.DATA<-1> = '<option value="T" ':TSELECTED:'>Table</option>'þW$HTML.DATA<-1> = '<option value="F" ':FSELECTED:'>Fieldset / Form</option>'þW$HTML.DATA<-1> = '</select></td></tr>'þRETURN0004B6SUB.DEMO.SALE.TYPES.PIEþ0c2SUBROUTINE SUB.DEMO.SALE.TYPES.PIEþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþ*þW$TYPE = "FC2DPIE"þW$WIDTH = 3þ*þIF G$QUERYMODE THEN RETURNþ*þW$BAR.COLORS<1,1>=COLOR$MAROONþW$BAR.COLORS<1,2>=COLOR$TEALþW$BAR.COLORS<1,3>=COLOR$SILVERþW$BAR.COLORS<1,4>=COLOR$BLUEþYEAR=WIDGET.USER.DATA(1)þBEGIN CASEþ   CASE WIDGET.USER.DATA(2) = 'PARTS'þ      W$TITLE = 'Chart - ':YEAR:' Parts Revenue by Type'þ      TYPE.ATT=52þ      AMTS.ATT=53þ      W$PIE.CAPTION='Total Parts Revenue of 'þ   CASE WIDGET.USER.DATA(2) = 'SERVICES'þ      W$TITLE = 'Chart - ':YEAR:' Services Revenue by Type'þ      TYPE.ATT=50þ      AMTS.ATT=51þ      W$PIE.CAPTION='Total Services Revenue of 'þEND CASEþ*þOPEN '','MVDB.CONTROL' TO FILE.CONTROL ELSE STOPþREAD REC FROM FILE.CONTROL, 'DEMO.FINANCIAL.PICTURE' ELSE REC=''þLOCATE YEAR IN REC<67> SETTING YEAR.POS ELSE YEAR.POS=1þ**W$PIE.VALUE.OPTS<1,3>='isSliced="1"'þ*þTYPES=REC<TYPE.ATT>þAMOUNTS=REC<AMTS.ATT>þMAX.TYPES=DCOUNT(TYPES,CHAR(253))þFOR TYPE.CNTR = 1 TO MAX.TYPESþ   W$PIE.LABELS<1,TYPE.CNTR>=TYPES<1,TYPE.CNTR>þ   W$PIE.VALUES<1,TYPE.CNTR>=AMOUNTS<1,TYPE.CNTR,YEAR.POS>þ NEXT TYPE.CNTRþW$PIE.CAPTION:=OCONV(SUM(W$PIE.VALUES),'MD2,$')þ*þ*þRETURN000221SUB.LISTUþ0c2SUBROUTINE SUB.LISTU þ* þ* Copyright (c) 2010 SB, Inc. All rights reserved. þ* Description: List Users þ* þ*#MAKE# RL $OPTIONS D3 þINCLUDE WBPD MVDB.INCLUDE þ* þW$TYPE = "HTML" þW$TITLE = "List Users" þW$WIDTH = 1 þW$PRINTABLE = 1 þ* þIF G$QUERYMODE THEN RETURN þ* þEXECUTE "LISTU" CAPTURING JUNK þW$HTML.DATA = '<div  align="left">' þW$HTML.DATA<-1> = '<pre>' þFOR X = 1 TO DCOUNT( JUNK, @AM ) þ W$HTML.DATA<-1> = JUNK<X> þNEXT X þW$HTML.DATA<-1> = '</pre>' þW$HTML.DATA<-1> = '</div>' þ* þINCLUDE WBPD SOURCE.VIEW.ICON þ* þRETURN 000070VOCþ0c000003AMVAPPS.INSTALLERþ0c2PQþHRUN WDB.BP APP.INSTALLERþSTONþA2þP000023LOGINþ0c2PAþECLTYPE PþBASICTYPE "P"0000F9MVDB.USERSþ0c0000027guestþ0c2guestþChartsþGuest UserþþþUser00003Fadminþ0c2adminþAdministratorþAdmin Userþþno emailþAdministrator000037emailedþ0c2788CF490þAdministratorþemailed reportþþþUser000036webserviceþ0c2788CF490þAdministratorþwebserviceþþþUser000281DICT_DASHBOARD.CLOSING.STATSþ0c000001BAMOUNTþ0c1Aþ1þþþþþMD2þþRþ1200001CBRANCHþ0c1Aþ0þþþþþþG2*1þLþ10000021COST.OF.SALEþ0c1Aþ2þþþþþMD2þþRþ12000028GROSS.PROFITþ0c1Aþ0þþþþþMD2þF;1;2;-þRþ12000014IDþ0c1Aþ0þþþþþþþLþ10000021LAST.AP.REFRESHþ0c119109þ04-25-20000021LAST.AR.REFRESHþ0c119109þ04-25-20000024LAST.SALES.REFRESHþ0c119109þ04-25-2000001APIPEþ0c1Aþ0þ þþþþþF;C|þLþ100001CREGIONþ0c1Aþ0þþþþþþG3*1þLþ10000034REGION*YYYYMMþ0c1Aþ0þþþþþþA;0(G3*1):"*":0(G1*1)þLþ1000001DSALESMANþ0c1Aþ0þþþþþþG*1þLþ20000024SALESMAN*YYYYMMþ0c1Aþ0þþþþþþG*2þLþ2000001EYYYYþ0c1Aþ0þþþþþþG1*1ýT1,4þLþ400001BYYYYMMþ0c1Aþ0þþþþþþG1*1þLþ6000023YYYYMM*BRANCHþ0c1Aþ0þþþþþþG1*2þLþ1000818EMVDB.SUB.TEMPLATESþ0c0000017FCBAR2Dþ0c2USE FCAREA2D0009C3FCMSAREA2Dþ0c2* Copyright (C) information here if relevantþ* Any other descriptive comments hereþ* and hereþ*þW$TITLE = "YOUR TITLE HERE"     ;* Title for widget title barþW$TYPE = "%TYPE%"               ;* Filled in by editorþW$WIDTH = 3                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þ*** Extract data from GLOBAL, WIDGET variables hereþ*þ*** Open files hereþ*þ*** Create three arrays here. Two of them are single-dimention attributeþ*   or value separated lists, one that stores descriptions of eachþ*   point along the X axis (major), another that stores descriptionsþ*   of the components that make up each point along the X axis (minor).þ*   Example: Monthly sales by territory where each month is a pointþ*   (major) and each territory is a component of that point (minor).þ*   The third array is a full dynamic array where each attribute is aþ*   territory (minor) and each value is a month (major).þ*   Array Examples:þ    TERRS="" ;* Each attribute is a short description of the territoryþ    MNTHS="" ;* Each value is a short description of the month (Mon/YY)þ    SALES="" ;* Each attribute contains values (one per month) of theþ             ;* sales within a territory. SALES<3,2> corresponds toþ             ;* TERRS<1,3> and MNTHS<1,3>þ*   then you can load the widget's values and labels like:þ*     W$BAR.VALUES  = SALESþ*     W$BAR.XLABELS = MNTHSþ*     W$BAR.LABELS  = TERRSþ*   rather than loading them a value at a time as shownþ*   in the "FOR N = 1 TO 12" loop below.þ*þW$BAR.CAPTION = "YOUR CHART CAPTION HERE"þW$BAR.XMEMO = "X-Axis Text" ;* Text that appears below the X-Axis labelsþ                            ;* Ex: Territory Sales by MonthþW$BAR.YMEMO = "Y-Axis Text" ;* Text that appears beside the Y-Axis labelsþ                            ;* Ex: Sales (USD)þ*þFOR N = 1 TO 12þ  W$BAR.VALUES<1,N> = N ;* Valueþ  W$BAR.XLABELS<1,N> = "Label ":N ;* X-Axis labelþNEXT NþW$BAR.LABELS<1>="Label 1"þW$BAR.LABELS<2>="Label 2"þW$BAR.LABELS<3>="Label 3"þ*þ* To suppress the actual values for any of the series:þW$BAR.LABEL.OPTS<1> = "showValues='0'"þW$BAR.LABEL.OPTS<2> = "showValues='0'"þW$BAR.LABEL.OPTS<3> = "showValues='0'"þ*þ* Specify the alpha (transparency level) for each of the seriesþW$BAR.LABEL.OPTS<1> := " areaAlpha='50'"þW$BAR.LABEL.OPTS<2> := " areaAlpha='70'"þW$BAR.LABEL.OPTS<3> := " areaAlpha='90'"þ*þ*** Load any relevant data into GLOBAL, WIDGET variables hereþ*   as needed for subsequent use by other widgetsþ*þRETURN000561SPARKWINLOSSþ0c2* Copyright (C) information here if relevantþ* Any other descriptive comments hereþ* and hereþ*þW$TITLE = "YOUR TITLE HERE"     ;* Title for widget title barþW$TYPE = "%TYPE%"               ;* Filled in by editorþW$WIDTH = 3                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þ*** Extract data from GLOBAL, WIDGET variables hereþ*þ*** Open files hereþ*þ*** Create two one-attribute, value-separated arrays here.þ*   One contains the actual data, the other contains benchmark dataþ*   to which the actual data are compared.þ*   Example:þ      SALES: Each value is a single sales total for the monthþ      GOALS: Each value is a single goal for the corresponding monthþ*     you build the chart values by comparing each value within theþ*     two lists, setting each chart value to "W" (win), "L" (lose)þ*     or "D" (draw) based on the comparisonþ*þW$FW.CAPTION = "YOUR CHART CAPTION HERE"þW$FW.SUBCAPTION = "YOUR CHART SUBCAPTION HERE"þ*þMAX = DCOUNT(SALES,@VM)þFOR N = 1 TO MAXþ  BEGIN CASEþ    CASE SALES<1,N> > GOALS<1,N>; W$FW.VALUES<1,N> = "W" ;* Winþ    CASE SALES<1,N> < GOALS<1,N>; W$FW.VALUES<1,N> = "L" ;* Lossþ    CASE 1                                               ;* Drawþ  END CASEþNEXT Nþ*þ*** Load any relevant data into GLOBAL, WIDGET variables hereþ*   as needed for subsequent use by other widgetsþ*þRETURN00001BFCDOUGHNUT2Dþ0c2USE FC2DPIE00057BFC2DPIEþ0c2* Copyright (C) information here if relevantþ* Any other descriptive comments hereþ* and hereþ*þW$TITLE = "YOUR TITLE HERE"     ;* Title for widget title barþW$TYPE = "%TYPE%"               ;* Filled in by editorþW$WIDTH = 3                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þ*** Extract data from GLOBAL, WIDGET variables hereþ*þ*** Open files hereþ*þ*** Create two one-attribute, value-separated arrays here.þ*   One contains the data, the other contains a short descriptionþ*   of that data.þ*   Example:þ*     TERRSALES: Each value is a single territory's sales for the monthþ*     TERRNAMES: Each value is a short name for the territoryþ*     then you can load the widget's values like:þ*       W$PIE.LABELS = TERRNAMESþ*       W$PIE.VALUES = TERRSALESþ*     rather than loading them a value at a time as shownþ*     in the "FOR N = 1 TO 7" loop below.þ*þFOR N = 1 TO 7þ  W$PIE.LABELS<1,N> = "Slice ":Nþ  W$PIE.VALUES<1,N> = NþNEXT Nþ*þ* For a 2D pie, a specific slice can be separated from the pieþ* by setting this value:þ* W$PIE.VALUE.OPTS<1,X> = 'isSliced="1"'þ*   where "X" is the number of the value you want separatedþ*þ* To show values instead of percentages, use this:þ* W$CHART.OPTIONS<-1> = "showPercentageValues='0'"þ*þ*** Load any relevant data into GLOBAL, WIDGET variables hereþ*   as needed for subsequent use by other widgetsþ*þRETURN00001BCYLINDERþ0c2USE THERMOMETER000303TEXTþ0c2* Copyright (C) information here if relevantþ* Any other descriptive comments hereþ* and hereþ*þW$TITLE = "YOUR TITLE HERE"     ;* Title for widget title barþW$TYPE = "%TYPE%"               ;* Filled in by editorþW$WIDTH = 3                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þ*** Extract data from GLOBAL, WIDGET variables hereþ*þ*** Open files hereþ*þ*** Create dynamic array, on text line per attributeþ*   Examples:þ*     READ TXTITM FROM FILE,ID ELSE TXTITM = "TXTITM NOT FOUND"þ*   or:þ*     EXECUTE "YOUR SORT STATEMENT" CAPTURING TXTITEMþ*þW$TEXT.DATA = "YOUR DYNAMIC ARRAY HERE";* example: TXTITMþ*þ*** Load any relevant data into GLOBAL, WIDGET variables hereþ*   as needed for subsequent use by other widgetsþ*þRETURN000016FCLINEþ0c2USE FCAREA2D000022FCSTACKEDCOLUMN3Dþ0c2USE FCMSBAR2D000A7CHLEDþ0c2* Copyright (C) information here if relevantþ* Any other descriptive comments hereþ* and hereþ*þW$TITLE = "YOUR TITLE HERE"     ;* Title for widget title barþW$TYPE = "%TYPE%"               ;* Filled in by editorþW$WIDTH = 3                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þ*** Extract data from GLOBAL, WIDGET variables hereþ*þ*** Open files hereþ*þ*** Read your data, summarize it into one number, like total salesþ*   for the period. While you're at it, determine a contant toþ*   which that number can be compared, like sales at the same pointþ*   last year, or a sales goal for the period, whatever.þ*   Example:þ*     SALES: Total sales for a period within the current yearþ*     GOAL:  Sales goal for said current year periodþ*   Once you have your goal (or other benchmark), use it to calculateþ*   your color range values. Also, you must determine the upper rangeþ*   of your gauge. Make it slightly higher than the higher of yourþ*   calculations (ie. if your sales exceed your goal, use the sales; ifþ*   your goal exceeds your sales, use the goal).þ*   Example: Given GOAL & SALES, calculate the ranges:þ             GOAL      = 100000þ             SALES     = 110000þ             RANGE.BAD = INT(GOAL*.7)þ             RANGE.OK  = INT(GOAL*.9)þ             RANGE.GOOD= INT(SALES*1.1)þ*þW$FW.LOWER.LIMIT = 0þW$FW.UPPER.LIMIT = RANGE.GOOD ;* Upper limit of the gaugeþW$FW.LOWER.LIMIT.LABEL = "Poor"þW$FW.UPPER.LIMIT.LABEL = "Great"þ*þW$FW.NUMBER.PREFIX = "$"þW$FW.NUMBER.SUFFIX = ""þ*þ* First Color Range (Normally Green)þW$FW.COLOR.RANGE<1,1> = 0           ;* FromþW$FW.COLOR.RANGE<2,1> = RANGE.BAD   ;* ToþW$FW.COLOR.RANGE<3,1> = COLOR$RED   ;* Override colorþ* Second Color Range (Normally Yellow)þW$FW.COLOR.RANGE<1,2> = RANGE.BAD   ;* FromþW$FW.COLOR.RANGE<2,2> = RANGE.OK    ;* Toþ* Third Color Range (Normally Red)þW$FW.COLOR.RANGE<1,3> = RANGE.OK    ;* FromþW$FW.COLOR.RANGE<2,3> = RANGE.GOOD  ;* ToþW$FW.COLOR.RANGE<3,3> = COLOR$GREEN ;* Override colorþ*þ* Value & TargetþW$FW.METER.VALUE  = SALES      ;* Your actual valueþ*þ* Configure tickmarks (optional)þ* Below are default values. Leaving this code out would make no differenceþ* but this is here in case you want to modify the defaultsþ*þW$FW.TICKMARKS<1> = 1 ;* Display tickmarksþW$FW.TICKMARKS<2> = 1 ;* Display values by tickmarksþW$FW.TICKMARKS<3> = "B" ;* Show tickmarks below the graphþW$FW.TICKMARKS<4> = "" ;* # of Major Tickmarks (blank = Let it calculate this)þW$FW.TICKMARKS<5> = "" ;* # of Minor Tickmarks between Majors (none)þ*þ*** Load any relevant data into GLOBAL, WIDGET variables hereþ*   as needed for subsequent use by other widgetsþ*þRETURN00001DFCMSCOLUMN3Dþ0c2USE FCMSBAR2D00026AHTMLþ0c2* Copyright (C) information here if relevantþ* Any other descriptive comments hereþ* and hereþ*þW$TITLE = "YOUR TITLE HERE"     ;* Title for widget title barþW$TYPE = "%TYPE%"               ;* Filled in by editorþW$WIDTH = 3                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þ*** Extract data from GLOBAL, WIDGET variables hereþ*þ*** Open files hereþ*þ*** Create a HTML string from data previously readþ*þW$HTML.DATA = "<h2>YOUR HTML STRING HERE</h2>"þ*þ*** Load any relevant data into GLOBAL, WIDGET variables hereþ*   as needed for subsequent use by other widgetsþ*þRETURN00001AFCCOLUMN2Dþ0c2USE FCAREA2D00001CSPARKLINEþ0c2USE SPARKCOLUMN000ADBHBULLETþ0c2* Copyright (C) information here if relevantþ* Any other descriptive comments hereþ* and hereþ*þW$TITLE = "YOUR TITLE HERE"     ;* Title for widget title barþW$TYPE = "%TYPE%"               ;* Filled in by editorþW$WIDTH = 3                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þ*** Extract data from GLOBAL, WIDGET variables hereþ*þ*** Open files hereþ*þ*** Read your data, summarize it into one number, like total salesþ*   for the period. While you're at it, determine a contant toþ*   which that number can be compared, like sales at the same pointþ*   last year, or a sales goal for the period, whatever.þ*   Example:þ*     SALES: Total sales for a period within the current yearþ*     GOAL:  Sales goal for said current year periodþ*   Once you have your goal (or other benchmark), use it to calculateþ*   your color range values. Also, you must determine the upper rangeþ*   of your gauge. Make it slightly higher than the higher of yourþ*   calculations (ie. if your sales exceed your goal, use the sales; ifþ*   your goal exceeds your sales, use the goal).þ*   Example: Given GOAL & SALES, calculate the ranges:þ             GOAL      = 100000þ             SALES     = 110000þ             RANGE.BAD = INT(GOAL*.7)þ             RANGE.OK  = INT(GOAL*.9)þ             RANGE.GOOD= INT(SALES*1.1)þ*þW$FW.LOWER.LIMIT = 0þW$FW.UPPER.LIMIT = RANGE.GOOD ;* Upper limit of the gaugeþW$FW.CAPTION     = "YOUR MAIN CAPTION HERE"þW$FW.SUBCAPTION  = "YOUR SUB-CAPTION HERE"  ;* Optionalþ*þW$FW.NUMBER.PREFIX = "$"þW$FW.NUMBER.SUFFIX = ""þ*þ* First Color Range (Normally Green)þW$FW.COLOR.RANGE<1,1> = 0           ;* FromþW$FW.COLOR.RANGE<2,1> = RANGE.BAD   ;* ToþW$FW.COLOR.RANGE<3,1> = COLOR$RED   ;* Override colorþ* Second Color Range (Normally Yellow)þW$FW.COLOR.RANGE<1,2> = RANGE.BAD   ;* FromþW$FW.COLOR.RANGE<2,2> = RANGE.OK    ;* Toþ* Third Color Range (Normally Red)þW$FW.COLOR.RANGE<1,3> = RANGE.OK    ;* FromþW$FW.COLOR.RANGE<2,3> = RANGE.GOOD  ;* ToþW$FW.COLOR.RANGE<3,3> = COLOR$GREEN ;* Override colorþ*þ* Value & TargetþW$FW.METER.VALUE  = SALES      ;* Your actual valueþW$FW.METER.TARGET = GOAL       ;* Your calculated targetþ*þ* Configure tickmarks (optional)þ* Below are default values. Leaving this code out would make no differenceþ* but this is here in case you want to modify the defaultsþ*þW$FW.TICKMARKS<1> = 1 ;* Display tickmarksþW$FW.TICKMARKS<2> = 1 ;* Display values by tickmarksþW$FW.TICKMARKS<3> = "B" ;* Show tickmarks below the graphþW$FW.TICKMARKS<4> = "" ;* # of Major Tickmarks (blank = Let it calculate this)þW$FW.TICKMARKS<5> = "" ;* # of Minor Tickmarks between Majors (none)þ*þ*** Load any relevant data into GLOBAL, WIDGET variables hereþ*   as needed for subsequent use by other widgetsþ*þRETURN000010VLEDþ0c2USE HLED000016FC3DPIEþ0c2USE FC2DPIE000905FCMSBAR2Dþ0c2* Copyright (C) information here if relevantþ* Any other descriptive comments hereþ* and hereþ*þW$TITLE = "YOUR TITLE HERE"     ;* Title for widget title barþW$TYPE = "%TYPE%"               ;* Filled in by editorþW$WIDTH = 3                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þ*** Extract data from GLOBAL, WIDGET variables hereþ*þ*** Open files hereþ*þ*** Create three arrays here. Two of them are single-dimention attributeþ*   or value separated lists, one that stores descriptions of eachþ*   point along the X axis (major), another that stores descriptionsþ*   of the components that make up each point along the X axis (minor).þ*   Example: Monthly sales by territory where each month is a pointþ*   (major) and each territory is a component of that point (minor).þ*   The third array is a full dynamic array where each attribute is aþ*   territory (minor) and each value is a month (major).þ*   Array Examples:þ    TERRS="" ;* Each attribute is a short description of the territoryþ    MNTHS="" ;* Each value is a short description of the month (Mon/YY)þ    SALES="" ;* Each attribute contains values (one per month) of theþ             ;* sales within a territory. SALES<3,2> corresponds toþ             ;* TERRS<1,3> and MNTHS<1,3>þ*   then you can load the widget's values and labels like:þ*     W$BAR.VALUES  = SALESþ*     W$BAR.XLABELS = MNTHSþ*     W$BAR.LABELS  = TERRSþ*   rather than loading them a value at a time as shownþ*   in the "FOR N = 1 TO 12" loop below.þ*þW$BAR.CAPTION = "YOUR CHART CAPTION HERE"þW$BAR.XMEMO = "X-Axis Text" ;* Text that appears below the X-Axis labelsþ                            ;* Ex: Territory Sales by MonthþW$BAR.YMEMO = "Y-Axis Text" ;* Text that appears beside the Y-Axis labelsþ                            ;* Ex: Sales (USD)þ*þFOR N = 1 TO 12þ  W$BAR.VALUES<1,N> = N ;* Valueþ  W$BAR.XLABELS<1,N> = "Label ":N ;* X-Axis labelþNEXT NþW$BAR.LABELS<1>="Label 1"þW$BAR.LABELS<2>="Label 2"þW$BAR.LABELS<3>="Label 3"þ*þ* To suppress the actual values for any of the series:þW$BAR.LABEL.OPTS<1> = "showValues='0'"þW$BAR.LABEL.OPTS<2> = "showValues='0'"þW$BAR.LABEL.OPTS<3> = "showValues='0'"þ*þ*** Load any relevant data into GLOBAL, WIDGET variables hereþ*   as needed for subsequent use by other widgetsþ*þRETURN00022EMAPþ0c2W$TITLE = "Untitled Map"þ*þ* The W$TYPE variable needs to represent a valid map nameþ*þW$TYPE = "MAP:Canada"þW$WIDTH = 3 ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þW$MAP.IDS<1,1> = "01"þW$MAP.VALUES<1,1> = 5þW$MAP.VALUE.OPTS<1,1> = 'toolText="This is Alberta!"'þ*þW$MAP.RANGE.NAME<1,1> = "Not On The Map"þW$MAP.RANGE.LOW<1,1> = "0"þW$MAP.RANGE.HIGH<1,1> = "5"þW$MAP.RANGE.COLOR<1,1> = "WHITE"þW$MAP.RANGE.NAME<1,2> = "On The Map"þW$MAP.RANGE.LOW<1,2> = "5"þW$MAP.RANGE.HIGH<1,2> = "10"þW$MAP.RANGE.COLOR<1,2> = "GREEN"þ*þRETURN0004FFTABLEþ0c2* Copyright (C) information here if relevantþ* Any other descriptive comments hereþ* and hereþ*þW$TITLE = "YOUR TITLE HERE"     ;* Title for widget title barþW$TYPE = "%TYPE%"               ;* Filled in by editorþW$WIDTH = 3                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þ*** Extract data from GLOBAL, WIDGET variables hereþ*þ*** Open files hereþ*þ*** Create a work table from your data that you'll use to populate theþ*   widget's table data array where attributes represent rows andþ*   values represent columns. NOTE: If you are using the widget'sþ*   Total row, you have to calculate the totals yourself and stickþ*   them in the appropriate W$TABLE.TOTALS value.þ*þ* Set up column labelsþW$TABLE.COL.LABELS<1,1> = "Column Heading 1"þW$TABLE.COL.LABELS<1,2> = "Column Heading 2"þW$TABLE.COL.LABELS<1,3> = "Column Heading 3"þ*þ* Column justification = left, right, centerþW$TABLE.COL.JUST<1,1> = "left"þW$TABLE.COL.JUST<1,2> = "right"þ*þ* Table RowsþFOR ROW = 1 TO 5þ  W$TABLE.DATA<ROW,1> = ROW:",1"þ  W$TABLE.DATA<ROW,2> = ROW:",2"þNEXT ROWþ*þ* TotalsþW$TABLE.TOTALS<1,1> = "2"þW$TABLE.TOTALS<1,2> = "4"þ*þ*** Load any relevant data into GLOBAL, WIDGET variables hereþ*   as needed for subsequent use by other widgetsþ*þRETURN000DE2ANGULARGAUGEþ0c2* Copyright (C) information here if relevantþ* Any other descriptive comments hereþ* and hereþ*þW$TITLE = "YOUR TITLE HERE"     ;* Title for widget title barþW$TYPE = "%TYPE%"               ;* Filled in by editorþW$WIDTH = 3                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þ*** Extract data from GLOBAL, WIDGET variables hereþ*þ*** Open files hereþ*þ*** Read your data, summarize it into one number, like total salesþ*   for the period. While you're at it, determine some contants toþ*   which that number can be compared, like sales at the same pointþ*   last year, or a sales goal for the period, whatever. Also, gatherþ*   information that will allow you to create ranges against which toþ*   compare the number and those constants, if any.þ*   Example:þ*     SALES.CY: Total sales for a period within the current yearþ*     SALES.LY: Total sales within that same period last yearþ*     SLS.GOAL: Sales goal for said current year periodþ*   Once you have your goal (or other benchmark), use it to calculateþ*   your color range values. Also, you must determine the upper rangeþ*   of your gauge. Make it slightly higher than the highest of yourþ*   calculations (ie. if your sales exceed your goal, use the sales; ifþ*   your goal exceeds your sales, use the goal).þ*   Example: Given SLS.GOAL & SALES.CY, calculate the ranges:þ             SLS.GOAL  = 100000þ             SALES.CY  = 110000þ             SALES.LY  = 95000þ             RANGE.BAD = INT(SLS.GOAL*.7)þ             RANGE.OK  = INT(SLS.GOAL*.9)þ             RANGE.GOOD= INT(SALES.CY*1.1)þ*þW$FW.LOWER.LIMIT = 0þW$FW.UPPER.LIMIT = RANGE.GOOD ;* Upper limit of the gaugeþW$FW.LOWER.LIMIT.LABEL = "Poor"þW$FW.UPPER.LIMIT.LABEL = "Great"þ*þW$FW.NUMBER.PREFIX = "$"þW$FW.NUMBER.SUFFIX = ""þ*þ* First Color Range (Normally Green)þW$FW.COLOR.RANGE<1,1> = 0           ;* FromþW$FW.COLOR.RANGE<2,1> = RANGE.BAD   ;* ToþW$FW.COLOR.RANGE<3,1> = COLOR$RED   ;* Override colorþ* Second Color Range (Normally Yellow)þW$FW.COLOR.RANGE<1,2> = RANGE.BAD   ;* FromþW$FW.COLOR.RANGE<2,2> = RANGE.OK    ;* ToþW$FW.COLOR.RANGE<3,2> = COLOR$YELLOW;* Override colorþ* Third Color Range (Normally Red)þW$FW.COLOR.RANGE<1,3> = RANGE.OK    ;* FromþW$FW.COLOR.RANGE<2,3> = RANGE.GOOD  ;* ToþW$FW.COLOR.RANGE<3,3> = COLOR$GREEN ;* Override colorþ*þ* Main Dial ValueþW$FW.DIAL.VALUES<1> = SALES.CY      ;* Your actual valueþ*þ* Trendpoints (optional)þ* By default, there are no trendpoints on the gauge.þ*þ* First TrendpointþW$FW.TRENDPOINT.VALUES<1,1> = SALES.LYþW$FW.TRENDPOINT.LABELS<1,1> = "Last Year"þW$FW.TRENDPOINT.OPTS<1,1> = 'color="':COLOR$BLACK:'" useMarker="1"'þ* Second TrendpointþW$FW.TRENDPOINT.VALUES<1,2> = SLS.GOALþW$FW.TRENDPOINT.LABELS<1,2> = "Goal"þW$FW.TRENDPOINT.OPTS<1,2> = 'color="':COLOR$SILVER:'" useMarker="1"'þ*þ* Plot an arc (optional) þW$FW.TRENDPOINT.VALUES<2,1> = SALES.LY ;* Arc beginþW$FW.TRENDPOINT.VALUES<2,2> = SALES.CY ;* Arc endþ*þ* Configure tickmarks (optional)þ* Below are default values. Leaving this code out would make no differenceþ* but this is here in case you want to modify the defaultsþ*þW$FW.TICKMARKS<1> = 1 ;* Display tickmarksþW$FW.TICKMARKS<2> = 1 ;* Display values by tickmarksþW$FW.TICKMARKS<3> = "B" ;* Show tickmarks below the graphþW$FW.TICKMARKS<4> = "" ;* # of Major Tickmarks (blank = Let it calculate this)þW$FW.TICKMARKS<5> = "" ;* # of Minor Tickmarks between Majors (none)þ*þ*** Load any relevant data into GLOBAL, WIDGET variables hereþ*   as needed for subsequent use by other widgetsþ*þRETURN00001AFCCOLUMN3Dþ0c2USE FCAREA2D000020FCSTACKEDAREA2Dþ0c2USE FCMSBAR2D0005C4FCAREA2Dþ0c2* Copyright (C) information here if relevantþ* Any other descriptive comments hereþ* and hereþ*þW$TITLE = "YOUR TITLE HERE"     ;* Title for widget title barþW$TYPE = "%TYPE%"               ;* Filled in by editorþW$WIDTH = 3                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þ*** Extract data from GLOBAL, WIDGET variables hereþ*þ*** Open files hereþ*þ*** Create two one-attribute, value-separated arrays here.þ*   One contains the data, the other contains a short descriptionþ*   of that data, like the month and year.þ*   Example:þ*     TERRSALES: Each value is a single territory's sales for the monthþ*     TERRPERDS: Each value is a short description of the period (MM/YY)þ*     then you can load the widget's values like:þ*       W$BAR.XLABELS = TERRPERDSþ*       W$BAR.VALUES = TERRSALESþ*     rather than loading them a value at a time as shownþ*     in the "FOR N = 1 TO 12" loop below.þ*þW$BAR.CAPTION = "YOUR CHART CAPTION HERE"þW$BAR.XMEMO = "X-Axis Text" ;* Text that appears below the X-Axis labelsþ                            ;* Ex: Territory ABC Sales by MonthþW$BAR.YMEMO = "Y-Axis Text" ;* Text that appears beside the Y-Axis labelsþ                            ;* Ex: Sales (USD)þ*þFOR N = 1 TO 12þ  W$BAR.VALUES<1,N> = N ;* Valueþ  W$BAR.XLABELS<1,N> = "Label ":N ;* X-Axis labelþNEXT Nþ*þ*** Load any relevant data into GLOBAL, WIDGET variables hereþ*   as needed for subsequent use by other widgetsþ*þRETURN0006F3FUNNELþ0c2* Copyright (C) information here if relevantþ* Any other descriptive comments hereþ* and hereþ*þW$TITLE = "YOUR TITLE HERE"     ;* Title for widget title barþW$TYPE = "%TYPE%"               ;* Filled in by editorþW$WIDTH = 3                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þ*** Extract data from GLOBAL, WIDGET variables hereþ*þ*** Open files hereþ*þ*** Create two one-attribute, value-separated arrays here.þ*   One contains the data, the other contains a short descriptionþ*   of that data. NOTE: The values should be ordered from largest toþ*   smallest (value<1,1> should be larger than value<1,2> and so on)þ*   or the funnel will look weird. For a pyramid, that order shouldþ*   be reversed (value<1,1> should be smaller than value<1,2>, etc).þ*   Example:þ*     KILLSTATS: Each value is a single territory's sales for the monthþ*     STATDESCS: Each value is a short name for the territoryþ*     then you can load the widget's values like:þ*       W$FC.LABELS = STATDESCSþ*       W$FC.VALUES = KILLSTATSþ*     rather than loading them a value at a time as shownþ*     in the "FOR N = 1 TO 5" loop below.þ*   For a funnel chart, the last value in the list must represent theþ*   total of all the other values. This is not true for a pyramid chart.þ*þFOR N = 1 TO 5þ  W$FW.LABELS<1,N> = "Section ":Nþ  W$FW.VALUES<1,N> = NþNEXT Nþ*þW$FW.CAPTION = "YOUR CAPTION HERE"þW$FW.SUBCAPTION = "YOUR SUB-CAPTION HERE"þ*þ* To show percentages instead of values, use this:þ* W$CHART.OPTIONS<-1> = "showPercentValues='1'"þ* To separate the sections from one another, use this:þ* W$CHART.OPTIONS<-1> = "isSliced='1'"þ*þ*** Load any relevant data into GLOBAL, WIDGET variables hereþ*   as needed for subsequent use by other widgetsþ*þRETURN0006FCTHERMOMETERþ0c2* Copyright (C) information here if relevantþ* Any other descriptive comments hereþ* and hereþ*þW$TITLE = "YOUR TITLE HERE"     ;* Title for widget title barþW$TYPE = "%TYPE%"               ;* Filled in by editorþW$WIDTH = 3                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þ*** Extract data from GLOBAL, WIDGET variables hereþ*þ*** Open files hereþ*þ*** Read your data, summarize it into one number, like total salesþ*   for the period. While you're at it, determine a contant toþ*   which that number can be compared, like sales at the same pointþ*   last year, or a sales goal for the period, whatever.þ*   Example:þ*     SALES: Total sales for a period within the current yearþ*     GOAL:  Sales goal for said current year periodþ*   Example: Given GOAL & SALES, calculate the ranges:þ             GOAL      = 100000þ             SALES     = 110000þ*þW$FW.LOWER.LIMIT = 0þW$FW.UPPER.LIMIT = GOAL ;* Upper limit of the gaugeþW$FW.LOWER.LIMIT.LABEL = "Poor"þW$FW.UPPER.LIMIT.LABEL = "Great"þW$FW.THERMOMETER.COLOR = COLOR$REDþ*þW$FW.NUMBER.PREFIX = "$"þW$FW.NUMBER.SUFFIX = ""þ*þ* ValueþW$FW.METER.VALUE  = SALES      ;* Your actual valueþ*þ* Configure tickmarks (optional)þ* Below are default values. Leaving this code out would make no differenceþ* but this is here in case you want to modify the defaultsþ*þW$FW.TICKMARKS<1> = 1 ;* Display tickmarksþW$FW.TICKMARKS<2> = 1 ;* Display values by tickmarksþW$FW.TICKMARKS<3> = "B" ;* Show tickmarks below the graphþW$FW.TICKMARKS<4> = "" ;* # of Major Tickmarks (blank = Let it calculate this)þW$FW.TICKMARKS<5> = "" ;* # of Minor Tickmarks between Majors (none)þ*þ*** Load any relevant data into GLOBAL, WIDGET variables hereþ*   as needed for subsequent use by other widgetsþ*þRETURN000019FCMSLINEþ0c2USE FCMSBAR2D000BB5USAMAPþ0c2W$TITLE = "Untitled Map"þW$TYPE = "%TYPE%"þW$WIDTH = 3 ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þ* The IDs of each section of a USA map are the state abbreviations, including DCþ* A list of the state names can be obtained as follows:þOPEN '','MVDB.CONTROL' TO F.MVDB.CONTROL ELSEþ  W$TYPE = "TEXT"þ  W$TEXT.DATA = "Unable to open MVDB.CONTROL"þ  RETURNþENDþREAD STATE.NAMES FROM F.MVDB.CONTROL, 'STATE.NAMES' ELSE STATE.NAMES = ''þCONVERT "," TO @VM IN STATE.NAMESþ*þIF WIDGET.USER.DATA(1) # "" THENþ  * User has clicked on a specific state. That state map will be displayed.þ  * This entire section of code can be removed if you dont want to allowþ  * drill-down to a state map.þ  *þ  * The map "name" for the sepcifc state is stored in WIDGET.USER.DATA(2).þ  * The IDs for the state map are the FIPS county codes.þ  * A list of county codes can be gathered for a specific state as follows:þ  OPEN '','MVDB.MAP.DATA' TO F.MVDB.MAP.DATA ELSEþ    W$TYPE = "TEXT"þ    W$TEXT.DATA = "Unable to open MVDB.MAP.DATA"þ    RETURNþ  ENDþ  EXECUTE 'SELECT MVDB.MAP.DATA WITH NAME = "':WIDGET.USER.DATA(2):'"' CAPTURING JUNKþ  N = 0þ  LOOPþ    READNEXT ID ELSE EXITþ    READ REC FROM F.MVDB.MAP.DATA, ID THENþ      N += 1þ      * The ID of the map data file is STATE * FIPS_Codeþ      * Extract the FIPS code from the ID and use it as the ID for thisþ      * value.þ      W$MAP.IDS<1,N> = FIELD( ID, '*', 2 )þ      W$MAP.VALUES<1,N> = Nþ      * The county name can be found in REC<2>þ      W$MAP.VALUE.OPTS<1,N> = 'toolText="':REC<2>:'"'þ    ENDþ  REPEATþ  * Since we are in drill-down mode, we need to give the user a way to get backþ  * to the national map. To get out of drill-down mode, WIDGET.USER.DATA(1) needsþ  * to be cleared. Using a link is an easy way to do that.þ  W$LINK.LABEL<1,2> = "Return to USA Map"þ  W$LINK.LOCATION<1,2> = "1"þ  W$LINK.UD.POS<1,2> = 1þ  W$LINK.UD.VAL<1,2> = ""þ  * Override the title to show the state name.þ  W$TITLE = "Demo - ":WIDGET.USER.DATA(1):" Counties by Alphabet"þEND ELSE ;* No state specified, full US Mapþ  * Assign a value to each desired map segments (States) as followsþ  W$MAP.IDS<1,-1> = "TX"þ  W$MAP.VALUES<1,-1> = 100þ  W$MAP.VALUE.OPTS<1,-1> = 'toolText="Texas" ' ;* Multiple option settings are space-delimitedþ  *þ  * With drill-down enabled, the widget will automatically be re-executed with the state ID in WIDGET.USER.DATA(1)þ  * Allow drill-down to the state level by setting this value:þ  W$MAP.VALUE.DD<1,-1> = 1þENDþ*þ* Set up ranges of values. Note that the low range is inclusive, high range is exclusive.þW$MAP.RANGE.NAME<1,1> = "Range 1-99"þW$MAP.RANGE.LOW<1,1> = "1"þW$MAP.RANGE.HIGH<1,1> = "100"þW$MAP.RANGE.COLOR<1,1> = "GREEN"þW$MAP.RANGE.NAME<1,2> = "Range 100-199"þW$MAP.RANGE.LOW<1,2> = "100"þW$MAP.RANGE.HIGH<1,2> = "200"þW$MAP.RANGE.COLOR<1,2> = "YELLOW"þW$MAP.RANGE.NAME<1,3> = "Range 200-300"þW$MAP.RANGE.LOW<1,3> = "200"þW$MAP.RANGE.HIGH<1,3> = "301"þW$MAP.RANGE.COLOR<1,3> = "RED"þ*þRETURN000DE2HLINEARGAUGEþ0c2* Copyright (C) information here if relevantþ* Any other descriptive comments hereþ* and hereþ*þW$TITLE = "YOUR TITLE HERE"     ;* Title for widget title barþW$TYPE = "%TYPE%"               ;* Filled in by editorþW$WIDTH = 3                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þ*** Extract data from GLOBAL, WIDGET variables hereþ*þ*** Open files hereþ*þ*** Read your data, summarize it into one number, like total salesþ*   for the period. While you're at it, determine some contants toþ*   which that number can be compared, like sales at the same pointþ*   last year, or a sales goal for the period, whatever. Also, gatherþ*   information that will allow you to create ranges against which toþ*   compare the number and those constants, if any.þ*   Example:þ*     SALES.CY: Total sales for a period within the current yearþ*     SALES.LY: Total sales within that same period last yearþ*     SLS.GOAL: Sales goal for said current year periodþ*   Once you have your goal (or other benchmark), use it to calculateþ*   your color range values. Also, you must determine the upper rangeþ*   of your gauge. Make it slightly higher than the highest of yourþ*   calculations (ie. if your sales exceed your goal, use the sales; ifþ*   your goal exceeds your sales, use the goal).þ*   Example: Given SLS.GOAL & SALES.CY, calculate the ranges:þ             SLS.GOAL  = 100000þ             SALES.CY  = 110000þ             SALES.LY  = 95000þ             RANGE.BAD = INT(SLS.GOAL*.7)þ             RANGE.OK  = INT(SLS.GOAL*.9)þ             RANGE.GOOD= INT(SALES.CY*1.1)þ*þW$FW.LOWER.LIMIT = 0þW$FW.UPPER.LIMIT = RANGE.GOOD ;* Upper limit of the gaugeþW$FW.LOWER.LIMIT.LABEL = "Poor"þW$FW.UPPER.LIMIT.LABEL = "Great"þ*þW$FW.NUMBER.PREFIX = "$"þW$FW.NUMBER.SUFFIX = ""þ*þ* First Color Range (Normally Green)þW$FW.COLOR.RANGE<1,1> = 0           ;* FromþW$FW.COLOR.RANGE<2,1> = RANGE.BAD   ;* ToþW$FW.COLOR.RANGE<3,1> = COLOR$RED   ;* Override colorþ* Second Color Range (Normally Yellow)þW$FW.COLOR.RANGE<1,2> = RANGE.BAD   ;* FromþW$FW.COLOR.RANGE<2,2> = RANGE.OK    ;* ToþW$FW.COLOR.RANGE<3,1> = COLOR$YELLOW;* Override colorþ* Third Color Range (Normally Red)þW$FW.COLOR.RANGE<1,3> = RANGE.OK    ;* FromþW$FW.COLOR.RANGE<2,3> = RANGE.GOOD  ;* ToþW$FW.COLOR.RANGE<3,3> = COLOR$GREEN ;* Override colorþ*þ* Main Dial ValueþW$FW.DIAL.VALUES<1> = SALES.CY      ;* Your actual valueþ*þ* Trendpoints (optional)þ* By default, there are no trendpoints on the gauge.þ*þ* First TrendpointþW$FW.TRENDPOINT.VALUES<1,1> = SALES.LYþW$FW.TRENDPOINT.LABELS<1,1> = "Last Year"þW$FW.TRENDPOINT.OPTS<1,1> = 'color="':COLOR$BLACK:'" useMarker="1"'þ* Second TrendpointþW$FW.TRENDPOINT.VALUES<1,2> = SLS.GOALþW$FW.TRENDPOINT.LABELS<1,2> = "Goal"þW$FW.TRENDPOINT.OPTS<1,2> = 'color="':COLOR$SILVER:'" useMarker="1"'þ*þ* Plot an arc (optional) þW$FW.TRENDPOINT.VALUES<2,1> = SALES.LY ;* Arc beginþW$FW.TRENDPOINT.VALUES<2,2> = SALES.CY ;* Arc endþ*þ* Configure tickmarks (optional)þ* Below are default values. Leaving this code out would make no differenceþ* but this is here in case you want to modify the defaultsþ*þW$FW.TICKMARKS<1> = 1 ;* Display tickmarksþW$FW.TICKMARKS<2> = 1 ;* Display values by tickmarksþW$FW.TICKMARKS<3> = "B" ;* Show tickmarks below the graphþW$FW.TICKMARKS<4> = "" ;* # of Major Tickmarks (blank = Let it calculate this)þW$FW.TICKMARKS<5> = "" ;* # of Minor Tickmarks between Majors (none)þ*þ*** Load any relevant data into GLOBAL, WIDGET variables hereþ*   as needed for subsequent use by other widgetsþ*þRETURN00001DFCMSCOLUMN2Dþ0c2USE FCMSBAR2D000016VBULLETþ0c2USE HBULLET000022FCSTACKEDCOLUMN2Dþ0c2USE FCMSBAR2D000009GANTTþ0c20003E6SPARKCOLUMNþ0c2* Copyright (C) information here if relevantþ* Any other descriptive comments hereþ* and hereþ*þW$TITLE = "YOUR TITLE HERE"     ;* Title for widget title barþW$TYPE = "%TYPE%"               ;* Filled in by editorþW$WIDTH = 3                     ;* Full width (1=1/3, 2=2/3, 3=3/3)þ*þIF G$QUERYMODE THEN RETURNþ*þ*** Extract data from GLOBAL, WIDGET variables hereþ*þ*** Open files hereþ*þ*** Create one one-attribute, value-separated array here.þ*   Example:þ*     TERRSALES: Each value is a single territory's sales for the monthþ*     then you can load the widget's values like:þ*       W$FW.VALUES = TERRSALESþ*     rather than loading them a value at a time as shownþ*     in the "FOR N = 1 TO 12" loop below.þ*þW$FW.CAPTION = "YOUR CHART CAPTION HERE"þW$FW.SUBCAPTION = "YOUR CHART SUBCAPTION HERE"þ*þFOR N = 1 TO 12þ  W$FW.VALUES<1,N> = N ;* ValueþNEXT Nþ*þ*** Load any relevant data into GLOBAL, WIDGET variables hereþ*   as needed for subsequent use by other widgetsþ*þRETURN000015PYRAMIDþ0c2USE FUNNEL000010BULBþ0c2USE HLED00001FFCSTACKEDBAR2Dþ0c2USE FCMSBAR2D00005CDICT_MVDB.WIDGETSþ0c000001FSUBþ0c1Aþ1þSUBROUTINEþþþþþþLþ2500001CUSERSþ0c1Aþ2þUSERSþþþþþþLþ2000FF19WREST.BPþ0c000023CWSWAPþ0c2SUBROUTINE WSWAP(string,SUB1,SUB2)þ**********************************************************************þ*þ* Copyright (C) 2016 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2016þ* Description  : This subroutine swaps one string for anotherþ*              þ**********************************************************************þIDX.POS = 1þLOOPþ  POS = INDEX(string, SUB1, IDX.POS)þWHILE POS DOþ  string = string[1,POS-1]:SUB2:string[POS+LEN(SUB1),LEN(string)]þ  IDX.POS = IDX.POS + COUNT(SUB2,SUB1)þREPEATþRETURNþEND00020DWGETINFOþ0c2SUBROUTINE WGETINFO(InfoVal, InfoItem)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Peter Schellenbach, Zumasysþ* Date: March 2017þ* Description: return an element from WWW.INFOþ*þ**********************************************************************þINCLUDE WWW.INCLUDEþIF NUM(InfoItem) AND InfoItem > 0 AND InfoItem <= 50 THENþ IF INT(InfoItem) = InfoItem THENþ  InfoVal = WWW.INFO(InfoItem)þ ENDþENDþRETURNþEND0005BFWENCODEJSONþ0c2SUBROUTINE WENCODEJSON(ORIG.OPTION,IN.STR,OUT.STR)þ**********************************************************************þ*þ* Copyright (C) 2016 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: 8/13/2016þ* Description: this program will convert all bad characters to an escaped characterþ*þ**********************************************************************þ*OPEN 'RESULT.FILE' TO RFILE ELSE STOPþ* WE NEED TO ENCODEþ* " = \"   (34)þ* \ = \\    (92)þ* / = \/þ* CHAR(7) = \bþ* CHAR(13) = \rþ* char(10) = \nþ* char(12) = \fþ* char(9)  = \tþ*WRITE IN.STR ON RFILE, 'IN.STR'þOPTION=ORIG.OPTIONþOUT.STR=''þL=LEN(IN.STR)þCONVERT @AM TO CHAR(10) IN IN.STR; * LETS SWITCH 254 TO CR BE DEFAULTþFOR X=1 TO Lþ  C=IN.STR[X,1]þ  SEQ.C=SEQ(C)þ  ENCODE=0þ  IF SEQ.C < 32 THEN ENCODE=1; * BELOW SPACEþ*IF SEQ.C > 32 AND SEQ.C < 48 THEN ENCODE=1; * LETS ENCODE ALL OF THIS !@$%^&*()þ  IF SEQ.C=34 THEN ENCODE=1þ  IF SEQ.C=92 THEN ENCODE=1þ  IF SEQ.C=47 THEN ENCODE=1þ  IF SEQ.C > 122 THEN ENCODE = 1; * LETS ENCODE ALL THE HIGH ENTRIESþ*IF SEQ.C >= 91 AND SEQ.C <= 96 THEN ENCODE=1þ  IF ENCODE THENþ    BEGIN CASEþ      CASE SEQ.C=7; OUT.STR='\b'þ      CASE C='\'; OUT.STR:='\\'þ      CASE C='/'; OUT.STR:='\/'þ      CASE SEQ.C=10; OUT.STR:='\n'þ      CASE SEQ.C=13; OUT.STR:='\r'þ      CASE SEQ.C=12; OUT.STR:='\f'þ      CASE 1;  OUT.STR:='\u00':OCONV(C,'MX0C');*UD*þ    END CASEþ  END ELSEþ    OUT.STR=OUT.STR:Cþ  ENDþNEXT XþRETURNþEND000230WGETCOOKIEþ0c2SUBROUTINE WGETCOOKIE(VarValue, VarName)þ**********************************************************************þ*þ* Copyright (C) 2016 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2016þ* Description  : This subroutine gets the value of a cookie.þ*              þ**********************************************************************þINCLUDE WWW.INCLUDEþVarValue = ''þTEMPVARS = OCONV(CGI$CVARS,'MCU')þLOCATE OCONV(VarName,'MCU') IN TEMPVARS SETTING POS THENþ  VarValue = CGI$CVALS<POS>þENDþRETURNþEND005B9FWDEBUGþ0c2* WDEBUGþ*þ* Debug REST Servicesþ* Copyright (c) 2017 Zumasys Inc.þ* Rewritten by Peter Schellenbach, 10/18/2017þ*þ* Based on original version:þ*  Copyright (C) 2007 Sierra Bravo Corporation, All Rights Reservedþ*  Written by: Luke Bucklin, Sierra Bravoþ*  Date: Sometime, 2006-ishþ*þINCLUDE WWW.INCLUDEþINCLUDE FI.WDB.DEBUGþ*þCLR.SCR = @(-1)þCLR.EOS = @(-3)þMAX.LINES = SYSTEM(3) - 4þMAX.COLS = SYSTEM(2) - 1þIF MAX.LINES <= 0 OR CLR.SCR = '' OR CLR.EOS = '' THENþ  MAX.LINES = 20þ  CLR.SCR = ''þ  CLR.EOS = ''þ  PRMPT.LINE = CHAR(13):CHAR(10)þEND ELSEþ  PRMPT.LINE = @(0, MAX.LINES + 2):CLR.EOSþENDþPROMPT ''þ*þPRINT CLR.SCR:þPRINTþPRINT 'WDEBUG Web Request Degug Tool'þPRINTþPRINT 'The WDEBUG tool allows you to inspect, modify and re-run web requests.'þPRINT 'Whenever a request for a debuggable resource is processed by WDB.INIT,'þPRINT 'a debug record for the request is added to the WDB.DEBUG file. WDEBUG'þPRINT 'allows you to select a debug record, view the request details, edit the'þPRINT 'request variables, re-run the request and view the response.'þPRINTþPRINT 'To debug web requests for a resource, set attribute 7 of the WDB.RESOURCE'þPRINT 'record for the resource to 1, then issue the web request from the client'þPRINT 'browser or other agent. WDEBUG will show a list of recent web requests to'þPRINT 'select from.'þPRINTþPRINT 'Start WDEBUG with an active select list if you need to use special criteria'þPRINT 'to select the record(s) you need to debug.'þPRINTþPRINT 'Press <enter> to continue':þINPUT ANSþ*þOPEN 'WDB.DEBUG' TO F.WDB.DEBUG ELSEþ  PRINT 'The WDB.DEBUG data file is required to use WDEBUG. Default installations'þ  PRINT 'only create the dictionary for this file. Please create the data section'þ  PRINT 'to use WDEBUG: CREATE-FILE DATA WDB.DEBUG 101.'þ  STOPþENDþ*þSESSION.FLAG = 0þOPEN 'WEB.SESSION' TO F.WEB.SESSION THEN SESSION.FLAG = 1 ;* can restore session when running debug reqestþ*þEDITOR = ''þIDS = ''þNUM.IDS = 0þIF SYSTEM(11) THENþ  LOOPþ    READNEXT ID ELSE EXITþ    READV X FROM F.WDB.DEBUG, ID, 1 THENþ      IDS<-1> = IDþ      NUM.IDS += 1þ    END ELSEþ      PRINT ID:' not found in WDB.DEBUG!'þ    ENDþ  REPEATþENDþUSE.SUPPLIED.LIST = (NUM.IDS > 0)þ*þLOOPþ  IF NOT(USE.SUPPLIED.LIST) THENþ* Select available WDB.DEBUG itemsþ    CMND = 'SSELECT WDB.DEBUG WITH TYPE = "C" "R" BY-DSND DATE BY-DSND TIME'þ    EXECUTE CMND CAPTURING RESULTþ    IF SYSTEM(11) = 0 THENþ      PRINT "No items found."þ      STOPþ    ENDþ    IDS = ''þ    NUM.IDS = 0þ    LOOPþ      READNEXT ID ELSE EXITþ      IDS<-1> = IDþ      NUM.IDS += 1þ    REPEATþ  ENDþ*þ  TOP = 0þ  LOOPþ* Display page of itemsþ    PRINT CLR.SCR:þ    PRINT "Ln Date. Time.... Path................ Remote Address...... Request ID........."þ    FOR CNTR = 1 TO MAX.LINES UNTIL CNTR + TOP > NUM.IDSþ      DBG.ID = IDS<CNTR>þ      READ DBGREC FROM F.WDB.DEBUG, DBG.ID ELSE CONTINUEþ      PATH.INFO = DBGREC<WDBG_PATH>þ      IF PATH.INFO = '' THEN PATH.INFO = DBGREC<WDBG_HANDLER>:'/':DBGREC<WDBG_RESOURCE>þ      PRINT CNTR "R#2 ":þ      PRINT OCONV(DBGREC<WDBG_DATE>, 'D0-') "L#5 ":þ      PRINT OCONV(DBGREC<WDBG_TIME>, 'MTS') "L#8 ":þ      PRINT PATH.INFO "L#20 ":þ      PRINT DBGREC<WDBG_REMOTE_ADDR> "L#20 ":þ      PRINT DBGREC<WDBG_REQUEST_ID>[1,20]þ    NEXT CNTRþ    IF TOP + MAX.LINES > NUM.IDS THEN BOT = NUM.IDS ELSE BOT = TOP + MAX.LINESþ    PRINT "Showing items ":(TOP + 1):"-":BOT:" of ":NUM.IDSþ*þ    LOOPþ      PRINT PRMPT.LINE:"Command: (Q)uit (R)efresh (C)lear (N)ext (P)rev (##) Line to debug: ":þ      INPUT COMMANDþ      IF COMMAND MATCHES '1N0N' THENþ        IF COMMAND >= 1 AND COMMAND <= MAX.LINES AND COMMAND + TOP <= NUM.IDS THENþ          DBG.ID = IDS<COMMAND + TOP>þ          GOSUB debug.requestþ        ENDþ        COMMAND = ''þ      END ELSEþ        COMMAND = OCONV(COMMAND[1,1], 'MCU')þ        IF COMMAND = '' THEN COMMAND = 'N'þ        IF INDEX('ERCNPQ', COMMAND, 1) = 0 THEN COMMAND = ''þ      ENDþ    WHILE COMMAND = '' DO REPEATþ*þ    BEGIN CASEþ      CASE COMMAND = 'N'þ        IF TOP + MAX.LINES < NUM.IDS THEN TOP += MAX.LINESþ      CASE COMMAND = 'P'þ        IF TOP - MAX.LINES >= 0 THEN TOP -= MAX.LINESþ    END CASEþ  WHILE COMMAND = 'N' OR COMMAND = 'P' DO REPEATþ*þUNTIL COMMAND = 'Q' DOþ  BEGIN CASEþ    CASE COMMAND = 'R' ; NULLþ    CASE COMMAND = 'C'þ      EXECUTE 'SELECT WDB.DEBUG WITH TYPE = "C" "R"'þ      PRINT 'Are you sure you want to clear these items from the WDB.DEBUG file? ':þ      INPUT ANSþ      ANS = OCONV(ANS[1,1],'MCU')þ      IF ANS = 'Y' THENþ        IF SYSTEM(11) THENþ          LOOPþ            READNEXT ID ELSE EXITþ            DELETE F.WDB.DEBUG, IDþ          REPEATþ        ENDþ      END ELSEþ        CLEARSELECTþ      ENDþ  END CASEþREPEATþSTOPþ*þ*----------þdebug.request:þ*----------þ*þREAD DBGREC FROM F.WDB.DEBUG, DBG.ID ELSEþ  PRINT "The selected item '":DBG.ID:"' is not available!"þ  PRINTþ  PRINT 'Press <enter> to continue':þ  INPUT ANSþ  RETURNþENDþEDIT.ID = 'D':DBG.ID[2, LEN(DBG.ID)]þLOOPþ  PRINT PRMPT.LINE:"Debugging ":DBG.ID[1,28]:" - command: (Q)uit (V)iew (E)dit (R)un: ":þ  INPUT COMMANDþ  COMMAND = OCONV(COMMAND[1,1], 'MCU')þUNTIL COMMAND = 'Q' DOþ  BEGIN CASEþ    CASE COMMAND = 'V'þ      GOSUB view.requestþ    CASE COMMAND = 'E'þ      GOSUB edit.requestþ    CASE COMMAND = 'R'þ      GOSUB run.requestþ  END CASEþREPEATþRETURNþ*þ*----------þview.request:þ*----------þ*þIF DBGREC = '' THENþ  PRINT 'No debug info is available for this request!'þ  PRINTþ  PRINT 'Press <enter> to continue':þ  INPUT ANSþ  RETURNþENDþGOSUB to.editþNUM.LNS = DCOUNT(EDIT.REC, @AM)þI = 1þLOOP WHILE I <= NUM.LNS DOþ  X = EDIT.REC<I>þ  IF LEN(X) > MAX.COLS THENþ    *UD* X = FOLD(X, MAX.COLS)þ    FOLD.STRING = X; GOSUB fold.string; X = FOLD.STRING ; *UD*þ    EDIT.REC<I> = Xþ    N = COUNT(X, @AM)þ    NUM.LNS += Nþ    I += Nþ  ENDþ  I += 1þREPEATþIF NUM.LNS = 0 THEN NUM.LNS = 1þNUM.PGS = INT((NUM.LNS - 1) / MAX.LINES) + 1þCUR.PG = 1þLOOPþ  PG.TOP = (CUR.PG - 1) * MAX.LINESþ  IF PG.TOP + MAX.LINES > NUM.LNS THEN LPP = NUM.LNS - PG.TOP ELSE LPP = MAX.LINESþ  PRINT CLR.SCR:þ  PRINT 'Page ':CUR.PG:' of ':NUM.PGS:SPACE(10):DBG.IDþ  PRINTþ  FOR I = 1 TO LPPþ    PRINT EDIT.REC<I + PG.TOP>þ  NEXT Iþ  PRINT PRMPT.LINE:'Command: (Q)uit (N)ext (P)rev (##) Goto page ':þ  INPUT COMMANDþ  IF COMMAND MATCHES '1N0N' THENþ    IF COMMAND >= 1 AND COMMAND <= NUM.PGS THEN CUR.PG = COMMANDþ  END ELSEþ    COMMAND = OCONV(COMMAND[1,1], 'MCU')þ  ENDþUNTIL COMMAND = 'Q' DOþ  BEGIN CASEþ    CASE COMMAND = 'N' OR COMMAND = ''þ      IF CUR.PG < NUM.PGS THEN CUR.PG = CUR.PG + 1þ    CASE COMMAND = 'P'þ      IF CUR.PG > 1 THEN CUR.PG = CUR.PG - 1þ  END CASEþREPEATþRETURNþ*þ*----------þedit.request:þ*----------þ*þIF EDITOR = '' THEN GOSUB choose.editorþIF EDITOR <> '' THENþ  EDIT.ID = 'D':DBG.IDþ  GOSUB to.editþ  WRITE EDIT.REC ON F.WDB.DEBUG, EDIT.IDþ  CMND = EDITOR:' WDB.DEBUG ':EDIT.IDþ  EXECUTE CMNDþ  READ EDIT.REC FROM F.WDB.DEBUG, EDIT.ID ELSE NULLþ  DELETE F.WDB.DEBUG, EDIT.IDþ  GOSUB from.editþENDþRETURNþ*þ*----------þrun.request:þ*----------þ*þIF DBGREC = '' THENþ  PRINT 'No debug info is available for this request!'þ  PRINTþ  PRINT 'Press <enter> to continue':þ  INPUT ANSþ  RETURNþENDþ*þHANDLER.NAME = DBGREC<WDBG_HANDLER>þRESOURCE.NAME = DBGREC<WDBG_RESOURCE>þ* Reconstruct query stringþQSTR = ''þQSEP = ''þ* headers and server variablesþN = DCOUNT(DBGREC<WDBG_HEADER_VARS>, @VM)þFOR I = 1 TO Nþ  HDR.VAR = DBGREC<WDBG_HEADER_VARS, I>þ  URLENCODE.STRING = DBGREC<WDBG_HEADER_VALS, I>þ  GOSUB url.encodeþ  QSTR := QSEP:HDR.VAR:'=':NEW.STRINGþ  QSEP = '&'þNEXT Iþ* form variablesþN = DCOUNT(DBGREC<WDBG_CGI_VARS>, @VM)þFOR I = 1 TO Nþ  HDR.VAR = DBGREC<WDBG_CGI_VARS, I>þ  URLENCODE.STRING = DBGREC<WDBG_CGI_VALS, I>þ  GOSUB url.encodeþ  QSTR := QSEP:HDR.VAR:'=':NEW.STRINGþ  QSEP = '&'þNEXT Iþ* bodyþTHE.BODY = DBGREC<WDBG_BODY>þIF THE.BODY <> '' THENþ  URLENCODE.STRING = CHANGE(THE.BODY, @VM, CHAR(10))þ  GOSUB url.encodeþ  QSTR := QSEP:'__body__=':NEW.STRINGþENDþ* restore session stateþIF SESSION.FLAG THENþ  SESSION.ID = DBGREC<WDBG_SESSION_ID>þ  IF SESSION.ID <> '' THENþ    SESSION.REC = ''þ    SESSION.REC<1> = DBGREC<WDBG_SESSION_VARS>þ    SESSION.REC<2> = DBGREC<WDBG_SESSION_VALS>þ    SESSION.REC<3> = DBGREC<WDBG_SESSION_DATE>þ    SESSION.REC<4> = DBGREC<WDBG_SESSION_TIME>þ    WRITE SESSION.REC ON F.WEB.SESSION, SESSION.IDþ  ENDþENDþ* break the query string into 1000 byte chunksþN = INT((LEN(QSTR) - 1) / 1000) + 1þ* build the command lineþRUN.ID = DBGREC<WDBG_REQUEST_ID>þCMND = 'WDB.INIT ':HANDLER.NAME:'/':RESOURCE.NAME:' ':RUN.ID:'-1-':N:' %% _WDEBUG_MODE_'þ*þ* run the commandþPRINTþPRINT 'Executing the request: ':CMNDþPRINTþMAT WWW.INFO = ""þEXECSTART = SYSTEM(12)þ* send query string as stacked inputþFOR I = 1 TO Nþ  DATA QSTR[((I - 1) * 1000) + 1, 1000]þNEXT IþEXECUTE CMND CAPTURING RESPONSEþEXECDUR = SYSTEM(12) - EXECSTARTþPRINT 'Request complete. Press <enter> to parse results':þINPUT ANSþ*þ* update the request runtimeþDBGREC<WDBG_DATE> = DATE()þDBGREC<WDBG_TIME> = TIME()þDBGREC<WDBG_DURATION> = EXECDURþ* process the responseþLINT.BEFORE = ''þLINT.AFTER = ''þWARN = ''þERR = ''þ* Gather lint from before the start tag and after the complete tagþDBGREC<WDBG_WARNING> = '' ;* WarningsþDBGREC<WDBG_ERROR> = '' ;* ErrorsþDBGREC<WDBG_LINT> = '' ;* LintþIF RESPONSE<1> = "700 WDB-START" THENþ  RESPONSE = DELETE(RESPONSE, 1)þEND ELSEþ  TAG = @AM:"700 WDB-START":@AMþ  TAG.POS = INDEX(RESPONSE, TAG, 1)þ  IF TAG.POS = 0 THENþ    WARN = '700 WDB-START tag is missing from response'þ    LINT.BEFORE = RESPONSEþ    RESPONSE = ''þ  END ELSEþ    IF TAG.POS >= 1 THENþ      LINT.BEFORE = RESPONSE[1, TAG.POS - 1]þ      RESPONSE = RESPONSE[TAG.POS + LEN(TAG), LEN(RESPONSE)]þ    ENDþ  ENDþENDþN = DCOUNT(RESPONSE, @AM)þIF RESPONSE<N> = "800 WDB-COMPLETE" THENþ  RESPONSE = DELETE(RESPONSE, N)þEND ELSEþ  TAG = @AM:"800 WDB-COMPLETE":@AMþ  TAG.POS = INDEX(RESPONSE, TAG, 1)þ  IF TAG.POS = 0 THENþ    WARN = '800 WDB-COMPLETE tag missing from response!'þ  END ELSEþ    LINT.AFTER = RESPONSE[TAG.POS + LEN(TAG), LEN(RESPONSE)]þ    RESPONSE = RESPONSE[1, TAG.POS - 1]þ  ENDþENDþ* Clean up lintþIF TRIM(CHANGE(LINT.BEFORE, @AM, '')) = '' THEN LINT.BEFORE = ''þIF TRIM(CHANGE(LINT.AFTER, @AM, '')) = '' THEN LINT.AFTER = ''þIF LINT.BEFORE <> '' OR LINT.AFTER <> '' THENþ  LINT = LINT.BEFOREþ  IF LINT.BEFORE <> '' AND LINT.AFTER <> '' THEN LINT := @AM:'...':@AMþ  LINT := LINT.AFTERþ  DBGREC<WDBG_LINT> = LOWER(LINT)þENDþ* Parse the response headersþDBGREC<WDBG_RESPONSE_VARS> = ''þDBGREC<WDBG_RESPONSE_VALS> = ''þDBGREC<WDBG_RESPONSE_CONTENT> = ''þNUM.VARS = 0þSTATUS.CODE = ''þEOH = INDEX(RESPONSE, @AM:@AM, 1) ;* headers end at first blank line in responseþIF EOH = 0 THEN EOH = LEN(RESPONSE) + 1þN = DCOUNT(RESPONSE[1, EOH - 1], @AM)þFOR I = 1 TO Nþ  HDR.LINE = RESPONSE<I>þ  IF HDR.LINE[1,10] = '500 ERROR ' THENþ    ERR = HDR.LINE[11, LEN(HDR.LINE)]þ    IF STATUS.CODE = '' THEN STATUS.CODE = 500þ  END ELSEþ    HDR.VAR = FIELD(HDR.LINE, ':', 1)þ    HDR.VAL = TRIMF(HDR.LINE[COL2() + 1, LEN(HDR.LINE)])þ    M = LEN(HDR.VAR)þ    FOR J = 1 TO Mþ      IF NOT(HDR.VAR[J,1] MATCHES '1A') AND HDR.VAR[J,1] <> '-' THENþ        HDR.VAR = ''þ        EXITþ      ENDþ    NEXT Jþ    IF HDR.LINE[LEN(HDR.VAR) + 1, 1] <> ':' THEN HDR.VAR = ''þ    IF HDR.VAR = '' THENþ      NUM.VARS += 1þ      DBGREC<WDBG_RESPONSE_VARS, NUM.VARS> = '_BAD_'þ      DBGREC<WDBG_RESPONSE_VALS, NUM.VARS> = HDR.LINE ;* invalid header line!þ    END ELSEþ      IF HDR.VAR = 'X-MVDB-STATUS' THENþ        STATUS.CODE = HDR.VALþ      END ELSEþ        NUM.VARS += 1þ        DBGREC<WDBG_RESPONSE_VARS, NUM.VARS> = HDR.VARþ        DBGREC<WDBG_RESPONSE_VALS, NUM.VARS> = HDR.VALþ      ENDþ    ENDþ  ENDþNEXT IþIF STATUS.CODE = '' THEN STATUS.CODE = 200þDBGREC<WDBG_STATUS> = STATUS.CODEþ* save response contentþIF EOH + 2 <= LEN(RESPONSE) THENþ  DBGREC<WDBG_RESPONSE_CONTENT> = LOWER(RESPONSE[EOH + 2, LEN(RESPONSE)])þENDþDBGREC<WDBG_WARNING> = WARNþDBGREC<WDBG_ERROR> = ERRþRETURNþ*þ*----------þto.edit:þ*----------þ*þEDIT.REC = ''þEDIT.REC<-1> = '[INFO] (do not edit this section)'þEDIT.REC<-1> = 'Date            = ':OCONV(DBGREC<WDBG_DATE>,'D4')þEDIT.REC<-1> = 'Time            = ':OCONV(DBGREC<WDBG_TIME>,'MTS')þEDIT.REC<-1> = 'Duration        = ':DBGREC<WDBG_DURATION>þEDIT.REC<-1> = 'Port            = ':DBGREC<WDBG_PORT>þEDIT.REC<-1> = 'Handler         = ':DBGREC<WDBG_HANDLER>þEDIT.REC<-1> = 'Resource        = ':DBGREC<WDBG_RESOURCE>þEDIT.REC<-1> = 'Controller      = ':DBGREC<WDBG_CONTROLLER>þEDIT.REC<-1> = 'Program         = ':DBGREC<WDBG_PROGRAM>þEDIT.REC<-1> = 'RequestID       = ':DBGREC<WDBG_REQUEST_ID>þEDIT.REC<-1> = 'Method          = ':DBGREC<WDBG_METHOD>þEDIT.REC<-1> = 'Path            = ':DBGREC<WDBG_PATH>þEDIT.REC<-1> = 'RemoteAddr      = ':DBGREC<WDBG_REMOTE_ADDR>þEDIT.REC<-1> = 'Status          = ':DBGREC<WDBG_STATUS>þIF DBGREC<WDBG_WARNING> <> '' THENþ  EDIT.REC<-1> = 'WARNING: ':DBGREC<WDBG_WARNING>þENDþIF DBGREC<WDBG_ERROR> <> '' THENþ  EDIT.REC<-1> = 'ERROR: ':DBGREC<WDBG_ERROR>þENDþIF DBGREC<WDBG_LINT> <> '' THENþ  EDIT.REC<-1> = 'LINT:':@AM:RAISE(DBGREC<WDBG_LINT>)þENDþ* Request headers and server variablesþEDIT.REC<-1> = @AM:'[HEADERS]'þN = DCOUNT(DBGREC<WDBG_HEADER_VARS>, @VM)þFOR I = 1 TO Nþ  HDR.VAR = DBGREC<WDBG_HEADER_VARS, I>þ  HDR.VAL = DBGREC<WDBG_HEADER_VALS, I>þ  EDIT.REC<-1> = HDR.VAR:SPACE(16-LEN(HDR.VAR)):'= ':HDR.VALþNEXT Iþ* Query string variablesþN = DCOUNT(DBGREC<WDBG_CGI_VARS>, @VM)þIF N > 0 THENþ  EDIT.REC<-1> = @AM:'[VARS]'þ  FOR I = 1 TO Nþ    CGI.VAR = DBGREC<WDBG_CGI_VARS, I>þ    CGI.VAL = DBGREC<WDBG_CGI_VALS, I>þ    EDIT.REC<-1> = CGI.VAR:SPACE(16-LEN(CGI.VAR)):'= ':CGI.VALþ  NEXT IþENDþ* CookiesþLOCATE 'HTTP_COOKIE' IN DBGREC<WDBG_HEADER_VARS> SETTING POS THENþ  CSTRING = DBGREC<WDBG_HEADER_VALS, POS>þEND ELSE CSTRING = ''þCONVERT ';' TO @AM IN CSTRINGþN = DCOUNT(CSTRING, @AM)þIF N > 0 THENþ  EDIT.REC<-1> = @AM:'[COOKIES]'þ  FOR I = 1 TO Nþ    COOKIE.VAR = TRIM(FIELD(CSTRING<I>, '=', 1))þ    COOKIE.VAL = CSTRING<I>[COL2() + 1, 99999]þ    EDIT.REC<-1> = COOKIE.VAR:SPACE(16-LEN(COOKIE.VAR)):'= ':COOKIE.VALþ  NEXT IþENDþ* REST parametersþLOCATE 'PATH_INFO' IN DBGREC<WDBG_HEADER_VARS> SETTING POS THENþ  PATH = DBGREC<WDBG_HEADER_VALS, POS>þEND ELSE PATH = ''þIF PATH[1,1] = '/' THEN PATH = PATH[2,9999]þN = DCOUNT(PATH, '/')þIF N > 0 THENþ  EDIT.REC<-1> = @AM:'[PARAMS]'þ  FOR I = 3 TO Nþ    PARAM.VAR = 'Param[':(I-2):']'þ    EDIT.REC<-1> = PARAM.VAR:SPACE(16-LEN(PARAM.VAR)):'= ':FIELD(PATH, '/', I)þ  NEXT IþENDþ* Session variablesþIF SESSION.FLAG THENþ  SESSION.ID = DBGREC<WDBG_SESSION_ID>þ  IF SESSION.ID <> '' THENþ    N = DCOUNT(DBGREC<WDBG_SESSION_VARS>, @VM)þ    IF N > 0 THENþ      EDIT.REC<-1> = @AM:'[SESSION]'þ      EDIT.REC<-1> = '_SessionID      = ':SESSION.IDþ      IF DBGREC<WDBG_SESSION_DATE> <> '' THEN EDIT.REC<-1> = '_Date           = ':OCONV(DBGREC<20>, 'D4')þ      IF DBGREC<WDBG_SESSION_TIME> <> '' THEN EDIT.REC<-1> = '_Time           = ':OCONV(DBGREC<21>, 'MTS')þ      FOR I = 1 TO Nþ        SESSION.VAR = DBGREC<WDBG_SESSION_VARS, I>þ        EDIT.REC<-1> = SESSION.VAR:SPACE(16-LEN(SESSION.VAR)):'= ':DBGREC<WDBG_SESSION_VALS, I>þ      NEXT Iþ    ENDþ  ENDþENDþ* Request bodyþTHE.BODY = DBGREC<WDBG_BODY>þIF THE.BODY <> '' THENþ  EDIT.REC<-1> = @AM:'[BODY]':@AM:RAISE(THE.BODY)þENDþ* Response headersþN = DCOUNT(DBGREC<WDBG_RESPONSE_VARS>, @VM)þIF N > 0 THENþ  EDIT.REC<-1> = @AM:'[RESPONSE_HEADERS]'þ  FOR I = 1 TO Nþ    HDR.VAR = DBGREC<WDBG_RESPONSE_VARS, I>þ    HDR.VAL = DBGREC<WDBG_RESPONSE_VALS, I>þ    EDIT.REC<-1> = HDR.VAR:SPACE(16-LEN(HDR.VAR)):'= ':HDR.VALþ  NEXT IþENDþ* Response contentþTHE.CONTENT = DBGREC<WDBG_RESPONSE_CONTENT>þIF THE.CONTENT <> '' THENþ  EDIT.REC<-1> = @AM:'[RESPONSE_CONTENT]':@AM:RAISE(THE.CONTENT)þENDþ*þRETURNþ*þ*----------þfrom.edit:þ*----------þ*þSESSION.ID = ''þHANDLER.NAME = DBGREC<WDBG_HANDLER>þRESOURCE.NAME = DBGREC<WDBG_RESOURCE>þ* If COOKIES section exists, rebuild HTTP_COOKIE headerþCOOKIES = ''þSECT = 'COOKIES'þGOSUB find.sectionþIF SECT.START > 0 THENþ  FOR I = SECT.START + 1 TO SECT.ENDþ    COOKIE = EDIT.REC<I>þ    IF COOKIE <> '' THENþ      COOKIE.NAME = TRIM(FIELD(COOKIE, '=', 1))þ      COOKIE.VAL = TRIMF(COOKIE[COL2() + 1, LEN(COOKIE)])þ      COOKIES := COOKIE.NAME:'=':COOKIE.VAL:';'þ      IF OCONV(COOKIE.NAME, 'MCU') = 'SESSIONID' THEN SESSION.ID = COOKIE.VALþ    ENDþ  NEXT Iþ  IF COOKIES[LEN(COOKIES), 1] = ';' THEN COOKIES = COOKIES[1, LEN(COOKIES) - 1]þENDþ* If PARAMS section exists, rebuild PATH_INFO headerþPARAMS = ''þSECT = 'PARAMS'þGOSUB find.sectionþIF SECT.START > 0 THENþ  PNUM = 1þ  FOR I = SECT.START + 1 TO SECT.ENDþ    PARAM = EDIT.REC<I>þ    IF PARAM <> '' THENþ      PARAM.NAME = TRIM(OCONV(FIELD(PARAM, '=', 1), 'MCU'))þ      PARAM.VAL = TRIMF(PARAM[COL2() + 1, LEN(PARAM)])þ      IF PARAM.NAME <> 'PARAM[':PNUM:']' THEN EXITþ      PARAMS := '/':PARAM.VALþ      PNUM += 1þ    ENDþ  NEXT Iþ  IF PARAMS <> '' THEN PARAMS = '/':HANDLER.NAME:'/':RESOURCE.NAME:PARAMS ;* handler & resource come before paramsþENDþ* Get headers and server variablesþDBGREC<WDBG_HEADER_VARS> = ''þDBGREC<WDBG_HEADER_VALS> = ''þNUM.VARS = 0þSECT = 'HEADERS'þGOSUB find.sectionþIF SECT.START > 0 THENþ  FOR I = SECT.START + 1 TO SECT.ENDþ    VAR.LINE = EDIT.REC<I>þ    IF VAR.LINE <> '' THENþ      VAR.NAME = TRIM(FIELD(VAR.LINE, '=', 1))þ      VAR.VAL = TRIMF(VAR.LINE[COL2() + 1, LEN(VAR.LINE)])þ* check for special headersþ      BEGIN CASEþ        CASE OCONV(VAR.NAME, 'MCU') = 'HTTP_COOKIE'þ          IF COOKIES <> '' THENþ            VAR.VAL = COOKIESþ          ENDþ        CASE OCONV(VAR.NAME, 'MCU') = 'PATH_INFO'þ          IF PARAMS <> '' THENþ            VAR.VAL = PARAMSþ          ENDþ          IF VAR.VAL[1,1] <> '/' THEN VAR.VAL = '/' : VAR.VALþ          IF COUNT(VAR.VAL, '/') >= 2 THENþ            HANDLER.NAME = FIELD(VAR.VAL, '/', 2)þ            RESOURCE.NAME = FIELD(VAR.VAL, '/', 3)þ          ENDþ          DBGREC<WDBG_PATH> = VAR.VALþ        CASE OCONV(VAR.NAME, 'MCU') = 'REQUEST_METHOD'þ          DBGREC<WDBG_METHOD> = VAR.VAL      þ        CASE OCONV(VAR.NAME, 'MCU') = 'REMOTE_ADDR'þ          DBGREC<WDBG_REMOTE_ADDR> = VAR.VALþ      END CASEþ      NUM.VARS += 1þ      DBGREC<WDBG_HEADER_VARS, NUM.VARS> = VAR.NAMEþ      DBGREC<WDBG_HEADER_VALS, NUM.VARS> = VAR.VALþ    ENDþ  NEXT Iþ  DBGREC<WDBG_HANDLER> = HANDLER.NAMEþ  DBGREC<WDBG_RESOURCE> = RESOURCE.NAMEþENDþ* Get form variablesþDBGREC<WDBG_CGI_VARS> = ''þDBGREC<WDBG_CGI_VALS> = ''þNUM.VARS = 0þSECT = 'VARS'þGOSUB find.sectionþIF SECT.START > 0 THENþ  FOR I = SECT.START + 1 TO SECT.ENDþ    VAR.LINE = EDIT.REC<I>þ    IF VAR.LINE <> '' THENþ      VAR.NAME = TRIM(FIELD(VAR.LINE, '=', 1))þ      VAR.VAL = TRIMF(VAR.LINE[COL2() + 1, LEN(VAR.LINE)])þ      NUM.VARS += 1þ      DBGREC<WDBG_CGI_VARS, NUM.VARS> = VAR.NAMEþ      DBGREC<WDBG_CGI_VALS, NUM.VARS> = VAR.VALþ    ENDþ  NEXT IþENDþ* Get bodyþDBGREC<WDBG_BODY> = ''þSECT = 'BODY'þGOSUB find.sectionþIF SECT.START > 0 THENþ  I = INDEX(EDIT.REC, @AM, SECT.START)þ  IF I > 0 THENþ    I += 1þ    J = INDEX(EDIT.REC, @AM, SECT.END)þ    IF J = 0 THEN J = LEN(EDIT.REC) + 1 ELSE J -= 1þ    IF EDIT.REC[J - 1, 1] = @AM AND J > 1 THEN J -= 1þ    THE.BODY = EDIT.REC[I, J - I + 1]þ    DBGREC<WDBG_BODY> = LOWER(THE.BODY)þ  ENDþENDþ* Get session stateþIF SESSION.FLAG AND SESSION.ID <> '' THENþ  DBGREC<WDBG_SESSION_ID> = ''þ  DBGREC<WDBG_SESSION_VARS> = ''þ  DBGREC<WDBG_SESSION_VALS> = ''þ  DBGREC<WDBG_SESSION_DATE> = ''þ  DBGREC<WDBG_SESSION_TIME> = ''þ  NUM.VARS = 0þ  SECT = 'SESSION'þ  GOSUB find.sectionþ  IF SECT.START > 0 THENþ    FOR I = SECT.START + 1 TO SECT.ENDþ      SESSION.LINE = EDIT.REC<I>þ      SESSION.VAR = TRIM(FIELD(SESSION.LINE, '=', 1))þ      SESSION.VAL = TRIMF(SESSION.LINE[COL2() + 1, LEN(SESSION.LINE)])þ      BEGIN CASEþ        CASE SESSION.VAR = '_SessionID'þ          DBGREC<WDBG_SESSION_ID> = SESSION.VALþ        CASE SESSION.VAR = '_Date'þ          DBGREC<WDBG_SESSION_DATE> = ICONV(SESSION.VAL, 'D')þ        CASE SESSION.VAR = '_Time'þ          DBGREC<WDBG_SESSION_TIME> = ICONV(SESSION.VAL, 'MTS')þ        CASE 1þ          NUM.VARS += 1þ          DBGREC<WDBG_SESSION_VARS, NUM.VARS> = SESSION.VARþ          DBGREC<WDBG_SESSION_VALS, NUM.VARS> = SESSION.VALþ      END CASEþ    NEXT Iþ  ENDþENDþ* Get response headersþDBGREC<WDBG_RESPONSE_VARS> = ''þDBGREC<WDBG_RESPONSE_VALS> = ''þNUM.VARS = 0þSECT = 'RESPONSE_HEADERS'þGOSUB find.sectionþIF SECT.START > 0 THENþ  FOR I = SECT.START + 1 TO SECT.ENDþ    VAR.LINE = EDIT.REC<I>þ    IF VAR.LINE <> '' THENþ      VAR.NAME = TRIM(FIELD(VAR.LINE, '=', 1))þ      VAR.VAL = TRIMF(VAR.LINE[COL2() + 1, LEN(VAR.LINE)])þ      NUM.VARS += 1þ      DBGREC<WDBG_RESPONSE_VARS, NUM.VARS> = VAR.NAMEþ      DBGREC<WDBG_RESPONSE_VALS, NUM.VARS> = VAR.VALþ    ENDþ  NEXT IþENDþ* Get response contentþDBGREC<WDBG_RESPONSE_CONTENT> = ''þSECT = 'RESPONSE_CONTENT'þGOSUB find.sectionþIF SECT.START > 0 THENþ  I = INDEX(EDIT.REC, @AM, SECT.START)þ  IF I > 0 THENþ    I += 1þ    J = INDEX(EDIT.REC, @AM, SECT.END)þ    IF J = 0 THEN J = LEN(EDIT.REC) + 1 ELSE J -= 1þ    IF EDIT.REC[J - 1, 1] = @AM AND J > 1 THEN J -= 1þ    THE.CONTENT = EDIT.REC[I, J - I + 1]þ    DBGREC<WDBG_RESPONSE_CONTENT> = LOWER(THE.CONTENT)þ  ENDþENDþRETURNþ*þ*----------þchoose.editor:þ*----------þ*þPRINTþLOOPþ  PRINT 'Select the editor you want to use: 1 = AE, 2 = ED, 3 = other: ':þ  INPUT ANSþUNTIL ANS EQ '' DOþ  BEGIN CASEþ    CASE ANS = 1þ      EDITOR = 'AE'þ      EXITþ    CASE ANS = 2þ      EDITOR = 'ED'þ      EXITþ    CASE ANS = 3þ      PRINT 'Enter the verb to invoke your editor: ':þ      INPUT TMPþ      PRINT TMP:' OK?':þ      INPUT ANSþ      ANS = OCONV(ANS[1,1], 'MCU')þ      IF ANS = 'Y' THENþ        EDITOR = TMPþ        EXITþ      ENDþ  END CASEþREPEATþRETURNþ*þ*----------þfind.section:þ*----------þ*þSECT.START = -1þSECT.END = -1þTAG = @AM:'[':SECT:']':@AMþTAG.POS = INDEX(EDIT.REC, TAG, 1)þIF TAG.POS = 0 THEN RETURN ;* Section not foundþSECT.START = DCOUNT(EDIT.REC[1, TAG.POS], @AM)þSECT.END = DCOUNT(EDIT.REC, @AM)þFOR I = SECT.START + 1 TO SECT.ENDþ  SECT.LN = EDIT.REC<I>þ  IF SECT.LN MATCHES '"["1A0A"]"' OR SECT.LN MATCHES '"["1A0A"_"1A0A"]"' THENþ* beginning of next section is end of current sectionþ    SECT.END = I - 1þ    EXITþ  ENDþNEXT IþRETURNþ*þ*----------þurl.encode:þ*----------þ*þNEW.STRING = ""þUE.LEN = LEN(URLENCODE.STRING)þFOR UEX = 1 TO UE.LENþ  UE.CHR = URLENCODE.STRING[UEX,1]þ  UE.CVAL = SEQ(UE.CHR)þ  BEGIN CASEþ    CASE UE.CVAL < 32; ENC.FLAG = 1   ;* control characterþ    CASE UE.CVAL = 37 OR UE.CVAL = 38 OR UE.CVAL = 43 OR UE.CVAL = 61; ENC.FLAG = 1 ;* % & + =þ    CASE UE.CVAL = 127; ENC.FLAG = 1  ;* DEL control characterþ    CASE UE.CVAL >= 252; ENC.FLAG = 1 ;* delimiter characterþ    CASE 1 ; ENC.FLAG = 0þ  END CASEþ  IF ENC.FLAG THENþ    UE.CHR = "%":(OCONV(UE.CVAL,'MCDX') 'R%2')þ  ENDþ  NEW.STRING := UE.CHRþNEXT UEXþRETURNþ*þ*----------þfold.string:þ*----------þ*þNEW.STRING = ''þNUM.FOLD = DCOUNT(FOLD.STRING, @AM)þMIN.FOLD = MAX.COLS - INT(MAX.COLS / 3)þFOR FOLD.IDX = 1 TO NUM.FOLDþFOLD.LINE = FOLD.STRING<FOLD.IDX>þLOOP WHILE LEN(FOLD.LINE) > MAX.COLS DOþFOLD.BRK = 0þFOR FOLD.BRK.IDX = MAX.COLS TO MIN.FOLD STEP -1þIF FOLD.LINE[FOLD.BRK.IDX, 1] = ' ' THENþ    FOLD.BRK = FOLD.BRK.IDXþ    EXITþENDþNEXT FOLD.BRK.IDXþIF FOLD.BRK = 0 THEN FOLD.BRK = MAX.COLS + 1þNEW.STRING<-1> = FOLD.LINE[1, FOLD.BRK - 1]þIF FOLD.LINE[FOLD.BRK, 1] = ' ' THEN FOLD.BRK = FOLD.BRK + 1þFOLD.LINE = FOLD.LINE[FOLD.BRK, LEN(FOLD.LINE)]þREPEATþNEW.STRING<-1> = FOLD.LINEþNEXT FOLD.IDXþFOLD.STRING = NEW.STRINGþRETURNþ*þEND000484FI.WDB.DEBUGþ0c2*þ* WDB.DEBUG record layoutþ*þEQU WDBG_DATE                TO 1þEQU WDBG_TIME                TO 2þEQU WDBG_DURATION            TO 3þEQU WDBG_PORT                TO 4þEQU WDBG_HANDLER             TO 5þEQU WDBG_RESOURCE            TO 6þEQU WDBG_CONTROLLER          TO 7þEQU WDBG_PROGRAM             TO 8þEQU WDBG_REQUEST_ID          TO 9þEQU WDBG_REQUEST             TO 10þEQU WDBG_METHOD              TO 11þEQU WDBG_PATH                TO 12þEQU WDBG_REMOTE_ADDR         TO 13þEQU WDBG_STATUS              TO 14þEQU WDBG_HEADER_VARS         TO 15þEQU WDBG_HEADER_VALS         TO 16þEQU WDBG_CGI_VARS            TO 17þEQU WDBG_CGI_VALS            TO 18þEQU WDBG_BODY                TO 19þEQU WDBG_RESPONSE_VARS       TO 20þEQU WDBG_RESPONSE_VALS       TO 21þEQU WDBG_RESPONSE_CONTENT    TO 22þEQU WDBG_RESERVED1           TO 23þEQU WDBG_RESERVED2           TO 24þEQU WDBG_SESSION_ID          TO 25þEQU WDBG_SESSION_VARS        TO 26þEQU WDBG_SESSION_VALS        TO 27þEQU WDBG_SESSION_DATE        TO 28þEQU WDBG_SESSION_TIME        TO 29þEQU WDBG_WARNING             TO 30þEQU WDBG_ERROR               TO 31þEQU WDBG_LINT                TO 320005EBWWW.INCLUDEþ0c2*þ* Standard web includeþ*þþCOMMON /WWW/ WWW.INFO(50), F.WEB.SESSIONþþEQU SESSION$ID               TO WWW.INFO(1)þEQU SESSION$CONTENT.TYPE     TO WWW.INFO(2)þEQU SESSION$CONTENT.SENT     TO WWW.INFO(3)þEQU SESSION$OUTBUF           TO WWW.INFO(4)þEQU SESSION$HEADERS          TO WWW.INFO(5)þEQU SESSION$COOKIES          TO WWW.INFO(6)þEQU SESSION$OUTBUF.SIZE      TO WWW.INFO(7)þEQU SESSION$OUTBUF.FLAG      TO WWW.INFO(8)þEQU SESSION$TIME.OUT         TO WWW.INFO(9)þEQU SESSION$GLOBAL.DEBUG     TO WWW.INFO(10)þEQU SESSION$STATUS.CODE      TO WWW.INFO(11)þEQU SESSION$WDEBUG.MODE      TO WWW.INFO(12)þEQU CONFIG$WDB.RESOURCE      TO WWW.INFO(15)þEQU CGI$VARS                 TO WWW.INFO(25)þEQU CGI$VALS                 TO WWW.INFO(26)þEQU CGI$CVARS                TO WWW.INFO(27)þEQU CGI$CVALS                TO WWW.INFO(28)þEQU CGI$SERVER.NAME          TO WWW.INFO(29)þEQU CGI$PATH                 TO WWW.INFO(30)þEQU CGI$SERVER.PORT          TO WWW.INFO(31)þEQU CGI$BODY                 TO WWW.INFO(32)þEQU CGI$HEADERVALS           TO WWW.INFO(33)þEQU CGI$HEADERVARS           TO WWW.INFO(34)þEQU CGI$RESTPARAMS           TO WWW.INFO(35)þEQU CGI$CONFIG               TO WWW.INFO(36)þEQU F.WEB.FORMS              TO WWW.INFO(40)þEQU CGI$APPSVR.ID            TO WWW.INFO(45)þEQU CGI$RESERVED1            TO WWW.INFO(46)þEQU CGI$RESERVED2            TO WWW.INFO(47)þEQU CGI$RESERVED3            TO WWW.INFO(48)þEQU CGI$UNIQUE.ID            TO WWW.INFO(49)þEQU CGI$RESOURCE.NAME        TO WWW.INFO(50)00020BWSETINFOþ0c2SUBROUTINE WSETINFO(InfoVal, InfoItem)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Peter Schellenbach, Zumasysþ* Date: November 2017þ* Description: set an element in WWW.INFOþ*þ**********************************************************************þINCLUDE WWW.INCLUDEþIF NUM(InfoItem) AND InfoItem > 0 AND InfoItem <= 50 THENþ IF INT(InfoItem) = InfoItem THENþ  WWW.INFO(InfoItem) = InfoValþ ENDþENDþRETURNþEND000418WSETCOOKIEþ0c2SUBROUTINE WSETCOOKIE(COOKIENAME,COOKIEVAR,D,T,PATH,DOMAIN,SECURE)þ**********************************************************************þ*þ* Copyright (C) 2016 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2016þ* Description  : This subroutine sets the value of a cookie.þ*              þ**********************************************************************þINCLUDE WWW.INCLUDEþCOOKIE = COOKIENAME:'=':COOKIEVARþ* FIGURE OUT EXPIRATIONþIF D # '' THENþ  EXPIRES='expires='þ  DAY=OCONV(D,'DWA')[1,3]þ  DAY=OCONV(DAY,'MCT')þ  EXPIRES:=DAYþ  EXPIRES:=', 'þ  EXPIRES:=OCONV(D,'DD')þ  EXPIRES:=' 'þ  MONTH=OCONV(D,'DMA')[1,3]þ  MONTH=OCONV(MONTH,'MCT')þ  EXPIRES:=MONTHþ  EXPIRES:=' 'þ  EXPIRES:=OCONV(D,'DY')þ  EXPIRES:=' 'þ  EXPIRES:=OCONV(T,'MTS')þ  COOKIE:=';':EXPIRESþENDþIF PATH # '' THENþ  COOKIE:=';path="':PATH:'"'þENDþIF DOMAIN # '' THENþ  COOKIE:=';domain=':DOMAINþENDþIF SECURE # '' THENþ  COOKIE:=';secure'þENDþIF TRIM(COOKIE) # '' THENþ  SESSION$COOKIES<-1>=COOKIEþENDþRETURNþEND000228WGETHEADERþ0c2SUBROUTINE WGETHEADER(VarValue, VarName)þ**********************************************************************þ*þ* Copyright (C) 2016 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2016þ* Description: extract value of an HTTP request headerþ*þ**********************************************************************þINCLUDE WWW.INCLUDEþVarValue = ''þTEMPVARS = OCONV(CGI$HEADERVARS, 'MCU')þLOCATE OCONV(VarName, 'MCU') IN TEMPVARS SETTING POS THENþ  VarValue = CGI$HEADERVALS<POS>þENDþRETURNþEND000199WGETBODYþ0c2SUBROUTINE WGETBODY(RequestBody)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Peter Schellenbach, Zumasysþ* Date: March 2017þ* Description: return the BODY of the requestþ*þ**********************************************************************þINCLUDE WWW.INCLUDEþRequestBody = CGI$BODYþRETURNþEND0001EEWFLUSHþ0c2SUBROUTINE WFLUSHþ**********************************************************************þ*þ* Copyright (C) 2016 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2016þ* Description  : This program calls WSETBUFFER(FALSE) then þ*                calls WSEND("")þ*              þ**********************************************************************þINCLUDE WWW.INCLUDEþEQU FALSE TO 0, TRUE TO 1þ*þCALL WSETBUFFER(FALSE)þCALL WSEND("")þRETURNþEND0031DDWRESTTESTþ0c2      PROGRAM WRESTTESTþ      **********************************************************************þ      *þ      * Copyright (C) 2016 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: 01/31/2017þ      * Description: this is a simple REST testþ      *þ      **********************************************************************þþ      RESTVERSION = "2.0b"þ      JSTATUS = 'ok'þ      JSTATUSMSG = ''þ      RESULT=''þ      TERROR=''þ      TERROR2=''þ      JSHOW.RESULT=''þ      MVTYPE=''þ      PLATFORM=''þþ      USE.MVDB.CONTROL=1þ      EXECUTE 'WHO' CAPTURING WHO.RESULTþ      WHO.RESULT=WHO.RESULT<1,1,1>þ      OPEN "MVDB.CONTROL" TO F.CONFIG ELSEþ         TERROR='No MVDB.CONTOL in account ':WHO.RESULTþ         USE.MVDB.CONTROL=0þ         GOTO start.jsonþ      ENDþþ      IF USE.MVDB.CONTROL THENþþ         READ MV.PLATFORM.JSON FROM F.CONFIG, "MV.PLATFORM.JSON" ELSEþ            TERROR='No MV.PLATFORM.JSON in MVDB.CONTROL in ':WHO.RESULTþ            USE.MVDB.CONTROL=0þ            GOTO start.jsonþ         ENDþþ         CALL WPARSEJSON(MV.PLATFORM.JSON,"mvtype",MVTYPE,RERR)þ         CALL WPARSEJSON(MV.PLATFORM.JSON,"platform",PLATFORM,RERR)þþ         IF MVTYPE='' THENþ            TERROR='MV.PLATFORM.JSON not located'þ            USE.MVDB.CONTROL=0þ            GOTO start.jsonþ         ENDþ      ENDþþ      JSHOW.RESULT='XXX'þ      IF OCONV(MVTYPE,'MCU')='JBASE' AND USE.MVDB.CONTROL THEN þ         EXECUTE 'jshow -c MVDBTOOLKIT.WPLATFORM' CAPTURING JSHOW.RESULTþ         IF JSHOW.RESULT='' THEN þ             TERROR='New jBASE libraries not found.'þ             EXECUTE "jshow -v MVDBTOOLKIT.WPLATFORM" CAPTURING TERROR2þ             USE.MVDB.CONTROL=0þ         ENDþ      ENDþþstart.json: *þ      *þ      * Supplied function for setting content type.þ      *þ      CALL WSETCONTENTTYPE("application/json")þ      *þ      *þ      * Set a custom header with supplied function.þ      *þ      CALL WSETHEADER("wresttest",RESTVERSION)þ      *þ      * Start building our json object, ugly way until objects.þ      *þ      CALL WOBJ(ROBJ,"FROMSTRING","","{}","",RERR)þþ      CALL WOBJ(ROBJ,"SET","WRestVersion",RESTVERSION,"",RERR)þþ      IF USE.MVDB.CONTROL THEN ANS='True' ELSE ANS='False'þ      CALL WOBJ(ROBJ,"SET.BOOLEAN","mvdbtoolkit",ANS,"",RERR)þþ      IF TERROR # '' THENþ         CALL WOBJ(ROBJ,"SET","error",TERROR,"",RERR)þ         ARRAY.NAME='errordetail'þ         ARRAY.VALUE=TERROR2þ         GOSUB process.arrayþ      ENDþþ      *þ      * Need to know all the variablesþ      *þ      *þ      * Set our rest version, this will be replaced in the future with objectsþ      *þþ      CALL WGETPARAM(REQKEY,1)þþ      IF REQKEY # "" THENþ         * Function to get our options already broken out.þ         *þ         CALL WGETCONFIG(APIKEY,'APIKEY')þþ         IF OCONV(APIKEY,'MX') = OCONV(REQKEY,'MX') THENþ            GOSUB processrestþ         ENDþ      ENDþ      *þ      *þ      * WHOþ      *þþ      EXECUTE 'WHO' CAPTURING WRESULTþ      CONVERT @AM TO '' IN WRESULTþ      CONVERT @VM TO ' ' IN WRESULTþ      CONVERT @SVM TO ' ' IN WRESULTþ      CALL WOBJ(ROBJ,"SET","Who",WRESULT,"",RERR)þ      *þ      * HOSTNAMEþ      *þ      *EXECUTE 'hostname' CAPTURING HOSTNAMEþ      *CALL WBUILDJSON(JSON,'hostname',HOSTNAME<1,1,1>,RERR)þ      *þ      IF USE.MVDB.CONTROL THENþ         CALL WOBJ(EOBJ,"FROMSTRING","","{}","",RERR)þ         CALL WOBJ(EOBJ,"SET","command","hostname","",RERR)þ         CALL MVDBTOOLKIT.WEXECUTE(EOBJ)þ         CALL WOBJ(EOBJ,"GET","result.result",HOSTNAME,"",RERR)þ         HOSTNAME=HOSTNAME<1,1,1> þ         CONVERT CHAR(10):CHAR(13) TO '' IN HOSTNAMEþ         CALL WOBJ(ROBJ,"SET","hostname",HOSTNAME,"",RERR)þþ      ENDþþ      * IFCONFIGþ      IF USE.MVDB.CONTROL THENþ         CALL WOBJ(ROBJ,"SET","mvtype",MVTYPE,"",RERR)þ         CALL WOBJ(ROBJ,"SET","platform",PLATFORM,"",RERR)þ      ENDþþ      *þ      *EXECUTE 'ifconfig' CAPTURING RESULTþ      *GOSUB exportresultþ      *JSON:=', "ifconfig": ':Rþ      *þ      * PWDþ      *þ      IF USE.MVDB.CONTROL THENþ         CALL WOBJ(EOBJ,"FROMSTRING","","{}","",RERR)þ         IF PLATFORM="WINDOWS" THENþ             PWD.CMND="cd"þ         END ELSEþ             PWD.CMND="pwd"þ         ENDþ         CALL WOBJ(EOBJ,"SET","command",PWD.CMND,"",RERR)þ            CALL MVDBTOOLKIT.WEXECUTE(EOBJ)þ            CALL WOBJ(EOBJ,"GET","result.result",PWD,"",RERR)þ            CONVERT CHAR(13):CHAR(10) TO '' IN PWDþ            PWD=PWD<1,1,1>þ         CALL WOBJ(ROBJ,"SET","pwd",PWD,"",RERR)þ      ENDþ      *þ      * PSþ      *þ      *þ      * JSHOWþ      *þþ      *EXECUTE 'jshow -v WRESTTEST' CAPTURING RESULTþ      *GOSUB exportresultþ      *JSON := ', "wresttest": ':Rþ      *þ      * Build out varsþ      *þ      CALL WOBJ(ROBJ,"SET.OBJECT","vars","{}","",RERR)þþ      CALL WGETINFO(VARS,25)þþ      FOR X = 1 TO DCOUNT(VARS, @AM)þ         * Lets test our WGETVAR routineþ         VARNAME = VARS<X>þ         *þ         * WGETVAR is our customer supplied function to get variablesþ         * usually sent by browser as form variables, either in the bodyþ         * or in the URL query string.þ         *þ         CALL WGETVAR(THISVAR,VARNAME)þ         CALL WOBJ(ROBJ,"SET","vars.":VARNAME,THISVAR,"",RERR)þ      NEXT Xþ      *þ      * Here is our messy add, todo is to adjust WBUILDJSON to be ableþ      * to do this.þ      *þ      *þ      * Get all our cookiesþ      *þþ      CALL WOBJ(ROBJ,"SET.OBJECT","cookies","{}","",RERR)þþþ      CALL WGETINFO(CVARS,27)þþ      NUM_COOKIES = DCOUNT(CVARS,@AM)þ      FOR A = 1 TO NUM_COOKIESþ         COOKIENAME = CVARS<A>þ         *þ         * This is our customer supplied function to get cookies.þ         *þ         CALL WGETCOOKIE(COOKIEVALUE,COOKIENAME)þ         CALL WOBJ(ROBJ,"SET","cookies.":COOKIENAME,COOKIEVALUE,"",RERR)þ      NEXT Aþþ      *þ      * Build out headersþ      *þþ      CALL WGETINFO(HEADERVARS,34)þ      CALL WOBJ(ROBJ,"SET.OBJECT","headers","{}","",RERR)þ      numheaders = DCOUNT(HEADERVARS, @AM)þ      FOR X = 1 TO numheadersþ         HEADERNAME = HEADERVARS<X>þ         *þ         * This is our customer supplied function to get headers.þ         *þ         CALL WGETHEADER(THISVAR,HEADERNAME)þ         CALL WOBJ(ROBJ,"SET","headers.":HEADERNAME,THISVAR,"",RERR)þ      NEXT Xþþ      *þ      * This is where the raw body is put, this is used primarily forþ      * AJAX functions where the body should be a json string.þ      *þ      CALL WGETBODY(BODY)þ      CALL WOBJ(ROBJ,"SET","body",BODY,"",RERR)þ      *þ      * Set our test cookieþ      *þ      COOKIE.NAME = 'wresttestcookie'þ      COOKIE.VALUE = TIMEDATE()þ      CONVERT ' :' TO '' IN COOKIE.VALUEþ      *þ      * Our function for setting a cookie.  Hides all the formatting requirementsþ      * and correctly sets expiration date/time using PICK dates and times.þ      *þ      * CALL WSETCOOKIE(NAME,VALUE,EXPDATE,EXPTIME,DOMAIN,PATH,SECURE)þ      *þ      CALL WSETCOOKIE(COOKIE.NAME,COOKIE.VALUE,DATE()+1,TIME()+300,'','','')þþ      IF MVTYPE = "D3" THENþ         EXECUTE "RUN DM,BP, MAXUSERS" CAPTURING ARRAY.VALUEþ         ARRAY.NAME="maxusers"þ         GOSUB process.arrayþ         EXECUTE "FREE" CAPTURING ARRAY.VALUEþ         ARRAY.NAME="free"þ         GOSUB process.arrayþ         ISFLASH=SYSTEM(36)þ         CALL WOBJ(ROBJ,"SET","d3flash",ISFLASH,"",RERR)þ      ENDþ      IF MVTYPE = "JBASE" THENþ         EXECUTE "jshow -v WRESTTEST" CAPTURING ARRAY.VALUEþ         CONVERT CHAR(13):CHAR(10) TO '' IN ARRAY.VALUEþ         ARRAY.NAME="jshow"þ         GOSUB process.arrayþ      ENDþþend.of.program: *þ      *þ      * Build our default status/resultþ      *þ      CALL WOBJ(ROBJ,"SET","status",JSTATUS,"",RERR)þ      CALL WOBJ(ROBJ,"SET","statusmsg",JSTATUSMSG,"",RERR)þþ      *þ      * Close out our objectþ      *þ      CALL WOBJ(ROBJ,"TOSTRING","",JSON,"PRETTIFY",RERR)þ      *þ      * Send string json to the client. This can be done anytime and multiple times.þ      *þ      CALL WSEND(JSON)þ      *þ      STOPþ      *þþprocessrest: *þ      *þ      * Build new object to store rest responsesþ      *þ      CALL WOBJ(POBJ,"FROMSTRING","","{}","",RERR)þ      *þ      * Get our commandþ      *þ      CALL WGETPARAM(COMMAND,2)þ      COMMAND = OCONV(COMMAND,'MCU')þ      *þ      * Respond in REST response our requested command, nice for debuggingþ      *þ      CALL WOBJ(POBJ,"SET","requestedcommand",COMMAND,"",RERR)þ      *þ      * Now process our commandsþ      *þ      BEGIN CASEþ         CASE COMMAND = 'DEBUGON'þ            CALL WGETPARAM(DEBUGLINE,3)þ            IF DEBUGLINE = '' OR NOT(NUM(DEBUGLINE)) THENþ               JSTATUS = 'error'þ               JSTATUSMSG = 'You must put in a debug option as next paramater'þ            END ELSEþ               JSTATUSMSG = 'Setting debug to on for ':DEBUGLINEþ               CALL WSETCOOKIE('wrestapidebug',DEBUGLINE,DATE()+1,TIME()+300,'','',' ')þ            ENDþ         CASE COMMAND = 'DEBUGOFF'þ            CALL WSETCOOKIE('wrestapidebug','',DATE()-1,TIME(),'','','')þ         CASE COMMAND = 'ENV' AND USE.MVDB.CONTROLþ            * Get environment variablesþ            CALL WOBJ(EOBJ,"FROMSTRING","","{}","",RERR)þ            IF PLATFORM="WINDOWS" THENþ               CALL WOBJ(EOBJ,"SET","command","SET","",RERR)þ            END ELSEþ               CALL WOBJ(EOBJ,"SET","command","env","",RERR)þ            ENDþ            IF JSHOW.RESULT='' THENþ               ENVIRONMENT=''þ            END ELSEþ               CALL MVDBTOOLKIT.WEXECUTE(EOBJ)þ               CALL WOBJ(EOBJ,"GET","result.result",ENVIRONMENT,"",RERR)þ            ENDþ            *þ            * New object to store responseþ            *þ            CALL WOBJ(POBJ,"SET.OBJECT","environment","{}","",RERR)þþ            NUMENV = DCOUNT(ENVIRONMENT,@AM)þ            FOR A = 1 TO NUMENVþ               ENV = ENVIRONMENT<A>þ               ENV.NAME = FIELD(ENV,'=',1)þ               ENV.VALUE = FIELD(ENV,'=',2,9999)þ               IF TRIM(ENV.NAME) # '' THENþ                  CALL WOBJ(POBJ,"SET","environment.":ENV.NAME,ENV.VALUE,"",RERR)þ               ENDþ            NEXT Aþ         CASE COMMAND = 'USERS'þ            IF MVTYPE="D3" OR MVTYPE="D3" THENþ               EXECUTE 'LISTU' CAPTURING ARRAY.VALUEþ               ARRAY.NAME="users"þ               GOSUB process.pobj.arrayþ            ENDþ         CASE COMMAND='JSHOW'þ            CALL WGETPARAM(JSHOWITEM,3)þ            EXECUTE 'jshow -v ':JSHOWITEM CAPTURING ARRAY.VALUEþ            ARRAY.NAME='jshow'þ            GOSUB process.pobj.arrayþ         CASE 1          ;* DO HELPþ            CALL WOBJ(POBJ,"SET.OBJECT",'commands','{}','',RERR)þ            CALL WOBJ(POBJ,'SET','commands.help','List all commands','',RERR)þ            CALL WOBJ(POBJ,'SET','commands.debugon','Turn debug on, next param is line no','',RERR)þ            CALL WOBJ(POBJ,'SET','commands.debugoff','Turn off debugging','',RERR)þ            CALL WOBJ(POBJ,'SET','commands.env','List Environment Variables','',RERR)þ            CALL WOBJ(POBJ,'SET','commands.users','List users','',RERR)þ            IF OCONV(MVTYPE,"MCU") = "JBASE" THENþ               CALL WOBJ(POBJ,"SET","commands.jshow","Do a jshow.  Next param is program/file","",RERR)þ               CALL WOBJ(POBJ,"SET","commands.jlicensinginfo","Licensing info","",RERR)þ            ENDþ      END CASEþþ      CALL WOBJ(POBJ,"TOSTRING","",RJSON,"",RERR)þ      CALL WOBJ(ROBJ,"SET.OBJECT","rest",RJSON,"",RERR)þ      RETURNþ      *þexportresult: *þ      NUM.LINES = DCOUNT(RESULT,@AM)þ      R= '[ 'þ      FOR XX = 1 TO NUM.LINESþ         LINE = RESULT<XX>þ         CALL WSWAP(LINE,CHAR(9),'     ')þ         CALL WENCODEJSON('',LINE,OUTLINE)þ         IF XX > 1 THEN R := ','þ         R := '"':OUTLINE:'"'þ      NEXT XXþ      R := ']'þ      RETURNþ      *þþþprocess.array: *þþ      CALL WOBJ(ROBJ,"SET.ARRAY",ARRAY.NAME,"[]","",RERR)þ      IF ARRAY.NAME="errordetail" THENþ         CONVERT CHAR(13):CHAR(10) TO CHAR(254) IN ARRAY.VALUEþ      END ELSEþ         CALL MVDBTOOLKIT.SWAP(ARRAY.VALUE,@(-1),"")þ         CALL MVDBTOOLKIT.SWAP(ARRAY.VALUE,CHAR(27):'[7m',"")þ         CALL MVDBTOOLKIT.SWAP(ARRAY.VALUE,CHAR(27):'[0m',"")þ      ENDþþ      NUM.LINES=DCOUNT(ARRAY.VALUE,@AM)þþ      FOR X=1 TO NUM.LINESþ         LINE=ARRAY.VALUE<X>þ         CALL WOBJ(ROBJ,"SET",ARRAY.NAME:"[-1]",LINE,"",RERR)þ      NEXT Xþþ      RETURNþþprocess.pobj.array: *þþ      CALL WOBJ(POBJ,"SET.ARRAY",ARRAY.NAME,"[]","",RERR)þ      CALL MVDBTOOLKIT.SWAP(ARRAY.VALUE,@(-1),"")þ      CALL MVDBTOOLKIT.SWAP(ARRAY.VALUE,CHAR(27):'[7m',"")þ      CALL MVDBTOOLKIT.SWAP(ARRAY.VALUE,CHAR(27):'[0m',"")þ      NUM.LINES=DCOUNT(ARRAY.VALUE,@AM)þþ      FOR X=1 TO NUM.LINESþ         LINE=ARRAY.VALUE<X>þ         CALL WOBJ(POBJ,"SET",ARRAY.NAME:"[-1]",LINE,"",RERR)þ      NEXT Xþþ      RETURNþþ      ENDþ0002E8WBUILDJSONþ0c2SUBROUTINE WBUILDJSON(JSONSTRING,NAME,VALUE,RETURNERROR)þ**********************************************************************þ*þ* Copyright (C) 2016 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: 8/13/2016þ* Description: build json stringþ*þ**********************************************************************þRETURNERROR=''þ*CALL FIX.ESCAPE.DATA.JSON('\',NAME,OUT_NAME)þ*CALL FIX.ESCAPE.DATA.JSON('\',VALUE,OUT_VALUE)þCALL WENCODEJSON('',NAME,OUT_NAME)þCALL WENCODEJSON('',VALUE,OUT_VALUE)þTEMP_STRING='"':OUT_NAME:'":"':OUT_VALUE:'"'þL=LEN(JSONSTRING)þLAST_C=JSONSTRING[L,1]þIF LAST_C = "}" OR LAST_C='"' OR LAST_C = "]" THEN TEMP_STRING=', ':TEMP_STRINGþJSONSTRING:=TEMP_STRINGþRETURNþEND00198AWSENDþ0c2SUBROUTINE WSEND(FORM)þ**********************************************************************þ*þ* Copyright (C) 2016 Zumasys, Inc., All Rights Reservedþ*þ* Original Author: Luke J. Bucklin, Sierra Bravoþ* Date: 2/29/00þ* Modified By  : Mike Schmidt, Sierra Bravoþ* Modified By  : Peter Schellenbach & Patrick Payne, Zumasysþ* Purpose: Send the web page.þ* Forked off new version as WSEND for REST services based on original WEB.SENDþ*þ* Modified by Peter Schellenbach 09-21-2017þ*  Removed extra @AM appended to the content to prevent extra CR from being sent in responseþ*þ* Modified by Peter Schellenbach 10-18-2017þ*  Removed duplicate debug info being sent in html or xml output. Removed loggingþ*  code as this is handled by WDB.INIT / JAGENTWDBINIT when saving debug info.þ*þ* Modified by Patrick Payne 04-29-2020þ*  Issue #5.  HTTP wants new lines to be CHAR(13):CHAR(10).  We cannot depend onþ*  pick PRINT statements to output the new line since one linux it will only doþ*  char(10).  All output statements are updated toþ*  PRINT <DATA>:NEW.LINE:    where new.line=CHAR(13):CHAR(1)þ*þ**********************************************************************þ*þ*                1) Header Management: This program will check to seeþ*                   if the content type has been written to the browserþ*                   before ever printing anything to standard out.  Ifþ*                   the headers have not been sent, the program will printþ*                   the headers using the SESSION$CONTENT.TYPE,þ*                   SESSION$HEADERS, and SESSION$COOKIES session variables.þ*                   The program will then set the SESSION$CONTENT.SENTþ*                   variable.þ*                   WARNING: This program assumes that the global SESSIONþ*                   variables were setup prior to using this subroutine.þ*                   WARNING: The SESSION$OUTBUF.SIZE should not be reliedþ*                   upon to prevent the buffer from exceeding the set limit.þ*                   This program simply flushes the buffer if it exceedsþ*                   the set size limit.þ*þ*                2) Buffer Management: Instead of always printing everyþ*                   thing to standard out, by default the program willþ*                   write everything passed into into the SESSION$OUTBUFþ*                   variable.  This program will then flush the bufferþ*                   under certain situations.  The first is if the bufferþ*                   size reaches the limit set in SESSION$OUTBUF.SIZE. Ifþ*                   this happens the prgram will flush the buffer thenþ*                   reinitialize it.  The second is if the SESSION$OUTBUF.FLAGþ*                   is set to FALSE, then this program will always flushþ*                   the buffer.þ*þ*                3) The program will display debug information if the globalþ*                   variable SESSION$GLOBAL.DEBUG flag is >= 3.þ*þ**********************************************************************þ*þ* Add the incoming string to the buffer.þINCLUDE WWW.INCLUDEþ*þNEW.LINE = CHAR(13):CHAR(10); * We need to force this as a new lineþþSHOW.SESSION.VARS = 0þIF SESSION$GLOBAL.DEBUG >= 3 THENþ  OPEN 'WEB.SESSION' TO F.WEB.SESSION THEN SHOW.SESSION.VARS = 1þENDþ*þIF FORM <> '' THENþ  CALL WSWAP(FORM,'<!-- CGI$PATH -->',CGI$PATH)þ*PJS 09-21-2017*SESSION$OUTBUF := FORM:@AMþ  SESSION$OUTBUF := FORM ; *PJS 09-21-2017*þENDþ*þ* If the buffer is greater then the max size or the buffer flag is false then flush.þIF LEN(SESSION$OUTBUF) >= SESSION$OUTBUF.SIZE OR NOT(SESSION$OUTBUF.FLAG) THENþ* Before flushing, check to see if the headers have been send.þ  IF NOT(SESSION$CONTENT.SENT) THENþ    IF SESSION$STATUS.CODE > 0 THENþ* 04-21-17 send the status code before headersþ      PRINT "X-MVDB-STATUS: ":SESSION$STATUS.CODE:NEW.LINE:þ    ENDþ* The headers have not been sent so send them now.þ    IF SESSION$CONTENT.TYPE = "" THENþ      CALL WSETCONTENTTYPE("application/json")þ    ENDþ* If there are any cookies that need to be set, do it now.þ    PRINT "Content-type: ":SESSION$CONTENT.TYPE:NEW.LINE:þ* If there are any cookies that need to be set, do it now.þ    FOR I = 1 TO DCOUNT(SESSION$COOKIES, @AM)þ      COOKIE = SESSION$COOKIES<I>þ      IF INDEX(COOKIE, "; path=", 1) + INDEX(COOKIE, ";path=", 1) = 0 THEN COOKIE := "; path=/"þ      PRINT "Set-Cookie: ":COOKIE:NEW.LINE:þ    NEXT Iþ* If there are any additional headers that need to be set, do it now.þ    PRINT 'Cache-Control: no-cache'þ    FOR I = 1 TO DCOUNT(SESSION$HEADERS, @AM)þ      PRINT SESSION$HEADERS<I>:NEW.LINE:þ    NEXT Iþ* Now print the blank line that ends the headers.þ    PRINTþ    IF INDEX(SESSION$CONTENT.TYPE,'html',1) THENþ      IF INDEX(SESSION$OUTBUF<1>,'<!DOCTYPE',1) = 0 THENþ        PRINT '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"':NEW.LINE:þ        PRINT '"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">':NEW.LINE:þ      ENDþ    ENDþ* Set the SESSION$CONTENT.SENT variable so next time we know not to send the headers.þ    SESSION$CONTENT.SENT = 1þ* From this point on, do not buffer.þ    IF SESSION$OUTBUF.FLAG THENþ      CALL WSETBUFFER(0)þ    ENDþ  ENDþ  LINE.CNT = DCOUNT(SESSION$OUTBUF, @AM)þ  FOR LINE.J = 1 TO LINE.CNTþ    PRINT SESSION$OUTBUF<LINE.J>:NEW.LINE:þ  NEXT LINE.Jþ  IF SESSION$GLOBAL.DEBUG >= 3 THENþ    IF INDEX(SESSION$CONTENT.TYPE,'xml',1) OR INDEX(SESSION$CONTENT.TYPE,'html',1) THENþ* If the debug flag is set then dump all the session information to the browser.þ      PRINT '<!-- Debug Information generated by WEB.SEND.  This feature can be turned off by':NEW.LINE:þ      PRINT '     setting the SESSION$GLOBAL.DEBUG = "1" in the initalization program     -->':NEW.LINE:þ      PRINT '<!-- START DEBUG OUPUT ':NEW.LINE:þ      PRINT '     GET AND POST VARS:':NEW.LINE:þ      FOR I = 1 TO DCOUNT(CGI$VARS, @AM)þ        PRINT '     ':CGI$VARS<I>:' = ':CGI$VALS<I>:NEW.LINE:þ      NEXT Iþ      PRINTþ      IF SHOW.SESSION.VARS THENþ        PRINT '    SESSION VARIABLES:':NEW.LINE:þ        PRINT '    SESSION$ID = ':SESSION$ID:NEW.LINE:þ        READ REC FROM F.WEB.SESSION, SESSION$ID THENþ          PRINT '    SESSION DATE = ':OCONV(REC<3>,'D4/'):NEW.LINE:þ          PRINT '    SESSION TIME = ':OCONV(REC<4>,'MTS,'):NEW.LINE:þ          FOR I = 1 TO DCOUNT(REC<1>, @VM)þ            PRINT '    ':REC<1,I>:' = ':REC<2,I>:NEW.LINE:þ          NEXT Iþ        ENDþ      ENDþ      PRINT '    END DEBUG OUTPUT -->':NEW.LINE:þ      PRINT NEW.LINE:þ    ENDþ  ENDþ  SESSION$OUTBUF = ''þENDþRETURNþEND0014E9WPARSEJSONþ0c2SUBROUTINE WPARSEJSON(JSON_STRING,JSON_REQUEST,JSON_RESULT,JSON_ERRORS)þ**********************************************************************þ*þ* Copyright (C) 2016 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: 8/13/2016þ* Description: this is to be a simple json parser, it will not be high performance!!þ*þ**********************************************************************þ*þ* COMMAND WILL BE QM STYLEþ*þ* object or #/object or #/object or #þ*þ* lets do this VERY ugly, we know what we are looking for should be in the formatþ* "key":  or "key" :þ*þJSON_ERRORS=''þJSON_RESULT=''þMAX_LENGTH=LEN(JSON_STRING)þFIRST_KEY=FIELD(JSON_REQUEST,'/',1); * WE CAN ONLY DO SINGLE DEPTH ON THIS VERSIONþIF FIRST_KEY[1,1]='[' THENþ  GOSUB getobjectþ  RETURNþENDþSEARCH_STRING1='"':FIRST_KEY:'":'þSEARCH_STRING2='"':FIRST_KEY:'" :'þPOS=INDEX(JSON_STRING,SEARCH_STRING1,1)þIF NOT(POS) THENþ  POS=INDEX(JSON_STRING,SEARCH_STRING2,1)þENDþIF NOT(POS) THENþ  JSON_ERRORS=-1þ  JSON_ERRORS<2>='COULD NOT FIND KEY ':FIRST_KEYþ  PRINT 'ERROR'þ  RETURNþENDþTEMP_DATA=JSON_STRING[POS,MAX_LENGTH]þ*PRINT 'TEMP_DATA=':TEMP_DATAþ* NOW LETS CHOP TO OUR FIRST :þPOS2=INDEX(TEMP_DATA,':',1)þTEMP_DATA=TEMP_DATA[POS2+1,MAX_LENGTH]þ* NOT SURE IF WE HAVE TO DEAL WITH DATA BEING NOT IN QUOTES, TO MAKE SURE WE ARE GOING TO INSPECT THE NEXT TWO POSITIONSþ* AND MAKE SUREþ*PRINT 'TEMP_DATA=':TEMP_DATAþTEMP_DATA=TRIM(TEMP_DATA,' ','L')þBEGIN CASEþ  CASE TEMP_DATA[1,1] = '"' OR TEMP_DATA[2,1] = '"'þ* QUOTESþ    TEMP_DATA=FIELD(TEMP_DATA,'"',2,9999)þ*PRINT 'TEMP_DATA=':TEMP_DATAþ* WE CANNOT RELY ON IT JUST BEING THE NEXT QUOTE DUE TO ESCAPING !!@#$#$þ    LEN_STRING=LEN(TEMP_DATA)þ    FOUND_QUOTE=0þ    LAST_C=''þ    FOR X=1 TO LEN_STRING UNTIL FOUND_QUOTEþ      C=TEMP_DATA[X,1]þ      NEXTC=TEMP_DATA[X+1,1]þ*PRINT 'C=':C:' NEXT_C=':NEXT_Cþ      IF C='\' AND NEXTC='"' THENþ        JSON_RESULT:='"'þ        X+=1þ        CONTINUEþ      ENDþ      IF C='"' THENþ        FOUND_QUOTE=1þ        EXITþ      END ELSEþ        JSON_RESULT:=Cþ*PRINT 'JSON_RESULT=':JSON_RESULTþ      ENDþ      IF X > LEN_STRING THEN FOUND_QUOTE=1þ    NEXT Xþ  CASE TEMP_DATA[1,1]='[' OR TEMP_DATA[2,1]='['; * WE ARE PULLING AN ARRAY.  THIS IS VERY MESSY.  IT CAN ONLY HANDLE A SINGLE ARRAY. ANY MORE NESTING AND WE ARE BROKEþ* WE NEED TO LOOP UNTIL WE SEE THE NEXT ] THAT IS NOT IS A INSIDE QUOTESþ    LEN$STRING=LEN(TEMP_DATA)þ    FOUND$BRACKET=0þ    LAST$C=''þ    INSIDE$QUOTES=0þ    FOR X=1 TO LEN$STRING UNTIL FOUND$BRACKETþ      C=TEMP_DATA[X,1]þ      BEGIN CASEþ        CASE C=']' AND NOT(INSIDE$QUOTES); FOUND$BRACKET=1þ        CASE C='"' AND INSIDE$QUOTES; INSIDE$QUOTES=0þ        CASE C="'" AND INSIDE$QUOTES; INSIDE$QUOTES=0þ        CASE C='"'; INSIDE$QUOTES=1þ        CASE C="'"; INSIDE$QUOTES=1þ      END CASEþ      JSON_RESULT:=Cþ    NEXT Xþ  CASE TEMP_DATA[1,1]='{' OR TEMP_DATA[2,1]='['; * WE ARE PULLING AN ARRAY.  THIS IS VERY MESSY.  IT CAN ONLY HANDLE A SINGLE ARRAY. ANY MORE NESTING AND WE ARE BROKEþ* WE NEED TO LOOP UNTIL WE SEE THE NEXT ] THAT IS NOT IS A INSIDE QUOTESþ    LEN$STRING=LEN(TEMP_DATA)þ    FOUND$BRACKET=0þ    LAST$C=''þ    INSIDE$QUOTES=0þ    FOR X=1 TO LEN$STRING UNTIL FOUND$BRACKETþ      C=TEMP_DATA[X,1]þ      BEGIN CASEþ        CASE C='}' AND NOT(INSIDE$QUOTES); FOUND$BRACKET=1þ        CASE C='"' AND INSIDE$QUOTES; INSIDE$QUOTES=0þ        CASE C="'" AND INSIDE$QUOTES; INSIDE$QUOTES=0þ        CASE C='"'; INSIDE$QUOTES=1þ        CASE C="'"; INSIDE$QUOTES=1þ      END CASEþ      JSON_RESULT:=Cþ    NEXT Xþ  CASE 1þ* IT SHOULD BE A NUMBER ONLYþ    IF TEMP_DATA[1,1]=' ' THEN TEMP_DATA=TEMP_DATA[2,MAX_LENGTH]þ* NEXT CHARACTER WILL EITHER BE A },OR SPACXEþ    NEXT1=INDEX(TEMP_DATA,' ',1)þ    NEXT2=INDEX(TEMP_DATA,'}',1)þ    NEXT3=INDEX(TEMP_DATA,',',1)þ    N=NEXT1þ    IF NEXT2 < N THEN N=NEXT2þ    IF NEXT3 < N THEN N=NEXT3þ    JSON_RESULT=TEMP_DATA[1,N-1]þEND CASEþRETURNþ*þgetobject: *þOBJECTNUMBER=FIELD(FIRST_KEY,']',1)þOBJECTNUMBER=FIELD(OBJECTNUMBER,'[',2)þINSIDE$QUOTES=0þOBJECTCOUNT=0þCHARCNTR=0þNESTCOUNT=0þJSON_RESULT=''þDOINGCOUNT=0þLEN_JSON_STRING=LEN(JSON_STRING)þIF OBJECTNUMBER='#' THENþ  OBJECTNUMBER=99999999þ  DOINGCOUNT=1þENDþLOOPþ  CHARCNTR+=1þ  IF CHARCNTR > LEN_JSON_STRING THEN EXITþ  C=JSON_STRING[CHARCNTR,1]þ  BEGIN CASEþ    CASE NOT(INSIDE$QUOTES) AND C='"'þ      JSON_RESULT:=Cþ      INSIDE$QUOTES=1þ    CASE INSIDE$QUOTES AND C='"'þ      JSON_RESULT:=Cþ      INSIDE$QUOTES=0þ    CASE INSIDE$QUOTESþ      JSON_RESULT:=Cþ    CASE C='{' AND NOT(NESTCOUNT)þ* WE HAVE THE START OF OUR OBJECTþ      JSON_RESULT=Cþ      NESTCOUNT=1þ      OBJECTCOUNT+=1þ    CASE C='{' AND NOT(INSIDE$QUOTES)þ* GOING A NEXT DEEPERþ      JSON_RESULT:=Cþ      NESTCOUNT+=1þ    CASE C='}'þ      JSON_RESULT:=Cþ      NESTCOUNT=NESTCOUNT-1þ      IF NESTCOUNT = 0 THENþ        IF OBJECTNUMBER=OBJECTCOUNT-1 THENþ          EXIT; * WE HAVE OUR OBJECTþ        END ELSEþ          NESTCOUNT=0þ          JSON_RESULT=''; * RESET OUR OBJECTþ        ENDþ      ENDþ    CASE NESTCOUNT=0; * DO NOTHINGþ    CASE 1þ      JSON_RESULT:=Cþ  END CASEþ  IF 0 THENþ    PRINT C,'NESTCOUNT=':NESTCOUNT:' OBJECTCOUNT=':OBJECTCOUNT:' INQUOTE=':INSIDE$QUOTES:' CHARCNTR=':CHARCNTRþ  ENDþ  IF DOINGCOUNT THEN JSON_RESULT=OBJECTCOUNTþREPEATþIF 0 THENþ  PRINT JSON_RESULTþ  PRINTþ  PRINT JSON_STRING[1,CHARCNTR+50]þ  INPUT WAITþENDþRETURNþEND0002B9WGETPARAMþ0c2SUBROUTINE WGETPARAM(ParamVal, ParamNum)þ**********************************************************************þ*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Peter Schellenbach, Zumasysþ* Date: March 2017þ* Description: return a parameter from the URL. Assume theþ* URL is in the format:þ*þ*   http://api.hostname.com/api/resource/key/command/opt1/opt2/opt3þ*þ* ParamNum = 1 ParamVal = keyþ*            2            commandþ*            3            opt1þ*            4            opt2þ*            5            opt3þ*þ**********************************************************************þINCLUDE WWW.INCLUDEþParamVal = CGI$RESTPARAMS<ParamNum>þRETURNþEND00069BWSETBUFFERþ0c2SUBROUTINE WSETBUFFER(B.VAL)þ**********************************************************************þ*þ* Copyright (C) 2016 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2016þ* Updated by: Peter Schellenbach, Zumasysþ* Date: November 2017þ* Description  : This program sets the SESSION$OUTBUF.FLAG and optionallyþ*                SESSION$OUTBUF.SIZE variables to enable or disableþ*                buffering of output generated by WSEND. If bufferingþ*                is enabled, be sure to call WFLUSH to flush the finalþ*                buffer content.þ*þ*                B.VAL = 0 : disable bufferingþ*                B.VAL = 1 : enable buffering using current buffer sizeþ*                B.VAL > 1 : enable buffering and set buffer size toþ*                            this value.þ*þ*                By default buffering is disabled. If buffering will beþ*                used, call WSETBUFFER before the first call to WSEND.þ*                If the size of buffer content ever exceeds the bufferþ*                size, the buffer is flushed to the client along withþ*                any headers, and buffering is disabled.þ*              þ**********************************************************************þINCLUDE WWW.INCLUDEþEQU FALSE TO 0, TRUE TO 1þ*þIF NUM(B.VAL) AND B.VAL > 0 AND B.VAL <= 1000000 THENþ  * Set buffer size and enable bufferingþ  SESSION$OUTBUF.SIZE = B.VALþ  SESSION$OUTBUF.FLAG = TRUEþEND ELSEþ  * Enable or disable bufferingþ  IF B.VAL # TRUE AND B.VAL # FALSE THENþ    IF B.VAL = "" THENþ      B.VAL = FALSEþ    END ELSEþ      B.VAL = TRUEþ    ENDþ  ENDþ  SESSION$OUTBUF.FLAG = B.VALþENDþRETURNþEND0002A0WSETHEADERþ0c2SUBROUTINE WSETHEADER(VarName, VarValue)þ**********************************************************************þ*þ* Copyright (C) 2016 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2016þ* Description: set a value of HTTP response headerþ*þ* Updated by Peter Schellenbach, 09-21-2017 to call WSETCONTENTTYPE when setting the Content-Type headerþ*þ**********************************************************************þINCLUDE WWW.INCLUDEþIF OCONV(VarName,'MCU') = 'CONTENT-TYPE' THENþ  CALL WSETCONTENTTYPE(VarValue)þEND ELSEþ  HEADER_LINE = VarName:': ':VarValueþ  SESSION$HEADERS<-1> = HEADER_LINEþENDþRETURNþEND0001F0WGETCONFIGþ0c2SUBROUTINE WGETCONFIG(VarValue, VarName) þ**********************************************************************þ*þ* Copyright (C) 2016 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2016þ* Description: extract a configuration valueþ*þ**********************************************************************þINCLUDE WWW.INCLUDEþVarValue = ''þLOCATE VarName IN CGI$CONFIG<1,1> SETTING POS THENþ  VarValue = CGI$CONFIG<1,2,POS>þENDþRETURNþEND00023FWSETVARþ0c2SUBROUTINE WSETVAR(VarValue, VarName)þ**********************************************************************þ*þ* Copyright (C) 2016 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2016þ* Description: update value of a request variableþ*þ**********************************************************************þINCLUDE WWW.INCLUDEþTEMPVARS = OCONV(CGI$VARS, 'MCU')þLOCATE OCONV(VarName, 'MCU') IN TEMPVARS SETTING POS THENþ  CGI$VALS<POS> = VarValueþEND ELSEþ  CGI$VARS<-1> = VarNameþ  CGI$VALS<-1> = VarValueþENDþRETURNþEND00028CWSETSTATUSþ0c2SUBROUTINE WSETSTATUS( STATUS.CODE )þ**********************************************************************þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written By   : Peter Schellenbachþ* Date Written : 04/21/2017þ* Description  : This program sets the response status code sentþ*                back to client. Successful requests should returnþ*                status code 200 (this is the default). Status codeþ*                500 indicates a generic server failure.þ*              þ**********************************************************************þINCLUDE WWW.INCLUDEþSESSION$STATUS.CODE = STATUS.CODEþRETURNþEND000481WWW.INFOþ0c2*þ* Element index for standard web common /WWW/ WWW.INFO arrayþ*þEQU SESSION_ID               TO 1þEQU SESSION_CONTENT.TYPE     TO 2þEQU SESSION_CONTENT.SENT     TO 3þEQU SESSION_OUTBUF           TO 4þEQU SESSION_HEADERS          TO 5þEQU SESSION_COOKIES          TO 6þEQU SESSION_OUTBUF.SIZE      TO 7þEQU SESSION_OUTBUF.FLAG      TO 8þEQU SESSION_TIME.OUT         TO 9þEQU SESSION_GLOBAL.DEBUG     TO 10þEQU SESSION_STATUS.CODE      TO 11þEQU SESSION_WDEBUG_MODE      TO 12þEQU CONFIG_WDB.RESOURCE      TO 15þEQU CGI_VARS                 TO 25þEQU CGI_VALS                 TO 26þEQU CGI_CVARS                TO 27þEQU CGI_CVALS                TO 28 þEQU CGI_SERVER.NAME          TO 29þEQU CGI_PATH                 TO 30þEQU CGI_SERVER.PORT          TO 31þEQU CGI_BODY                 TO 32þEQU CGI_HEADERVALS           TO 33þEQU CGI_HEADERVARS           TO 34þEQU CGI_RESTPARAMS           TO 35þEQU CGI_CONFIG               TO 36þEQU CGI_APPSVR.ID            TO 45þEQU CGI_RESERVED1            TO 46þEQU CGI_RESERVED2            TO 47þEQU CGI_RESERVED3            TO 48þEQU CGI_UNIQUE.ID            TO 49þEQU CGI_RESOURCE.NAME        TO 50000212WGETVARþ0c2SUBROUTINE WGETVAR(VarValue, VarName)þ**********************************************************************þ*þ* Copyright (C) 2016 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2016þ* Description: extract value of a request variableþ*þ**********************************************************************þINCLUDE WWW.INCLUDEþVarValue = ''þTEMPVARS = OCONV(CGI$VARS, 'MCU')þLOCATE OCONV(VarName, 'MCU') IN TEMPVARS SETTING POS THENþ  VarValue = CGI$VALS<POS>þENDþRETURNþEND00018EFI.WDB.RESOURCEþ0c2DIM RSRC.ITEM(20)þ*þEQU RSRC.TYPE           TO RSRC.ITEM(1)þEQU RSRC.DESCRIPTION    TO RSRC.ITEM(2)þEQU RSRC.CONTROLLER     TO RSRC.ITEM(3)þEQU RSRC.PROGRAM        TO RSRC.ITEM(4)þEQU RSRC.PARSE.CGI      TO RSRC.ITEM(5)þEQU RSRC.ENABLED        TO RSRC.ITEM(6)þEQU RSRC.DEBUG.MODE     TO RSRC.ITEM(7)þEQU RSRC.ACCOUNT        TO RSRC.ITEM(8)þEQU RSRC.NL             TO RSRC.ITEM(9)000251WSETCONTENTTYPEþ0c2SUBROUTINE WSETCONTENTTYPE(CONTENTTYPE)þ**********************************************************************þ*þ* Copyright (C) 2016 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Patrick Payne, Zumasysþ* Date: December 2016þ* Description  : This subroutine sets the SESSION$CONTENT.TYPE variable.þ*                This value is used in the Content-Type HTTP headerþ*                in the response sent to the client.þ*              þ**********************************************************************þINCLUDE WWW.INCLUDEþSESSION$CONTENT.TYPE=CONTENTTYPEþRETURNþEND0000EERSS.FEEDSþ0c000005DFEEDSþ0c2Available RSS FeedsþþRSS Feeds available on this serverþSUB.FEEDS.SELþSUB.FEEDS.ITEM000078RUNTIME-ERRORSþ0c2Basic Runtime ErrorsþþData basic runtime errors.þSUB.RE.SELþSUB.RE.ITEMþDashboard Accountþaccount=TLDB006E99MVDB.CONTROLþ0c000024ECOMPILE.SETUPþ0c2BASIC %FILENAME% %ITEMNAME%þ* To configure the compile command when using the web editorþ* edit line # 1 of this record to contain the appropriate syntax.þ*þ* Example # 1 - Standard compile using BASICþ* 001 BASIC %FILENAME% %ITEMNAME%þ*þ* Example # 2 - FLASH compile using BASICþ* 001 BASIC %FILENAME% %ITEMNAME% (Oþ*þ* Example # 3 - Standard compile using COMPILEþ* 001 COMPILE %FILENAME% %ITEMNAME%þ*þ* Only line # 1 of this record is used, all other lines of this record are ignored.þ* If this record is deleted, the default behavior is:þ* COMPILE %FILENAME% %ITEMNAME%0000A1FC2DPIE.SETTINGSþ0c2<graph caption='[CHART.TITLE]' decimalPrecision='0' showNames='1' showValues='0'þ pieRadius='[RADIUS]' animation='0' >þ [CHART.DATA]þ</graph>0000DEFC3DPIE.SETTINGSþ0c2<graph caption='[CHART.TITLE]' decimalPrecision='0' showNames='1' showValues='0'þ showPercentageInLabel='0' pieYScale='45' pieRadius='[RADIUS]' animation='0'þ pieFillAlpha='100' >þ [CHART.DATA]þ</graph>0000A9FCAREA2D.SETTINGSþ0c2<graph bgcolor='ffffff' caption='[CHART.TITLE]' animation='0' decimalPrecision='0' þ yaxisname='[YMEMO]' xaxisname='[XMEMO]'>þ [CHART.DATA]þ</graph>0000A9FCBAR2D.SETTINGSþ0c2<graph bgcolor='ffffff' caption='[CHART.TITLE]' animation='0' decimalPrecision='0' þ yaxisname='[YMEMO]' xaxisname='[XMEMO]' >þ [CHART.DATA]þ</graph>00009BFCCOLUMN2D.SETTINGSþ0c2<graph caption='[CHART.TITLE]' animation='0' decimalPrecision='0' þ yaxisname='[YMEMO]' xaxisname='[XMEMO]' >þ [CHART.DATA]þ</graph>0000ADFCCOLUMN3D.SETTINGSþ0c2<graph bgcolor='ffffff' caption='[CHART.TITLE]' þ decimalPrecision='0' animation='0'þ yaxisname='[YMEMO]' xaxisname='[XMEMO]' >þ [CHART.DATA]þ</graph>0000A6FCDOUGHNUT2D.SETTINGSþ0c2<graph caption='[CHART.TITLE]' decimalPrecision='0' showNames='1' showValues='0'þ pieRadius='[RADIUS]' animation='0' >þ [CHART.DATA]þ</graph>0000A7FCLINE.SETTINGSþ0c2<graph bgcolor='ffffff' caption='[CHART.TITLE]' animation='0' decimalPrecision='0' þ yaxisname='[YMEMO]' xaxisname='[XMEMO]'>þ [CHART.DATA]þ</graph>000C53FCMAP.NAMESþ0c2AfghanistanþAfricaþAlabamaþAlaskaþAlbaniaþAlbertaþAlgeriaþAndorraþAngolaþAntiguaþArgentinaþArizonaþArkansasþArmeniaþAsia3þAsiaGeorgiaþAsiaþAustralia2þAustraliaþAustriaþAzerbaijanþBahamasþBahrainþBangladeshþBarbadosþBelarusþBelgiumþBelizeþBeninþBhutanþBoliviaþBosniaHerzegovinaþBotswanaþBrazilRegionþBrazilþBritishColumbiaþBruneiþBulgariaþBurkinaFasoþBurmaþBurundiþCaliforniaþCambodiaþCameroonþCanadaþCapeVerdeþCaymanIslandsþCentralAfricanRepublicþCentralAmerica2þCentralAmericaþCentralAmericawithCaribbeanþCentralEuropeanRegionþChadþChileþChina2þChinaþColombiaþColoradoþComorosþCongoþConnecticutþCostaRicaþCoteDivoireþCroatiaþCubaþCyprus2þCyprusþCzechRepublicþDelawareþDemocraticRepublicofCongoþDenmarkRegionþDenmarkþDistrictofColumbiaþDjiboutiþDominicanRepublicþDominicaþEastEuropeanRegionþEastTimorþEcuadorþEgyptþElSalvadorþEnglandRegionþEnglandþEquatorialGuineaþEritreaþEstoniaþEthiopiaþEurope2þEuropeRegionþEuropeþEuropewithcountriesþFalklandIslandþFijiþFinlandþFloridaþFranceDepartmentþFranceþFrenchGuianaþGabonþGambiaþGeorgiaþGermanyþGhanaþGreeceþGreenlandþGrenadaþGuatemalaþGuineaBissauþGuineaþGuyanaþHaitiþHawaiiþHondurasþHongKongþHungaryRegionsþHungaryþIcelandþIdahoþIllinoisþIndianaþIndiaþIndonesiaþIowaþIranþIraqþIrelandþIsraelþItalyþJamaicaþJapanþJordanþKansasþKazakhstanþKentuckyþKenyaþKiribatiþKuwaitþKyrgyzstanþLaosþLatviaþLebanonþLesothoþLiberiaþLibyaþLiechtensteinþLithuaniaþLouisianaþLuxembourgþMacauþMacedoniaþMadagascarRegionsþMadagascarþMaineþMalawiþMalaysiaþMaliþMaltaþManitobaþMarshallIslandþMarylandþMassachusettsþMauritaniaþMauritiusþMexicoþMichiganþMicronesiaþMiddleEastþMinnesotaþMississippiþMissouriþMoldovaþMonacoþMongoliaþMontanaþMontenegroþMoroccoþMozambiqueþNamibiaþNauruþNebraskaþNepalþNetherlandþNevadaþNewBrunswickþNewCaledoniaþNewfoundlandandLabradorþNewHampshireþNewJerseyþNewMexicoþNewWorldþNewYorkþNewZealandþNicaraguaþNigeriaþNigerþNorthAmericaþNorthAmerica_WOCentralþNorthCarolinaþNorthDakotaþNorthEuropeanRegionþNorthIrelandþNorthKoreaþNorthWestTerritoriesþNorwayRegionþNorwayþNovaScotiaþNunavutþOceaniaþOhioþOklahomaþOmanþOntarioþOregonþPakistanþPalauþPanamaþPapuaNewGuineaþParaguayþPennsylvaniaþPeruþPhilippinesþPolandCountiesþPolandþPortugalþPrinceEdwardIslandþPuertoRicoþQatarþQuebecþRhodeIslandþRomaniaþRussiaþRwandaþSaintKittsandNevisþSaintLuciaþSaintVincentandtheGrenadinesþSamoaþSanMarinoþSaoTomeandPrincipeþSaskatchewanþSaudiArabiaþScotlandRegionþScotlandþSenegalþSerbiaþSeychellesþSierraLeoneþSingaporeþSlovakiaþSloveniaþSolomonIslandþSomaliaþSouthAfricaþSouthAmericaþSouthCarolinaþSouthDakotaþSouthEuropeanRegionþSouthKoreaþSpainProvincesþSpainþSriLankaþSudanþSurinameþSwazilandþSwedenþSwitzerlandþSyriaþTaiwanþTajikistanþTanzaniaþTennesseeþTexasþThailandþTibetþTogoþTongaþTrinidadandTobagoþTunisiaþTurkeyþTurkmenistanþTuvaluþUAEþUgandaþUK7þUkraineþUKþUruguayþUSACentralRegionþUSANorthEastRegionþUSANorthWestRegionþUSARegionþUSASouthEastRegionþUSASouthWestRegionþUSAþUtahþUzbekistanþVanuatuþVaticanCityþVenezuelaþVermontþVietnamþVirginiaþWalesþWashingtonþWesternSaharaþWestEuropeanRegionþWestVirginiaþWisconsinþWorld8þWorldþWorldwithCountriesþWyomingþYemenþYukonTerritoryþZambiaþZimbabwe0000B1FCMAP.SETTINGSþ0c2<map showCanvasBorder='1' canvasBorderColor='F1F1F1' canvasBorderThickness='2' borderColor='FFFFFF' connectorColor='000000' fillAlpha='70'>þ[CHART.DATA]þ</map>00009AFCMSAREA2D.SETTINGSþ0c2<graph xaxisname='[XMEMO]' yaxisname='[YMEMO]' decimalPrecision='0'þ animation='0' caption='[CHART.TITLE]' >þ [CHART.DATA]þ</graph>000099FCMSBAR2D.SETTINGSþ0c2<graph xaxisname='[XMEMO]' yaxisname='[YMEMO]' decimalPrecision='0'þ animation='0' caption='[CHART.TITLE]' >þ [CHART.DATA]þ</graph>00009CFCMSCOLUMN2D.SETTINGSþ0c2<graph xaxisname='[XMEMO]' yaxisname='[YMEMO]' decimalPrecision='0'þ animation='0' caption='[CHART.TITLE]' >þ [CHART.DATA]þ</graph>00009CFCMSCOLUMN3D.SETTINGSþ0c2<graph xaxisname='[XMEMO]' yaxisname='[YMEMO]' decimalPrecision='0'þ animation='0' caption='[CHART.TITLE]' >þ [CHART.DATA]þ</graph>000098FCMSLINE.SETTINGSþ0c2<graph xaxisname='[XMEMO]' yaxisname='[YMEMO]' decimalPrecision='0'þ animation='0' caption='[CHART.TITLE]' >þ [CHART.DATA]þ</graph>00009FFCSTACKEDAREA2D.SETTINGSþ0c2<graph xaxisname='[XMEMO]' yaxisname='[YMEMO]' decimalPrecision='0'þ animation='0' caption='[CHART.TITLE]' >þ [CHART.DATA]þ</graph>00009EFCSTACKEDBAR2D.SETTINGSþ0c2<graph xaxisname='[XMEMO]' yaxisname='[YMEMO]' decimalPrecision='0'þ animation='0' caption='[CHART.TITLE]' >þ [CHART.DATA]þ</graph>0000A1FCSTACKEDCOLUMN2D.SETTINGSþ0c2<graph xaxisname='[XMEMO]' yaxisname='[YMEMO]' decimalPrecision='0'þ animation='0' caption='[CHART.TITLE]' >þ [CHART.DATA]þ</graph>0000A1FCSTACKEDCOLUMN3D.SETTINGSþ0c2<graph xaxisname='[XMEMO]' yaxisname='[YMEMO]' decimalPrecision='0'þ animation='0' caption='[CHART.TITLE]' >þ [CHART.DATA]þ</graph>0000FDFWBULLET.SETTINGSþ0c2<chart palette='[CHART.PALETTE]' lowerLimit='[LOWER.LIMIT]' upperLimit='[UPPER.LIMIT]' caption='[CAPTION]' subcaption='[SUBCAPTION]' numberPrefix='[NUMBER.PREFIX]' numberSuffix='[NUMBER.SUFFIX]' showValue='1' >þ[CHART.DATA]þ</chart>0000BAFWFP.SETTINGSþ0c2<chart numberPrefix='[NUMBER.PREFIX]' numberSuffix='[NUMBER.SUFFIX]' caption='[CAPTION]' subcaption='[SUBCAPTION]' decimals='1' baseFontSize='11' >þ[CHART.DATA]þ</chart>000122FWGAUGE.SETTINGSþ0c2<chart palette='[CHART.PALETTE]' lowerLimitDisplay='[LOWER.LIMIT.DISPLAY]' upperLimitDisplay='[UPPER.LIMIT.DISPLAY]' lowerLimit='[LOWER.LIMIT]' upperLimit='[UPPER.LIMIT]' numberPrefix='[NUMBER.PREFIX]' numberSuffix='[NUMBER.SUFFIX]' showValue='1' >þ[CHART.DATA]þ</chart>0000CAFWSPARK.SETTINGSþ0c2<chart yAxisMinValue='[LOWER.LIMIT]' yAxisMaxValue='[UPPER.LIMIT]' palette='[CHART.PALETTE]' caption='[CAPTION]' subcaption='[SUBCAPTION]' setAdaptiveYMin='1' >þ[CHART.DATA]þ</chart>004113ICON.LISTþ0c2accept.pngþadd.pngþanchor.pngþapplication_add.pngþapplication_cascade.pngþapplication_delete.pngþapplication_double.pngþapplication_edit.pngþapplication_error.pngþapplication_form_add.pngþapplication_form_delete.pngþapplication_form_edit.pngþapplication_form_magnify.pngþapplication_form.pngþapplication_get.pngþapplication_go.pngþapplication_home.pngþapplication_key.pngþapplication_lightning.pngþapplication_link.pngþapplication_osx.pngþapplication_osx_terminal.pngþapplication.pngþapplication_put.pngþapplication_side_boxes.pngþapplication_side_contract.pngþapplication_side_expand.pngþapplication_side_list.pngþapplication_side_tree.pngþapplication_split.pngþapplication_tile_horizontal.pngþapplication_tile_vertical.pngþapplication_view_columns.pngþapplication_view_detail.pngþapplication_view_gallery.pngþapplication_view_icons.pngþapplication_view_list.pngþapplication_view_tile.pngþapplication_xp.pngþapplication_xp_terminal.pngþarrow_branch.pngþarrow_divide.pngþarrow_down.pngþarrow_inout.pngþarrow_in.pngþarrow_join.pngþarrow_left.pngþarrow_merge.pngþarrow_out.pngþarrow_redo.pngþarrow_refresh.pngþarrow_refresh_small.pngþarrow_right.pngþarrow_rotate_anticlockwise.pngþarrow_rotate_clockwise.pngþarrow_switch.pngþarrow_turn_left.pngþarrow_turn_right.pngþarrow_undo.pngþarrow_up.pngþasterisk_orange.pngþasterisk_yellow.pngþattach.pngþaward_star_add.pngþaward_star_bronze_1.pngþaward_star_bronze_2.pngþaward_star_bronze_3.pngþaward_star_delete.pngþaward_star_gold_1.pngþaward_star_gold_2.pngþaward_star_gold_3.pngþaward_star_silver_1.pngþaward_star_silver_2.pngþaward_star_silver_3.pngþbasket_add.pngþbasket_delete.pngþbasket_edit.pngþbasket_error.pngþbasket_go.pngþbasket.pngþbasket_put.pngþbasket_remove.pngþbell_add.pngþbell_delete.pngþbell_error.pngþbell_go.pngþbell_link.pngþbell.pngþbin_closed.pngþbin_empty.pngþbin.pngþbomb.pngþbook_add.pngþbook_addresses.pngþbook_delete.pngþbook_edit.pngþbook_error.pngþbook_go.pngþbook_key.pngþbook_link.pngþbook_next.pngþbook_open.pngþbook.pngþbook_previous.pngþbox.pngþbrick_add.pngþbrick_delete.pngþbrick_edit.pngþbrick_error.pngþbrick_go.pngþbrick_link.pngþbrick.pngþbricks.pngþbriefcase.pngþbug_add.pngþbug_delete.pngþbug_edit.pngþbug_error.pngþbug_go.pngþbug_link.pngþbug.pngþbuilding_add.pngþbuilding_delete.pngþbuilding_edit.pngþbuilding_error.pngþbuilding_go.pngþbuilding_key.pngþbuilding_link.pngþbuilding.pngþbullet_add.pngþbullet_arrow_bottom.pngþbullet_arrow_down.pngþbullet_arrow_top.pngþbullet_arrow_up.pngþbullet_black.pngþbullet_blue.pngþbullet_delete.pngþbullet_disk.pngþbullet_error.pngþbullet_feed.pngþbullet_go.pngþbullet_green.pngþbullet_key.pngþbullet_orange.pngþbullet_picture.pngþbullet_pink.pngþbullet_purple.pngþbullet_red.pngþbullet_star.pngþbullet_toggle_minus.pngþbullet_toggle_plus.pngþbullet_white.pngþbullet_wrench.pngþbullet_yellow.pngþcake.pngþcalculator_add.pngþcalculator_delete.pngþcalculator_edit.pngþcalculator_error.pngþcalculator_link.pngþcalculator.pngþcalendar_add.pngþcalendar_delete.pngþcalendar_edit.pngþcalendar_link.pngþcalendar.pngþcalendar_view_day.pngþcalendar_view_month.pngþcalendar_view_week.pngþcamera_add.pngþcamera_delete.pngþcamera_edit.pngþcamera_error.pngþcamera_go.pngþcamera_link.pngþcamera.pngþcamera_small.pngþcancel.pngþcar_add.pngþcar_delete.pngþcar.pngþcart_add.pngþcart_delete.pngþcart_edit.pngþcart_error.pngþcart_go.pngþcart.pngþcart_put.pngþcart_remove.pngþcd_add.pngþcd_burn.pngþcd_delete.pngþcd_edit.pngþcd_eject.pngþcd_go.pngþcd.pngþchart_bar_add.pngþchart_bar_delete.pngþchart_bar_edit.pngþchart_bar_error.pngþchart_bar_link.pngþchart_bar.pngþchart_curve_add.pngþchart_curve_delete.pngþchart_curve_edit.pngþchart_curve_error.pngþchart_curve_go.pngþchart_curve_link.pngþchart_curve.pngþchart_line_add.pngþchart_line_delete.pngþchart_line_edit.pngþchart_line_error.pngþchart_line_link.pngþchart_line.pngþchart_organisation_add.pngþchart_organisation_delete.pngþchart_organisation.pngþchart_pie_add.pngþchart_pie_delete.pngþchart_pie_edit.pngþchart_pie_error.pngþchart_pie_link.pngþchart_pie.pngþclock_add.pngþclock_delete.pngþclock_edit.pngþclock_error.pngþclock_go.pngþclock_link.pngþclock_pause.pngþclock_play.pngþclock.pngþclock_red.pngþclock_stop.pngþcog_add.pngþcog_delete.pngþcog_edit.pngþcog_error.pngþcog_go.pngþcog.pngþcoins_add.pngþcoins_delete.pngþcoins.pngþcolor_swatch.pngþcolor_wheel.pngþcomment_add.pngþcomment_delete.pngþcomment_edit.pngþcomment.pngþcomments_add.pngþcomments_delete.pngþcomments.pngþcompress.pngþcomputer_add.pngþcomputer_delete.pngþcomputer_edit.pngþcomputer_error.pngþcomputer_go.pngþcomputer_key.pngþcomputer_link.pngþcomputer.pngþconnect.pngþcontrast_decrease.pngþcontrast_high.pngþcontrast_increase.pngþcontrast_low.pngþcontrast.pngþcontrol_eject_blue.pngþcontrol_eject.pngþcontrol_end_blue.pngþcontrol_end.pngþcontrol_equalizer_blue.pngþcontrol_equalizer.pngþcontrol_fastforward_blue.pngþcontrol_fastforward.pngþcontroller_add.pngþcontroller_delete.pngþcontroller_error.pngþcontroller.pngþcontrol_pause_blue.pngþcontrol_pause.pngþcontrol_play_blue.pngþcontrol_play.pngþcontrol_repeat_blue.pngþcontrol_repeat.pngþcontrol_rewind_blue.pngþcontrol_rewind.pngþcontrol_start_blue.pngþcontrol_start.pngþcontrol_stop_blue.pngþcontrol_stop.pngþcreditcards.pngþcross.pngþcss_add.pngþcss_delete.pngþcss_go.pngþcss.pngþcss_valid.pngþcup_add.pngþcup_delete.pngþcup_edit.pngþcup_error.pngþcup_go.pngþcup_key.pngþcup_link.pngþcup.pngþcursor.pngþcut.pngþcut_red.pngþdatabase_add.pngþdatabase_connect.pngþdatabase_delete.pngþdatabase_edit.pngþdatabase_error.pngþdatabase_gear.pngþdatabase_go.pngþdatabase_key.pngþdatabase_lightning.pngþdatabase_link.pngþdatabase.pngþdatabase_refresh.pngþdatabase_save.pngþdatabase_table.pngþdate_add.pngþdate_delete.pngþdate_edit.pngþdate_error.pngþdate_go.pngþdate_link.pngþdate_magnify.pngþdate_next.pngþdate.pngþdate_previous.pngþdelete.pngþdisconnect.pngþdisk_multiple.pngþdisk.pngþdoor_in.pngþdoor_open.pngþdoor_out.pngþdoor.pngþdrink_empty.pngþdrink.pngþdrive_add.pngþdrive_burn.pngþdrive_cd_empty.pngþdrive_cd.pngþdrive_delete.pngþdrive_disk.pngþdrive_edit.pngþdrive_error.pngþdrive_go.pngþdrive_key.pngþdrive_link.pngþdrive_magnify.pngþdrive_network.pngþdrive.pngþdrive_rename.pngþdrive_user.pngþdrive_web.pngþdvd_add.pngþdvd_delete.pngþdvd_edit.pngþdvd_error.pngþdvd_go.pngþdvd_key.pngþdvd_link.pngþdvd.pngþemail_add.pngþemail_attach.pngþemail_delete.pngþemail_edit.pngþemail_error.pngþemail_go.pngþemail_link.pngþemail_open_image.pngþemail_open.pngþemail.pngþemoticon_evilgrin.pngþemoticon_grin.pngþemoticon_happy.pngþemoticon_smile.pngþemoticon_surprised.pngþemoticon_tongue.pngþemoticon_unhappy.pngþemoticon_waii.pngþemoticon_wink.pngþerror_add.pngþerror_delete.pngþerror_go.pngþerror.pngþexclamation.pngþeye.pngþfeed_add.pngþfeed_delete.pngþfeed_disk.pngþfeed_edit.pngþfeed_error.pngþfeed_go.pngþfeed_key.pngþfeed_link.pngþfeed_magnify.pngþfeed.pngþfemale.pngþfilm_add.pngþfilm_delete.pngþfilm_edit.pngþfilm_error.pngþfilm_go.pngþfilm_key.pngþfilm_link.pngþfilm.pngþfilm_save.pngþfind.pngþflag_blue.pngþflag_green.pngþflag_orange.pngþflag_pink.pngþflag_purple.pngþflag_red.pngþflag_yellow.pngþfolder_add.pngþfolder_bell.pngþfolder_brick.pngþfolder_bug.pngþfolder_camera.pngþfolder_database.pngþfolder_delete.pngþfolder_edit.pngþfolder_error.pngþfolder_explore.pngþfolder_feed.pngþfolder_find.pngþfolder_go.pngþfolder_heart.pngþfolder_image.pngþfolder_key.pngþfolder_lightbulb.pngþfolder_link.pngþfolder_magnify.pngþfolder_page.pngþfolder_page_white.pngþfolder_palette.pngþfolder_picture.pngþfolder.pngþfolder_star.pngþfolder_table.pngþfolder_user.pngþfolder_wrench.pngþfont_add.pngþfont_delete.pngþfont_go.pngþfont.pngþgroup_add.pngþgroup_delete.pngþgroup_edit.pngþgroup_error.pngþgroup_gear.pngþgroup_go.pngþgroup_key.pngþgroup_link.pngþgroup.pngþheart_add.pngþheart_delete.pngþheart.pngþhelp.pngþhourglass_add.pngþhourglass_delete.pngþhourglass_go.pngþhourglass_link.pngþhourglass.pngþhouse_go.pngþhouse_link.pngþhouse.pngþhtml_add.pngþhtml_delete.pngþhtml_go.pngþhtml.pngþhtml_valid.pngþimage_add.pngþimage_delete.pngþimage_edit.pngþimage_link.pngþimage.pngþimages.pngþinformation.pngþipod_cast_add.pngþipod_cast_delete.pngþipod_cast.pngþipod.pngþipod_sound.pngþjoystick_add.pngþjoystick_delete.pngþjoystick_error.pngþjoystick.pngþkey_add.pngþkeyboard_add.pngþkeyboard_delete.pngþkeyboard_magnify.pngþkeyboard.pngþkey_delete.pngþkey_go.pngþkey.pngþlayers.pngþlayout_add.pngþlayout_content.pngþlayout_delete.pngþlayout_edit.pngþlayout_error.pngþlayout_header.pngþlayout_link.pngþlayout.pngþlayout_sidebar.pngþlightbulb_add.pngþlightbulb_delete.pngþlightbulb_off.pngþlightbulb.pngþlightning_add.pngþlightning_delete.pngþlightning_go.pngþlightning.pngþlink_add.pngþlink_break.pngþlink_delete.pngþlink_edit.pngþlink_error.pngþlink_go.pngþlink.pngþlock_add.pngþlock_break.pngþlock_delete.pngþlock_edit.pngþlock_go.pngþlock_open.pngþlock.pngþlorry_add.pngþlorry_delete.pngþlorry_error.pngþlorry_flatbed.pngþlorry_go.pngþlorry_link.pngþlorry.pngþmagifier_zoom_out.pngþmagnifier.pngþmagnifier_zoom_in.pngþmale.pngþmap_add.pngþmap_delete.pngþmap_edit.pngþmap_go.pngþmap_magnify.pngþmap.pngþmedal_bronze_1.pngþmedal_bronze_2.pngþmedal_bronze_3.pngþmedal_bronze_add.pngþmedal_bronze_delete.pngþmedal_gold_1.pngþmedal_gold_2.pngþmedal_gold_3.pngþmedal_gold_add.pngþmedal_gold_delete.pngþmedal_silver_1.pngþmedal_silver_2.pngþmedal_silver_3.pngþmedal_silver_add.pngþmedal_silver_delete.pngþmoney_add.pngþmoney_delete.pngþmoney_dollar.pngþmoney_euro.pngþmoney.pngþmoney_pound.pngþmoney_yen.pngþmonitor_add.pngþmonitor_delete.pngþmonitor_edit.pngþmonitor_error.pngþmonitor_go.pngþmonitor_lightning.pngþmonitor_link.pngþmonitor.pngþmouse_add.pngþmouse_delete.pngþmouse_error.pngþmouse.pngþmusic.pngþnew.pngþnewspaper_add.pngþnewspaper_delete.pngþnewspaper_go.pngþnewspaper_link.pngþnewspaper.pngþnote_add.pngþnote_delete.pngþnote_edit.pngþnote_error.pngþnote_go.pngþnote.pngþoverlays.pngþpackage_add.pngþpackage_delete.pngþpackage_go.pngþpackage_green.pngþpackage_link.pngþpackage.pngþpage_add.pngþpage_attach.pngþpage_code.pngþpage_copy.pngþpage_delete.pngþpage_edit.pngþpage_error.pngþpage_excel.pngþpage_find.pngþpage_gear.pngþpage_go.pngþpage_green.pngþpage_key.pngþpage_lightning.pngþpage_link.pngþpage_paintbrush.pngþpage_paste.pngþpage.pngþpage_red.pngþpage_refresh.pngþpage_save.pngþpage_white_acrobat.pngþpage_white_actionscript.pngþpage_white_add.pngþpage_white_camera.pngþpage_white_cd.pngþpage_white_code.pngþpage_white_code_red.pngþpage_white_coldfusion.pngþpage_white_compressed.pngþpage_white_copy.pngþpage_white_cplusplus.pngþpage_white_c.pngþpage_white_csharp.pngþpage_white_cup.pngþpage_white_database.pngþpage_white_delete.pngþpage_white_dvd.pngþpage_white_edit.pngþpage_white_error.pngþpage_white_excel.pngþpage_white_find.pngþpage_white_flash.pngþpage_white_freehand.pngþpage_white_gear.pngþpage_white_get.pngþpage_white_go.pngþpage_white_horizontal.pngþpage_white_h.pngþpage_white_key.pngþpage_white_lightning.pngþpage_white_link.pngþpage_white_magnify.pngþpage_white_medal.pngþpage_white_office.pngþpage_white_paintbrush.pngþpage_white_paint.pngþpage_white_paste.pngþpage_white_php.pngþpage_white_picture.pngþpage_white.pngþpage_white_powerpoint.pngþpage_white_put.pngþpage_white_ruby.pngþpage_white_stack.pngþpage_white_star.pngþpage_white_swoosh.pngþpage_white_text.pngþpage_white_text_width.pngþpage_white_tux.pngþpage_white_vector.pngþpage_white_visualstudio.pngþpage_white_width.pngþpage_white_word.pngþpage_white_world.pngþpage_white_wrench.pngþpage_white_zip.pngþpage_word.pngþpage_world.pngþpaintbrush.pngþpaintcan.pngþpalette.pngþpaste_plain.pngþpaste_word.pngþpencil_add.pngþpencil_delete.pngþpencil_go.pngþpencil.pngþphone_add.pngþphone_delete.pngþphone.pngþphone_sound.pngþphoto_add.pngþphoto_delete.pngþphoto_link.pngþphoto.pngþphotos.pngþpicture_add.pngþpicture_delete.pngþpicture_edit.pngþpicture_empty.pngþpicture_error.pngþpicture_go.pngþpicture_key.pngþpicture_link.pngþpicture.pngþpicture_save.pngþpictures.pngþpilcrow.pngþpill_add.pngþpill_delete.pngþpill_go.pngþpill.pngþplugin_add.pngþplugin_delete.pngþplugin_disabled.pngþplugin_edit.pngþplugin_error.pngþplugin_go.pngþplugin_link.pngþplugin.pngþprinter_add.pngþprinter_delete.pngþprinter_empty.pngþprinter_error.pngþprinter.pngþrainbow.pngþreport_add.pngþreport_delete.pngþreport_disk.pngþreport_edit.pngþreport_go.pngþreport_key.pngþreport_link.pngþreport_magnify.pngþreport_picture.pngþreport.pngþreport_user.pngþreport_word.pngþresultset_first.pngþresultset_last.pngþresultset_next.pngþresultset_previous.pngþrosette.pngþrss_add.pngþrss_delete.pngþrss_go.pngþrss.pngþrss_valid.pngþruby_add.pngþruby_delete.pngþruby_gear.pngþruby_get.pngþruby_go.pngþruby_key.pngþruby_link.pngþruby.pngþruby_put.pngþscript_add.pngþscript_code.pngþscript_code_red.pngþscript_delete.pngþscript_edit.pngþscript_error.pngþscript_gear.pngþscript_go.pngþscript_key.pngþscript_lightning.pngþscript_link.pngþscript_palette.pngþscript.pngþscript_save.pngþserver_add.pngþserver_chart.pngþserver_compressed.pngþserver_connect.pngþserver_database.pngþserver_delete.pngþserver_edit.pngþserver_error.pngþserver_go.pngþserver_key.pngþserver_lightning.pngþserver_link.pngþserver.pngþserver_uncompressed.pngþshading.pngþshape_align_bottom.pngþshape_align_center.pngþshape_align_left.pngþshape_align_middle.pngþshape_align_right.pngþshape_align_top.pngþshape_flip_horizontal.pngþshape_flip_vertical.pngþshape_group.pngþshape_handles.pngþshape_move_back.pngþshape_move_backwards.pngþshape_move_forwards.pngþshape_move_front.pngþshape_rotate_anticlockwise.pngþshape_rotate_clockwise.pngþshape_square_add.pngþshape_square_delete.pngþshape_square_edit.pngþshape_square_error.pngþshape_square_go.pngþshape_square_key.pngþshape_square_link.pngþshape_square.pngþshape_ungroup.pngþshield_add.pngþshield_delete.pngþshield_go.pngþshield.pngþsitemap_color.pngþsitemap.pngþsound_add.pngþsound_delete.pngþsound_low.pngþsound_mute.pngþsound_none.pngþsound.pngþspellcheck.pngþsport_8ball.pngþsport_basketball.pngþsport_football.pngþsport_golf.pngþsport_raquet.pngþsport_shuttlecock.pngþsport_soccer.pngþsport_tennis.pngþstar.pngþstatus_away.pngþstatus_busy.pngþstatus_offline.pngþstatus_online.pngþstop.pngþstyle_add.pngþstyle_delete.pngþstyle_edit.pngþstyle_go.pngþstyle.pngþsum.pngþtab_add.pngþtab_delete.pngþtab_edit.pngþtab_go.pngþtable_add.pngþtable_delete.pngþtable_edit.pngþtable_error.pngþtable_gear.pngþtable_go.pngþtable_key.pngþtable_lightning.pngþtable_link.pngþtable_multiple.pngþtable.pngþtable_refresh.pngþtable_relationship.pngþtable_row_delete.pngþtable_row_insert.pngþtable_save.pngþtable_sort.pngþtab.pngþtag_blue_add.pngþtag_blue_delete.pngþtag_blue_edit.pngþtag_blue.pngþtag_green.pngþtag_orange.pngþtag_pink.pngþtag.pngþtag_purple.pngþtag_red.pngþtag_yellow.pngþtelephone_add.pngþtelephone_delete.pngþtelephone_edit.pngþtelephone_error.pngþtelephone_go.pngþtelephone_key.pngþtelephone_link.pngþtelephone.pngþtelevision_add.pngþtelevision_delete.pngþtelevision.pngþtext_align_center.pngþtext_align_justify.pngþtext_align_left.pngþtext_align_right.pngþtext_allcaps.pngþtext_bold.pngþtext_columns.pngþtext_dropcaps.pngþtextfield_add.pngþtextfield_delete.pngþtextfield_key.pngþtextfield.pngþtextfield_rename.pngþtext_heading_1.pngþtext_heading_2.pngþtext_heading_3.pngþtext_heading_4.pngþtext_heading_5.pngþtext_heading_6.pngþtext_horizontalrule.pngþtext_indent.pngþtext_indent_remove.pngþtext_italic.pngþtext_kerning.pngþtext_letter_omega.pngþtext_letterspacing.pngþtext_linespacing.pngþtext_list_bullets.pngþtext_list_numbers.pngþtext_lowercase.pngþtext_padding_bottom.pngþtext_padding_left.pngþtext_padding_right.pngþtext_padding_top.pngþtext_replace.pngþtext_signature.pngþtext_smallcaps.pngþtext_strikethrough.pngþtext_subscript.pngþtext_superscript.pngþtext_underline.pngþtext_uppercase.pngþthumb_down.pngþthumb_up.pngþtick.pngþtime_add.pngþtime_delete.pngþtime_go.pngþtimeline_marker.pngþtime.pngþtransmit_add.pngþtransmit_blue.pngþtransmit_delete.pngþtransmit_edit.pngþtransmit_error.pngþtransmit_go.pngþtransmit.pngþtux.pngþuser_add.pngþuser_comment.pngþuser_delete.pngþuser_edit.pngþuser_female.pngþuser_go.pngþuser_gray.pngþuser_green.pngþuser_orange.pngþuser.pngþuser_red.pngþuser_suit.pngþvcard_add.pngþvcard_delete.pngþvcard_edit.pngþvcard.pngþvector_add.pngþvector_delete.pngþvector.pngþwand.pngþweather_clouds.pngþweather_cloudy.pngþweather_lightning.pngþweather_rain.pngþweather_snow.pngþweather_sun.pngþwebcam_add.pngþwebcam_delete.pngþwebcam_error.pngþwebcam.pngþworld_add.pngþworld_delete.pngþworld_edit.pngþworld_go.pngþworld_link.pngþworld.pngþwrench_orange.pngþwrench.pngþxhtml_add.pngþxhtml_delete.pngþxhtml_go.pngþxhtml.pngþxhtml_valid.pngþzoom_in.pngþzoom_out.pngþzoom.png000092MOBI.APPSþ0c2SUB.D3ADMINýSUB.MOBI.APP.MENUýSUB.MOBI.WOýSUB.TESTþAýIýAýAþD3 AdministrationýApplication ChooserýDemo WO ApplicationýDemo Application00007BMONTHLY.2013þ0c277869980þ89686980þ89000910þ77900940þ58970340þ67198860þ71869680þ80687070þ74287080þ58871070þ68257080þ8878968000007BMONTHLY.2014þ0c286522200þ99652200þ98889900þ86556600þ65522600þ74665400þ79855200þ89652300þ82541200þ65412300þ75841200þ98655200000073MONTHLY.2015þ0c296543200þ80145600þ88854000þ96501100þ95012300þ96512100þ84563200þ105236800þ98521000þ64414400þ5888660000007FMONTHLY.GPS.2013þ0c226517550þ28806410þ31786017þ29914744þ20915414þ22019619þ23275705þ28006808þ27998227þ22781623þ24704258þ3250054900007FMONTHLY.GPS.2014þ0c229463944þ32007122þ35317797þ33238604þ23239349þ24466243þ25861894þ31118676þ31109141þ25312914þ27449175þ36111721000076MONTHLY.GPS.2015þ0c236796778þ32936845þ33965425þ37984720þ34865781þ36545082þ31976227þ41016726þ35949343þ23315342þ21977139000073MONTHLY.NET.2014þ0c22946394þ3200712þ3531779þ3323860þ2323934þ2446624þ2586189þ3111867þ3110914þ2531291þ2744917þ361117200006CMONTHLY.NET.2015þ0c29654320þ8014560þ8885400þ9650110þ9501230þ9651210þ8456320þ10523680þ9852100þ6441440þ5888660000081MONTHLY.PARTS.2014þ0c241437844þ52242841þ47585401þ43842542þ36090673þ36395560þ41646485þ58547188þ41895322þ32831266þ40749858þ47292673000078MONTHLY.PARTS.2015þ0c249608696þ51350055þ53344946þ45243183þ62544291þ44956837þ42935385þ57601358þ54084263þ31465039þ29950454000084MONTHLY.SERVICES.2014þ0c245084356þ47409359þ51304499þ42714058þ29431927þ38269840þ38208715þ31105112þ40645878þ32581034þ35091342þ5136252700007BMONTHLY.SERVICES.2015þ0c246934504þ28795545þ35509054þ51257917þ32468009þ51555263þ41627815þ47635442þ44436737þ32949361þ2893614600000EPLATFORMþ0c2UD000288STATE.NAMESþ0c2AL,AK,AZ,AR,CA,CO,CT,DE,FL,GA,HI,ID,IL,IN,IA,KS,KY,LA,ME,MD,MA,MI,MN,MS,MO,MT,NE,NV,NH,NJ,NM,NY,NC,ND,OH,OK,OR,PA,RI,SC,SD,TN,TX,UT,VT,VA,WA,WV,WI,WY,DCþAlabama,Alaska,Arizona,Arkansas,California,Colorado,Connecticut,Delaware,Florida,Georgia,Hawaii,Idaho,Illinois,Indiana,Iowa,Kansas,Kentucky,Louisiana,Maine,Maryland,Massachusetts,Michigan,Minnesota,Mississippi,Missouri,Montana,Nebraska,Nevada,NewHampshire,NewJersey,NewMexico,NewYork,NorthCarolina,NorthDakota,Ohio,Oklahoma,Oregon,Pennsylvania,RhodeIsland,SouthCarolina,SouthDakota,Tennessee,Texas,Utah,Vermont,Virginia,Washington,WestVirginia,Wisconsin,Wyoming,DistrictofColumbia000040TLDB.SETTINGSþ0c2SUB.USER.AUTHþ1þ10þ83þ1þ-5þþþiso-8859-1þNþNþþþþ00005FTLDB.THEMESþ0c2cream_gray.css,ice.css,patriotic.css,tuscani.cssþTheme 1,Theme 2,Theme 3,Theme 400024ECOMPILE.SETUPþ0c2BASIC %FILENAME% %ITEMNAME%þ* To configure the compile command when using the web editorþ* edit line # 1 of this record to contain the appropriate syntax.þ*þ* Example # 1 - Standard compile using BASICþ* 001 BASIC %FILENAME% %ITEMNAME%þ*þ* Example # 2 - FLASH compile using BASICþ* 001 BASIC %FILENAME% %ITEMNAME% (Oþ*þ* Example # 3 - Standard compile using COMPILEþ* 001 COMPILE %FILENAME% %ITEMNAME%þ*þ* Only line # 1 of this record is used, all other lines of this record are ignored.þ* If this record is deleted, the default behavior is:þ* COMPILE %FILENAME% %ITEMNAME%0000A1FC2DPIE.SETTINGSþ0c2<graph caption='[CHART.TITLE]' decimalPrecision='0' showNames='1' showValues='0'þ pieRadius='[RADIUS]' animation='0' >þ [CHART.DATA]þ</graph>0000B3PORTAL.SALES.REPORT.SETUPþ0c2MVDBþPORTAL.SALESþCLOSE.DATEþCLOSE.DATE.MMþCLOSE.DATE.YYYYþEXT.AMTþEXT.COSTþREP.NAMEþBRANCHþREGIONþ1þ99þMD24þF8;9;10;-;(MR2);*þ0þþþ5þTREP;X;1;1þ13þþ14000070PORTAL.AR.REPORT.SETUPþ0c2MVDBþPORTAL.ARþDUE.DATEþDATES.PAIDþINVOICE.AMTþBALANCEþCUSTþ20þ8þ6þMD2þþ50þMD2þþCUSTþ1000062PORTAL.AP.REPORT.SETUPþ0c2MVDBþPORTAL.APþDUE.DATEþDATE.PAIDþINV.AMOUNTþBALANCEþþ20þ8þ6þMD2þþ50þMD200001FMVCONNECT.TYPEþ0c2CROSSPLATFORM000065MVDBTOOLKITþ0c2{þ "bpfiles": [þ   { "filename": "MVDBTOOLKIT.BP" },þ   { "filename": "WOBJ.BP" }þ ]þ}05400FWDB.BPþ0c000021DSET.COOKIEþ0c2SUBROUTINE SET.COOKIE( C.VAL )þ**********************************************************************þ* Copyright (C) 2003 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written By   : Michael Schmidt, Sierra Bravo Corporationþ* Date Written : 10/25/03þ* Description  : This program sets the SESSION$COOKIES variable.þ*              þ**********************************************************************þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD WWW.INCLUDEþ*þIF TRIM(C.VAL) # "" THENþ  SESSION$COOKIES<-1> = C.VALþENDþ*þRETURNþ*000872CREATE.SESSIONþ0c2SUBROUTINE CREATE.SESSION( SESSION.ID )þ*þ* Copyright (C) 2003 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written by: Michael Derheim, Sierra Bravoþ* Date: 10/25/03þ* Description: This program creates a unique session record andþ*              returns the session id to the calling program.þ*þ*          WARNING: This program relys on MvInternet to generateþ*                       its unique ID.  If you are testing your programþ*                       from TCL, this will FAIL and you will not getþ*                       any session ID returned.þ*þ* Modified by  : Mike Schmidt, Sierra Bravo Corporationþ* Date Revised : 11/6/2003þ* Modification : Modified to add the date and time to attributes 3 and 4.þ*þ* Modified By: Peter Schellenbach, Zumasysþ* Date: 06/12/2015þ* Description: Changed PROCREAD to use SENTENCE() in the ELSE clauseþ*þ* Modified By: Peter Schellenbach, Zumasysþ* Date: 10/25/2016þ* Description: Added INCLUDE WWW.INCLUDE so we have access to F.WEB.SESSIONþ*              in /WWW/ COMMON, instead of opening file here. Use F.WEB.SESSIONþ*              instead of WEB.SESSION for file variable. Removed PROCREAD /þ*              SENTENCE since CGI$UNIQUE.ID is also in /WWW/ COMMON.þ*þ* Initþ*#MAKE# RL $OPTIONS D3þEQU FALSE TO 0, TRUE TO 1þEQU AM TO CHAR(254), VM TO CHAR(253), SVM TO CHAR(252)þ*þINCLUDE WBPD WWW.INCLUDE ; *PJS 10-25-16*þ*þSESSION.ID = ''þ*þ*PJS 10-25-16*OPEN '','WEB.SESSION' TO WEB.SESSION ELSE SESSION.ID = 'ERROR'þ*PJS 06-12-15*PROCREAD TCL.LINE ELSE TCL.LINE = ""; SESSION.ID = 'ERROR'þ*PJS 10-25-16*PROCREAD TCL.LINE ELSE TCL.LINE = SENTENCE(); *PJS 06-12-15*þ*PJS 10-25-16*SESSION.ID = FIELD( TCL.LINE, ' ', 2 )þ*þSESSION.ID = CGI$UNIQUE.ID ;* PJS 10-25-16*þIF SESSION.ID = "" THEN SESSION.ID = "ERROR" ; *PJS 06-12-15*þCONVERT '{' TO '' IN SESSION.IDþCONVERT '}' TO '' IN SESSION.IDþ*þIF (SESSION.ID # 'ERROR') THENþ  SESSION.ID = SESSION.ID:'-':DATE():'-':TIME()þ  SESSION.REC = ""þ  SESSION.REC<3> = DATE()þ  SESSION.REC<4> = TIME()þ  WRITE SESSION.REC ON F.WEB.SESSION, SESSION.IDþENDþSESSION$ID = SESSION.IDþCALL PUT.SESSION.VAR('LastSessionAccess', DATE():'*':TIME())þ*þRETURNþ*þEND017385MVDB.MAINþ0c2*þ* Copyright (C) 2007 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written by: Luke Bucklin, Sierra Bravoþ* Date: November, 2007þ* Description: Dashboard Display Programþ*þ* 1-5-15 TOM PARKER OF ZUMASYS - CHANGES TO SUPPORT MULTI-SERIES DRILLDOWNSþ* 1-26-15 TOM PARKER OF ZUMASYS - ALLOW PRINTABLE ON ALL CHART TYPE SINCEþ*         NEW FUSION CHARTS SUPPORT THEMþ* 3-4-15 TOM PARKER OF ZUMASYS - DONT STRIP OUT DECIMALS IN W$BAR.VALUESþ* 3-15-15 TOM PARKER OF ZUMASYS - ADDITIONAL CHANGE TO SUPPORT MULTI-SERIESþ* 6-4-15 PETER SCHELLENBACH OF ZUMASYS - MODIFIED FOR QMþ*          CHANGE OCONV(X,'U3060') TO MD5(X)þ*þ* Modified by Mike Street of Zumasys 07-22-15 for UniData compatiblity:þ*   When testing for cataloged program, check if line 1 is 'C', not 'VR'.þ*   Change U3060 user exist to use DIGEST('MD5',...) instead.þ*þ* 11-30-15 TOM PARKER - PROVIDE WEBSERVICE ACCESS WITH EMBEDDED USER AND PASSWORDþ*þ* 12-15-15 & 01-14-16 Tom Parker & Peter Schellenbach (*PDF*)þ*  Added support for PDF generation of any widget.þ*  Widget subroutine must set W$PDFABLE to 1 to enable PDF generation.þ*  PDF generation must be enabled in the PDF Configuration widget, onþ*  the Administrator dashboard.þ* 01-25-16 Tom Parker - Do not allow Go Back if doing webserviceþ* 04-25-16 Tom Parker - Make Go Back button fully functional for backingþ*                       up from drilldownsþ* 6-1-16 TOM PARKER - FIX ISSUES WITH BACKING UP FROM DRILLDOWNþ* 06-27-16 Tom Parker & Peter Schellenback (*EXCEL*)þ*  Added support for EXCEL spreadsheet generation of many widgets.þ*  Widget type must be EXCEL'able to set W$EXCELABLE to 1 to generate iconþ*þ* 09-23-16 Tom Parker - Eliminate GO_BACK button support and replace withþ*          logic to handle standard browser back buttonþ*  þ* 09-23-16 Peter Schellenbachþ*  Add support for alternate logo defined for each user (MVDB.USERS attr 7).þ*  Enable 'datepicker' style input fields.þ*  Fix single user login problem.þ*  þ* 10-07-16 Peter Schellenbachþ*  If form contains many widget input controls, use POST instead of GETþ*  for form submission to avoid URL length limitations.þ*þ*  Because POST method for login and widget inputs causes browser to promptþ*  for resubmit when using back or refresh button, the POST-REDIRECT-GETþ*  pattern is now used. When responding to POST, we return small javascriptþ*  which REDIRECTS by setting window.location. This causes a GET from browser.þ*  þ* 10-25-16 Peter Schellenbachþ*  Refactored INIT.WWW so all dashboard specific initialization is now inþ*  MVDB.INIT which is called from here. Only use POST-REDIRECT-GET patternþ*  for login page. Use POST without P-R-G for forms with more than 20 inputsþ*  so that we don't end up with a bogus URL in the browser location (theþ*  URL used for redirect is bogus, and cannot be used to create emailed orþ*  webservice URLs).þ*þ*  Removed the saving of GLOBAL.USER.DATA and WIDGET.USER.DATA from thisþ*  program and move it to MVDB.INIT, saving before letting MVDB.MAIN handleþ*  the request.þ*þ* 11-02-16 Peter Schellenbachþ*  Fine-tuned widget sizes now that we have switched to application_larger.cssþ*  instead of application_normal.css to maximuze the are used by the charts.þ*  Calculate the 1/3 widget size differently for the 2-column layout, whichþ*  is 45 pixels wider than the same widget in 3-column layout. Old size valuesþ*  are commented out for reference (in case we need to support normal size again.)þ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD WWW.INCLUDEþINCLUDE WBPD MVDB.INCLUDEþINCLUDE WBPD FI.MVDB.USERSþINCLUDE WBPD FI.MVDB.DEFSþINCLUDE WBPD FI.MVDB.WIDGETSþINCLUDE WBPD FI.MVDB.WIDGET.TYPESþ*þEQU TRUE TO 1, FALSE TO 0, AM TO CHAR(254), VM TO CHAR(253), SVM TO CHAR(252)þ*þOPEN '','MVDB.WIDGETS' TO F.MVDB.WIDGETS ELSE STOP 201, 'MVDB.WIDGETS'þOPEN '','MVDB.SUBS' TO F.MVDB.SUBS ELSE STOP 201, 'MVDB.SUBS'þOPEN '','MVDB.USERS' TO F.MVDB.USERS ELSE STOP 201, 'MVDB.USERS'þOPEN '','MVDB.DEFS' TO F.MVDB.DEFS ELSE STOP 201, 'MVDB.DEFS'þOPEN '','MVDB.UDATA' TO F.MVDB.UDATA ELSE STOP 201, 'MVDB.UDATA'þOPEN '','MVDB.CONTROL' TO F.MVDB.CONTROL ELSE STOP 201, 'MVDB.CONTROL'þ*þ** 11-30-15 NEED AN INSTALL DATE TO CONTROL SINGLE USER WEBSERVICE ACCESSþ*þREAD INSTALL.DATE FROM F.MVDB.CONTROL, 'INSTALL.DATE' ELSEþ   INSTALL.DATE=DATE()þ   WRITE INSTALL.DATE ON F.MVDB.CONTROL, 'INSTALL.DATE'þ ENDþ*þOPEN '','MVDB.MAP.DATA' TO F.MVDB.MAP.DATA ELSE STOP 201, 'MVDB.MAP.DATA'þOPEN '','MVDB.WIDGET.TYPES' TO F.MVDB.WIDGET.TYPES ELSE STOP 201, 'MVDB.WIDGET.TYPES'þOPEN '','MVDB.THEMES' TO F.MVDB.THEMES ELSE STOP 201, 'MVDB.THEMES'þOPEN '','MD' TO F.MD ELSEþ  OPEN '','VOC' TO F.MD ELSE STOP 201, 'MD/VOC'þENDþ*þREAD WIDGET.DIV FROM F.WEB.FORMS, "WIDGET.DIV" ELSE WIDGET.DIV = "Missing WIDGET.DIV"þ*þDIM SITE$SETTINGS(100)þEQU SITE$AUTH.SUB     TO SITE$SETTINGS(1)þEQU SITE$NULL.PW.OK   TO SITE$SETTINGS(2)þEQU SITE$W.MAX.DUR    TO SITE$SETTINGS(3)þEQU SITE$TCP.PORT     TO SITE$SETTINGS(4)þEQU SITE$ALT.LOGO     TO SITE$SETTINGS(7)þEQU SITE$THEME        TO SITE$SETTINGS(8)þEQU SITE$CHARSET      TO SITE$SETTINGS(9)þEQU SITE$AUTO.TRIM    TO SITE$SETTINGS(10)þEQU SITE$REFRESH TO SITE$SETTINGS(11)þEQU SITE$ALLOW.WEBSVC TO SITE$SETTINGS(12)þEQU SITE$ALLOW.EMAILD TO SITE$SETTINGS(13)þ*þMATREAD SITE$SETTINGS FROM F.MVDB.CONTROL, "MVDB.SETTINGS" ELSE MAT SITE$SETTINGS = ""þREAD THEME.LIST FROM F.MVDB.CONTROL, "MVDB.THEMES" ELSEþ THEME.LIST = "cream_gray.css,ice.css,patriotic.css,tuscani.css"þ THEME.LIST<2> = "Theme 1,Theme 2,Theme 3,Theme 4"þ WRITE THEME.LIST ON F.MVDB.CONTROL, "MVDB.THEMES"þENDþIF SITE$CHARSET = '' THEN SITE$CHARSET = 'UTF-8'þ*MATREAD SITE$SETTINGS FROM F.MVDB.CONTROL, "MVDB.SETTINGS" ELSE MAT SITE$SETTINGS = ""þREADV THEME.CSS FROM F.MVDB.THEMES, SITE$THEME, 1 ELSE THEME.CSS = ''þIF SITE$ALT.LOGO = '' THENþ  SITE.LOGO = '/db/images/mv-logo.png'þEND ELSEþ  SITE.LOGO = SITE$ALT.LOGOþ  IF NOT(INDEX(SITE.LOGO,'/',1)) THENþ    SITE.LOGO = '/db/images/':SITE.LOGOþ  ENDþENDþ*þMAT GLOBAL.INFO = ''þG$QUERYMODE = FALSE ;* Not query modeþ*þ*PDF*þ* Read PDF configuration settingsþDIM PDF$SETTINGS(10)þEQU PDF$ENABLED   TO PDF$SETTINGS(1)þEQU PDF$COMMAND   TO PDF$SETTINGS(2)þEQU PDF$DIRECTORY TO PDF$SETTINGS(3)þEQU PDF$LIFETIME  TO PDF$SETTINGS(4)þMATREAD PDF$SETTINGS FROM F.MVDB.CONTROL,'PDF.SETTINGS' ELSE MAT PDF$SETTINGS=''þIF PDF$ENABLED THEN CALL SUB.PDF.FUNC('cleanup','')þ*þ* GET LICENSE INFORMATIONþ*þCALL SUB.MVDB.FEATURES(USER.LIMIT,MAPS.ENABLED,FUSION.WIDGETS.ENABLED,WATERMARK)þ*þNAME.COLOR = "AQUA":VM:"BLACK":VM:"BLUE":VM:"FUCHSIA":VM:"GRAY":VM:"GREEN":VM:"LIME":VM:"MAROON":VM:"NAVY"þNAME.COLOR = NAME.COLOR:VM:"OLIVE":VM:"PURPLE":VM:"RED":VM:"SILVER":VM:"TEAL":VM:"WHITE":VM:"YELLOW":VM:"GREY"þNAME.COLOR<2> = "#00FFFF":VM:"#000000":VM:"#0000FF":VM:"#FF00FF":VM:"#808080":VM:"#008000":VM:"#00FF00":VM:"#800000":VM:"#000080"þNAME.COLOR<2> = NAME.COLOR<2>:VM:"#808000":VM:"#800080":VM:"#FF0000":VM:"#C0C0C0":VM:"#008080":VM:"#FFFFFF":VM:"#FFFF00":VM:"#808080"þ*þLOCATE "logout" IN CGI$VARS SETTING POS THENþ  CALL DESTROY.SESSIONþENDþCALL GET.SESSION.VAR("userid",userid)þCALL GET.SESSION.VAR("adminauth",adminauth)þLOCATE "psid" IN CGI$VARS SETTING POS THENþ  PURGE.SESSIONID = CGI$VALS<POS>þ  EXECUTE "MVDB.PURGE.SESSIONS ":PURGE.SESSIONID CAPTURING JUNKþENDþMAT USER.ITEM = "" ;* PJS 09-23-16: make sure this gets initialized, in case of webservice or emailed reportsþ* 11-30-15 ESTABLISH WEBSERVICE VARIABLESþDIM W$WEBSERVICE.DATA(5)þMATREAD W$WEBSERVICE.DATA FROM F.MVDB.UDATA,SESSION$ID:"$WEBSERVICE" ELSE MAT W$WEBSERVICE.DATA=''þEQU W$WEBSERVICE TO W$WEBSERVICE.DATA(1)þEQU W$EMAILED.REPORT TO W$WEBSERVICE.DATA(2)þHTML.ID=''þIF userid = "" THENþ  LOGIN.OK = FALSEþ  LOGIN.MSG = ""  þ  loginid = "" ; password = ""þ  LOCATE "loginid" IN CGI$VARS SETTING POS THENþ    loginid = CGI$VALS<POS>þ    LOCATE "password" IN CGI$VARS SETTING POS THENþ      password = CGI$VALS<POS>þ    ENDþ  ENDþ*WEBSERVICE*  IF loginid # "" AND (password # "" OR SITE$NULL.PW.OK=1) THENþ*WEBSERVICE*    IF SITE$AUTH.SUB # "" THENþ*WEBSERVICE*      READ CATPTR FROM F.MD, SITE$AUTH.SUB ELSE CATPTR = ""      þ*WEBSERVICE*      *MS 07-22-15 UD* IF CATPTR<1> = "VR" THENþ*WEBSERVICE*      IF CATPTR<1> = "C" THEN ; *MS 07-22-15 UD*þ*WEBSERVICE*        CALL @SITE$AUTH.SUB(loginid,password,"AUTH",LOGIN.OK,LOGIN.MSG,MAT USER.ITEM)þ*WEBSERVICE*        IF LOGIN.OK = "Y" THEN LOGIN.OK = TRUEþ*WEBSERVICE*        IF NOT(LOGIN.OK MATCHES "1N0N") THEN LOGIN.OK = FALSEþ*WEBSERVICE*      END ELSEþ*WEBSERVICE*        LOGIN.OK = FALSEþ*WEBSERVICE*        LOGIN.MSG = SITE$AUTH.SUB:" authentication subroutine not cataloged."þ*WEBSERVICE*      ENDþ*WEBSERVICE*    END ELSEþ*WEBSERVICE*      MATREAD USER.ITEM FROM F.MVDB.USERS, loginid THENþ*WEBSERVICE*        *MS 07-22-15 UD* IF OCONV(password,"U3060") = USER.PASSWORD THENþ*WEBSERVICE*        IF DIGEST('MD5',password,1,ENCR.PASSWORD) = 0 THEN ; *MS 07-22-15 UD*þ*WEBSERVICE*          ENCR.PASSWORD = OCONV(ENCR.PASSWORD,'MX0C') ; *MS 07-22-15 UD*þ*WEBSERVICE*          IF ENCR.PASSWORD = USER.PASSWORD THEN ; *MS 07-22-15 UD*þ*WEBSERVICE*            LOGIN.OK = TRUEþ*WEBSERVICE*          ENDþ*WEBSERVICE*        ENDþ*WEBSERVICE*      ENDþ*WEBSERVICE*    ENDþ  *þ  ** 11-30-15 WEBSERVICE AND EMAILED REPORT CAPABILITY LOGICþ  *þ  IF loginid = 'emailed' THEN W$EMAILED.REPORT=1þ  IF loginid = 'webservice' THEN W$WEBSERVICE=1þ  LOCATE "htmlid" IN CGI$VARS SETTING POS THENþ    HTML.ID = CGI$VALS<POS>þ  END ELSEþ    HTML.ID='null'þ  ENDþ  IF loginid # "" AND (W$EMAILED.REPORT OR password # "" OR SITE$NULL.PW.OK=1) THENþ     LOCATE 'passtime' IN CGI$VARS SETTING PASSTIME.POS ELSE PASSTIME.POS=0þ     IF PASSTIME.POS THENþ        PASSTIME=CGI$VALS<PASSTIME.POS>þ        CONVERT ':' TO '' IN PASSTIMEþ      END ELSE PASSTIME=''þ     BEGIN CASEþ        CASE PASSTIME AND loginid = 'webservice'þ           EXECUTE "MVDB.PURGE.SESSIONS webservice" CAPTURING JUNK; * PURGE ANY OLD webservicesþ           IF PASSTIME MATCHES '6N' THENþ              IPASSTIME = ICONV(PASSTIME[1,2]:':':PASSTIME[3,2]:':':PASSTIME[5,2],'MT')þ           END ELSEþ              IPASSTIME = -601 ;* Ensure the time is expired if not 6 digits!þ           ENDþ           BEGIN CASEþ              CASE SITE$ALLOW.WEBSVC # 'Y'þ                 * webservice login is not enabledþ                 LOGIN.OK = FALSEþ                 LOGIN.MSG = 'Webservice login is not enabled'þ              CASE USER.LIMIT < 2 AND DATE() > (INSTALL.DATE+30)þ                 * MUST HAVE A MULTI USER LICENSE TO USE WEBSERVICE AFTERþ                 * 30 DAY TRIAL PERIODþ                 LOGIN.OK = FALSEþ                 LOGIN.MSG = 'Must have a multi-user license to use webservices'þ              CASE ABS(TIME()-IPASSTIME) > 600þ                 * TIME MUST BE WITHIN 10 MINUTES OF MACHINE TIMEþ                 LOGIN.OK = FALSEþ                 *LOGIN.MSG = 'Request not synced with system time.'þ                 LOGIN.MSG = 'The request URL has expired. This may be due to differences in the system 'þ                 LOGIN.MSG := 'clock on the MV Dashboard server and the clock used to generate the URL.'þ              CASE 1þ                 * VALID PASSWORD IS THE SUM OF MMDDYY + SSMMHH (FROM PASSTIME)þ                 * INVERT THE TIME TO SSMMHHþ                 EMITSSAP=''þ                 FOR TIME.I = 6 TO 1 STEP -1þ                    EMITSSAP:=PASSTIME[TIME.I,1]þ                  NEXT TIME.Iþ                 *OTODAY=OCONV(DATE(),'D2-')þ                 *CONVERT '-' TO '' IN OTODAYþ                 TODAY.MM=OCONV(DATE(),'DM')'R%%'þ                 TODAY.DD=OCONV(DATE(),'DD')'R%%'þ                 TODAY.YY=OCONV(DATE(),'DY')'R%%'þ                 OTODAY = TODAY.MM:TODAY.DD:TODAY.YY ;* handle non-USA date formats properlyþ                 CALCED.PASSWORD=OTODAY+EMITSSAPþ                 IF password MATCHES '6N' THEN CHECKED.PASSWORD = password + 0 ELSE CHECKED.PASSWORD = -1þ                 IF CALCED.PASSWORD = CHECKED.PASSWORD THENþ                    LOGIN.OK = TRUEþ                    USER.ROLE=''þ*                    CALL PUT.SESSION.VAR("userid",loginid)þ                 END ELSEþ                    LOGIN.OK = FALSEþ                    LOGIN.MSG = 'Invalid password'þ                 ENDþ           END CASEþ        CASE loginid = 'emailed'þ           EXECUTE "MVDB.PURGE.SESSIONS emailed" CAPTURING JUNK; * PURGE ANY OLD emailedþ           OPEN '','MVDB.EMAILED.HTML' TO F.EMAILED.HTML ELSE STOP 201, 'MVDB.EMAILED.HTML'þ           *þ           ** PURGED ANY EMAIL REPORTS OVER 10 DAYS OLDþ           *þ           EXECUTE 'SELECT MVDB.EMAILED.HTML' CAPTURING JUNKþ           LOOPþ              READNEXT EMAILED.ID ELSE EMAILED.ID='DONE'þ           UNTIL EMAILED.ID='DONE' DOþ              IF (EMAILED.ID[1,5]+10) < DATE() THENþ                 DELETE F.EMAILED.HTML, EMAILED.IDþ              ENDþ           REPEATþ           IF SITE$ALLOW.EMAILD # 'Y' THENþ              * emaild login is not enabledþ              LOGIN.OK = FALSEþ              LOGIN.MSG = 'Emailed login is not enabled'þ           END ELSEþ              READV TEST.HTML.REPORT FROM F.EMAILED.HTML, HTML.ID, 1 ELSE TEST.HTML.REPORT='NOTFOUND'þ              IF TEST.HTML.REPORT = 'NOTFOUND' THENþ                 LOGIN.OK = FALSEþ                 LOGIN.MSG = 'Emailed report not found with ID of ':HTML.IDþ              END ELSEþ                 USER.ROLE=''þ                 LOGIN.OK = TRUEþ                 INSERT.VARS='dbname':AM:'udview':AM:'udpos1':AM:'udval1'þ                 INSERT.VALS='Emailed Report':AM:'Emailed Report':AM:1:AM:HTML.IDþ                 CGI$VARS=INSERT(CGI$VARS,1,0,0,INSERT.VARS)þ                 CGI$VALS=INSERT(CGI$VALS,1,0,0,INSERT.VALS)þ              ENDþ           ENDþ        CASE SITE$AUTH.SUB # ""þ           READ CATPTR FROM F.MD, SITE$AUTH.SUB ELSE CATPTR = ""þ           *MS 07-22-15 UD* IF CATPTR<1> = "VR" THENþ           IF CATPTR<1> = "C" THEN ; *MS 07-22-15 UD*þ             CALL @SITE$AUTH.SUB(loginid,password,"AUTH",LOGIN.OK,LOGIN.MSG,MAT USER.ITEM)þ             IF LOGIN.OK = "Y" THEN LOGIN.OK = TRUEþ             IF NOT(LOGIN.OK MATCHES "1N0N") THEN LOGIN.OK = FALSEþ           END ELSEþ             LOGIN.OK = FALSEþ             LOGIN.MSG = SITE$AUTH.SUB:" authentication subroutine not cataloged."þ           ENDþ        CASE 1þ           MATREAD USER.ITEM FROM F.MVDB.USERS, loginid THENþ             *MS 07-22-15 UD* IF OCONV(password,"U3060") = USER.PASSWORD THENþ             IF DIGEST('MD5',password,1,ENCR.PASSWORD) = 0 THEN ; *MS 07-22-15 UD*þ               ENCR.PASSWORD = OCONV(ENCR.PASSWORD,'MX0C') ; *MS 07-22-15 UD*þ               IF ENCR.PASSWORD = USER.PASSWORD THEN ; *MS 07-22-15 UD*þ                 LOGIN.OK = TRUEþ*                 CALL PUT.SESSION.VAR("userid",loginid)þ               ENDþ             ENDþ           ENDþ     END CASEþ  ENDþ  IF LOGIN.OK THENþ    EXECUTE "MVDB.PURGE.SESSIONS" CAPTURING JUNK ;* Purge out old session dataþ    *þ    SELECT F.WEB.SESSIONþ    ACTIVE.SESSIONS = ""þ    USER.ACTIVE.SESSIONS = ""þ    LOOPþ      READNEXT WSID ELSE EXITþ      READ SREC FROM F.WEB.SESSION, WSID ELSE CONTINUEþ      LOCATE "userid" IN SREC<1> SETTING UPOS THENþ        ASUSER = SREC<2,UPOS>þ        LOCATE "LastSessionAccess" IN SREC<1> SETTING UPOS THENþ          ASDATE = FIELD(SREC<2,UPOS>,'*',1) ;* dateþ          ASTIME = FIELD(SREC<2,UPOS>,'*',2) ;* timeþ          ASAGE = (DATE()-ASDATE) * 86400þ          ASAGE += (TIME()-ASTIME)þ        END ELSE ASAGE = 0þ        IF OCONV(ASUSER,'MCU') = OCONV(loginid,'MCU') THENþ          LOCATE ASAGE IN USER.ACTIVE.SESSIONS<3> BY "DR" SETTING ASPOS ELSE NULLþ          USER.ACTIVE.SESSIONS = INSERT( USER.ACTIVE.SESSIONS, 1, ASPOS, 0, WSID )þ          USER.ACTIVE.SESSIONS = INSERT( USER.ACTIVE.SESSIONS, 2, ASPOS, 0, ASUSER ) ;* User IDþ          USER.ACTIVE.SESSIONS = INSERT( USER.ACTIVE.SESSIONS, 3, ASPOS, 0, ASAGE )þ        END ELSEþ          LOCATE ASAGE IN ACTIVE.SESSIONS<3> BY "DR" SETTING ASPOS ELSE NULLþ          ACTIVE.SESSIONS = INSERT( ACTIVE.SESSIONS, 1, ASPOS, 0, WSID )þ          ACTIVE.SESSIONS = INSERT( ACTIVE.SESSIONS, 2, ASPOS, 0, ASUSER ) ;* User IDþ          ACTIVE.SESSIONS = INSERT( ACTIVE.SESSIONS, 3, ASPOS, 0, ASAGE )þ        ENDþ      ENDþ    REPEATþ    *Merge active sessions for this user in front of þ    *the other sessions to prefer those sessions for cleanup.þ    IF USER.ACTIVE.SESSIONS # '' THENþ      ACTIVE.SESSIONS = INSERT( ACTIVE.SESSIONS, 1, 1, 0, USER.ACTIVE.SESSIONS<1> )þ      ACTIVE.SESSIONS = INSERT( ACTIVE.SESSIONS, 2, 1, 0, USER.ACTIVE.SESSIONS<2> )þ      ACTIVE.SESSIONS = INSERT( ACTIVE.SESSIONS, 3, 1, 0, USER.ACTIVE.SESSIONS<3> )þ    ENDþ    ASCNT = DCOUNT( ACTIVE.SESSIONS<1>, @VM )þ    IF ASCNT > USER.LIMIT THENþ      PURGE.LIST = ""þ      LOOP WHILE ASCNT > USER.LIMIT DOþ        PURGE.LIST := ACTIVE.SESSIONS<1,1>:" "þ        ACTIVE.SESSIONS = DELETE( ACTIVE.SESSIONS, 1, 1, 0 )þ        ACTIVE.SESSIONS = DELETE( ACTIVE.SESSIONS, 2, 1, 0 )þ        ACTIVE.SESSIONS = DELETE( ACTIVE.SESSIONS, 3, 1, 0 )þ        ASCNT -= 1þ      REPEATþ      EXECUTE "MVDB.PURGE.SESSIONS ":PURGE.LIST CAPTURING JUNKþ    ENDþ    IF ASCNT = USER.LIMIT THENþ      * Logging in will force a user to log offþ      IF SITE$AUTO.TRIM = 'Y' THENþ        EXECUTE "MVDB.PURGE.SESSIONS ":ACTIVE.SESSIONS<1,1> CAPTURING JUNKþ      END ELSEþ        READ MSG.TEMPLATE FROM F.WEB.FORMS, "message.html" ELSE MSG.TEMPLATE = "message.html not found."þ        CALL SWAP(MSG.TEMPLATE,'<!-- MSG_TITLE -->',"User limit exceeded.")þ        CALL SWAP(MSG.TEMPLATE,'<!-- SITE_LOGO -->',SITE.LOGO)þ        CALL SWAP(MSG.TEMPLATE,'<!-- SITE_THEME -->',THEME.CSS)þ        MSG.CONTENT = \<p>Your maximum user limit has been reached. If you choose to log in, user "\:ACTIVE.SESSIONS<2,1>þ        MSG.CONTENT := \" will be logged out and the user's session data will be lost.</p>\þ        MSG.CONTENT := '<a href="/dbc/MVDB.MAIN?psid=':ACTIVE.SESSIONS<1,1>:'">Click here</a> to log ':ACTIVE.SESSIONS<2,1>:' out and try again.</a>'þ        CALL SWAP(MSG.TEMPLATE,'<!-- MSG_CONTENT -->',MSG.CONTENT)þ        CALL WEB.SEND(MSG.TEMPLATE)þ        GLOBAL.INFO(100) = 1þ        STOPþ      ENDþ    ENDþ    CALL PUT.SESSION.VAR("userid",loginid)þ    userid = loginidþ    CALL PUT.SESSION.VAR("login_date",DATE())þ    CALL PUT.SESSION.VAR("login_time",TIME())þ  END ELSEþ    READ LOGIN.PAGE FROM F.WEB.FORMS, "login.html" ELSE LOGIN.PAGE = "login.html not found."þ    IF loginid # "" THENþ      IF LOGIN.MSG = "" THEN LOGIN.MSG = "Invalid user ID or Password"þ      CALL SWAP(LOGIN.PAGE,'<!-- ERROR -->',LOGIN.MSG)þ    ENDþ    CALL SWAP(LOGIN.PAGE,'<!-- SITE_LOGO -->',SITE.LOGO)þ    CALL SWAP(LOGIN.PAGE,'<!--CHARACTER_SET-->',SITE$CHARSET)    þ    CALL SWAP(LOGIN.PAGE,'<!-- SITE_THEME -->',THEME.CSS)þ    CALL WEB.SEND(LOGIN.PAGE)þ    GLOBAL.INFO(100) = 1 ;* Intentional Stopþ    STOPþ  ENDþEND ELSEþ  * Get the user item.þ  * If a custom authentication subroutine is in use, we have to call thatþ  * subroutine again in order to get the user record populatedþ  IF SITE$AUTH.SUB # "" THENþ    READ CATPTR FROM F.MD, SITE$AUTH.SUB ELSE CATPTR = ""þ    *MS 07-22-15 UD* IF CATPTR<1> = "VR" THENþ    IF CATPTR<1> = "C" THEN ; *MS 07-22-15 UD*þ      CALL @SITE$AUTH.SUB(userid,"","READ",LOGIN.OK,LOGIN.MSG,MAT USER.ITEM)þ    END ELSE MAT USER.ITEM = ""þ  END ELSEþ    MATREAD USER.ITEM FROM F.MVDB.USERS, userid ELSE MAT USER.ITEM = ''þ  ENDþENDþIF USER.ROLE = "Administrator" AND NOT(adminauth) THENþ  * The user is an admin based on the USER.ROLE setting in their user recordþ  adminauth = 1þ  CALL PUT.SESSION.VAR("adminauth",adminauth)þENDþG$ADMIN.USER = adminauthþ*þG$USERID = useridþ* 10-07-16 Implement the POST-REDIRECT-GET pattern to prevent the browserþ* from prompting before resubmit when using back or refresh buttons afterþ* a POST (used for login form only at this time).þLOCATE "REQUEST_METHOD" IN CGI$VARS SETTING POS THENþ  IF CGI$VALS<POS> = "POST" THENþ    LOCATE "dblogin" IN CGI$VARS SETTING POS THENþ      IF CGI$VALS<POS> THENþ        * Redirect to MVDB.MAIN default dashboard after valid loginþ        HTML = ''þ        HTML<-1> = '<html>'þ        HTML<-1> = '<body>'þ        HTML<-1> = '<script type="text/javascript">'þ        HTML<-1> = 'window.location="':CGI$PATH:'/MVDB.MAIN?dbname=";' ;* start with default dashboard after loginþ        HTML<-1> = '</script>'þ        HTML<-1> = '</body>'þ        HTML<-1> = '</html>'þ        CALL WEB.SEND(HTML)þ        GLOBAL.INFO(100) = 1 ;* Intentional Stopþ        STOPþ      ENDþ    ENDþ    * handle P-R-G for widget input form submitþ*    WRITE CGI$VARS ON F.MVDB.UDATA,SESSION$ID:'$POSTVARS'þ*    WRITE CGI$VALS ON F.MVDB.UDATA,SESSION$ID:'$POSTVALS'þ*    HTML = ''þ*    HTML<-1> = '<html>'þ*    HTML<-1> = '<body>'þ*    HTML<-1> = '<script type="text/javascript">'þ*    HTML<-1> = 'window.location="':CGI$PATH:'/MVDB.MAIN?dbprg=1";'þ*    HTML<-1> = '</script>'þ*    HTML<-1> = '</body>'þ*    HTML<-1> = '</html>'þ*    CALL WEB.SEND(HTML)þ*    GLOBAL.INFO(100) = 1 ;* Intentional Stopþ*    STOPþ*  ENDþENDþ*LOCATE "dbprg" IN CGI$VARS SETTING POS THENþ*  IF CGI$VALS<POS> THENþ*    READ CGI$VARS FROM F.MVDB.UDATA,SESSION$ID:'$POSTVARS' THENþ*      READ CGI$VALS FROM F.MVDB.UDATA,SESSION$ID:'$POSTVALS' ELSE CGI$VALS = ''þ*    ENDþ*    DELETE F.MVDB.UDATA,SESSION$ID:'$POSTVARS'þ*    DELETE F.MVDB.UDATA,SESSION$ID:'$POSTVALS'þ*  ENDþ*ENDþ* END OF 10-07-16þ*þLOCATE 'generatepdf' IN CGI$VARS SETTING GENERATE.PDF ELSE GENERATE.PDF=0; * 4-25-16þLOCATE 'generateexcel' IN CGI$VARS SETTING GENERATE.EXCEL ELSE GENERATE.EXCEL=0; *EXCEL* 6-27-16þW$EXCELABLE=0;   *EXCEL* 6-27-16þGO.BACK=0;   * 4-25-16þ*þGOBACK.REENTRY:; * 4-25-16þ*þ* udview, if present, is the view name to which  the associatedþ* udpos and udval parameters apply.þLOCATE "udview" IN CGI$VARS SETTING POS THENþ  udview = CGI$VALS<POS>þEND ELSE udview = ""þ*þLOCATE "dbname" IN CGI$VARS SETTING POS THENþ  CALL PUT.SESSION.VAR("current_db",CGI$VALS<POS>)þENDþ*þLOCATE 'refresh' IN CGI$VARS SETTING POS THENþ  *really, this should be stored in the user record per db keyþ  IF CGI$VALS<POS> = '0' THEN CGI$VALS<POS> = ''þ  CALL GET.SESSION.VAR("current_db",r.current.db)þ  IF r.current.db = '' THEN r.current.db = USER.DEFAULT.DBþ  CALL PUT.SESSION.VAR(r.current.db:"!refresh",CGI$VALS<POS>)þENDþ*9-23-16**þ*9-23-16*** 4-25-16 SUPPORT AUTOMATIC BACKOUT FROM A DRILLDOWNþ*9-23-16**þ*9-23-16**EXCEL*IF NOT(GO.BACK) AND NOT(GENERATE.PDF) THENþ*9-23-16*IF NOT(GO.BACK) AND NOT(GENERATE.PDF) AND NOT(GENERATE.EXCEL) THEN; *EXCEL* 6-27-16þ*9-23-16*   CALL DRILLDOWN.STACK.RTNE(F.MVDB.UDATA,DRILLDOWN.STACK,GO.BACK)þ*9-23-16*   IF GO.BACK THEN GOTO GOBACK.REENTRYþ*9-23-16*END ELSEþ*9-23-16*   DRILLDOWN.STACK = ""þ*9-23-16*ENDþDRILLDOWN.STACK=''; *9-23-16þG$DRILLDOWN.MODE = FALSEþLOCATE "dd" IN CGI$VARS SETTING POS THENþ   IF CGI$VALS<POS> <> '' THENþ      G$DRILLDOWN.MODE = TRUEþ   ENDþENDþ*9-23-16** END OF 4-25-16þ*þLOCATE "sw" IN CGI$VARS SETTING POS THENþ  FORM.SUBMIT.WIDGET = CGI$VALS<POS>þEND ELSE FORM.SUBMIT.WIDGET = ""þ*þIF G$DRILLDOWN.MODE THENþ  * This is a drill-down call. Load up the "drilldown" dashboardþ  * and populate it only with this single widget.þ  LOCATE "dd_from" IN CGI$VARS SETTING POS THENþ    G$DD.REFERRER = CGI$VALS<POS>þ  ENDþ  LOCATE "dd_from_db" IN CGI$VARS SETTING POS THENþ    G$DD.FROM.DB = CGI$VALS<POS>þ  ENDþ  G$CURRENT.DB = "drilldown"þ  MAT DB.ITEM = ''þ  READV DD.FROM.DB.THEME FROM F.MVDB.DEFS, G$DD.FROM.DB, 7 ELSE DD.FROM.DB.THEME = ''þ  DB.THEME = DD.FROM.DB.THEMEþ  DB.WIDGETS = udviewþEND ELSEþ  CALL GET.SESSION.VAR("current_db",current.db)þ  IF current.db # "" THENþ    G$CURRENT.DB = current.dbþ  END ELSEþ    * No current dashboard is available in the session.þ    * Must be the first time through. Go get the default.þ    G$CURRENT.DB = USER.DEFAULT.DBþ    IF G$CURRENT.DB = '' THEN G$CURRENT.DB = "EMPTY" ;* Empty dashboardþ  ENDþ  *þ  MATREAD DB.ITEM FROM F.MVDB.DEFS, G$CURRENT.DB ELSE MAT DB.ITEM = ''þENDþIF DB.THEME # '' THENþ  READV THEME.CSS FROM F.MVDB.THEMES, DB.THEME, 1 ELSE THEME.CSS = ''þEND ELSEþ  READV THEME.CSS FROM F.MVDB.THEMES, SITE$THEME, 1 ELSE THEME.CSS = ''þENDþ*þ* PJS 09-23-16: user altertnate logo overrides site logoþIF USER.ALT.LOGO <> '' THENþ  SITE.LOGO = USER.ALT.LOGOþEND ELSEþIF SITE$ALT.LOGO = '' THENþ  SITE.LOGO = '/db/images/mv-logo.png'þEND ELSEþ  SITE.LOGO = SITE$ALT.LOGOþ  ENDþENDþIF NOT(INDEX(SITE.LOGO,'/',1)) THENþ  SITE.LOGO = '/db/images/':SITE.LOGOþENDþ*þCALL GET.SESSION.VAR("login_date",login.date)þCALL GET.SESSION.VAR("login_time",login.time)þG$LOGIN.DATE = login.dateþG$LOGIN.TIME = login.timeþ*þ*PDF*þ* When generating a PDF, get name of widget to render into PDF.þ* When generating iframe content, get the HTML widget name toþ* show in the iframe.þWIDGET.OWN.STYLE = FALSEþSINGLE.WIDGET = ""þPDF.WIDGET.NAME = ""þ* 4-25-16 *IF PDF$ENABLED THENþ* 4-25-16 *  LOCATE 'generatepdf' IN CGI$VARS SETTING POS ELSE POS=0þ* 4-25-16 *  IF POS THENþ* 4-25-16 *    PDF.WIDGET.NAME = CGI$VALS<POS>þ* 4-25-16 *    SINGLE.WIDGET = PDF.WIDGET.NAMEþ* 4-25-16 *  ENDþ* 4-25-16 *ENDþ*þ** 4-25-16 CHANGED LOGICþ*þIF PDF$ENABLED AND GENERATE.PDF THENþ  PDF.WIDGET.NAME = CGI$VALS<GENERATE.PDF>þ  SINGLE.WIDGET = PDF.WIDGET.NAMEþ  W$PDFABLE=1þ  DB.WIDGETS=PDF.WIDGET.NAMEþENDþ* END OF 4-25-16þ*þ**EXCEL* 6-27-16 ADDED LOGICþ*þIF GENERATE.EXCEL THENþ  EXCEL.WIDGET.NAME = CGI$VALS<GENERATE.EXCEL>þ  SINGLE.WIDGET = EXCEL.WIDGET.NAMEþ  W$EXCELABLE=1þ  DB.WIDGETS=EXCEL.WIDGET.NAMEþEND ELSE EXCEL.WIDGET.NAME=''þ* END OF 6-27-16þIFRAME.WIDGET.NAME = ""þLOCATE 'iframewidget' IN CGI$VARS SETTING POS ELSE POS=0þIF POS THENþ  IFRAME.WIDGET.NAME = CGI$VALS<POS>þ  SINGLE.WIDGET = IFRAME.WIDGET.NAMEþENDþ*þ* Build a list of subroutines to call to create this dashboardþ*þDISP.CNT = DCOUNT( DB.WIDGETS, VM )þWIDGET.NAME.POS = FALSEþFOR DX = 1 TO DISP.CNTþ  MATREAD WIDGET.ITEM FROM F.MVDB.WIDGETS, DB.WIDGETS<1,DX> THENþ    ADD.OK = TRUEþ    IF WIDGET.USERS = "ADMIN" THENþ      IF NOT(adminauth) THEN ADD.OK = FALSE ;* Only usable by authenticated adminsþ    END ELSE IF WIDGET.USERS # "" THEN ;* Some user restrictions have been assignedþ      LOCATE userid IN WIDGET.USERS<1> SETTING POS ELSE ADD.OK = FALSEþ    ENDþ    IF ADD.OK THENþ      *PDF* if generating PDF or iframe content, exclude other widgetsþ      *EXCEL* also applies to generating EXCELþ      IF SINGLE.WIDGET = "" OR SINGLE.WIDGET = DB.WIDGETS<1,DX> THENþ        WIDGET.NAME.POS += 1þ        G$WIDGET.NAME.LIST<1,WIDGET.NAME.POS> = DB.WIDGETS<1,DX>þ        G$WIDGET.SUB.LIST<1,WIDGET.NAME.POS> = WIDGET.SUBþ      ENDþ    ENDþ  ENDþNEXT DXþ*þDIM TEMPLATE.AREA(5)þMAT TEMPLATE.AREA = ''þ*þMAT GLOBAL.TEMP.DATA = '' ;* InitializeþMATREAD GLOBAL.USER.DATA FROM F.MVDB.UDATA, SESSION$ID:"$UG" ELSE MAT GLOBAL.USER.DATA = ''þ*þCALL GET.SESSION.VAR("debug_widgets",DEBUG.WIDGETS) ;* Retrieve a list of widgets user is debuggingþIF adminauth THEN ;* Only administrators can put widgets into debug mdoe.þ  LOCATE "debug_widget" IN CGI$VARS SETTING POS THENþ    DEBUG.WIDGET = CGI$VALS<POS>þ    LOCATE DEBUG.WIDGET IN DEBUG.WIDGETS SETTING POS ELSEþ      DEBUG.WIDGETS<-1> = DEBUG.WIDGETþ      CALL PUT.SESSION.VAR("debug_widgets",DEBUG.WIDGETS)þ    ENDþ  ENDþ  LOCATE "undebug_widget" IN CGI$VARS SETTING POS THENþ    UNDEBUG.WIDGET = CGI$VALS<POS>þ    LOCATE UNDEBUG.WIDGET IN DEBUG.WIDGETS SETTING DPOS THENþ      DEBUG.WIDGETS = DELETE( DEBUG.WIDGETS, DPOS, 0, 0 )þ      CALL PUT.SESSION.VAR("debug_widgets",DEBUG.WIDGETS)þ    ENDþ  ENDþENDþ*þCALL GET.SESSION.VAR("failed_widgets",FAILED.WIDGETS) ;* Retrieve a list of failed widgets this sessionþLOCATE "unfail_widget" IN CGI$VARS SETTING POS THENþ  * The user has asked to take this widget out of failed mode and try running the widget again.þ  UNFAIL.WIDGET = CGI$VALS<POS>þ  LOCATE UNFAIL.WIDGET IN FAILED.WIDGETS SETTING DPOS THENþ    FAILED.WIDGETS = DELETE( FAILED.WIDGETS, DPOS, 0, 0 )þ    CALL PUT.SESSION.VAR("failed_widgets",FAILED.WIDGETS)þ  ENDþENDþ*þ* Was there a running widget that didn't complete? If so, it's a failed widget that didn't returnþ* control to MVDB.MAIN. Let's add it to the list of failed widgets this session so we can avoidþ* producing blank pages for the user.þ*þCALL GET.SESSION.VAR("running_widget",FAILED.WIDGET)þCALL GET.SESSION.VAR("running_widget_dt",FAILED.WIDGET.DT)þIF FAILED.WIDGET # "" THENþ  FW.DATE = FIELD( FAILED.WIDGET.DT, '*', 1 )þ  FW.TIME = FIELD( FAILED.WIDGET.DT, '*', 2 )þ  FW.LAPSE = TIME() - FW.TIMEþ  FW.LAPSE += ((DATE() - FW.DATE) * 86400)þ  IF SITE$W.MAX.DUR = "" THEN SITE$W.MAX.DUR = 10 ;* Defaultþ  IF FW.LAPSE < SITE$W.MAX.DUR THEN FAILED.WIDGET = ""þENDþIF FAILED.WIDGET # "" THENþ  CALL PUT.SESSION.VAR("running_widget","")þ  CALL PUT.SESSION.VAR("running_widget_dt","")þ  LOCATE FAILED.WIDGET IN FAILED.WIDGETS SETTING FWPOS ELSEþ    FAILED.WIDGETS<-1> = FAILED.WIDGETþ    CALL PUT.SESSION.VAR("failed_widgets",FAILED.WIDGETS)þ  ENDþENDþ*þ* Widgets appearing in FAILED.WIDGETS and DEBUG.WIDGETS are both hijacked at runtime, and ourþ* SUB.DEBUG.WIDGET subroutine is executed in place of the subroutine in the widget definition.þ* The difference is that FAILED.WIDGETS are widgets that this program has determined to haveþ* failed. DEBUG.WIDGETS are functional widgets that the user has put into debug mode.þ* In both cases, the widget remains in this list until the user removes it using controls þ* within the SUB.DEBUG.WIDGET widget.þ*þWIDGET.CNT = DCOUNT( G$WIDGET.NAME.LIST, VM )þFOR VX = 1 TO WIDGET.CNTþ  WIDGET.NAME = G$WIDGET.NAME.LIST<1,VX>þ  MATREAD WIDGET.ITEM FROM F.MVDB.WIDGETS, WIDGET.NAME ELSE MAT WIDGET.ITEM = ''þ*9-23-16** FIX 6-1-16 *  MATREAD WIDGET.USER.DATA FROM F.MVDB.UDATA, SESSION$ID:"$":WIDGET.NAME ELSE MAT WIDGET.USER.DATA = ''þ*9-23-16** FIX 6-1-16 *þ*9-23-16*  IF GO.BACK THEN þ*9-23-16*     MAT WIDGET.USER.DATA=''þ*9-23-16*   END ELSEþ*9-23-16*     MATREAD WIDGET.USER.DATA FROM F.MVDB.UDATA, SESSION$ID:"$":WIDGET.NAME ELSE MAT WIDGET.USER.DATA = ''þ*9-23-16*   ENDþ*9-23-16** END OF 6-1-16þ  MATREAD WIDGET.USER.DATA FROM F.MVDB.UDATA, SESSION$ID:"$":WIDGET.NAME ELSE MAT WIDGET.USER.DATA = ''; *9-23-16*þ  *þ  MAP.TYPE.SUFFIX = ""þ  IF WIDGET.NAME = udview THENþ    * We need to set values in WIDGET.USER.DATA before calling this routineþ    * Process links.þ    UDN = 1þ    SEARCH.DONE = FALSEþ    LOOPþ      SEARCH.NAME = "udpos":UDNþ      LOCATE SEARCH.NAME IN CGI$VARS SETTING POS THENþ        udpos = CGI$VALS<POS>þ        IF udpos MATCHES "1N0N" THENþ          IF udpos < 1 OR udpos > 100 THEN UDN +=1 ; CONTINUEþ        END ELSE UDN += 1 ; CONTINUEþ        SEARCH.NAME = "udval":UDNþ        LOCATE SEARCH.NAME IN CGI$VARS SETTING POS THENþ          WIDGET.USER.DATA(udpos) = CGI$VALS<POS>þ        ENDþ      END ELSE SEARCH.DONE = TRUEþ    UNTIL SEARCH.DONE DOþ      UDN += 1þ    REPEATþ    * Process Inputs.þ    VARCNT = DCOUNT( CGI$VARS, AM )þ    FOR CGIVX = 1 TO VARCNTþ      IF CGI$VARS<CGIVX>[1,4] = "inp_" THENþ        udpos = FIELD(CGI$VARS<CGIVX>,'_',2)þ        IF udpos MATCHES "1N0N" THENþ          IF udpos >= 1 AND udpos <= 100 THENþ            WIDGET.USER.DATA(udpos) = CGI$VALS<CGIVX>þ          ENDþ        ENDþ      ENDþ      *Look for checkboxes that didn't come backþ      *and stuff a zero in there.þ      IF CGI$VARS<CGIVX>[1,9] = 'mvdbcxbx_' THENþ        udpos = FIELD(CGI$VARS<CGIVX>,'_',2)þ        LOCATE 'inp_':udpos IN CGI$VARS SETTING CXBX.POS ELSEþ          IF udpos >= 1 AND udpos <= 100 THENþ            WIDGET.USER.DATA(udpos) = 0þ          ENDþ        ENDþ      ENDþ    NEXT CGIVXþ    *þ    LOCATE 'mapdd' IN CGI$VARS SETTING POS THENþ      * This is a map drilldown. Get the map name from the state codeþ      STATE.CODE = WIDGET.USER.DATA(1)þ      READ STATE.NAMES FROM F.MVDB.CONTROL, 'STATE.NAMES' ELSE STATE.NAMES = ""þ      CONVERT "," TO @VM IN STATE.NAMESþ      LOCATE STATE.CODE IN STATE.NAMES<1> SETTING STATE.POS THENþ        WIDGET.USER.DATA(2) = STATE.NAMES<2,STATE.POS>þ        MAP.TYPE.SUFFIX = STATE.CODE ;* Add this to the widget typeþ      ENDþ    ENDþ  ENDþ  *þ  * If this is a USA map widget set in drill-down mode for a specific stateþ  * that state name will be in WIDGET.USER.DATA(1). This code below is necessaryþ  * to ensure that the widget stays in the state map mode until the userþ  * changes it.þ  *þ  IF MAP.TYPE.SUFFIX = "" THEN MAP.TYPE.SUFFIX = WIDGET.USER.DATA(1)<1>þ  *þ  IF FORM.SUBMIT.WIDGET = WIDGET.NAME THENþ    * The user clicked the "go" button on the form section of this widget.þ    G$SUBMITTED = 1þ  END ELSEþ    G$SUBMITTED = 0þ  ENDþ  *þ  * The widget debugger uses GLOBAL.INFO(90) to determine if the widget is in debugþ  * mode due to user request, or if it is being forced into debug mode by MVDB.MAINþ  *þ  GLOBAL.INFO(90) = ""þ  GLOBAL.INFO(91) = G$WIDGET.SUB.LIST<1,VX> ;* Original subroutine nameþ  WDEBUG.MODE = 0 ; WFAIL.MODE = 0þ  *þ  LOCATE WIDGET.NAME IN FAILED.WIDGETS SETTING DUM THENþ    * This widget failed last time we tried to run it. Let's run the "Failed Widget" subroutine instead.þ    * This subroutine will have access to all of the information that would have been passed to theþ    * failed widget, so diagnostic information can be presented through this widget.þ    GLOBAL.INFO(90) = "FAIL"þ    SUBNAME = "SUB.DEBUG.WIDGET"þ    WFAIL.MODE = 1þ  END ELSEþ    LOCATE WIDGET.NAME IN DEBUG.WIDGETS SETTING DUM THENþ      GLOBAL.INFO(90) = "DEBUG"þ      SUBNAME = "SUB.DEBUG.WIDGET"þ      WDEBUG.MODE = 1þ    END ELSEþ      SUBNAME = G$WIDGET.SUB.LIST<1,VX>þ    ENDþ  ENDþ  MAT WIDGET.INFO = "" ;* clear this one out for the new callþ  G$WIDGET.NAME = WIDGET.NAMEþ  G$WIDGET.SUB = SUBNAMEþ  G$WIDGET.CALL.TIME<1,VX> = DATE():"*":TIME()þ*#MAKE# RL IF 0 THENþ  START.TIMER = SYSTEM(12)þ*#MAKE# RL ENDþ  READ TST FROM F.MD, SUBNAME THENþ    CALL PUT.SESSION.VAR("running_widget",WIDGET.NAME)þ    DT.STAMP = DATE():"*":TIME()þ    CALL PUT.SESSION.VAR("running_widget_dt",DT.STAMP)þ    CALL @SUBNAMEþ    CALL PUT.SESSION.VAR("running_widget","")þ    CALL PUT.SESSION.VAR("running_widget_dt","")þ  END ELSEþ    W$TITLE = WIDGET.NAME:" (ERROR)"þ    W$TYPE = "TEXT"þ    W$TEXT.DATA = SUBNAME:" not cataloged."þ  ENDþ  * Special handling for drill-down to a state level on a USA Mapþ  IF W$TYPE = "USAMAP" AND MAP.TYPE.SUFFIX # "" THENþ    W$TYPE := ":":MAP.TYPE.SUFFIXþ  ENDþ*#MAKE# RL IF 0 THENþ  G$WIDGET.CALL.DUR<1,VX> = SYSTEM(12) - START.TIMERþ*#MAKE# RL ENDþ  MATWRITE WIDGET.USER.DATA ON F.MVDB.UDATA, SESSION$ID:"$":WIDGET.NAMEþ  *þ  IF NOT(W$HIDDEN) THENþ    *EXCEL* 6-27-16 DETERMINE IF W$TYPE CAN GENERATE EXCELþ    BEGIN CASEþ       CASE W$EXCELABLE; NULLþ       CASE W$TYPE = 'TABLE'; W$EXCELABLE=1þ       CASE INDEX(W$TYPE,'COLUMN',1); W$EXCELABLE=1þ       CASE INDEX(W$TYPE,'LINE',1); W$EXCELABLE=1þ       CASE INDEX(W$TYPE,'BAR',1); W$EXCELABLE=1þ       CASE INDEX(W$TYPE,'AREA',1); W$EXCELABLE=1þ       CASE INDEX(W$TYPE,'PIE',1); W$EXCELABLE=1þ       CASE INDEX(W$TYPE,'DOUGHNUT',1); W$EXCELABLE=1þ       CASE 1; W$EXCELABLE=0þ    END CASEþ    *EXCEL* END OF 6-27-16þ    GOSUB MAKE.HTMLþ    LOCATE WIDGET.NAME IN DB.WIDGETS<1> SETTING DB.DEFS.POS THENþ      AREA = DB.WIDGET.AREA<1,DB.DEFS.POS>þ      IF NOT(AREA MATCHES "1N0N") THEN AREA = 1þ      IF AREA < 1 OR AREA > 5 THEN AREA = 1þ    END ELSE AREA = 1        þ    TEMPLATE.AREA(AREA)<-1> = HTML.DIVþ  ENDþNEXT VXþ*þMATWRITE GLOBAL.USER.DATA ON F.MVDB.UDATA,SESSION$ID:"$UG"þMATWRITE W$WEBSERVICE.DATA ON F.MVDB.UDATA,SESSION$ID:"$WEBSERVICE"; *11-30-15þ*þ* Send templateþ*þ*PDF* Use special inner template for PDF & iframesþIF IFRAME.WIDGET.NAME # "" THENþ  * iframe content just contains widget-generated HTML, no extra styles, script, etc.þ  TEMPLATE = "<!-- AREA1 --><!-- AREA2 --><!-- AREA3 --><!-- AREA4 --><!-- AREA5 -->"þEND ELSEþ  IF PDF.WIDGET.NAME # "" THENþ    IF WIDGET.OWN.STYLE THENþ      * Widget HTML has <head> tag - supplies its own stylesþ      TEMPLATE = "<!-- AREA1 --><!-- AREA2 --><!-- AREA3 --><!-- AREA4 --><!-- AREA5 -->"þ    END ELSEþ      * PDF template has single <div> for all "areas"þ      READ TEMPLATE FROM F.WEB.FORMS, "pdf_inner_template" ELSE TEMPLATE = "pdf_inner_template not found."þ    ENDþ  END ELSEþ    * normal widget template with area for header, 3 columns & footerþ    READ TEMPLATE FROM F.WEB.FORMS, "db_inner_template" ELSE TEMPLATE = "db_inner_template not found."þ  ENDþENDþCALL SWAP(TEMPLATE,'<!-- column_style -->',"layout":DB.TEMPLATE)þ*þFOR AX = 1 TO 5þ  CALL SWAP(TEMPLATE,"<!-- AREA":AX:" -->",TEMPLATE.AREA(AX))þNEXT AXþ*þ*PDF* Use special PDF html template for PDF outputþIF IFRAME.WIDGET.NAME # "" THENþ  * iframe content just contains widget-generated HTML, no extra styles, script, etc.þ  MAIN.TEMPLATE = "<!-- DASHBOARD -->"þEND ELSEþ  IF PDF.WIDGET.NAME # "" THENþ    IF WIDGET.OWN.STYLE THENþ      * Widget HTML has <head> tag - supplies its own stylesþ      MAIN.TEMPLATE = "<!-- DASHBOARD -->"þ    END ELSEþ      * PDF template does not include print, refresh, header or footerþ      READ MAIN.TEMPLATE FROM F.WEB.FORMS, "pdftemplate" ELSE MAIN.TEMPLATE = "pdftemplate missing."þ    ENDþ  END ELSEþ    * normal dashboard templateþ    READ MAIN.TEMPLATE FROM F.WEB.FORMS, "dbtemplate" ELSE MAIN.TEMPLATE = "dbtemplate missing."þ  ENDþENDþ*þ* Insert header stuffþADMIN.HEADER = ""þIF adminauth = 1 THENþ  ADMIN.HEADER := '<li class="admin_tab"><a href="':CGI$PATH:'/MVDB.ADMIN">Admin Area</a></li>'þENDþADMIN.HEADER := '<li class="admin_tab"><a href="':CGI$PATH:'/MVDB.MAIN?logout">Log Out</a></li>'þHEADER = '<div id="dashboard_nav"><ol class="dashboard_list">'þCALL SWAP(MAIN.TEMPLATE,'<!--CHARACTER_SET-->',SITE$CHARSET)þ*11-30-15*EXECUTE "SSELECT MVDB.DEFS BY DB.SORT" CAPTURING JUNKþIF NOT(W$EMAILED.REPORT) AND NOT(W$WEBSERVICE) THEN EXECUTE "SSELECT MVDB.DEFS BY DB.SORT" CAPTURING JUNK; *11-30-15þDB.LIST = ''þLOOPþ  READNEXT ID ELSE EXITþ  DB.LIST<-1> = IDþREPEATþDB.CNT = DCOUNT( DB.LIST, AM )þFOR DBX = 1 TO DB.CNTþ  ID = DB.LIST<DBX>þ  MATREAD DB.ITEM FROM F.MVDB.DEFS, ID ELSE MAT DB.ITEM = ""þ  ADD.OK = TRUEþ  IF DB.USERS.ALLOWED = "ADMIN" THENþ    IF NOT(adminauth) THEN ADD.OK = FALSE ;* This is only for authenticated adminsþ  END ELSE IF DB.USERS.ALLOWED # "" THEN ;* Some user restrictions have been assigned þ    LOCATE userid IN DB.USERS.ALLOWED<1> SETTING POS ELSE ADD.OK = FALSE þ  END þ  IF ADD.OK = TRUE THENþ    IF ID = G$CURRENT.DB THENþ      HEADER := '<li class="db_active"><a href="':CGI$PATH:'/MVDB.MAIN?dbname=':ID:'">':ID:'</a></li>'þ    END ELSEþ      HEADER := '<li><a href="':CGI$PATH:'/MVDB.MAIN?dbname=':ID:'">':ID:'</a></li>'þ    ENDþ    HEADER := CHAR(10)þ  ENDþNEXT DBXþHEADER := ADMIN.HEADERþHEADER := '</ol></div>'þIF THEME.CSS # '' THEN THEME.CSS = '<link rel="Stylesheet" href="/db/themes/':THEME.CSS:'" media="screen" type="text/css" />'þCALL SWAP(MAIN.TEMPLATE,'<!-- HEADER -->',HEADER)þCALL SWAP(MAIN.TEMPLATE,'<!-- SITE_LOGO -->',SITE.LOGO)þCALL SWAP(MAIN.TEMPLATE,'<!-- SITE_THEME -->',THEME.CSS)þ* Insert footer stuffþFOOTER = ''þ*01-25-16*IF G$DRILLDOWN.MODE THENþ*4-25-16*IF G$DRILLDOWN.MODE AND NOT(W$WEBSERVICE) THEN; *01-25-16þ*4-25-16*  IF G$DD.FROM.DB # "" THENþ*4-25-16*    URLENCODE.STRING = G$DD.FROM.DBþ*4-25-16*    GOSUB URL.ENCODEþ*4-25-16*    DB.URL = NEW.STRINGþ*4-25-16*    FOOTER = '<a href="/dbc/MVDB.MAIN?dbname=':DB.URL:'">Go Back</a><br />'þ*4-25-16*  ENDþ*4-25-16*ENDþ*9-23-16**þ*9-23-16*** 4-25-16 NEW SUPPORT FOR ALLOWING BACKUPþ*9-23-16**þ*9-23-16*IF DRILLDOWN.STACK<2> <> '' THENþ*9-23-16*   FOOTER='<a href="/dbc/MVDB.MAIN?dbname=go_back">Go Back</a><br />'þ*9-23-16* ENDþ*9-23-16** END OF 4-25-16þIF WATERMARK # '' THENþ  FOOTER := WATERMARK:'<br/>'þENDþCALL SWAP(MAIN.TEMPLATE,'<!-- FOOTER -->',FOOTER)þ*þCALL GET.SESSION.VAR(G$CURRENT.DB:"!refresh",REFRESH.RATE)þREFRESH = ""þIF REFRESH.RATE # '' THENþ  RATES = "1":VM:"2":VM:"3":VM:"4":VM:"5":VM:"6":VM:"7":VM:"8":VM:"9"þ  RATES<2> = "15":VM:"30":VM:"60":VM:"120":VM:"300":VM:"600":VM:"900":VM:"1800":VM:"3600"þ  LOCATE REFRESH.RATE IN RATES<1> SETTING RPOS THENþ    REFRESH = "<meta http-equiv='refresh' content='":RATES<2,RPOS>:"'>"þ  ENDþENDþ*þIF SITE$REFRESH = 'Y' THENþ  READ REFRESH.SLIDER FROM F.WEB.FORMS, 'RefreshSlider' ELSE REFRESH.SLIDER=''þ  CALL SWAP(MAIN.TEMPLATE,'<!-- RefreshSlider -->',REFRESH.SLIDER)þ  CALL SWAP(MAIN.TEMPLATE,'<!-- REFRESH_RATE -->',REFRESH.RATE)þ  CALL SWAP(MAIN.TEMPLATE,'<!-- REFRESH -->',REFRESH)þ  READ TRACK FROM F.WEB.FORMS, 'outerTrackWrapper' ELSE TRACK = ''þ  CALL SWAP(MAIN.TEMPLATE,'<!-- outerTrackWrapper -->',TRACK)  þENDþCALL SWAP(MAIN.TEMPLATE,'<!-- DASHBOARD -->',TEMPLATE)þ*þ*PDF* Generate the PDF from HTML in MAIN.TEMPLATEþIF PDF$ENABLED AND W$PDFABLE AND PDF.WIDGET.NAME # "" THENþ  CALL SUB.PDF.FUNC('generate', MAIN.TEMPLATE)þ  MAIN.TEMPLATE = ''þENDþ*EXCEL* Generate the EXCEL from HTML in MAIN.TEMPLATEþ* 6-27-16  *EXCEL*þIF W$EXCELABLE AND EXCEL.WIDGET.NAME # "" THENþ  CALL SUB.EXCEL.FUNC('generate', MAIN.TEMPLATE,EXCEL.WIDGET.NAME)þENDþ* END OF 6-27-16 *EXCEL*þ*þ*þ** 9-23-16 NEW DRILLDOWN AND BACKUP LOGIC REQUIRES SAVING GLOBAL.USER.DATAþ**         AT COMPLETION OF PROCESSþ*þ*READ DD.STACK FROM F.MVDB.UDATA, SESSION$ID:'$DD.STACK' ELSE DD.STACK=''þ*DD.LEVEL=DCOUNT(DD.STACK,AM)þ*IF NOT(DD.LEVEL) THEN DD.LEVEL=1þ*MATWRITE GLOBAL.USER.DATA ON F.MVDB.UDATA, SESSION$ID:'$DD.':DD.LEVEL:'.GUD'þ*MATWRITE WIDGET.USER.DATA ON F.MVDB.UDATA, SESSION$ID:'$':WIDGET.NAME:'$DD.':DD.LEVEL:'.WUD'; * 9-23-16þ*þCALL WEB.SEND(MAIN.TEMPLATE)þGLOBAL.INFO(100) = 1 ;* Process completed successfullyþSTOPþ*þMAKE.HTML: *þ*þHTML = ''þMATREAD WIDGET.TYPES FROM F.MVDB.WIDGET.TYPES, W$TYPE ELSE MAT WIDGET.TYPES = ""þWIDGET.OWN.STYLE = FALSE ;*PDF* set to TRUE if widget-generated HTML includes <head> tagþ*þBEGIN CASEþ  CASE WT$GROUP = "LC" OR WT$GROUP = "BAR"þ    IF WT$GROUP = "BAR" THEN CHART.TYPE = "BAR" ELSEþ      CHART.TYPE = "FCLINECOL"þ      MULTI.SERIES = (WT$HANDLER = "M")þ    ENDþ    CALL XML.ENCODE(W$BAR.VALUES,"")þ    CALL XML.ENCODE(W$BAR.LABELS,"")þ    CALL XML.ENCODE(W$BAR.XLABELS,"")þ    CALL XML.ENCODE(W$BAR.XMEMO,"")þ    CALL XML.ENCODE(W$BAR.YMEMO,"")þ    CALL XML.ENCODE(W$BAR.CAPTION,"")þ    *1-26-15* W$PRINTABLE = 0þ  CASE WT$GROUP = "PIE"þ    CHART.TYPE = WT$HANDLERþ    CALL XML.ENCODE(W$PIE.LABELS,"")þ    CALL XML.ENCODE(W$PIE.VALUES,"")þ    CALL XML.ENCODE(W$PIE.CAPTION,"")þ    *1-26-15* W$PRINTABLE = 0þ  CASE WT$GROUP = "FW"þ    CHART.TYPE = WT$HANDLERþ    FW.NAME = WT$SWFþ    CALL XML.ENCODE(W$FW.LOWER.LIMIT.LABEL,"")þ    CALL XML.ENCODE(W$FW.UPPER.LIMIT.LABEL,"")þ    CALL XML.ENCODE(W$FW.CAPTION,"")þ    CALL XML.ENCODE(W$FW.SUBCAPTION,"")þ    CALL XML.ENCODE(W$FW.TRENDPOINT.LABELS,"")þ    *1-26-15* W$PRINTABLE = 0þ  CASE FIELD(W$TYPE,':',1) = "MAP"þ    CHART.TYPE = "MAP"þ    CHART.TYPE<2> = FIELD( W$TYPE,':',2)þ    *1-26-15* W$PRINTABLE = 0þ  CASE W$TYPE = "USAMAP"þ    CHART.TYPE = "MAP"þ    CHART.TYPE<2> = "USA"þ    *1-26-15* W$PRINTABLE = 0þ  CASE 1þ    CHART.TYPE = W$TYPEþEND CASEþ*þCHK.VAL = OCONV("123456","MD2$,")þCURRENCY = CHK.VAL[1,1]þTHOUSAND = CHK.VAL[3,1]þDECIMAL = CHK.VAL[7,1]þ*þ*Make sure values are in the correct format for fusion chartsþ*All the positions in WIDGET.INFO we're going to modifyþCONV.POS.LIST = 41:AM:44:AM:45:AM:63:AM:73:AM:75:AM:61:AM:62:AMþCONV.POS.LIST := 64:AM:54:AM:58:AM:59:AM:11:AM:17:AM:18:AM:66þCONV.POS.LIST.LEN = DCOUNT(CONV.POS.LIST,AM)þFOR CONV.POS = 1 TO CONV.POS.LIST.LENþ  THIS.VAL = WIDGET.INFO(CONV.POS.LIST<CONV.POS>)þ  IF THIS.VAL # '' THENþ    AM.CNT = DCOUNT(THIS.VAL,AM)þ    FOR ON.AM = 1 TO AM.CNTþ      VM.CNT = DCOUNT(THIS.VAL<ON.AM>,VM)þ      FOR ON.VM = 1 TO VM.CNTþ        SVM.CNT = DCOUNT(THIS.VAL<ON.AM,ON.VM>,SVM)þ        FOR ON.SVM = 1 TO SVM.CNTþ          CONV.VAL = THIS.VAL<ON.AM,ON.VM,ON.SVM>þ          IF OCONV(CONV.VAL,"MCN") # CONV.VAL THEN ;*output formattedþ            *Convert decimal to . and strip thousand separatorþ            CONVERT DECIMAL:THOUSAND TO '.' IN CONV.VALþ            THIS.VAL<ON.AM,ON.VM,ON.SVM> = CONV.VALþ          ENDþ        NEXT ON.SVMþ      NEXT ON.VMþ    NEXT ON.AMþ    WIDGET.INFO(CONV.POS.LIST<CONV.POS>) = THIS.VALþ  ENDþNEXT CONV.POSþ*þUPDATE.OPTS = W$CHART.OPTIONSþOPTS.DELIM = AMþGOSUB OPTS.UPDATEþW$CHART.OPTIONS = UPDATE.OPTSþ*þCONVERT '"' TO "'" IN W$FW.METER.VALUE.OPTSþCONVERT '"' TO "'" IN W$FW.METER.TARGET.OPTSþCONVERT '"' TO "'" IN W$FW.VALUE.OPTSþCONVERT '"' TO "'" IN W$PIE.VALUE.OPTSþCONVERT '"' TO "'" IN W$BAR.VALUE.OPTSþCONVERT '"' TO "'" IN W$BAR.LABEL.OPTSþCONVERT '"' TO "'" IN W$BAR.TREND.OPTSþCONVERT '"' TO "'" IN W$BAR.XLABEL.OPTSþCONVERT '"' TO "'" IN W$MAP.VALUE.OPTSþCONVERT '"' TO "'" IN W$MAP.RANGE.OPTSþCONVERT '"' TO "'" IN W$FW.SPARK.TREND.OPTSþCONVERT '"' TO "'" IN W$FW.DIAL.OPTSþCONVERT '"' TO "'" IN W$FW.TRENDPOINT.OPTSþ*þCONVERT @VM TO " " IN W$FW.METER.TARGET.OPTSþCONVERT @VM TO " " IN W$BAR.LABEL.OPTSþ*þCONVERT @AM TO " " IN W$FW.METER.TARGET.OPTSþ*þ* Set up default widget dimensionsþ*þ  BEGIN CASEþ    CASE W$WIDTH = 1 AND DB.TEMPLATE = 3þ      *CHART.WIDTH = 220þ      *CHART.HEIGHT = 180þ      CHART.WIDTH = 260þ      CHART.HEIGHT = 240þ    CASE W$WIDTH = 1þ      *CHART.WIDTH = 220þ      *CHART.HEIGHT = 180þ      CHART.WIDTH = 300þ      CHART.HEIGHT = 270þ    CASE W$WIDTH = 2þ      *CHART.WIDTH = 400þ      *CHART.HEIGHT = 280þ      CHART.WIDTH = 520þ      CHART.HEIGHT = 350þ    CASE W$WIDTH = 3 OR 1þ      *CHART.WIDTH = 600þ      *CHART.HEIGHT = 400þ      CHART.WIDTH = 800þ      CHART.HEIGHT = 530þ  END CASEþ*þ*DEBUG='CHART.TYPE=':CHART.TYPEþ*DEBUG<-1>='FUSION.WIDGETS.ENABLED=':FUSION.WIDGETS.ENABLEDþ*TEMP.VARS=CGI$VARS; CONVERT CHAR(254) TO CHAR(253) IN TEMP.VARSþ*DEBUG<-1>='VARS=':TEMP.VARSþ*TEMP.VALS=CGI$VALS; CONVERT CHAR(254) TO CHAR(253) IN TEMP.VALSþ*DEBUG<-1>='VALS=':TEMP.VALSþ*WRITE DEBUG ON F.WEB.SESSION, 'DEBUG.TEST'þ*þ  BEGIN CASEþ    CASE CHART.TYPE[1,2] = "FW" AND FUSION.WIDGETS.ENABLED = 0 OR (CHART.TYPE<1> = "MAP" OR FIELD(W$TYPE,':',1) = "USAMAP" AND MAPS.ENABLED = 0)þ      W$TEXT.DATA = "Widget type ":W$TYPE<1>:" is not enabled."þ      W$TYPE = "TEXT"þ      W$INPUT.PROMPT = ""þ      W$LINK.LABEL = ""þ      W$LINK.ICON = ""þ      W$LINK.ICON.TXT = ""þ      W$LINK.LOCATION = ""þ      W$LINK.URL = ""þ      W$LINK.UD.POS = ""þ      W$LINK.UD.VAL = ""þ      W$LINK.DD.WIDGET = ""þ      W$LINK.URL.OPTS = ""þ      W$PRINTABLE = 0þ      W$HIDDEN = 0þ      HTML = '<pre>'þ      HTML<-1> = W$TEXT.DATAþ      HTML<-1> = '</pre>'þ    CASE CHART.TYPE = "FWGAUGE"þ      BEGIN CASEþ        CASE W$WIDTH = 1 AND DB.TEMPLATE = 3þ          *CHART.WIDTH = 260þ          *CHART.HEIGHT = 130þ          CHART.WIDTH = 260þ          CHART.HEIGHT = 240þ        CASE W$WIDTH = 1þ          *CHART.WIDTH = 260þ          *CHART.HEIGHT = 130þ          CHART.WIDTH = 300þ          CHART.HEIGHT = 270þ        CASE W$WIDTH = 2þ          *CHART.WIDTH = 400þ          *CHART.HEIGHT = 200þ          CHART.WIDTH = 520þ          CHART.HEIGHT = 270þ        CASE W$WIDTH = 3 OR 1þ          *CHART.WIDTH = 750þ          *CHART.HEIGHT = 280þ          CHART.WIDTH = 1015þ          CHART.HEIGHT = 410þ      END CASEþ      *IF W$TYPE = "HLINEARGAUGE" OR W$TYPE = "HLED" THEN CHART.HEIGHT = 80þ      *IF W$TYPE = "VLED" OR W$TYPE = "THERMOMETER" THEN CHART.WIDTH = 110 ; CHART.HEIGHT = 280þ      *IF W$TYPE = "CYLINDER" THEN CHART.WIDTH = 140þ      *IF W$TYPE = "BULB" THEN CHART.WIDTH = 110 ; CHART.HEIGHT = 130þ      IF W$TYPE = "HLINEARGAUGE" OR W$TYPE = "HLED" THEN CHART.HEIGHT = 80þ      IF W$TYPE = "VLED" OR W$TYPE = "THERMOMETER" THEN CHART.WIDTH = 110þ      IF W$TYPE = "CYLINDER" THEN CHART.WIDTH = 140þ      IF W$TYPE = "BULB" THEN CHART.WIDTH = 110 ; CHART.HEIGHT = 130þ      IF W$TYPE = "ANGULARGAUGE" THENþ        BEGIN CASEþ          CASE W$WIDTH = 1þ            CHART.HEIGHT = 130þ          CASE W$WIDTH = 2þ            CHART.HEIGHT = 200þ        END CASEþ      ENDþ      MOVIE.HEIGHT = INT(CHART.HEIGHT *1.3)þ      MOVIE.WIDTH = CHART.WIDTH + 75þ*þ      READ FW.TEMPLATE FROM F.WEB.FORMS, "FW_template.html" ELSE FW.TEMPLATE = "FW_template.html not found"þ      CALL SWAP(FW.TEMPLATE,'[FW_MODULE]',FW.NAME)þ*þ      READ SXML FROM F.MVDB.CONTROL, CHART.TYPE:".SETTINGS" ELSE SXML = ''þ      CONVERT AM TO "" IN SXMLþ*þ      GOSUB TICKMARK.OPTIONS ;* Add chart options to support tickmarksþ*þ      IF W$TYPE = "THERMOMETER" AND W$FW.THERMOMETER.COLOR # "" THENþ        LOCATE W$FW.THERMOMETER.COLOR IN NAME.COLOR<1> SETTING CPOS THENþ          W$FW.THERMOMETER.COLOR = NAME.COLOR<2,CPOS>þ        ENDþ        W$CHART.OPTIONS<-1> = "gaugeFillColor='":W$FW.THERMOMETER.COLOR:"'"þ      ENDþ* LJB 7-10-10 Removed DD restriction for angular and linear gauge charts. Not sure why itþ* was here in the first placeþ*    IF W$TYPE = "HLED" OR W$TYPE = "VLED" OR W$TYPE = "THERMOMETER" OR W$TYPE = "CYLINDER" OR W$TYPE = "BULB" THENþ      IF W$FW.DD.WIDGET # "" THENþ        FW.WIDGET.POS = 1þ        GOSUB MAKE.FW.DD.URLþ        IF URL # "" THENþ          URLENCODE.STRING = URLþ          GOSUB URL.ENCODE ;* Encode the entire URLþ          W$CHART.OPTIONS<-1> = " clickURL='":NEW.STRING:"'"þ        ENDþ      ENDþ*    ENDþ      IF W$CHART.OPTIONS # "" THENþ        XML.OPTS = W$CHART.OPTIONSþ        NODE.NAME = 'chart'þ        GOSUB APPLY.XML.OPTSþ      ENDþ*þ      PDATA = '<colorRange>'þ      COLOR.RANGE.OPTS = W$FW.COLOR.RANGE<4>þ      CONVERT '"' TO "'" IN COLOR.RANGE.OPTSþ      FOR PX = 1 TO DCOUNT( W$FW.COLOR.RANGE<1>, VM )þ        USE.COLOR = W$FW.COLOR.RANGE<3,PX>þ        LOCATE USE.COLOR IN NAME.COLOR<1> SETTING CPOS THENþ          USE.COLOR = NAME.COLOR<2,CPOS>þ        END ELSEþ          IF USE.COLOR[1,1] # "#" THEN USE.COLOR = "#FFFFFF" ;* Whiteþ        ENDþ        CONVERT "#" TO "" IN USE.COLORþ        UPDATE.OPTS = COLOR.RANGE.OPTS<1,PX>þ        OPTS.DELIM = ' 'þ        GOSUB OPTS.UPDATEþ        COLOR.RANGE.OPTS<1,PX> = UPDATE.OPTSþ        PDATA := "<color minValue='":W$FW.COLOR.RANGE<1,PX>:"' maxValue='":W$FW.COLOR.RANGE<2,PX>:"' code='":USE.COLOR:"' ":COLOR.RANGE.OPTS<1,PX>:" />"þ      NEXT PXþ      PDATA := '</colorRange>'þ      METER.STYLE = 0þ      IF W$TYPE = "HLED" OR W$TYPE = "VLED" OR W$TYPE = "THERMOMETER" OR W$TYPE = "CYLINDER" OR W$TYPE = "BULB" THENþ        PDATA := '[METER_VALUE]'þ        METER.STYLE = 1þ      END ELSEþ        IF W$TYPE = "ANGULARGAUGE" THENþ          PDATA := '<dials>'þ          DNODE = "dial"þ        END ELSEþ          PDATA := '<pointers>'þ          DNODE = 'pointer'þ        ENDþ        FOR PX = 1 TO DCOUNT( W$FW.DIAL.VALUES<1>, VM )þ          UPDATE.OPTS = W$FW.DIAL.OPTS<1,PX>þ          OPTS.DELIM = ' 'þ          GOSUB OPTS.UPDATEþ          W$FW.DIAL.OPTS<1,PX> = UPDATE.OPTSþ          PDATA := "<":DNODE:" value='":W$FW.DIAL.VALUES<1,PX>:"' ":W$FW.DIAL.OPTS<1,PX>þ          FW.WIDGET.POS = PXþ          GOSUB MAKE.FW.DD.URLþ          IF URL # "" THENþ            URLENCODE.STRING = URLþ            GOSUB URL.ENCODE ;* Encode the entire URLþ            PDATA := " link='":NEW.STRING:"'"þ          ENDþ          PDATA := " />"þ        NEXT PXþ        PDATA := '</':DNODE:'s>'þ        PDATA := '<trendpoints>'þ        FOR PX = 1 TO DCOUNT( W$FW.TRENDPOINT.VALUES<1>, VM )þ          UPDATE.OPTS = W$FW.TRENDPOINT.OPTS<1,PX>þ          OPTS.DELIM = ' 'þ          GOSUB OPTS.UPDATEþ          W$FW.TRENDPOINT.OPTS<1,PX> = UPDATE.OPTSþ          PDATA := "<point startValue='":W$FW.TRENDPOINT.VALUES<1,PX>:"' "þ          IF W$FW.TRENDPOINT.VALUES<2,PX> # "" THEN PDATA := "endValue='":W$FW.TRENDPOINT.VALUES<2,PX>:"' "þ          PDATA := "displayValue='":W$FW.TRENDPOINT.LABELS<1,PX>:"' ":W$FW.TRENDPOINT.OPTS<1,PX>:" />"þ        NEXT PXþ        PDATA := '</trendpoints>'þ      ENDþ      CALL SWAP(SXML,'[CHART.PALETTE]',W$FW.CHART.PALETTE)þ      CALL SWAP(SXML,'[UPPER.LIMIT]',W$FW.UPPER.LIMIT)þ      CALL SWAP(SXML,'[LOWER.LIMIT]',W$FW.LOWER.LIMIT)þ      CALL SWAP(SXML,'[UPPER.LIMIT.DISPLAY]',W$FW.UPPER.LIMIT.LABEL)þ      CALL SWAP(SXML,'[LOWER.LIMIT.DISPLAY]',W$FW.LOWER.LIMIT.LABEL)þ      CALL SWAP(SXML,'[NUMBER.PREFIX]',W$FW.NUMBER.PREFIX)þ      CALL SWAP(SXML,'[NUMBER.SUFFIX]',W$FW.NUMBER.SUFFIX)þ      CALL SWAP(FW.TEMPLATE,'<!-- chart_width -->',MOVIE.WIDTH)þ      CALL SWAP(FW.TEMPLATE,'<!-- chart_height -->',MOVIE.HEIGHT)þ*þ      IF METER.STYLE THENþ        HTML = ''þ        MASTER.SXML = SXMLþ        MASTER.PDATA = PDATAþ        MASTER.FW.TEMPLATE = FW.TEMPLATEþ        VAL.CNT = DCOUNT( W$FW.METER.VALUE<1>, @VM )þ        FOR MVX = 1 TO VAL.CNTþ          UPDATE.OPTS = W$FW.METER.VALUE.OPTS<1,MVX>þ          OPTS.DELIM = ' 'þ          GOSUB OPTS.UPDATEþ          W$FW.METER.VALUE.OPTS<1,MVX> = UPDATE.OPTSþ          VALDATA = '<value ':W$FW.METER.VALUE.OPTS<1,MVX>' >':W$FW.METER.VALUE<1,MVX>:'</value>'þ          CALL SWAP(PDATA,'[METER_VALUE]',VALDATA)þ          CALL SWAP(SXML,'[CHART.DATA]',PDATA)þ          CALL SWAP(FW.TEMPLATE,'<!-- chart_div_id -->','flashcontent_':VX:'_':MVX)þ          CALL SWAP(FW.TEMPLATE,'<!-- CHARTXML -->',SXML)þ          HTML := FW.TEMPLATEþ          SXML = MASTER.SXMLþ          PDATA = MASTER.PDATAþ          FW.TEMPLATE = MASTER.FW.TEMPLATEþ        NEXT MVXþ*þ        IF VAL.CNT > 1 THENþ          IF W$TYPE = "FWBULB" THENþ            SHRINK.MLT = 1þ            FOR NN = 2 TO VAL.CNTþ              SHRINK.MLT -= .2þ            NEXT NNþ            IF SHRINK.MLT < .25 THEN SHRINK.MLT = .25þ            CHART.WIDTH = INT( CHART.WIDTH * SHRINK.MLT )þ            CHART.HEIGHT = INT( CHART.WIDTH * SHRINK.MLT )þ          ENDþ        ENDþ      END ELSEþ        CALL SWAP(SXML,'[CHART.DATA]',PDATA)þ        CALL SWAP(FW.TEMPLATE,'<!-- chart_div_id -->','flashcontent_':VX)þ        CALL SWAP(FW.TEMPLATE,'<!-- CHARTXML -->',SXML)þ        HTML = FW.TEMPLATEþ      ENDþ    CASE CHART.TYPE = "FWBULLET"þ      IF W$TYPE = "HBULLET" THENþ        BEGIN CASEþ          CASE W$WIDTH = 1 AND DB.TEMPLATE = 3þ            *HART.WIDTH = 220þ            *HART.HEIGHT = 60þ            CHART.WIDTH = 260þ            CHART.HEIGHT = 60þ          CASE W$WIDTH = 1þ            *CHART.WIDTH = 220þ            *CHART.HEIGHT = 60þ            CHART.WIDTH = 300þ            CHART.HEIGHT = 60þ          CASE W$WIDTH = 2þ            *CHART.WIDTH = 400þ            *CHART.HEIGHT = 60þ            CHART.WIDTH = 520þ            CHART.HEIGHT = 60þ          CASE W$WIDTH = 3 OR 1þ            *CHART.WIDTH = 750þ            *CHART.HEIGHT = 60þ            CHART.WIDTH = 1015þ            CHART.HEIGHT = 60þ        END CASEþ      END ELSEþ        BEGIN CASEþ          CASE W$WIDTH = 1 AND DB.TEMPLATE = 3þ            *CHART.WIDTH = 110þ            *CHART.HEIGHT = 180þ            CHART.WIDTH = 110þ            CHART.HEIGHT = 240þ          CASE W$WIDTH = 1þ            *CHART.WIDTH = 110þ            *CHART.HEIGHT = 180þ            CHART.WIDTH = 110þ            CHART.HEIGHT = 270þ          CASE W$WIDTH = 2þ            *CHART.WIDTH = 110þ            *CHART.HEIGHT = 280þ            CHART.WIDTH = 110þ            CHART.HEIGHT = 300þ          CASE W$WIDTH = 3 OR 1þ            *CHART.WIDTH = 110þ            *CHART.HEIGHT = 400þ            CHART.WIDTH = 110þ            CHART.HEIGHT = 410þ        END CASEþ      ENDþ      MOVIE.HEIGHT = INT(CHART.HEIGHT *1.3)þ      MOVIE.WIDTH = CHART.WIDTH + 75þ*þ      READ FW.TEMPLATE FROM F.WEB.FORMS, "FW_template.html" ELSE FW.TEMPLATE = "FW_template.html not found"þ      CALL SWAP(FW.TEMPLATE,'[FW_MODULE]',FW.NAME)þ*þ      READ SXML FROM F.MVDB.CONTROL, CHART.TYPE:".SETTINGS" ELSE SXML = ''þ      CONVERT AM TO "" IN SXMLþ*þ      GOSUB TICKMARK.OPTIONS ;* Add chart options to support tickmarksþ*þ      IF W$FW.BC.PLOT.COLOR # "" THENþ        USE.COLOR = W$FW.BC.PLOT.COLORþ        LOCATE USE.COLOR IN NAME.COLOR<1> SETTING CPOS THENþ          USE.COLOR = NAME.COLOR<2,CPOS>þ        END ELSEþ          IF USE.COLOR[1,1] # "#" THEN USE.COLOR = ""þ        ENDþ        IF USE.COLOR # "" THEN W$CHART.OPTIONS<-1> = "plotFillColor='":USE.COLOR:'"'þ      ENDþ      IF W$FW.BC.TARGET.COLOR # "" THENþ        USE.COLOR = W$FW.BC.TARGET.COLORþ        LOCATE USE.COLOR IN NAME.COLOR<1> SETTING CPOS THENþ          USE.COLOR = NAME.COLOR<2,CPOS>þ        END ELSEþ          IF USE.COLOR[1,1] # "#" THEN USE.COLOR = ""þ        ENDþ        IF USE.COLOR # "" THEN W$CHART.OPTIONS<-1> = "targetColor='":USE.COLOR:'"'þ      ENDþ*þ      IF W$FW.DD.WIDGET # "" THENþ        FW.WIDGET.POS = 1þ        GOSUB MAKE.FW.DD.URLþ        IF URL # "" THENþ          URLENCODE.STRING = URLþ          GOSUB URL.ENCODE ;* Encode the entire URLþ          W$CHART.OPTIONS<-1> = " clickURL='":NEW.STRING:"'"þ        ENDþ      ENDþ*þ      IF W$CHART.OPTIONS # "" THENþ        XML.OPTS = W$CHART.OPTIONSþ        NODE.NAME = 'chart'þ        GOSUB APPLY.XML.OPTSþ      ENDþ*þ      PDATA = '<colorRange>'þ      COLOR.RANGE.OPTS = W$FW.COLOR.RANGE<4>þ      UPDATE.OPTS = COLOR.RANGE.OPTSþ      OPTS.DELIM = ' 'þ      GOSUB OPTS.UPDATEþ      COLOR.RANGE.OPTS = UPDATE.OPTSþ      FOR PX = 1 TO DCOUNT( W$FW.COLOR.RANGE<1>, VM )þ        USE.COLOR = W$FW.COLOR.RANGE<3,PX>þ        LOCATE USE.COLOR IN NAME.COLOR<1> SETTING CPOS THENþ          USE.COLOR = NAME.COLOR<2,CPOS>þ        END ELSEþ          IF USE.COLOR[1,1] # "#" THEN USE.COLOR = "#FFFFFF" ;* Whiteþ        ENDþ        PDATA := "<color minValue='":W$FW.COLOR.RANGE<1,PX>:"' maxValue='":W$FW.COLOR.RANGE<2,PX>:"' code='":USE.COLOR:"' ":COLOR.RANGE.OPTS<1,PX>:" />"þ      NEXT PXþ      PDATA := '</colorRange>'þ      PDATA := '<value ':W$FW.METER.VALUE.OPTS:' >':W$FW.METER.VALUE:'</value>'þ      PDATA := '<target ':W$FW.METER.TARGET.OPTS:' >':W$FW.METER.TARGET:'</target>'þ      CALL SWAP(SXML,'[CHART.DATA]',PDATA)þ      CALL SWAP(SXML,'[CAPTION]',W$FW.CAPTION)þ      CALL SWAP(SXML,'[SUBCAPTION]',W$FW.SUBCAPTION)þ      CALL SWAP(SXML,'[CHART.PALETTE]',W$FW.CHART.PALETTE)þ      CALL SWAP(SXML,'[UPPER.LIMIT]',W$FW.UPPER.LIMIT)þ      CALL SWAP(SXML,'[LOWER.LIMIT]',W$FW.LOWER.LIMIT)þ      CALL SWAP(SXML,'[NUMBER.PREFIX]',W$FW.NUMBER.PREFIX)þ      CALL SWAP(SXML,'[NUMBER.SUFFIX]',W$FW.NUMBER.SUFFIX)þ      CALL SWAP(FW.TEMPLATE,'<!-- chart_width -->',MOVIE.WIDTH)þ      CALL SWAP(FW.TEMPLATE,'<!-- chart_height -->',MOVIE.HEIGHT)þ      CALL SWAP(FW.TEMPLATE,'<!-- chart_div_id -->','flashcontent_':VX)þ      CALL SWAP(FW.TEMPLATE,'<!-- CHARTXML -->',SXML)þ      HTML = FW.TEMPLATEþ    CASE CHART.TYPE = "FWSPARK"þ      BEGIN CASEþ        CASE W$WIDTH = 1 AND DB.TEMPLATE = 3þ          *CHART.WIDTH = 220þ          *CHART.HEIGHT = 40þ          CHART.WIDTH = 260þ          CHART.HEIGHT = 40þ        CASE W$WIDTH = 1þ          *CHART.WIDTH = 220þ          *CHART.HEIGHT = 40þ          CHART.WIDTH = 300þ          CHART.HEIGHT = 40þ        CASE W$WIDTH = 2þ          *CHART.WIDTH = 400þ          *CHART.HEIGHT = 40þ          CHART.WIDTH = 520þ          CHART.HEIGHT = 40þ        CASE W$WIDTH = 3 OR 1þ          *CHART.WIDTH = 750þ          *CHART.HEIGHT = 40þ          CHART.WIDTH = 1015þ          CHART.HEIGHT = 40þ      END CASEþ      MOVIE.HEIGHT = INT(CHART.HEIGHT *1.3)þ      MOVIE.WIDTH = CHART.WIDTH + 75þ*þ      READ FW.TEMPLATE FROM F.WEB.FORMS, "FW_template.html" ELSE FW.TEMPLATE = "FW_template.html not found"þ      CALL SWAP(FW.TEMPLATE,'[FW_MODULE]',FW.NAME)þ*þ      READ SXML FROM F.MVDB.CONTROL, CHART.TYPE:".SETTINGS" ELSE SXML = ''þ      CONVERT AM TO "" IN SXMLþ*þ      IF W$FW.DD.WIDGET # "" THENþ        FW.WIDGET.POS = 1þ        GOSUB MAKE.FW.DD.URLþ        IF URL # "" THENþ          URLENCODE.STRING = URLþ          GOSUB URL.ENCODE ;* Encode the entire URLþ          W$CHART.OPTIONS<-1> = " clickURL='":NEW.STRING:"'"þ        ENDþ      ENDþ      IF W$CHART.OPTIONS # "" THENþ        XML.OPTS = W$CHART.OPTIONSþ        NODE.NAME = 'chart'þ        GOSUB APPLY.XML.OPTSþ      ENDþ*þ      PDATA = '<dataset>'þ      FOR PX = 1 TO DCOUNT( W$FW.VALUES<1>, VM )þ        UPDATE.OPTS = W$FW.VALUE.OPTS<1,PX>þ        OPTS.DELIM = ' 'þ        GOSUB OPTS.UPDATEþ        W$FW.VALUE.OPTS<1,PX> = UPDATE.OPTSþ        PDATA := "<set value='":W$FW.VALUES<1,PX>:"' ":W$FW.VALUE.OPTS<1,PX>:" />"þ      NEXT PXþ      PDATA := '</dataset>'þ      IF W$FW.SPARK.TREND.BEG # "" THENþ        PDATA := '<trendlines>'þ        FOR TLX = 1 TO DCOUNT( W$FW.SPARK.TREND.BEG, VM )þ          UPDATE.OPTS = W$FW.SPARK.TREND.OPTS<1,TLX>þ          OPTS.DELIM = ' 'þ          GOSUB OPTS.UPDATEþ          W$FW.SPARK.TREND.OPTS<1,TLX> = UPDATE.OPTSþ          PDATA := "<line startValue='":W$FW.SPARK.TREND.BEG<1,TLX>:"' endValue='":W$FW.SPARK.TREND.END<1,TLX>:"' ":W$FW.SPARK.TREND.OPTS<1,TLX>:" />"þ        NEXT TLXþ        PDATA := '</trendlines>'þ      ENDþ      CALL SWAP(SXML,'[CHART.DATA]',PDATA)þ      CALL SWAP(SXML,'[CAPTION]',W$FW.CAPTION)þ      CALL SWAP(SXML,'[SUBCAPTION]',W$FW.SUBCAPTION)þ      CALL SWAP(SXML,'[CHART.PALETTE]',W$FW.CHART.PALETTE)þ      CALL SWAP(SXML,'[UPPER.LIMIT]',W$FW.UPPER.LIMIT)þ      CALL SWAP(SXML,'[LOWER.LIMIT]',W$FW.LOWER.LIMIT)þ      CALL SWAP(FW.TEMPLATE,'<!-- chart_width -->',MOVIE.WIDTH)þ      CALL SWAP(FW.TEMPLATE,'<!-- chart_height -->',MOVIE.HEIGHT)þ      CALL SWAP(FW.TEMPLATE,'<!-- chart_div_id -->','flashcontent_':VX)þ      CALL SWAP(FW.TEMPLATE,'<!-- CHARTXML -->',SXML)þ      HTML = FW.TEMPLATEþ    CASE CHART.TYPE = "FWFP"þ      MOVIE.HEIGHT = INT(CHART.HEIGHT *1.3)þ      MOVIE.WIDTH = CHART.WIDTH + 75þ*þ      READ FW.TEMPLATE FROM F.WEB.FORMS, "FW_template.html" ELSE FW.TEMPLATE = "FW_template.html not found"þ      CALL SWAP(FW.TEMPLATE,'[FW_MODULE]',FW.NAME)þ*þ      READ SXML FROM F.MVDB.CONTROL, CHART.TYPE:".SETTINGS" ELSE SXML = ''þ      CONVERT AM TO "" IN SXMLþ      IF W$CHART.OPTIONS # "" THENþ        XML.OPTS = W$CHART.OPTIONSþ        NODE.NAME = 'chart'þ        GOSUB APPLY.XML.OPTSþ      ENDþ      COLOR.LIST = W$FW.COLORSþ      GOSUB APPLY.COLOR.OPTSþ*þ      PDATA = ''þ      FOR PX = 1 TO DCOUNT( W$FW.LABELS<1>, VM )þ        UPDATE.OPTS = W$FW.VALUE.OPTS<1,PX>þ        OPTS.DELIM = ' 'þ        GOSUB OPTS.UPDATEþ        W$FW.VALUE.OPTS<1,PX> = UPDATE.OPTSþ        PDATA := "<set label='":W$FW.LABELS<1,PX>:"' value='":W$FW.VALUES<1,PX>:"' color='":COLOR.ARRAY<1,PX>:"' ":W$FW.VALUE.OPTS<1,PX>þ        FW.WIDGET.POS = PXþ        GOSUB MAKE.FW.DD.URLþ        IF URL # "" THENþ          URLENCODE.STRING = URLþ          GOSUB URL.ENCODE ;* Encode the entire URLþ          PDATA := " link='":NEW.STRING:"'"þ        ENDþ        PDATA := " />"þ      NEXT PXþ      CALL SWAP(SXML,'[CHART.DATA]',PDATA)þ      CALL SWAP(SXML,'[CAPTION]',W$FW.CAPTION)þ      CALL SWAP(SXML,'[SUBCAPTION]',W$FW.SUBCAPTION)þ      CALL SWAP(SXML,'[NUMBER.PREFIX]',W$FW.NUMBER.PREFIX)þ      CALL SWAP(SXML,'[NUMBER.SUFFIX]',W$FW.NUMBER.SUFFIX)þ      CALL SWAP(FW.TEMPLATE,'<!-- chart_width -->',MOVIE.WIDTH)þ      CALL SWAP(FW.TEMPLATE,'<!-- chart_height -->',MOVIE.HEIGHT)þ      CALL SWAP(FW.TEMPLATE,'<!-- chart_div_id -->','flashcontent_':VX)þ      CALL SWAP(FW.TEMPLATE,'<!-- CHARTXML -->',SXML)þ      HTML = FW.TEMPLATEþ    CASE CHART.TYPE = "FCPIE"þ      BEGIN CASEþ        CASE W$WIDTH = 1 AND DB.TEMPLATE = 3þ          *CHART.WIDTH = 220þ          *CHART.HEIGHT = 180þ          CHART.WIDTH = 260þ          CHART.HEIGHT = 240þ        CASE W$WIDTH = 1þ          *CHART.WIDTH = 220þ          *CHART.HEIGHT = 180þ          CHART.WIDTH = 300þ          CHART.HEIGHT = 270þ        CASE W$WIDTH = 2þ          *CHART.WIDTH = 420þ          *CHART.HEIGHT = 240þ          CHART.WIDTH = 520þ          CHART.HEIGHT = 365þ        CASE W$WIDTH = 3 OR 1þ          *CHART.WIDTH = 730þ          *CHART.HEIGHT = 320þ          CHART.WIDTH = 800þ          CHART.HEIGHT = 550þ      END CASEþ      PT.NAME = WT$SWFþ      PS.NAME = W$TYPE:".SETTINGS"þ      IF W$CHART.HEIGHT # "" THEN CHART.HEIGHT = W$CHART.HEIGHTþ      IF W$TYPE = "FC3DPIE" THENþ        CHART.HEIGHT = INT(CHART.HEIGHT*.75)þ      ENDþ      MOVIE.HEIGHT = INT(CHART.HEIGHT *1.3)þ      MOVIE.WIDTH = CHART.WIDTH + 75þ*þ      READ PIE.TEMPLATE FROM F.WEB.FORMS, "FCF_template.html" ELSE PIE.TEMPLATE = "FCF_template.html not found"þ      PT.NAME = OCONV(PT.NAME,'MCL')þ      CALL SWAP(PIE.TEMPLATE,'[FCF_MODULE]',PT.NAME)þ*þ      READ SXML FROM F.MVDB.CONTROL, PS.NAME ELSE SXML = ''þ      CONVERT AM TO "" IN SXMLþ      IF W$CHART.OPTIONS # "" THENþ        XML.OPTS = W$CHART.OPTIONSþ        NODE.NAME = 'graph'þ        GOSUB APPLY.XML.OPTSþ      ENDþ      COLOR.LIST = W$PIE.COLORSþ      GOSUB APPLY.COLOR.OPTSþ      PDATA = ''þ      FOR PX = 1 TO DCOUNT( W$PIE.LABELS<1>, VM )þ        UPDATE.OPTS = W$PIE.VALUE.OPTS<1,PX>þ        OPTS.DELIM = ' 'þ        GOSUB OPTS.UPDATEþ        W$PIE.VALUE.OPTS<1,PX> = UPDATE.OPTSþ        PDATA := "<set label='":W$PIE.LABELS<1,PX>:"' color='":COLOR.ARRAY<1,PX>:"' ":W$PIE.VALUE.OPTS<1,PX>:" value='":W$PIE.VALUES<1,PX>:"'"þ        FW.WIDGET.POS = PXþ        GOSUB MAKE.FW.DD.URLþ        IF URL # "" THENþ          URLENCODE.STRING = URLþ          GOSUB URL.ENCODE ;* Encode the entire URLþ          PDATA := " link='":NEW.STRING:"'"þ        ENDþ        PDATA := ' />'þ      NEXT PXþ      CALL SWAP(SXML,'[CHART.DATA]',PDATA)þ      CALL SWAP(SXML,'[CHART.TITLE]',W$PIE.CAPTION)þ      RADIUS = INT(CHART.WIDTH/2)-INT(CHART.WIDTH*.15)þ      CALL SWAP(SXML,'[RADIUS]',RADIUS)þ      CALL SWAP(PIE.TEMPLATE,'<!-- chart_width -->',MOVIE.WIDTH)þ      CALL SWAP(PIE.TEMPLATE,'<!-- chart_height -->',MOVIE.HEIGHT)þ      CALL SWAP(PIE.TEMPLATE,'<!-- chart_div_id -->','flashcontent_':VX)þ      CALL SWAP(PIE.TEMPLATE,'<!-- CHARTXML -->',SXML)þ      HTML = PIE.TEMPLATEþ    CASE CHART.TYPE = "FCLINECOL"þ      BEGIN CASEþ        CASE W$WIDTH = 1 AND DB.TEMPLATE = 3þ          *CHART.WIDTH = 220þ          *CHART.HEIGHT = 180þ          CHART.WIDTH = 260þ          CHART.HEIGHT = 240þ        CASE W$WIDTH = 1þ          *CHART.WIDTH = 220þ          *CHART.HEIGHT = 180þ          CHART.WIDTH = 300þ          CHART.HEIGHT = 270þ        CASE W$WIDTH = 2þ          *CHART.WIDTH = 420þ          *CHART.HEIGHT = 240þ          CHART.WIDTH = 520þ          CHART.HEIGHT = 300þ        CASE W$WIDTH = 3 OR 1þ          *CHART.WIDTH = 730þ          *CHART.HEIGHT = 320þ          CHART.WIDTH = 1015þ          CHART.HEIGHT = 425þ      END CASEþ      IF W$CHART.HEIGHT # "" THEN CHART.HEIGHT = W$CHART.HEIGHTþ      BT.NAME = WT$SWFþ      BS.NAME = W$TYPE:".SETTINGS"þ      MOVIE.HEIGHT = INT(CHART.HEIGHT *1.3)þ      MOVIE.WIDTH = CHART.WIDTH + 75þ*þ      COLOR.LIST = W$BAR.COLORSþ      GOSUB APPLY.COLOR.OPTSþ*þ      READ BAR.TEMPLATE FROM F.WEB.FORMS, "FCF_template.html" ELSE BAR.TEMPLATE = "FCF_template.html not found"þ      BT.NAME = OCONV(BT.NAME,'MCL')þ      CALL SWAP(BAR.TEMPLATE,'[FCF_MODULE]',BT.NAME)þ*þ      READ SXML FROM F.MVDB.CONTROL, BS.NAME ELSE SXML = ''þ      CONVERT AM TO "" IN SXMLþ      IF W$CHART.OPTIONS # "" THENþ        XML.OPTS = W$CHART.OPTIONSþ        NODE.NAME = 'graph'þ        GOSUB APPLY.XML.OPTSþ      ENDþ      PDATA = ''þ      IF MULTI.SERIES THENþ        PDATA := '<categories>'þ        FOR PX = 1 TO DCOUNT( W$BAR.XLABELS<1>, VM )þ          PDATA := "<category label='":W$BAR.XLABELS<1,PX>:"' ":W$BAR.XLABEL.OPTS<1,PX>:" />"þ        NEXT PXþ        PDATA := '</categories>'þ        FOR PX = 1 TO DCOUNT( W$BAR.LABELS,AM)þ          PDATA := "<dataset seriesname='":W$BAR.LABELS<PX>:"' color='":COLOR.ARRAY<1,PX>:"' ":W$BAR.LABEL.OPTS<PX>:" >"þ          FOR PXV = 1 TO DCOUNT( W$BAR.VALUES<PX>,VM)þ            UPDATE.OPTS = W$BAR.VALUE.OPTS<PX,PXV>þ            OPTS.DELIM = ' 'þ            GOSUB OPTS.UPDATEþ            W$BAR.VALUE.OPTS<PX,PXV> = UPDATE.OPTSþ            MS.VALUE=W$BAR.VALUES<PX,PXV>;  *ZUMASYS 1-5-15þ            MS.LABEL=W$BAR.XLABELS<1,PXV>; *ZUMASYS 1-5-15þ* 7-29-15 CHANGE ANY &lt;br&gt;'s to spacesþ            LOOPþ              BR.POS=INDEX(MS.LABEL,'&lt;br&gt;',1)þ            UNTIL NOT(BR.POS) DOþ              MS.LABEL=MS.LABEL[1,BR.POS-1]:' ':(MS.LABEL[BR.POS+10,9999])þ            REPEATþ* END OF 7-29-15þ            MS.SERIES=W$BAR.LABELS<PX>;    *ZUMASYS 3-15-15þ*ZUMASYS 1-5-15*          PDATA := "<set value='":W$BAR.VALUES<PX,PXV>:"' ":W$BAR.VALUE.OPTS<PX,PXV>þ            PDATA := "<set value='":MS.VALUE:"' ":W$BAR.VALUE.OPTS<PX,PXV>; *ZUMASYS 1-5-15þ            FW.WIDGET.POS = PXþ            GOSUB MAKE.FW.DD.URLþ            IF URL # "" THENþ              URLENCODE.STRING = URLþ              GOSUB URL.ENCODE ;* Encode the entire URLþ              PDATA := " link='":NEW.STRING:"'"þ            ENDþ            PDATA := ' />'þ          NEXT PXVþ          PDATA := '</dataset>'þ        NEXT PXþ      END ELSEþ        FOR PX = 1 TO DCOUNT( W$BAR.XLABELS<1>, VM )þ          IF INDEX(W$BAR.VALUES<1,PX>,'-',1) THENþ            SIGN.MINUS = 1þ          END ELSE SIGN.MINUS = 0þ* 3-4-15 ZUMASYS - SUPPORT DECIMALS IN BAR.VALUESþ          THIS.BAR.VALUES=W$BAR.VALUES<1,PX>þ          IF INDEX(THIS.BAR.VALUES,'.',1) THENþ            THIS.BAR.VALUES.1=OCONV(FIELD(THIS.BAR.VALUES,'.',1),'MCN')þ            THIS.BAR.VALUES.2=OCONV(FIELD(THIS.BAR.VALUES,'.',2),'MCN')þ            W$BAR.VALUES<1,PX>=THIS.BAR.VALUES.1:'.':THIS.BAR.VALUES.2þ          END ELSEþ            W$BAR.VALUES<1,PX> = OCONV(THIS.BAR.VALUES, 'MCN' )þ          ENDþ* END OF 3-4-15 ZUMASYSþ          IF SIGN.MINUS THEN W$BAR.VALUES<1,PX> = '-':W$BAR.VALUES<1,PX>þ          PDATA := "<set label='":W$BAR.XLABELS<1,PX>:"' value='":W$BAR.VALUES<1,PX>+0:"' "þ          IF NOT(INDEX(W$BAR.VALUE.OPTS<1,PX>,'color=',1)) THENþ* Color setting is not being overridden by the W$BAR.VALUE.OPTS infoþ            PDATA := "color='":COLOR.ARRAY<1,1>:"' "þ          ENDþ          UPDATE.OPTS = W$BAR.VALUE.OPTS<1,PX>þ          OPTS.DELIM = ' 'þ          GOSUB OPTS.UPDATEþ          W$BAR.VALUE.OPTS<1,PX> = UPDATE.OPTSþ          PDATA := ' ':W$BAR.VALUE.OPTS<1,PX>þ          FW.WIDGET.POS = PXþ          GOSUB MAKE.FW.DD.URLþ          IF URL # "" THENþ            URLENCODE.STRING = URLþ            GOSUB URL.ENCODE ;* Encode the entire URLþ            PDATA := " link='":NEW.STRING:"'"þ          ENDþ          PDATA := ' />'þ        NEXT PXþ      ENDþ      IF W$BAR.TREND.BEG # "" THENþ        PDATA := '<trendLines>'þ        FOR TLX = 1 TO DCOUNT( W$BAR.TREND.BEG<1>, VM )þ          PDATA := "<line startValue='":W$BAR.TREND.BEG<1,TLX>:"' "þ          IF W$BAR.TREND.END<1,TLX> # "" THEN PDATA := "endValue='":W$BAR.TREND.END<1,TLX>:"' "þ          UPDATE.OPTS = W$BAR.TREND.OPTS<1,TLX>þ          OPTS.DELIM = ' 'þ          GOSUB OPTS.UPDATEþ          W$BAR.TREND.OPTS<1,TLX> = UPDATE.OPTSþ          PDATA := W$BAR.TREND.OPTS<1,TLX>þ          PDATA := " />"þ        NEXT TLXþ        PDATA := '</trendLines>'þ      ENDþ      CONVERT '"' TO "'" IN PDATAþ      CALL SWAP(SXML,'[CHART.DATA]',PDATA)þ      CALL SWAP(SXML,'[CHART.TITLE]',W$BAR.CAPTION)þ      CALL SWAP(SXML,'[YMEMO]',W$BAR.YMEMO<1>)þ      CALL SWAP(SXML,'[XMEMO]',W$BAR.XMEMO<1>)þ      CALL SWAP(BAR.TEMPLATE,'<!-- chart_width -->',MOVIE.WIDTH)þ      CALL SWAP(BAR.TEMPLATE,'<!-- chart_height -->',MOVIE.HEIGHT)þ      CALL SWAP(BAR.TEMPLATE,'<!-- chart_div_id -->','flashcontent_':VX)þ      CALL SWAP(BAR.TEMPLATE,'<!-- CHARTXML -->',SXML)þ      HTML = BAR.TEMPLATEþ    CASE CHART.TYPE<1> = "MAP" OR FIELD(W$TYPE,':',1) = "USAMAP"þ      BEGIN CASEþ        CASE W$WIDTH = 1 AND DB.TEMPLATE = 3þ          NULLþ        CASE W$WIDTH = 1þ          NULLþ        CASE W$WIDTH = 2þ          *CHART.WIDTH = 420þ          *CHART.HEIGHT = 240þ          CHART.WIDTH = 520þ          CHART.HEIGHT = 300þ        CASE W$WIDTH = 3 OR 1þ          *CHART.WIDTH = 730þ          *CHART.HEIGHT = 320þ          CHART.WIDTH = 1015þ          CHART.HEIGHT = 425þ      END CASEþ      IF W$CHART.HEIGHT # "" THEN CHART.HEIGHT = W$CHART.HEIGHTþ      CALL XML.ENCODE(W$MAP.RANGE.NAME,"")þ      IF FIELD(W$TYPE,':',1) = "USAMAP" THENþ        STATE.MAP = FIELD( W$TYPE,':',2)þ        IF STATE.MAP # "" THENþ* This is a drill-down to a specific state detail. We need to match theþ* map name with the selected state.þ* selected state.þ          READ STATE.NAMES FROM F.MVDB.CONTROL, 'STATE.NAMES' ELSE STATE.NAMES = ""þ          CONVERT "," TO @VM IN STATE.NAMESþ          LOCATE STATE.MAP IN STATE.NAMES<1> SETTING STATE.POS THENþ            MAP.NAME = STATE.NAMES<2,STATE.POS>þ          END ELSEþ            MAP.NAME = "USA"þ            W$TITLE := " - Error: Invalid State: ":STATE.MAPþ          ENDþ        END ELSEþ          MAP.NAME = "USA"þ        ENDþ      END ELSEþ        MAP.NAME = CHART.TYPE<2>þ      ENDþ      READ MAP.LIST FROM F.MVDB.CONTROL, 'FCMAP.NAMES' ELSE MAP.LIST = ""þ      LOCATE MAP.NAME IN MAP.LIST SETTING DUM THENþ* This is a valid map nameþ        MS.NAME = MAP.NAME:".SETTINGS"þ        READ SXML FROM F.MVDB.CONTROL, MS.NAME ELSE SXML = ''þ        IF SXML = "" THENþ          MS.NAME = "FCMAP.SETTINGS"þ          READ SXML FROM F.MVDB.CONTROL, MS.NAME ELSE SXML = ''þ        ENDþ        MOVIE.HEIGHT = INT(CHART.HEIGHT *1.3)þ        MOVIE.WIDTH = CHART.WIDTH + 75þ*þ        READ MAP.TEMPLATE FROM F.WEB.FORMS, "FCMAP_template.html" ELSE MAP.TEMPLATE = "FMAP_template.html not found"þ        CALL SWAP(MAP.TEMPLATE,'[FCMAP_MODULE]',MAP.NAME)þ*þ        CONVERT AM TO "" IN SXMLþ        IF W$CHART.OPTIONS # "" THENþ          XML.OPTS = W$CHART.OPTIONSþ          NODE.NAME = 'map'þ          GOSUB APPLY.XML.OPTSþ        ENDþ*þ        MAPDATA = '<colorRange>'þ        FOR CX = 1 TO DCOUNT( W$MAP.RANGE.NAME<1>, @VM )þ          THIS.COLOR = W$MAP.RANGE.COLOR<1,CX>þ          LOCATE THIS.COLOR IN NAME.COLOR<1> SETTING CPOS THENþ            USE.COLOR = NAME.COLOR<2,CPOS>þ          END ELSE USE.COLOR = THIS.COLORþ          UPDATE.OPTS = W$MAP.RANGE.OPTS<1,CX>þ          OPTS.DELIM = ' 'þ          GOSUB OPTS.UPDATEþ          W$MAP.RANGE.OPTS<1,CX> = UPDATE.OPTSþ          MAPDATA := "<color minValue='":W$MAP.RANGE.LOW<1,CX>:"' maxValue='":W$MAP.RANGE.HIGH<1,CX>:"' displayValue='":W$MAP.RANGE.NAME<1,CX>:"' color='":USE.COLORþ          MAPDATA := "' ":W$MAP.RANGE.OPTS<1,CX>:" />"þ        NEXT CXþ        MAPDATA := '</colorRange>'þ        MAPDATA := '<data>'þ        FOR MX = 1 TO DCOUNT( W$MAP.IDS<1>, @VM )þ          IF W$MAP.VALUE.DD<1,MX> = 1 THENþ            MAP.LINK = CGI$PATH:"/MVDB.MAIN?udview=":WIDGET.NAME:"&udpos1=1&udval1=":W$MAP.IDS<1,MX>:"&mapdd"þ          END ELSE IF W$MAP.VALUE.LINK<1,MX> # "" THENþ            MAP.LINK = W$MAP.VALUE.LINK<1,MX>þ            IF W$MAP.LINK.MODE<1,MX> = "N" THEN MAP.LINK = "n-":MAP.LINKþ          END ELSEþ            IF W$FW.DD.WIDGET<1,MX> # "" THENþ              FW.WIDGET.POS = MXþ              GOSUB MAKE.FW.DD.URLþ              MAP.LINK = URLþ            END ELSEþ              MAP.LINK = ""þ            ENDþ          ENDþ          IF MAP.LINK # "" THENþ            URLENCODE.STRING = MAP.LINKþ            GOSUB URL.ENCODEþ            MAP.LINK = NEW.STRINGþ            MAP.LINK = "link='":MAP.LINK:"' "þ          ENDþ          TOOLTEXT = W$MAP.VALUE.TOOLTEXT<1,MX>þ          CALL XML.ENCODE(TOOLTEXT,'')þ          UPDATE.OPTS = W$MAP.VALUE.OPTS<1,MX>þ          OPTS.DELIM = ' 'þ          GOSUB OPTS.UPDATEþ          W$MAP.VALUE.OPTS<1,MX> = UPDATE.OPTSþ          MAPDATA := "<entity id='":W$MAP.IDS<1,MX>:"' value='":W$MAP.VALUES<1,MX>:"' ":W$MAP.VALUE.OPTS<1,MX>:" toolText='":TOOLTEXT:"' ":MAP.LINK:"/>"þ        NEXT MXþ        MAPDATA := '</data>'þ        CONVERT '"' TO "'" IN MAPDATAþ        CALL SWAP(SXML,'[CHART.DATA]',MAPDATA)þ        CALL SWAP(MAP.TEMPLATE,'<!-- chart_width -->',MOVIE.WIDTH)þ        CALL SWAP(MAP.TEMPLATE,'<!-- chart_height -->',MOVIE.HEIGHT)þ        CALL SWAP(MAP.TEMPLATE,'<!-- chart_div_id -->','flashcontent_':VX)þ        CALL SWAP(MAP.TEMPLATE,'<!-- CHARTXML -->',SXML)þ        HTML = MAP.TEMPLATEþ      END ELSEþ        HTML = "Map name '":MAP.NAME:"' not found in MVDB.CONTROL, FCMAP.NAMES"þ      ENDþ    CASE W$TYPE = "TABLE"þ      HTML<-1> = '<table class="gridWidget" width="100%" >'þ      HTML<-1> = '<thead>'þ      HTML<-1> = '<tr>'þ      TABLE.COLS = DCOUNT( W$TABLE.COL.LABELS<1>, VM )þ      FOR CHX = 1 TO TABLE.COLSþ        IF W$TABLE.COL.JUST<1,CHX> # "" THENþ          ALIGN = ' align="':W$TABLE.COL.JUST<1,CHX>:'"'þ        END ELSE ALIGN = ""þ        LABEL = W$TABLE.COL.LABELS<1,CHX>þ        IF LABEL = '' THEN LABEL = '&nbsp;'þ        HTML<-1> = '<th':ALIGN:' >':LABEL:'</th>'þ      NEXT CHXþ      HTML<-1> = '</tr>'þ      HTML<-1> = '</thead>'þ      HTML<-1> = '<tbody>'þ      TABLE.ROWS = DCOUNT( W$TABLE.DATA, AM )þ      FOR TRX = 1 TO TABLE.ROWSþ        HTML<-1> = '<tr>'þ        THIS.ROW = W$TABLE.DATA<TRX>þ        FOR TRC = 1 TO TABLE.COLSþ          IF W$TABLE.COL.JUST<1,TRC> # "" THENþ            ALIGN = ' align="':W$TABLE.COL.JUST<1,TRC>:'"'þ          END ELSE ALIGN = ""þ          VALUE = THIS.ROW<1,TRC>þ          IF VALUE = '' THEN VALUE = '&nbsp;'þ          THIS.COL = '<td':ALIGN:'>':VALUE:'</td>'þ          HTML<-1> = THIS.COLþ        NEXT TRCþ        HTML<-1> = '</tr>'þ      NEXT TRXþ      HTML<-1> = '</tbody>'þ      HTML<-1> = '<tfoot>'þ      HTML<-1> = '<tr>'þ      FOR CHX = 1 TO TABLE.COLSþ        IF W$TABLE.COL.JUST<1,CHX> # "" THENþ          ALIGN = ' align="':W$TABLE.COL.JUST<1,CHX>:'"'þ        END ELSE ALIGN = ""þ        VALUE = W$TABLE.TOTALS<1,CHX>þ        IF VALUE = '' THEN VALUE = '&nbsp;'þ        HTML<-1> = '<td':ALIGN:'>':VALUE:'</td>'þ      NEXT CHXþ      HTML<-1> = '</tr>'þ      HTML<-1> = '</tfoot>'þ      HTML<-1> = '</table>'þ    CASE W$TYPE = "TEXT"þ      HTML = '<pre>'þ      HTML<-1> = W$TEXT.DATAþ      HTML<-1> = '</pre>'þ    CASE W$TYPE = "HTML"þ      HTML = W$HTML.DATAþ*PDF* Check if widget-generated HTML includes a <head> tag, which we interpret as having its own stylingþ      IF INDEX(HTML,'<head>',1)+INDEX(HTML,'<HEAD>',1) THEN WIDGET.OWN.STYLE = TRUEþ      IF WIDGET.OWN.STYLE AND IFRAME.WIDGET.NAME = "" AND PDF.WIDGET.NAME = "" THENþ* Not rendering PDF or returning iframe content - changeþ* widget content to iframe so styles render properly.þ        CALL REBUILD.URL.STRING(IFRAME.URL.STRING)þ        URLENCODE.STRING = WIDGET.NAMEþ        GOSUB URL.ENCODEþ        IFRAME.URL.STRING = '/dbc/MVDB.MAIN?iframewidget=':NEW.STRING:'&':IFRAME.URL.STRING ;* stash widget name in URL string so we know which widget to use for iframe contentþ        HTML = '<iframe src="':IFRAME.URL.STRING:'" width="100%" style="height: 100vh;">':WIDGET.NAME:'</iframe>'þ      ENDþ    CASE 1þ      HTML = "INVALID TYPE ":W$TYPEþ  END CASEþ*þ  IF IFRAME.WIDGET.NAME # "" THENþ* Returning iframe content - no widget styling neededþ    HTML.DIV = '<!-- WIDGETDATA -->'þ  END ELSEþ    IF WIDGET.OWN.STYLE AND PDF.WIDGET.NAME # "" THENþ* Render PDF from widget HTML that has a <head> tag - no widget styling neededþ      HTML.DIV = '<!-- WIDGETDATA -->'þ    END ELSEþ* normal widget stylesþ      HTML.DIV = WIDGET.DIVþ    ENDþ  ENDþ*þ  Q1.LINKS = ''þ  Q2.LINKS = ''þ  Q3.LINKS = ''þ  Q4.LINKS = ''þ  Q5.LINKS = ''þ*þ* Add source code edit link for administrative userþ*þ*þ* FIX 6-1-16 ADD A GO BACK IN ICON LISTþ*þ  NEXT.LINK.POS = DCOUNT(W$LINK.LABEL<1>,@VM)þ  NEXT.LINK.POS2 = DCOUNT(W$LINK.ICON<1>,@VM)þ  IF NEXT.LINK.POS2 > NEXT.LINK.POS THEN NEXT.LINK.POS=NEXT.LINK.POS2þ  READ DD.STACK FROM F.MVDB.UDATA, SESSION$ID:'$DD.STACK' ELSE DD.STACK=''þ  MAX.DD.STACK=DCOUNT(DD.STACK,AM)þ  IF MAX.DD.STACK > 2 THENþ    NEXT.LINK.POS += 1þ    W$LINK.ICON<1,NEXT.LINK.POS> = 'arrow_left.png'þ    W$LINK.ICON.TXT<1,NEXT.LINK.POS> = "Go Back"þ    W$LINK.URL<1,NEXT.LINK.POS> = "javascript:history.back()"; * 9-23-16 *þ    W$LINK.LOCATION<1,NEXT.LINK.POS> = "C"þ  ENDþ* END FIX 6-1-16þ  IF adminauth = 1 THENþ* 6-1-16 *  NEXT.LINK.POS = DCOUNT( W$LINK.LABEL<1>, @VM )þ* 6-1-16 *  NEXT.LINK.POS2 = DCOUNT( W$LINK.ICON<1>, @VM )þ* 6-1-16 *  IF NEXT.LINK.POS2 > NEXT.LINK.POS THEN NEXT.LINK.POS = NEXT.LINK.POS2þ    NEXT.LINK.POS += 1þ    W$LINK.ICON<1,NEXT.LINK.POS> = "script_edit.png"þ    W$LINK.ICON.TXT<1,NEXT.LINK.POS> = "Edit BASIC Source"þ    IF WDEBUG.MODE OR WFAIL.MODE THENþ      USE.SUBNAME = GLOBAL.INFO(91) ;* Original subroutine nameþ    END ELSE USE.SUBNAME = SUBNAMEþ    URLENCODE.STRING = USE.SUBNAMEþ    GOSUB URL.ENCODEþ    URL.SUBNAME = NEW.STRINGþ    W$LINK.URL<1,NEXT.LINK.POS> = "/dbc/MVDB.WEB.ED?ed_file=MVDB.SUBS&ed_item=":URL.SUBNAMEþ    W$LINK.URL.OPTS<1,NEXT.LINK.POS> = 'target="ED_MVDB.SUBS_':URL.SUBNAME:'"'þ    W$LINK.LOCATION<1,NEXT.LINK.POS> = "C"þ*þ* Add debug widget link for administrative userþ*þ    IF NOT(WFAIL.MODE) THENþ      NEXT.LINK.POS += 1þ      W$LINK.ICON<1,NEXT.LINK.POS> = "information.png" ;* Change this to a real debug iconþ      IF WDEBUG.MODE THENþ        W$LINK.ICON.TXT<1,NEXT.LINK.POS> = "Normal Mode"þ      END ELSEþ        W$LINK.ICON.TXT<1,NEXT.LINK.POS> = "Debug Mode"þ      ENDþ      URLENCODE.STRING = WIDGET.NAMEþ      GOSUB URL.ENCODEþ      IF WDEBUG.MODE THENþ        W$LINK.URL<1,NEXT.LINK.POS> = "/dbc/MVDB.MAIN?undebug_widget=":NEW.STRINGþ      END ELSEþ        W$LINK.URL<1,NEXT.LINK.POS> = "/dbc/MVDB.MAIN?debug_widget=":NEW.STRINGþ      ENDþ      W$LINK.LOCATION<1,NEXT.LINK.POS> = "C"þ    ENDþ  ENDþ  IF W$PRINTABLE = 1 THENþ    NEXT.LINK.POS = DCOUNT( W$LINK.LABEL<1>, @VM )þ    NEXT.LINK.POS2 = DCOUNT( W$LINK.ICON<1>, @VM )þ    IF NEXT.LINK.POS2 > NEXT.LINK.POS THEN NEXT.LINK.POS = NEXT.LINK.POS2þ    NEXT.LINK.POS += 1þ    W$LINK.ICON<1,NEXT.LINK.POS> = "printer.png"þ    W$LINK.ICON.TXT<1,NEXT.LINK.POS> = "Print"þ    W$LINK.LABEL<1,NEXT.LINK.POS> = "Print"þ    W$LINK.URL<1,NEXT.LINK.POS> = "#"þ*W$LINK.URL.OPTS<1,NEXT.LINK.POS> = 'onClick="printThis(this);"'þ    W$LINK.URL.OPTS<1,NEXT.LINK.POS> = 'class="DansClass"'þ    W$LINK.LOCATION<1,NEXT.LINK.POS> = 'C'þ  ENDþ*þ*PDF* If PDF generation is enabled, and supported for this widget, add a PDF icon to the control menuþ  IF PDF$ENABLED AND W$PDFABLE AND PDF.WIDGET.NAME = "" THENþ    NEXT.LINK.POS = DCOUNT( W$LINK.LABEL<1>, @VM )þ    NEXT.LINK.POS2 = DCOUNT( W$LINK.ICON<1>, @VM )þ    IF NEXT.LINK.POS2 > NEXT.LINK.POS THEN NEXT.LINK.POS = NEXT.LINK.POS2þ    NEXT.LINK.POS += 1þ    W$LINK.ICON<1,NEXT.LINK.POS> = "page_white_acrobat.png"þ    W$LINK.ICON.TXT<1,NEXT.LINK.POS> = "Generate PDF"þ    W$LINK.LABEL<1,NEXT.LINK.POS> = "Generate PDF"þ    CALL REBUILD.URL.STRING(CURRENT.URL.STRING)þ    PDF.URL.STRING=CURRENT.URL.STRINGþ    URLENCODE.STRING = WIDGET.NAMEþ    GOSUB URL.ENCODEþ    PDF.URL.STRING := '&generatepdf=':NEW.STRING ;* stash widget name in URL string so we know which widget to render as PDFþ    W$LINK.URL<1,NEXT.LINK.POS> = "/dbc/MVDB.MAIN?":PDF.URL.STRINGþ    W$LINK.LOCATION<1,NEXT.LINK.POS> = 'C'þ  ENDþ*þ* 6-27-16 *EXCEL* If EXCEL generation is supported for this widget, add a EXCEL icon to the control menuþ  IF W$EXCELABLE AND EXCEL.WIDGET.NAME = '' THENþ    NEXT.LINK.POS = DCOUNT( W$LINK.LABEL<1>, @VM )þ    NEXT.LINK.POS2 = DCOUNT( W$LINK.ICON<1>, @VM )þ    IF NEXT.LINK.POS2 > NEXT.LINK.POS THEN NEXT.LINK.POS = NEXT.LINK.POS2þ    NEXT.LINK.POS += 1þ    W$LINK.ICON<1,NEXT.LINK.POS> = "page_white_excel.png"þ    W$LINK.ICON.TXT<1,NEXT.LINK.POS> = "Generate Spreadsheet"þ    W$LINK.LABEL<1,NEXT.LINK.POS> = "Generate Spreadsheet"þ    CALL REBUILD.URL.STRING(CURRENT.URL.STRING)þ    URLENCODE.STRING=CURRENT.URL.STRINGþ    GOSUB URL.ENCODEþ    EXCEL.URL.STRING=NEW.STRINGþ    URLENCODE.STRING = WIDGET.NAMEþ    GOSUB URL.ENCODEþ    EXCEL.URL.STRING := '&generateexcel=':NEW.STRING ;* stash widget name in URL string so we know which widget to render as Excel spreadsheetþ    W$LINK.URL<1,NEXT.LINK.POS> = "/dbc/MVDB.MAIN?":EXCEL.URL.STRINGþ    W$LINK.LOCATION<1,NEXT.LINK.POS> = 'C'þ  ENDþ* END OF 6-27-16 *EXCEL*þ*þ  LINK.CNT = DCOUNT( W$LINK.LABEL<1>, VM )þ  LINK.CNT2 = DCOUNT( W$LINK.ICON<1>, VM )þ  IF LINK.CNT2 > LINK.CNT THEN LINK.CNT = LINK.CNT2þ  FOR LX = 1 TO LINK.CNTþ    THIS.LABEL = W$LINK.LABEL<1,LX>þ    THIS.LOC = W$LINK.LOCATION<1,LX>þ    THIS.UD.POS = W$LINK.UD.POS<1,LX>þ    THIS.UD.VAL = W$LINK.UD.VAL<1,LX>þ    THIS.DD.WIDGET = W$LINK.DD.WIDGET<1,LX>þ    THIS.URL = W$LINK.URL<1,LX>þ    THIS.URL.OPTS = W$LINK.URL.OPTS<1,LX>þ*þ    IF THIS.LOC = '' THEN THIS.LOC = '1' ;* Set to quadrant 1 if not specifiedþ*þ    IF THIS.URL # "" THENþ* Specific URL = ignore UD information and Drill down (DD) info.þ      URL = THIS.URLþ    END ELSEþ      IF THIS.DD.WIDGET # "" THEN TARGET.WIDGET = THIS.DD.WIDGET ELSE TARGET.WIDGET = WIDGET.NAMEþ      URLENCODE.STRING = TARGET.WIDGETþ      GOSUB URL.ENCODEþ      TARGET.WIDGET = NEW.STRINGþ      URL = CGI$PATH:"/MVDB.MAIN?udview=":TARGET.WIDGETþ      FOR UDX = 1 TO DCOUNT( THIS.UD.POS<1,1>,SVM )þ        URLENCODE.STRING = THIS.UD.VAL<1,1,UDX>þ        GOSUB URL.ENCODEþ        URL := "&udpos":UDX:"=":THIS.UD.POS<1,1,UDX>:"&udval":UDX:"=":NEW.STRINGþ      NEXT UDXþ      IF THIS.DD.WIDGET # "" THENþ        URL := "&dd"þ* Include the name of this widget in the drilldown link so the target widget knows the referrerþ        URLENCODE.STRING = WIDGET.NAMEþ        GOSUB URL.ENCODEþ        URL := '&dd_from=':NEW.STRINGþ      ENDþ    ENDþ    IF W$LINK.ICON<1,LX> # "" THENþ      IMG.REF = '<img title="':W$LINK.ICON.TXT<1,LX>:'" class="icon" src="/db/icons/':W$LINK.ICON<1,LX>:'" />'þ    END ELSE IMG.REF = ''þ    IF INDEX(THIS.LOC,'C',1) AND IMG.REF # '' THEN ;* This is a Control Iconþ      LINK.DATA = '<a href="':URL:'" ':THIS.URL.OPTS:'>':IMG.REF:'</a>'þ    END ELSEþ      LINK.DATA = '<a href="':URL:'" ':THIS.URL.OPTS:'>':IMG.REF:THIS.LABEL:'</a>'þ    ENDþ*þ    IF INDEX(THIS.LOC,'1',1) THENþ      Q1.LINKS := LINK.DATA:'&nbsp;'þ    ENDþ    IF INDEX(THIS.LOC,'2',1) THENþ      Q2.LINKS := LINK.DATA:'&nbsp;'þ    ENDþ    IF INDEX(THIS.LOC,'3',1) THENþ      Q3.LINKS := LINK.DATA:'&nbsp;'þ    ENDþ    IF INDEX(THIS.LOC,'4',1) THENþ      Q4.LINKS := LINK.DATA:'&nbsp;'þ    ENDþ    IF INDEX(THIS.LOC,'C',1) THENþ      Q5.LINKS := LINK.DATA:'&nbsp;'þ    ENDþ  NEXT LXþ  IF Q1.LINKS # "" THENþ    Q1.LINKS = '<div class="widget_trcorner widget_corner">':Q1.LINKS:'</div>'þ  ENDþ  IF Q2.LINKS # "" THENþ    Q2.LINKS = '<div class="widget_tlcorner widget_corner">':Q2.LINKS:'</div>'þ  ENDþ  IF Q3.LINKS # "" THENþ    Q3.LINKS = '<div class="widget_blcorner widget_corner">':Q3.LINKS:'</div>'þ  ENDþ  IF Q4.LINKS # "" THENþ    Q4.LINKS = '<div class="widget_brcorner widget_corner">':Q4.LINKS:'</div>'þ  ENDþ*þ* Create the input sectionþ*þ  INP.CNT = DCOUNT( W$INPUT.PROMPT, AM )þ  INP.HTML = ''þ  IF INP.CNT THENþ* PJS 10-07-16: Change method from GET to POST to eliminate URL length limitationþ* when form contains many input controls.þ    IF INP.CNT > 20 THENþ      INP.HTML = '<form method="POST" class="widget_form" action="':CGI$PATH:'/MVDB.MAIN">'þ    END ELSEþ      INP.HTML = '<form method="GET" class="widget_form">'þ    ENDþ    FOR IX = 1 TO INP.CNTþ      INP.HTML<-1> = '<div class="widget_control">'þ      INP.HTML<-1> = '<label ':W$INPUT.PROMPT.PARAMS<IX>:'>':W$INPUT.PROMPT<IX>:':</label>'þ      BEGIN CASEþ        CASE W$INPUT.TYPE<IX> = "TEXT"þ          INP.HTML<-1> = '<input type="text" name="inp_':W$INPUT.UDPOS<IX>:'" value="':W$INPUT.DEFAULT<IX>:'" ':W$INPUT.PARAMS<IX>:'>'þ        CASE W$INPUT.TYPE<IX> = "PASSWORD"þ          INP.HTML<-1> = '<input type="password" name="inp_':W$INPUT.UDPOS<IX>:'" value="':W$INPUT.DEFAULT<IX>:'" ':W$INPUT.PARAMS<IX>:'>'þ        CASE W$INPUT.TYPE<IX> = "DATE"þ          INP.HTML<-1> = '<input class="datepicker" type="text" name="inp_':W$INPUT.UDPOS<IX>:'" value="':W$INPUT.DEFAULT<IX>:'" ':W$INPUT.PARAMS<IX>:'>'þ        CASE W$INPUT.TYPE<IX> = "SELECT"þ          INP.HTML<-1> = '<select name="inp_':W$INPUT.UDPOS<IX>:'" ':W$INPUT.PARAMS<IX>:'>'þ          SCNT = DCOUNT( W$INPUT.SELOPTS<IX>, VM )þ          IF W$INPUT.SELVALS<IX> = "" THEN W$INPUT.SELVALS<IX> = W$INPUT.SELOPTS<IX>þ          FOR SELX = 1 TO SCNTþ            IF W$INPUT.SELVALS<IX,SELX> = W$INPUT.DEFAULT<IX> THEN DFLT = "selected" ELSE DFLT = ""þ            INP.HTML<-1> = '<option value="':W$INPUT.SELVALS<IX,SELX>:'" ':DFLT:'>':W$INPUT.SELOPTS<IX,SELX>:'</option>'þ          NEXT SELXþ          INP.HTML<-1> = '</select>'þ        CASE W$INPUT.TYPE<IX> = "CHECKBOX"þ          INP.HTML<-1> = '<input type="checkbox" name="inp_':W$INPUT.UDPOS<IX>:'" value="1" ':W$INPUT.PARAMS<IX>þ          IF W$INPUT.DEFAULT<IX> = 1 THENþ            INP.HTML := ' checked'þ          ENDþ          INP.HTML := '>'þ*add a hidden field to let up know that there was a checkbox on the form.þ*unchecked checkboxes don't get submitted with the rest of the form data.þ          INP.HTML<-1> = '<input type="hidden" name="mvdbcxbx_':W$INPUT.UDPOS<IX>:'" value="1">'þ        CASE 1 ; NULLþ      END CASEþ      INP.HTML<-1> = '</div>'þ    NEXT IXþ    IF W$INPUT.BUTTON = "" THEN W$INPUT.BUTTON = "Go"þ    INP.HTML<-1> = '<div class="widget_control"><input type="submit" value="':W$INPUT.BUTTON:'" ></div>'þ    INP.HTML<-1> = '<input type="hidden" name="udview" value="':WIDGET.NAME:'">'þ    INP.HTML<-1> = '<input type="hidden" name="sw" value="':WIDGET.NAME:'">'þ    IF G$DRILLDOWN.MODE THENþ      INP.HTML<-1> = '<input type="hidden" name="dd" value="">'þ      INP.HTML<-1> = '<input type="hidden" name="dd_from" value="':G$DD.REFERRER:'">'þ      INP.HTML<-1> = '<input type="hidden" name="dd_from_db" value="':G$DD.FROM.DB:'">'þ    ENDþ    INP.HTML<-1> = '</form>'þ    INP.HTML = '<div class="widget_input">':INP.HTML:'</div>'þ  ENDþ*þ*PDF* Omit the control icons in the PDF documentþ  IF PDF.WIDGET.NAME # "" THENþ    Q5.LINKS = ""þ  ENDþ*þ  ENC.TITLE = W$TITLEþ  CALL XML.ENCODE(ENC.TITLE,"")þ  CALL SWAP(HTML.DIV,'<!-- TITLE -->',ENC.TITLE)þ  CALL SWAP(HTML.DIV,'<!-- QUAD1 -->',Q1.LINKS)þ  CALL SWAP(HTML.DIV,'<!-- QUAD2 -->',Q2.LINKS)þ  CALL SWAP(HTML.DIV,'<!-- QUAD3 -->',Q3.LINKS)þ  CALL SWAP(HTML.DIV,'<!-- QUAD4 -->',Q4.LINKS)þ  CALL SWAP(HTML.DIV,'<!-- CONTROLS -->',Q5.LINKS)þ  CALL SWAP(HTML.DIV,'<!-- INPUT -->',INP.HTML)þ  CALL SWAP(HTML.DIV,'<!-- WIDGETDATA -->',HTML)þ  RETURNþ*þAPPLY.XML.OPTS: * Apply XML option overridesþ*þ  SXML.ATTRS = ""þ  ATTR.VAR.LIST = ''þ* Parse the attrbiutes from the XML tag.þ  CPOS = 3 + LEN(NODE.NAME) ;* Start after "<graph " or "<map " depending on the node name.þ  SXML.ATTR.POS = 0þ  SXML.LEN = LEN(SXML)þ  THIS.ATTR = ''þ  SXML.SUFFIX = '>[CHART.DATA]</':NODE.NAME:'>'þ  LOOP UNTIL CPOS > SXML.LEN DOþ    THIS.CH = SXML[CPOS,1]þ    BEGIN CASEþ      CASE THIS.CH = '<' ;* Nothing to do - beginningþ        THIS.ATTR = ''þ      CASE THIS.CH = ' 'þ        GOSUB ADD.SXML.ATTRþ      CASE THIS.CH = '>' ;* Ending tagþ        GOSUB ADD.SXML.ATTRþ        SXML.SUFFIX = SXML[CPOS,999]þ        EXITþ      CASE 1þ        THIS.ATTR := THIS.CHþ    END CASEþ    CPOS += 1þ  REPEATþ  GOSUB ADD.SXML.ATTRþ*þ  CONVERT '"' TO "'" IN XML.OPTSþ  CONVERT @VM TO @AM IN XML.OPTSþ  XML.OPT.CNT = DCOUNT( XML.OPTS, AM )þ  FOR XOX = 1 TO XML.OPT.CNTþ    THIS.OPT = XML.OPTS<XOX>þ    OPT.VAR = FIELD( THIS.OPT, '=', 1 )þ    LOCATE OPT.VAR IN ATTR.VAR.LIST SETTING XOPOS THENþ      SXML.ATTRS<XOPOS> = THIS.OPTþ    END ELSEþ      THIS.ATTR = THIS.OPTþ      GOSUB ADD.SXML.ATTRþ    ENDþ  NEXT XOXþ*þ* Rebuild SXMLþ*þ  SXML = '<':NODE.NAME:' 'þ  FOR XOX = 1 TO SXML.ATTR.POSþ    SXML := SXML.ATTRS<XOX>:' 'þ  NEXT XOXþ  SXML := SXML.SUFFIXþ  RETURNþ*þADD.SXML.ATTR: * Add an attrbiute to the listþ*þ  IF THIS.ATTR # '' THENþ    SXML.ATTR.POS += 1þ    SXML.ATTRS<SXML.ATTR.POS> = THIS.ATTRþ    ATTR.VAR.LIST<SXML.ATTR.POS> = FIELD(THIS.ATTR,'=',1)þ    THIS.ATTR = ''þ  ENDþ  RETURNþ*þAPPLY.COLOR.OPTS: * Build COLOR.ARRAY from defaults and user settingsþ*þ  COLOR.ARRAY = ''þ  DFLT.COLOR.ARRAY = ''þ  IF DB.THEME # '' THENþ    READ THEME.REC FROM F.MVDB.THEMES, DB.THEME ELSE THEME.REC = ''þ    DFLT.COLOR.ARRAY = DELETE(THEME.REC,1,0,0)þ    CONVERT AM TO VM IN DFLT.COLOR.ARRAYþ  END ELSE IF SITE$THEME # '' THENþ    READ THEME.REC FROM F.MVDB.THEMES, SITE$THEME ELSE THEME.REC = ''þ    DFLT.COLOR.ARRAY = DELETE(THEME.REC,1,0,0)þ    CONVERT AM TO VM IN DFLT.COLOR.ARRAYþ  ENDþ  IF DFLT.COLOR.ARRAY = '' THENþ    DFLT.COLOR.ARRAY<1,-1> = '#ff8125'þ    DFLT.COLOR.ARRAY<1,-1> = '#584d43'þ    DFLT.COLOR.ARRAY<1,-1> = '#2e2a27'þ    DFLT.COLOR.ARRAY<1,-1> = '#7b746d'þ    DFLT.COLOR.ARRAY<1,-1> = '#e78859'þ    DFLT.COLOR.ARRAY<1,-1> = '#f04408'þ    DFLT.COLOR.ARRAY<1,-1> = '#bd5204'þ    DFLT.COLOR.ARRAY<1,-1> = '#733e30'þ  ENDþ  DFLT.MAX = DCOUNT( DFLT.COLOR.ARRAY<1>, VM )þ*þ  MAX.COLOR.AM = DCOUNT( COLOR.LIST, AM )þ  IF MAX.COLOR.AM = 0 THEN MAX.COLOR.AM = 1þ  FOR CLX = 1 TO MAX.COLOR.AMþ    MAX.COLOR.VAL = DCOUNT( COLOR.LIST<CLX>, VM )þ    IF MAX.COLOR.VAL < DFLT.MAX THEN MAX.COLOR.VAL = DFLT.MAXþ    FOR CLXV = 1 TO MAX.COLOR.VALþ      IF COLOR.LIST<CLX,CLXV> # "" THENþ        LOCATE OCONV(COLOR.LIST<CLX,CLXV>,"MCU") IN NAME.COLOR<1> SETTING COLOR.POS THENþ          COLOR.LIST<CLX,CLXV> = NAME.COLOR<2,COLOR.POS>þ        ENDþ        COLOR.ARRAY<CLX,CLXV> = COLOR.LIST<CLX,CLXV>þ      END ELSEþ        COLOR.ARRAY<CLX,CLXV> = DFLT.COLOR.ARRAY<1,CLXV>þ      ENDþ    NEXT CLXVþ  NEXT CLXþ  RETURNþ*þURL.ENCODE: *þ*þ  NEW.STRING = ""þ  UE.LEN = LEN(URLENCODE.STRING)þ  FOR UEX = 1 TO UE.LENþ    UE.CHR = URLENCODE.STRING[UEX,1]þ    UE.CVAL = SEQ(UE.CHR)þ    BEGIN CASEþ      CASE UE.CVAL <= 47 ; ENC.FLAG = 1þ      CASE UE.CVAL >= 58 AND UE.CVAL <= 64 ; ENC.FLAG = 1þ      CASE UE.CVAL >= 91 AND UE.CVAL <= 96 ; ENC.FLAG = 1þ      CASE UE.CVAL > 122 ; ENC.FLAG = 1þ      CASE 1 ; ENC.FLAG = 0þ    END CASEþ    IF ENC.FLAG THENþ      UE.CHR = "%":(OCONV(UE.CVAL,'MCDX') 'R%2')þ    ENDþ    NEW.STRING := UE.CHRþ  NEXT UEXþ  RETURNþ*þTICKMARK.OPTIONS: * For charts that support tickmark optionsþ*þ* Convert the settings in W$FW.TICKMARKS into the appropriate XML attributes to beþ* added to the <chart> tag via W$CHART.OPTIONSþ*þ  IF W$FW.TICKMARKS<1> = "0" THENþ    W$CHART.OPTIONS<-1> = "showTickMarks='0'"þ    W$CHART.OPTIONS<-1> = "showTickValues='0'"þ  END ELSEþ    IF W$FW.TICKMARKS<2> = 0 THENþ      W$CHART.OPTIONS<-1> = "showTickValues='0'"þ    ENDþ    IF W$FW.TICKMARKS<3> = "A" THENþ      W$CHART.OPTIONS<-1> = "ticksBelowGraph='0'"þ    ENDþ    IF W$FW.TICKMARKS<4> # "" THENþ      W$CHART.OPTIONS<-1> = "majorTMNumber='":W$FW.TICKMARKS<4>:"'"þ    ENDþ    IF W$FW.TICKMARKS<5> # "" THENþ      W$CHART.OPTIONS<-1> = "minorTMNumber='":W$FW.TICKMARKS<5>:"'"þ    ENDþ  ENDþ  RETURNþ*þMAKE.FW.DD.URL: *þ*þ  TARGET.WIDGET = W$FW.DD.WIDGET<1,FW.WIDGET.POS>þ  IF TARGET.WIDGET = "" THENþ    URL = ""þ    RETURNþ  ENDþ  URLENCODE.STRING = TARGET.WIDGETþ  GOSUB URL.ENCODEþ  TARGET.WIDGET = NEW.STRINGþ  URL = CGI$PATH:"/MVDB.MAIN?udview=":TARGET.WIDGETþ  FOR UDX = 1 TO DCOUNT( W$FW.DD.UD.POS<1,FW.WIDGET.POS>,SVM )þ    URLENCODE.STRING = W$FW.DD.UD.VAL<1,FW.WIDGET.POS,UDX>þ* BEGIN ZUMASYS 1-5-15þ    BEGIN CASEþ      CASE URLENCODE.STRING = 'MS.LABEL'þ        URLENCODE.STRING=MS.LABELþ      CASE URLENCODE.STRING = 'MS.VALUE'þ        URLENCODE.STRING=MS.VALUEþ      CASE URLENCODE.STRING = 'MS.SERIES'; *3-15-15þ        URLENCODE.STRING=MS.SERIES; *3-15-15þ      CASE 1; NULLþ    END CASEþ* END ZUMASYS 1-5-15þ    GOSUB URL.ENCODEþ    URL := "&udpos":UDX:"=":W$FW.DD.UD.POS<1,FW.WIDGET.POS,UDX>:"&udval":UDX:"=":NEW.STRINGþ  NEXT UDXþ  URL := "&dd"þ* Include the name of this widget in the drilldown link so the target widget knows the referrerþ  URLENCODE.STRING = WIDGET.NAMEþ  GOSUB URL.ENCODEþ  URL := '&dd_from=':NEW.STRINGþ* Specify the dashboard to return to from this drilldown view.þ  IF G$DRILLDOWN.MODE THENþ    SOURCE.DB = G$DD.FROM.DBþ  END ELSE SOURCE.DB = G$CURRENT.DBþ  URLENCODE.STRING = SOURCE.DBþ  GOSUB URL.ENCODEþ  URL := '&dd_from_db=':NEW.STRINGþ  RETURNþ*þOPTS.UPDATE:þ  IF NOT(INDEX(UPDATE.OPTS,'decimalSeparator',1)) THENþ    UPDATE.OPTS := OPTS.DELIM:"decimalSeparator='":DECIMAL:"'"þ  ENDþ  IF NOT(INDEX(UPDATE.OPTS,'thousandSeparator',1)) THENþ    UPDATE.OPTS := OPTS.DELIM:"thousandSeparator='":THOUSAND:"'"þ  ENDþ  RETURNþEND0002F4SUB.URL.ENCODEþ0c2SUBROUTINE SUB.URL.ENCODE(URLENCODE.STRING)þ*þ* (C) Copyright 2009, Sierra Bravo Corporation, All Rights Reservedþ* þ* Author: Luke Bucklin, Sierra Bravo Corporationþ* Date: August 7, 2009þ* Purpose: URL encode a text stringþ*þNEW.STRING = ""þUE.LEN = LEN(URLENCODE.STRING)þFOR UEX = 1 TO UE.LENþ  UE.CHR = URLENCODE.STRING[UEX,1]þ  UE.CVAL = SEQ(UE.CHR)þ  BEGIN CASEþ    CASE UE.CVAL <= 47 ; ENC.FLAG = 1þ    CASE UE.CVAL >= 58 AND UE.CVAL <= 64 ; ENC.FLAG = 1þ    CASE UE.CVAL >= 91 AND UE.CVAL <= 96 ; ENC.FLAG = 1þ    CASE UE.CVAL > 122 ; ENC.FLAG = 1þ    CASE 1 ; ENC.FLAG = 0þ  END CASEþ  IF ENC.FLAG THENþ    UE.CHR = "%":(OCONV(UE.CVAL,'MCDX') 'R%2')þ  ENDþ  NEW.STRING := UE.CHRþNEXT UEXþURLENCODE.STRING = NEW.STRINGþRETURNþEND 0024C1MV.COMPILEþ0c2* MV.COMPILE - Sierra Bravo Precompilerþ*þ* Copyright (C) 2006 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written by: Luke Bucklinþ* Date: 12/26/2006þ* Description: Precompilerþ*þ* Modified By: Mike Street, Zumasys for UniData compatibilityþ* Date: 07/22/2015þ* Description: Changed PROCREAD to use @SENTENCE in the ELSE clauseþ*þ*MS 07-22-15*PROCREAD TCL.LINE ELSE TCL.LINE = ''þPROCREAD TCL.LINE ELSE TCL.LINE = @SENTENCE ; *MS 07-22-15*þTCL.LINE = TRIM( TCL.LINE )þVERB = FIELD(TCL.LINE,' ', 1)þFILE = FIELD( TCL.LINE, ' ', 2 )þITEM.LIST = ''þIF SYSTEM(11) THENþ  LOOPþ    READNEXT ITEM ELSE EXITþ    ITEM.LIST<-1> = ITEMþ  REPEATþEND ELSEþ  POS = 3þ  LOOPþ    ITEM = FIELD( TCL.LINE, ' ', POS )þ  UNTIL ITEM = '' OR ITEM[1,1] = '(' DOþ    ITEM.LIST<-1> = ITEMþ    POS += 1þ  REPEATþENDþOPTS.POS = INDEX( TCL.LINE, '(', 1 )þIF OPTS.POS THENþ  OPTS = TCL.LINE[OPTS.POS,999]þEND ELSE OPTS = ''þ*þOPEN FILE TO FILEVAR ELSE STOP 201, FILEþ*þINC.FILE = FILE:".INC"þOPEN INC.FILE TO INC.FILEVAR ELSEþ  EXECUTE "CREATE-FILE ":INC.FILE:" 1 51"þ  OPEN INC.FILE TO INC.FILEVAR ELSE STOP 201, INC.FILEþENDþOPEN '','MVPC.CONTROL' TO F.MVPC.CONTROL ELSEþ  EXECUTE "CREATE-FILE MVPC.CONTROL 3 11" CAPTURING JUNKþ  OPEN '','MVPC.CONTROL' TO F.MVPC.CONTROL ELSE STOP 201, 'MVPC.CONTROL'þENDþ*þDELIMS = \"'\þONE.WORD.TOKENS = ""þONE.WORD.TOKENS<-1> = "notrim"þONE.WORD.TOKENS<-1> = "exists"þ*þITEM.CNT = DCOUNT( ITEM.LIST, @AM )þFOR ITEM.X = 1 TO ITEM.CNTþ  PRINT "MV Precompiler Version 1.0 ":þ  INC.SOURCE = '** Auto-generated source code. Do not modify this file.'þ  INC.SOURCE<-1> = "VAR$ERR = ''"þ  INC.SOURCE<-1> = "CALL WDB.VARS(VARS,VALS)"þ  INC.SOURCE<-1> = "*"þ  INC.SOURCE<-1> = 'LOCATE "xmlQuery" IN VARS SETTING POS THEN'þ  INC.SOURCE<-1> = '  XML$QUERY = 1'þ  INC.SOURCE<-1> = 'END ELSE XML$QUERY = 0'þ  XML.INFO = '<vars>'þ  VAR.INFO = ''þ  VAR.INFO.POS = 1þ  ITEM = ITEM.LIST<ITEM.X>þ  READ SOURCE FROM FILEVAR, ITEM ELSEþ    PRINT "Item '":ITEM:"' not on file."þ    CONTINUEþ  ENDþ  DELETE INC.FILEVAR, ITEMþ  SOURCE.LINES = DCOUNT( SOURCE, @AM )þ  SLINE = 1þ  END.OF.PC = 0þ  PARSED.ANY = 0þ  PC.ERRORS = 0þ  LOOPþ    LINE = SOURCE<SLINE>þ    IF TRIM(LINE)[1,1] = "!" THENþ      GOSUB PARSE.LINEþ      IF SYNTAX.ERROR # "" THENþ        PRINTþ        PRINT "Syntax Error: ":SYNTAX.ERRORþ        PRINT SLINE:": ":LINEþ        PARSED = 0þ        PC.ERRORS += 1þ      ENDþ      IF PARSED THENþ        PRINT ".":þ        PARSED.ANY = 1þ        THIS.INC = ""þ        IF REQUIRE.ERROR = "" THENþ          REQUIRE.ERROR = FROMVAR:' required.'þ        ENDþ        IF ITERATIVE THENþ          FROMVAR = FROMVAR[1,LEN(FROMVAR)-2]þ          VARNAME = VARNAME[1,LEN(VARNAME)-2]þ          THIS.INC<-1> = "VAR$CNT = DCOUNT( VARS, @AM )"þ          THIS.INC<-1> = "VAR$STRLEN = ":LEN(FROMVAR)þ          THIS.INC<-1> = VARNAME:" = ''"þ          IF VARTYPE = "date" THENþ            THIS.INC<-1> = VARNAME:".I = ''"þ          ENDþ          THIS.INC<-1> = "FOR VAR$X = 1 TO VAR$CNT"þ          THIS.INC<-1> = \  IF VARS<VAR$X> MATCHES "'\:FROMVAR:\'1N0N" THEN\þ          THIS.INC<-1> = '    VAR$NUM = VARS<VAR$X>[VAR$STRLEN+1,99]'þ          THIS.INC<-1> = '    ':VARNAME:'<VAR$NUM> = VALS<VAR$X>'þ          IF VARTYPE = "date" THENþ            THIS.INC<-1> = '    ':VARNAME:'.I<VAR$NUM> = ICONV(':VARNAME:'<VAR$NUM>,"D")'þ            THIS.INC<-1> = '    ':VARNAME:'<VAR$NUM> = OCONV(':VARNAME:'.I<VAR$NUM>,"D4/")'þ          ENDþ          THIS.INC<-1> = '  END'þ          THIS.INC<-1> = 'NEXT VAR$X' þ        END ELSEþ          THIS.INC<-1> = 'LOCATE "':FROMVAR:'" IN VARS SETTING POS THEN'þ          THIS.INC<-1> = '  ':VARNAME:' = VALS<POS>'þ          THIS.INC<-1> = '  ':VARNAME:'.EXISTS = 1'þ          IF VARTYPE = "date" THENþ            THIS.INC<-1> = '  ':VARNAME:'.I = ICONV(':VARNAME:',"D")'þ            THIS.INC<-1> = '  ':VARNAME:' = OCONV(':VARNAME:'.I,"D4/")'þ          ENDþ          IF DEFAULT # "" THENþ            THIS.INC<-1> = '  IF ':VARNAME:' = "" THEN ':VARNAME:' = "':DEFAULT:'"'þ          ENDþ          THIS.INC<-1> = 'END ELSE'þ          THIS.INC<-1> = '  ':VARNAME:'.EXISTS = 0'þ          IF VARTYPE = "date" THENþ            THIS.INC<-1> = '  ':VARNAME:'.I = ""'þ          ENDþ          IF METHOD = "REQUIRE" AND EXISTS THENþ            * Existence of variable is requiredþ            THIS.INC<-1> = '  ':VARNAME:' = ""'þ            THIS.INC<-1> = '  VAR$ERR<-1> = "':REQUIRE.ERROR:'"'þ          END ELSEþ            THIS.INC<-1> = '  ':VARNAME:' = "':DEFAULT:'"'þ          ENDþ          THIS.INC<-1> = 'END'þ          IF METHOD = "REQUIRE" AND NOT(EXISTS) THENþ            THIS.INC<-1> = 'IF ':VARNAME:' = "" THEN'þ            THIS.INC<-1> = '  VAR$ERR<-1> = "':REQUIRE.ERROR:'"'þ            THIS.INC<-1> = 'END'þ          ENDþ          IF TRIM.VAL THENþ            THIS.INC<-1> = VARNAME:" = TRIM(":VARNAME:")"þ          ENDþ        ENDþ        *þ        IF METHOD = "REQUIRE" THEN REQUIRED = 1 ELSE REQUIRED = 0þ        *þ        VAR.INFO<1,VAR.INFO.POS> = FROMVARþ        VAR.INFO<2,VAR.INFO.POS> = REQUIREDþ        VAR.INFO<3,VAR.INFO.POS> = VARTYPEþ        VAR.INFO<4,VAR.INFO.POS> = ITERATIVEþ        VAR.INFO<5,VAR.INFO.POS> = DEFAULTþ        VAR.INFO<6,VAR.INFO.POS> = COMMENTþ        VAR.INFO<7,VAR.INFO.POS> = EXISTSþ        VAR.INFO.POS += 1þ        *þ        XML.INFO<-1> = '<var name="':FROMVAR:'" required="':REQUIRED:'" type="':VARTYPE:'" iterative="':ITERATIVE:'">'þ        CALL XML.ENCODE(DEFAULT,'')þ        CALL XML.ENCODE(COMMENT,'')þ        XML.INFO<-1> = ' <default>':DEFAULT:'</default>'þ        XML.INFO<-1> = ' <comment>':COMMENT:'</comment>'þ        XML.INFO<-1> = '</var>'þ        *þ        INC.SOURCE<-1> = THIS.INCþ      ENDþ    END ELSEþ      LINE = TRIM(LINE)þ      IF LINE = "INCLUDE ":FILE:".INC ":ITEM THEN END.OF.PC = 1þ    ENDþ  UNTIL SLINE > SOURCE.LINES OR END.OF.PC DO SLINE += 1 REPEATþ  PRINTþ  IF PARSED.ANY THENþ    XML.INFO<-1> = '</vars>'þ    INC.SOURCE<-1> = "* XML Info"þ    INC.SOURCE<-1> = \XML$INFO = '<?xml version="1.0" ?>'\þ    XICNT = DCOUNT( XML.INFO, @AM )þ    FOR XML.X = 1 TO XICNTþ      INC.SOURCE<-1> = 'XML$INFO<-1> = \':XML.INFO<XML.X>:'\'þ    NEXT XML.Xþ    INC.SOURCE<-1> = 'IF XML$QUERY THEN'þ    INC.SOURCE<-1> = '  CALL XML.SEND(XML$INFO)'þ    INC.SOURCE<-1> = '  STOP'þ    INC.SOURCE<-1> = 'END'þ    WRITE INC.SOURCE ON INC.FILEVAR, ITEMþ    WRITE VAR.INFO ON INC.FILEVAR, "$":ITEMþ    *þ    READU FILE.LIST FROM F.MVPC.CONTROL, 'LIBRARIES' ELSE FILE.LIST = ''þ    LOCATE FILE IN FILE.LIST BY 'AL' SETTING POS THENþ      RELEASE F.MVPC.CONTROL, 'LIBRARIES'þ    END ELSEþ      FILE.LIST = INSERT( FILE.LIST, 1, POS, 0, FILE )þ      WRITE FILE.LIST ON F.MVPC.CONTROL, 'LIBRARIES'þ    ENDþ  ENDþ  IF PC.ERRORS THENþ    PRINT "Compile aborted"þ  END ELSEþ    XLINE = "D3.":VERB:" ":FILE:" ":ITEM:" ":OPTSþ    PRINT "D3 Compile: ":XLINEþ    EXECUTE XLINEþ  ENDþNEXT ITEM.XþSTOPþ*þPARSE.LINE: * Parse a line into tokensþ*þSYNTAX.ERROR = ""þLINE = TRIM(LINE)þLINE = LINE[2,9999] ;* Remove "!"þ*þLINELEN = LEN(LINE)þTOKEN.LIST = '' ; TOKEN.POS = 1þTOKEN = ""þVALUE = ""þGETMODE = "TOKEN" ;* Start looking for tokensþDELIM = ""þIN.DELIM.STRING = 0þPARSED = 0þFOR LX = 1 TO LINELENþ  CH = LINE[LX,1]þ  IF GETMODE = "TOKEN" THENþ    BEGIN CASEþ      CASE CH MATCHES "1A" OR CH MATCHES "1N"þ        TOKEN := CHþ      CASE CH = " "þ        * End of word - Token completeþ        IF TOKEN # "" THENþ          TOKEN.LIST<1,TOKEN.POS> = TOKENþ          LOCATE TOKEN IN ONE.WORD.TOKENS SETTING POS ELSEþ            GETMODE = "VALUE"þ            VALUE.POS = TOKEN.POSþ            IN.DELIM.STRING = 0þ          ENDþ          TOKEN.POS += 1þ          TOKEN = ""þ        ENDþ    END CASEþ  END ELSE IF GETMODE = "VALUE" THENþ    BEGIN CASEþ      CASE IN.DELIM.STRING AND CH = DELIMþ        TOKEN.LIST<2,VALUE.POS> = VALUEþ        VALUE = ""þ        DELIM = ""þ        GETMODE = "TOKEN"þ      CASE NOT(IN.DELIM.STRING) AND INDEX(DELIMS,CH,1) ;* This is a delimiterþ        IN.DELIM.STRING = 1þ        DELIM = CHþ      CASE CH = " " AND NOT(IN.DELIM.STRING)þ        TOKEN.LIST<2,VALUE.POS> = VALUEþ        VALUE = ""þ        GETMODE = "TOKEN"þ      CASE 1þ        VALUE := CHþ    END CASEþ  ENDþNEXT LXþIF TOKEN # "" THENþ  TOKEN.LIST<1,-1> = TOKENþEND ELSE IF VALUE # "" THENþ  TOKEN.LIST<2,VALUE.POS> = VALUEþENDþ*þVARNAME = ""þFROMVAR = ""þCOMMENT = ""þDEFAULT = ""þVARTYPE = "string"þTRIM.VAL = 1þEXISTS = 0þREQUIRE.ERROR = ""þ*þFOR TX = 1 TO DCOUNT( TOKEN.LIST<1>, @VM )þ  TOKEN = TOKEN.LIST<1,TX>þ  VALUE = TOKEN.LIST<2,TX>þ  BEGIN CASEþ    CASE TOKEN = "get" OR TOKEN = "require"þ      METHOD = TOKENþ      VARNAME = VALUEþ      PARSED = 1þ    CASE TOKEN = "from"þ      FROMVAR = VALUEþ    CASE TOKEN = "type"þ      VARTYPE = OCONV(VALUE,'MCL')þ    CASE TOKEN = "default"þ      DEFAULT = VALUEþ    CASE TOKEN = "comment"þ      COMMENT = VALUEþ    CASE TOKEN = "notrim"þ      TRIM.VAL = 0þ    CASE TOKEN = "exists"þ      EXISTS = 1þ    CASE TOKEN = "error"þ      REQUIRE.ERROR = VALUEþ    CASE 1þ      SYNTAX.ERROR = "Invalid Token: '":TOKEN:'"'þ  END CASEþNEXT TXþ*þIF NOT(PARSED) THEN RETURNþ*þIF VARNAME = "" THENþ  SYNTAX.ERROR = "No variable specified"þ  RETURNþENDþ*þIF FROMVAR = "" THEN FROMVAR = VARNAMEþ*þITERATIVE = 0þIF VARNAME[LEN(VARNAME)-1,2] = "[]" THENþ  IF FROMVAR[LEN(FROMVAR)-1,2] = "[]" THENþ    ITERATIVE = 1þ  END ELSEþ    SYNTAX.ERROR = "Iterative array mismatch: ":VARNAME:", ":FROMVARþ  ENDþENDþ*þRETURN000A6BMV.PACKAGE.INSTALLER.DEFAULTSþ0c2      * Install packagesþþ      * first, get a list of packagesþþ      CALL WOBJ(COBJ,"FROMJSON","","{}","",RERR)þþ      CALL MVDBTOOLKIT.WPLATFORM(PLATFORM.OBJ)þþ      CALL WOBJ(PLATFORM.OBJ,"GET","packagesurl",PACKAGES.URL,"",RERR)þþ      IF PACKAGES.URL = "" THENþ         PACKAGES.URL="https://raw.githubusercontent.com/zumasys/MVConnect/master/packages.json"þ      ENDþþ      CALL WOBJ(PLATFORM.OBJ,"GET","mvtype",MVTYPE,"",RERR)þ      þ      MVTYPE=OCONV(MVTYPE,"MCU")þ      þ      BEGIN CASEþ         CASE MVTYPE="D3"; MVTYPE2="d3"þ         CASE MVTYPE="JBASE"; MVTYPE2="jbase"þ         CASE MVTYPE="QM"; MVTYPE2="qm"þ         CASE MVTYPE="UNIVERSE"; MVTYPE2="uv"þ         CASE MVTYPE="UNIDATA"; MVTYPE2="ud"þ         CASE 1þ             PRINT "Platform ":MVTYPE:" not supported"þ             STOPþ      END CASEþ      þ      CALL WOBJ(PLATFORM.OBJ,"GET","tmpdir",TMP.DIR,"",RERR)þ      þ      CALL WOBJ(PLATFORM.OBJ,"GET","filedelim",FILEDELIM,"",RERR)þ      þ      PRINT "Packages url: ":PACKAGES.URLþþ      CALL WOBJ(COBJ,"SET","url",PACKAGES.URL,"",RERR)þ      CALL WOBJ(COBJ,"SET","method","GET","",RERR)þþ      CRT "Getting package list...":þþ      CALL MVDBTOOLKIT.WCALL(COBJ)þþ      *CALL MVDBTOOLKIT.WCALL.DEBUG(COBJ)þþþ      CALL WOBJ(COBJ,"GET","response.status",RESPONSE.STATUS,"",RERR)þþ      CALL WOBJ(COBJ,"GET","response.statusmsg",RESPONSE.STATUS.MSG,"",RERR)þ      CALL WOBJ(COBJ,"GET","response.data",RESPONSE.DATA,"",RERR)þþ      PRINT RESPONSE.STATUS:' ':RESPONSE.STATUS.MSGþþ      CALL WOBJ(POBJ,"FROMJSON","",RESPONSE.DATA,"",RERR)þþ      IF RERR>0 THENþ         PRINT RERR<1>:" Error: ":RERR<2>þ         STOPþ      ENDþþ      CALL WOBJ(POBJ,"LENGTH","packages",NUMBER.PACKAGES,"",RERR)þþ      PRINT "Number packages: ":NUMBER.PACKAGESþþtop.of.packages: *þþ      PACKAGES=""þ      þ      FOR P=1 TO NUMBER.PACKAGESþþ         CALL WOBJ(POBJ,"GET","packages[":P-1:"].name",PACKAGE.NAME,"",RERR)þ         CALL WOBJ(POBJ,"GET","packages[":P-1:"].version",PACKAGE.VERSION,"",RERR)þ         CALL WOBJ(POBJ,"GET","packages[":P-1:"].default",PACKAGE.DEFAULT,"",RERR)þþ         PRINT P"MR(#4)":þ         PRINT " ":þ         PRINT PACKAGE.NAME:þ         PACKAGES<P>=PACKAGE.NAMEþ         þ         PRINT " ":þ         PRINT PACKAGE.VERSION:þ         PRINT " ":þ         PRINT PACKAGE.DEFAULTþ         þ         IF OCONV(PACKAGE.DEFAULT,"MCU")="YES" THENþ              GOSUB process.packageþ         ENDþ         þ      NEXT PþþSTOPþþprocess.package: *þþ      COBJ=""þ      CALL WOBJ(COBJ,"FROMSTRING","","{}","",RERR)þ      þ      CALL MVDBTOOLKIT.PACKAGE.INSTALLER.SUB(PACKAGE.NAME,RESULT)þ      þ      þRETURNþþþ006231MVDB.WEB.EDþ0c2*þ* Copyright (C) 2009 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written by: Luke Bucklin, Sierra Bravoþ* Date: August 6, 2009þ* Description: Web Editor for Bravo Dashboardþ*þ* 3-9-15 TFP CHANGE FILENAME TO FILENAME.VAR TO PREVENT CONFLICT WITH filenameþ*þ* Modified by Peter Schellenbach of Zumasys 07-22-15 for UniData compatiblity:þ*   Change U50BB to @WHOþ*   Change MDS to UD.ACCOUNTþ*   Get source file from catalog pointer att 3þ*þ* 8-8-16 PJS Add "FORCE DIRECT" CATALOG options to save catalog pointer in VOCþ*þ* Modified by Peter Schellenbach of Zumasys 11-02-16þ*  Added GLOBAL.INFO(100) = 1 before each of the STOP statements (except STOP due to errors)þ*  to indicate successful execution of this routine. Otherwise the controller programþ*  (MVDB.INIT) thinks an error has occurred and appends some debug info to the HTML output.þ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD WWW.INCLUDEþINCLUDE WBPD MVDB.INCLUDEþINCLUDE WBPD FI.MVDB.WIDGET.TYPESþ*þ**OPEN '','WEB.FORMS' TO F.WEB.FORMS ELSE STOP 201, 'WEB.FORMS' ;* this is in /WWW/ COMMON and is opened by MVDB.INITþOPEN '','MV.WEB.ED.ARCHIVE' TO F.ED.ARCHIVE THENþ  ARCHIVE = 1þEND ELSE ARCHIVE = 0þOPEN '','MVDB.CONTROL' TO F.MVDB.CONTROL ELSE STOP 201, 'MVDB.CONTROL'þREAD ACCTS FROM F.MVDB.CONTROL, "ED.ACCOUNTS" ELSE ACCTS = ""þ*þDIM SITE$SETTINGS(100)þEQU SITE$AUTH.SUB     TO SITE$SETTINGS(1)þEQU SITE$NULL.PW.OK   TO SITE$SETTINGS(2)þEQU SITE$W.MAX.DUR    TO SITE$SETTINGS(3)þEQU SITE$TCP.PORT     TO SITE$SETTINGS(4)þEQU SITE$ALT.LOGO     TO SITE$SETTINGS(7)þEQU SITE$CHARSET      TO SITE$SETTINGS(9)þ*þMATREAD SITE$SETTINGS FROM F.MVDB.CONTROL, "MVDB.SETTINGS" ELSE MAT SITE$SETTINGS = ""þIF SITE$ALT.LOGO = '' THENþ  SITE.LOGO = '/db/images/mv-logo.png'þEND ELSEþ  SITE.LOGO = SITE$ALT.LOGOþ  IF NOT(INDEX(SITE.LOGO,'/',1)) THENþ    SITE.LOGO = '/db/images/':SITE.LOGOþ  ENDþENDþIF SITE$CHARSET = '' THEN SITE$CHARSET = 'UTF-8'þ*þCALL GET.SESSION.VAR("adminauth",adminauth)þIF adminauth # 1 THENþ  FORM = '<html><head><meta http-equiv="Refresh" content="0; url=/dbc/MVDB.MAIN" />'þ  FORM := '</head><body><p>Administrative priviledges are required. 'þ  FORM:= 'Please <a href="/dbc/MVDB.MAIN">log in</a>.</p></body></html>'þ  CALL WEB.SEND(FORM)þ  GLOBAL.INFO(100) = 1 ;* Intentional stopþ  STOPþ*  READ LOGIN.PAGE FROM F.WEB.FORMS, "admin_login.html" ELSE LOGIN.PAGE = "admin_login.html not found."þ*  CALL SWAP(LOGIN.PAGE,'<!-- SITE_LOGO -->',SITE.LOGO)  þ*  GLOBAL.INFO(100) = 1 ;* Intentional stopþ*  CALL WEB.SEND(LOGIN.PAGE)þ*  STOPþENDþ*þEDIT.SCRIPTS = "NEW_PROGRAM_DIALOG = 0;":CHAR(10) ;* This will get overwritten later, if appropriateþESC.APOS = "\'"þHMESSAGE = ""þFMESSAGE = ""þrecord = ""þLOCATE "ed_file" IN CGI$VARS SETTING POS THENþ  filename = CGI$VALS<POS>þEND ELSEþ  filename = ""þ  HMESSAGE<-1> = "No filename specified."þENDþLOCATE "ed_item" IN CGI$VARS SETTING POS THENþ  item = CGI$VALS<POS>þEND ELSEþ  item = ""þ  HMESSAGE<-1> = "No item name specified."þENDþLOCATE "ed_acct" IN CGI$VARS SETTING POS THENþ  acct = CGI$VALS<POS>þEND ELSE acct = ""þ*þLOCATE "action" IN CGI$VARS SETTING POS THENþ  action = CGI$VALS<POS>þEND ELSE action = "open"þIF action = "code_template" THENþ  LOCATE "template" IN CGI$VARS SETTING POS THENþ    template = CGI$VALS<POS>þ  END ELSE template = ""þ  OPEN '','MVDB.SUB.TEMPLATES' TO F.MVDB.SUB.TEMPLATES THENþ    orig.template = templateþ    LOOPþ      READ TEMPLATE.TEXT FROM F.MVDB.SUB.TEMPLATES, template ELSE TEMPLATE.TEXT = ""þ      IF TEMPLATE.TEXT = "" THEN TEMPLATE.TEXT = "No template for ":templateþ    WHILE FIELD( TEMPLATE.TEXT, ' ', 1 ) = "USE" DOþ      template = FIELD( TEMPLATE.TEXT, ' ', 2 )þ    REPEATþ    CALL SWAP(TEMPLATE.TEXT,'W$TYPE = "%TYPE%"','W$TYPE = "':orig.template:'"')þ  END ELSEþ    TEMPLATE.TEXT = "Unable to open MVDB.SUB.TEMPLATES"þ  ENDþ  SESSION$CONTENT.SENT = 1þ  CRT "Content-Type: text/html"þ  CRTþ  CALL WEB.SEND(TEMPLATE.TEXT)þ  GLOBAL.INFO(100) = 1 ;* Intentional stopþ  STOPþENDþLOCATE "record" IN CGI$VARS SETTING POS THENþ  record = CGI$VALS<POS>þ  CONVERT CHAR(10) TO @AM IN recordþ  CONVERT CHAR(13) TO "" IN recordþENDþIF action = "compile" OR action = "save" THENþ  READ HTML FROM F.WEB.FORMS, "ed_output.html" ELSE HTML = "Unable to read ed_output.html"þ  QUIET.MODE = 1þEND ELSEþ  READ HTML FROM F.WEB.FORMS, "ed_template.html" ELSE HTML = "Unable to read ed_template.html"þ  QUIET.MODE = 0þENDþCALL SWAP(HTML,'<!--CHARACTER_SET-->',SITE$CHARSET)þLOCATE "height" IN CGI$VARS SETTING POS THENþ  height = CGI$VALS<POS>þ  CALL PUT.SESSION.VAR("ed_height",height)þEND ELSEþ  CALL GET.SESSION.VAR("ed_height",height)þENDþOUT.OF.ACCOUNT = 0þmyacct = @WHO ; * OCONV( 'a', 'U50BB') *PJS 07-22-15*þIF acct = myacct THEN acct = ""þIF acct # "" AND HMESSAGE = "" THENþ  password = ""þ  OPEN '','UD.ACCOUNT' TO F.ACCOUNTS THENþ    READ APTR FROM F.ACCOUNTS, acct ELSE APTR = ""þ    IF APTR<1> <> "" THENþ*      IF APTR<7> # "" THEN ;* This account has a passwordþ*        LOCATE acct IN ACCTS<1> SETTING APOS THENþ*          password = ACCTS<2,APOS>þ*        END ELSEþ*          HMESSAGE<-1> = "Account ":acct:" requies a password. Not found in MVDB.CONTROL, ED.ACCOUNTS"þ*        ENDþ*      ENDþ    END ELSEþ      HMESSAGE<-1> = "Account ":acct:" is not valid."þ    ENDþ  END ELSEþ    HMESSAGE<-1> = "Unable to open UD.ACCOUNT file."þ  ENDþ  IF HMESSAGE = "" THENþ*    DATA passwordþ    EXECUTE "LOGTO ":acct CAPTURING LOGTO.OUT ;* Switch over to specified accountþ    IF LOGTO.OUT = "" THENþ      OUT.OF.ACCOUNT = 1þ    END ELSEþ      HMESSAGE<-1> = "Error: ":LOGTO.OUTþ    ENDþ  ENDþENDþIF HMESSAGE # "" THENþ  IF filename = "" AND item = "" THENþ    HMESSAGE = ""þ    CALL SWAP(HTML,'<!-- SYNTAX -->',"")þ    CALL SWAP(HTML,'<!-- WINDOW_HEIGHT -->',"")þ    CALL SWAP(HTML,'<!-- FILE -->',"")þ    CALL SWAP(HTML,'<!-- ITEM -->',"")þ    CALL SWAP(HTML,'<!-- BODY -->',"")þ    CALL SWAP(HTML,'<!-- LAST_COMPILE -->',"")þ    CALL SWAP(HTML,'<!-- COMPILE_OUTPUT -->',"")þ    CALL SWAP(HTML,'<!-- COMPILE_ERRLINE -->',"")þ    CALL SWAP(HTML,'<!-- ED_CONTENT -->',"''")þ    CALL SWAP(HTML,'<!-- EA_CALLS_CONTENT -->',"")þ    CALL SWAP(HTML,'<!-- EA_INCLUDES_CONTENT -->',"")þ    CALL SWAP(HTML,'<!-- EA_FILES_CONTENT -->',"")þ    CALL SWAP(HTML,'<!-- EA_ARCHIVE_CONTENT -->',"")þ    CALL SWAP(HTML,'<!-- NUM_OF_CALLS -->',0)þ    CALL SWAP(HTML,'<!-- NUM_OF_INCLUDES -->',0)þ    CALL SWAP(HTML,'<!-- NUM_OF_FILES -->',0)þ    CALL SWAP(HTML,'<!-- NUM_OF_ARCHIVES -->',0)þ    CALL SWAP(HTML,'<!-- ED_SCRIPTS -->',"")þ    CALL SWAP(HTML,'<!-- ED_INIT_SCRIPT -->',"openEditDialog();")þ    CALL WEB.SEND(HTML)þ  END ELSEþ    GOSUB ADD.MESSAGEþ    CALL WEB.SEND(HTML)þ  ENDþ  GLOBAL.INFO(100) = 1 ;* Intentional stopþ  STOPþENDþ* This will be the master dictionary in the appropriate account.þOPEN '','MD' TO F.MD ELSEþ  OPEN '','VOC' TO F.MD ELSE STOP 201, 'MD OR VOC'þENDþBASIC.SUB = 0þOPEN filename TO F.FILE THENþ  IF record # "" AND action # "open" THENþ    ELINE = DCOUNT( record, @AM )þ    LOOP WHILE ELINE > 1 AND record<ELINE> = "" DOþ      record = DELETE( record, ELINE, 0, 0 )þ      ELINE -= 1þ    REPEATþ    IF ARCHIVE AND filename # "MV.WEB.ED.ARCHIVE" THENþ      READ oldrec FROM F.FILE, item THENþ        IF oldrec # record THENþ          NOW = TIME()þ          TD.STAMP = NOW:"*":DATE()þ          NOW2 = NOW "R%2"þ          NOW2 = MOD(NOW2,16) ;* Get it down to a hex digitþ          IF acct = "" THEN USE.ACCT = myacct ELSE USE.ACCT = acctþ          ARCHIVE.ID = USE.ACCT:"*":filename:"*":item:"*":OCONV(NOW2,'MCDX')þ          oldrec = INSERT( oldrec, 1, 0, 0, TD.STAMP )þ          WRITE oldrec ON F.ED.ARCHIVE, ARCHIVE.IDþ        ENDþ      ENDþ    ENDþ    WRITE record ON F.FILE, itemþ    IF record[1,3] = "SUB" THEN BASIC.SUB = 1þ    IF QUIET.MODE THENþ      record = ""þ    END ELSEþ      HMESSAGE<-1> = item:" saved, ":LEN(record):" bytes."þ    ENDþ  END ELSEþ    READ record FROM F.FILE, item THENþ      HMESSAGE<-1> = item:" opened, ":LEN(record):" bytes."þ    END ELSEþ      record = ""þ      HMESSAGE<-1> = "New Item: ":itemþ    ENDþ    IF record = "" THENþ      NEW.ITEM.FLAG = 1þ      BEGIN CASEþ        CASE filename = "RSS.BP"þ          record = 'SUBROUTINE ':itemþ          record<-1> = '*'þ          record<-1> = '* RSS Feed'þ          record<-1> = '*'þ          record<-1> = 'INCLUDE RSS.BP RSS.DATA.INC'þ          record<-1> = '*'þ          IF INDEX(item,'.SEL',1) THENþ            record<-1> = '* EXECUTE SELECT - Create active select list'þ            record<-1> = 'RETURN'þ          END ELSE IF INDEX(item,'.ITEM',1) THENþ            record<-1> = 'RSS$TITLE = "" ;* Title text'þ            record<-1> = 'RSS$LINK = "" ;* Link to URL for full-view (if applicable)'þ            record<-1> = 'RSS$AUTHOR = "" ;* Author'þ            record<-1> = 'RSS$DATE = "" ;* Date of feed item (internal)'þ            record<-1> = 'RSS$TIME = "" ;* Time of feed item (internal)'þ            record<-1> = 'RSS$DESCRIPTION = "" ;* Feed description text (HTML)'þ            record<-1> = '*'þ            record<-1> = '* Programming to fill in the above values goes here.'þ            record<-1> = '*'þ            record<-1> = 'RETURN'þ          ENDþ        CASE filename = 'MVDB.SUBS'þ          EDIT.SCRIPTS = "NEW_PROGRAM_DIALOG = 1;":CHAR(10)þ          EDIT.SCRIPTS := 'widgetTypes = new Array();':CHAR(10)þ          OPEN '','MVDB.WIDGET.TYPES' TO F.MVDB.WIDGET.TYPES THENþ            EXECUTE 'SSELECT MVDB.WIDGET.TYPES BY GROUP BY HANDLER WITH INACTIVE # "1"' CAPTURING JUNKþ            LOOPþ              READNEXT TYPE.ID ELSE EXITþ              MATREAD WIDGET.TYPES FROM F.MVDB.WIDGET.TYPES, TYPE.ID THENþ                CALL SWAP(WT$DESC,'"','\"')þ                CLASS.NAME = FIELD(WT$ICON,'.',1)þ                CONVERT "_" TO "-" IN CLASS.NAMEþ                EDIT.SCRIPTS := 'widgetTypes["':TYPE.ID:'"] = new Array("':WT$DESC:'","':CLASS.NAME:'");':CHAR(10)þ              ENDþ            REPEATþ          ENDþ          record = 'SUBROUTINE ':itemþ          record<-1> = '*'þ          record<-1> = '* Dashboard Widget'þ          record<-1> = '*'þ          record<-1> = 'INCLUDE WBPD MVDB.INCLUDE'þ          record<-1> = '*'þ        CASE 1 ; NULLþ      END CASEþ    ENDþ  ENDþEND ELSEþ  HMESSAGE<-1> = "Unable to open file '":filename:"'"þ  GOSUB ADD.MESSAGEþ  CALL WEB.SEND(HTML)þ  GLOBAL.INFO(100) = 1 ;* Intentional stopþ  STOPþENDþ*þOUTPUT = "" ;* Compiler outputþCOMP.ERRLINE = ""þBEGIN CASEþ  CASE HMESSAGE # "" ; NULLþ  CASE action = "compile"þ    READV BASIC.TEMPLATE FROM F.MVDB.CONTROL, "COMPILE.SETUP", 1 ELSE BASIC.TEMPLATE = ""þ    IF BASIC.TEMPLATE # "" THENþ      CMD = BASIC.TEMPLATEþ      CALL SWAP(CMD,"%FILENAME%",filename)þ      CALL SWAP(CMD,"%ITEMNAME%",item)þ    END ELSEþ      CMD = "BASIC ":filename:" ":itemþ    ENDþ    EXECUTE CMD CAPTURING CMPOUTPUTþ    OUTPUT<-1> = CMDþ    OUTPUT<-1> = CMPOUTPUTþ    * If the compile failed, find the first error line #þ    CO = 1þ    LOOP UNTIL CO > DCOUNT( CMPOUTPUT, @AM ) DOþ      LN = FIELD(TRIM(CMPOUTPUT<CO>),' ',1)þ      IF LN MATCHES "4N" THENþ        COMP.ERRLINE = (LN+0)þ        EXITþ      END ELSE CO += 1þ    REPEATþ    IF BASIC.SUB = 1 THENþ      CMD = "CATALOG ":filename:" ":item:" FORCE DIRECT" ;* PJS 08-08-16 Unidata options to save catalog pointer in VOCþ      EXECUTE CMD CAPTURING CATOUTPUTþ      OUTPUT<-1> = CMDþ      OUTPUT<-1> = CATOUTPUTþ    ENDþ  CASE action = "save"þ  CASE 1þ    NULLþEND CASEþ*þSUBLIST = ''þINCLIST = ''þFILELIST = ''þIF record # "" THENþ  GOSUB BUILD.SUBLISTþ  GOSUB BUILD.INCLISTþ  GOSUB BUILD.FILELISTþENDþIF filename = "WEB.FORMS" THEN SYNTAX = "html" ELSE SYNTAX = "basic"þ*þ* Last compile date/time?þ*þCSTRING = ""þIF SYNTAX = "basic" THENþ  EXECUTE "SELECT DICT ":filename:" '":item:"' C/DATE C/TIME" CAPTURING JUNKþ  READNEXT CDATE ELSE CDATE = ""þ  READNEXT CTIME ELSE CTIME = ""þ  CLEARSELECTþ  IF CDATE MATCHES "1N0N" AND CTIME MATCHES "1N0N" THENþ    CDATE = OCONV(CDATE, 'D2/')þ    CTIME = OCONV(CTIME, 'MTS')þ    CSTRING = "Last compiled on ":CDATE:" at ":CTIME:'<br />'þ  ENDþENDþIF OUT.OF.ACCOUNT THENþ  LOCATE myacct IN ACCTS<1> SETTING APOS THENþ    password = ACCTS<2,APOS>þ  END ELSE password = ""þ*  DATA passwordþ  EXECUTE "LOGTO ":myacct CAPTURING LOGTO.OUTþ  IF LOGTO.OUT # "" THENþ    * Fatal error - cannot get back to our account. Send crapy CGI error.þ    PRINT "Content-type: text/html"þ    PRINTþ    PRINT "<html><body>Error returning to ":myacct:", ":LOGTO.OUTþ    PRINT "Check MVDB.CONTROL, ED.ACCOUNTS settings.</body></html>"þ    GLOBAL.INFO(100) = 1 ;* Intentional stopþ    STOPþ  ENDþ  * Re-open the master dictionary in the local account.þ  OPEN '','MD' TO F.MD ELSEþ    OPEN '','VOC' TO F.MD ELSE STOP 201, 'MD OR VOC'þ  ENDþENDþIF OUTPUT # "" THENþ  CALL SWAP(OUTPUT,'&','&amp;')þ  CALL SWAP(OUTPUT,'<','&lt;')þ  CALL SWAP(OUTPUT,'>','&gt;')þENDþGOSUB ADD.MESSAGEþIF record # "" THENþ  CALL SWAP(record,'&','&amp;')þ  CALL SWAP(record,'<','&lt;')þ  CALL SWAP(record,'>','&gt;')þENDþIF action = "compile" THENþ  CALL SWAP(OUTPUT,@AM,"<br>")þENDþIF QUIET.MODE THENþ  FORM = ""þEND ELSEþ  FORM = '<form id="ed_form" method="post" action="':CGI$PATH:'/MVDB.WEB.ED" >'þ  FORM<-1> = '<textarea id="file_1" style="height: 100%; width: 100%;" name="record">'þ  FORM<-1> = recordþ  FORM<-1> = '</textarea>'þ  IF acct = "" THEN USE.ACCT = myacct ELSE USE.ACCT = acctþ  FORM<-1> = '<input type="hidden" name="ed_acct" value = "':USE.ACCT:'" />'þ  FORM<-1> = '<input type="hidden" name="ed_file" value="':filename:'" />'þ  FORM<-1> = '<input type="hidden" name="ed_item" value="':item:'" />'þ  FORM<-1> = '<input type="hidden" name="action" value="" />'þ  FORM<-1> = '</form>'þENDþCALL SWAP(HTML,'<!-- SYNTAX -->',SYNTAX)þCALL SWAP(HTML,'<!-- WINDOW_HEIGHT -->',height)þCALL SWAP(HTML,'<!-- FILE -->',filename)þCALL SWAP(HTML,'<!-- ITEM -->',item)þCALL SWAP(HTML,'<!-- BODY -->',FORM)þCALL SWAP(HTML,'<!-- LAST_COMPILE -->',CSTRING)þCALL SWAP(HTML,'<!-- COMPILE_OUTPUT -->',OUTPUT)þCALL SWAP(HTML,'<!-- COMPILE_ERRLINE -->',COMP.ERRLINE)þCALL SWAP(HTML,'<!-- ED_CONTENT -->',record)þ*þSUB.CNT = DCOUNT( SUBLIST<1>, @VM )þINC.CNT = DCOUNT( INCLIST<1>, @VM )þFILE.CNT = DCOUNT( FILELIST<1>, @VM )þIF SUB.CNT > INC.CNT THEN MAX.CNT = SUB.CNT ELSE MAX.CNT = INC.CNTþIF FILE.CNT > MAX.CNT THEN MAX.CNT = FILE.CNTþ*þIF acct # "" THENþ  URL.ACCT = acctþ  CALL SUB.URL.ENCODE(URL.ACCT)þ  ACCT.LINK = "ed_acct=":URL.ACCT:"&"þEND ELSE ACCT.LINK = ""þ*þIF SUB.CNT THENþ  EA.CALLS ='<table width="100%"><tbody><tr><th>File</th><th>Program</th><th>Line(s)</th></tr>'þEND ELSE EA.CALLS = ""þIF INC.CNT THENþ  EA.INCS ='<table width="100%"><tbody><tr><th>File</th><th>Program</th><th>Line(s)</th></tr>'þEND ELSE EA.INCS = ""þIF FILE.CNT THENþ  EA.FILES = '<table width="100%"><tbody><tr><th>File</th><th>Operation</th><th>Line(s)</th></tr>'þEND ELSE EA.FILES = ""þFOR LX = 1 TO MAX.CNTþ  IF LX <= SUB.CNT THENþ    URL.SUBFILE = SUBLIST<1,LX>þ    CALL SUB.URL.ENCODE(URL.SUBFILE)þ    URL.SUBITEM = SUBLIST<2,LX>þ    CALL SUB.URL.ENCODE(URL.SUBITEM)þ    PROGFNAME = SUBLIST<1,LX>þ    PROGNAME = SUBLIST<2,LX>þ    CALL SWAP(PROGNAME,"'","\'")þ    CALL SWAP(PROGFNAME,"'","\'")þ    IF SUBLIST<2,LX>[1,1] = "@" THEN ;* This is a CALL @ function, so no link to open the subroutineþ      EA.CALLS := '<tr><td>':PROGFNAME:'</td><td>':PROGNAME:'</a></td>'þ    END ELSEþ      EA.CALLS := '<tr><td>':PROGFNAME:'</td><td><a target="':URL.SUBFILE:'_':URL.SUBITEM:'" href="/dbc/MVDB.WEB.ED?':ACCT.LINK:'ed_file=':URL.SUBFILE:'&ed_item=':URL.SUBITEM:'">':PROGNAME:'</a></td>'þ    ENDþ    EA.CALLS := '</td><td>'þ    CL.CNT = DCOUNT( SUBLIST<4,LX>, @SVM )þ    FOR LXL = 1 TO CL.CNTþ      EA.CALLS := '<a href="#" onclick="javascript:editArea.go_to_line(':ESC.APOS:SUBLIST<4,LX,LXL>:ESC.APOS:'); return false;">':SUBLIST<4,LX,LXL>:'</a>'þ      IF LXL < CL.CNT THEN EA.CALLS := ", "þ    NEXT LXLþ  ENDþ  IF LX <= INC.CNT THENþ    URL.INCFILE = INCLIST<1,LX>þ    CALL SUB.URL.ENCODE(URL.INCFILE)þ    URL.INCITEM = INCLIST<2,LX>þ    CALL SUB.URL.ENCODE(URL.INCITEM)þ    INCFNAME = INCLIST<1,LX>þ    INCNAME = INCLIST<2,LX>þ    CALL SWAP(INCNAME,"'","\'")þ    CALL SWAP(INCFNAME,"'","\'")þ    EA.INCS := '<tr><td>':INCFNAME:'</td><td><a target="':URL.INCFILE:'_':URL.INCITEM:'" href="/dbc/MVDB.WEB.ED?':ACCT.LINK:'ed_file=':URL.INCFILE:'&ed_item=':URL.INCITEM:'">':INCNAME:'</a>'þ    EA.INCS := '</td><td>'þ    IN.CNT = DCOUNT( INCLIST<4,LX>, @SVM )þ    FOR LXL = 1 TO IN.CNTþ      EA.INCS := '<a href="#" onclick="javascript:editArea.go_to_line(':ESC.APOS:INCLIST<4,LX,LXL>:ESC.APOS:'); return false;">':INCLIST<4,LX,LXL>:'</a> 'þ      IF LXL < IN.CNT THEN EA.INCS := ", "þ    NEXT LXLþ  ENDþ  IF LX <= FILE.CNT THENþ    FOR FOPX = 1 TO DCOUNT( FILELIST<3,LX>, @SVM )þ      IF FOPX = 1 THEN SHOW.FILENAME = FILELIST<1,LX> ELSE SHOW.FILENAME = '&nbsp;'þ      EA.FILES := '<tr><td>':SHOW.FILENAME:'</td><td>':FILELIST<3,LX,FOPX>þ      EA.FILES := '</td><td>'þ      IN.CNT = DCOUNT( FILELIST<5,LX,FOPX>, "," )þ      FOR LXL = 1 TO IN.CNTþ        LNO = FIELD( FILELIST<5,LX,FOPX>,',',LXL)þ        EA.FILES := '<a href="#" onclick="javascript:editArea.go_to_line(':ESC.APOS:LNO:ESC.APOS:'); return false;">':LNO:'</a>'þ        IF LXL < IN.CNT THEN EA.FILES := ", "þ      NEXT LXLþ      EA.FILES := '</td></tr>'þ    NEXT FOPXþ  ENDþNEXT LXþIF SUB.CNT THENþ  EA.CALLS := '</td></tr></tbody></table>'þENDþIF INC.CNT THENþ  EA.INCS := '</td></tr></tbody></table>'þENDþIF FILE.CNT THENþ  EA.FILES := '</tbody></table>'þENDþ*þARC.LIST = ""þARC.CNT = 0þIF ARCHIVE THENþ  * Archiving is enabled. Find a list of archived copies of this fileþ  IF acct = "" THEN USE.ACCT = myacct ELSE USE.ACCT = acctþ  CMD = 'SSELECT MV.WEB.ED.ARCHIVE WITH ACCT = "':USE.ACCT:'" AND WITH FILE.NAME = "':filename:'" AND WITH ITEM = "':item:'" BY-DSND DATE BY-DSND TIME'þ  EXECUTE CMD CAPTURING JUNKþ  IF SYSTEM(11) THENþ    ARC.LIST = '<table width="100%"><tbody><tr><th>Date</th><th>Time</th><th>Open</th></tr>'þ    ARC.CNT = SYSTEM(11)þ    LOOPþ      READNEXT AID ELSE EXITþ      READV DT.STAMP FROM F.ED.ARCHIVE, AID, 1 ELSE DT.STAMP = ""þ      ARC.LIST := '<tr><td>':OCONV(FIELD(DT.STAMP,'*',2),'D2/'):'</td><td>':OCONV(FIELD(DT.STAMP,'*',1),'MTS'):'</td><td>'þ      URL.AID = AIDþ      CALL SUB.URL.ENCODE(URL.AID)þ      ARC.LIST := '<a href="/dbc/MVDB.WEB.ED?ed_acct=MVDB&ed_file=MV.WEB.ED.ARCHIVE&ed_item=':URL.AID:'" target="MVDB_MV.WEB.ED.ARCHIVE_':URL.AID:'">Open</a>'þ      ARC.LIST := '</td></tr>'þ    REPEATþ    ARC.LIST := '</tbody></table>'þ  ENDþENDþ*þCALL SWAP(HTML,'<!-- EA_CALLS_CONTENT -->',EA.CALLS)þCALL SWAP(HTML,'<!-- EA_INCLUDES_CONTENT -->',EA.INCS)þCALL SWAP(HTML,'<!-- EA_FILES_CONTENT -->',EA.FILES)þCALL SWAP(HTML,'<!-- EA_ARCHIVE_CONTENT -->',ARC.LIST)þCALL SWAP(HTML,'<!-- NUM_OF_CALLS -->',SUB.CNT)þCALL SWAP(HTML,'<!-- NUM_OF_INCLUDES -->',INC.CNT)þCALL SWAP(HTML,'<!-- NUM_OF_FILES -->',FILE.CNT)þCALL SWAP(HTML,'<!-- NUM_OF_ARCHIVES -->',ARC.CNT)þCALL SWAP(HTML,'<!-- ED_SCRIPTS -->',EDIT.SCRIPTS)þCALL WEB.SEND(HTML)þGLOBAL.INFO(100) = 1 ;* Intentional stopþSTOPþ*þADD.MESSAGE: *þ*þCALL SWAP(HTML,'<!-- HEADER -->',HMESSAGE)þCALL SWAP(HTML,'<!-- FOOTER -->',FMESSAGE)þRETURNþ*þBUILD.SUBLIST: * Build a list of subroutines called by this programþ*þIDX.POS = 1þLPOS = 1þLOOPþ  POS = INDEX( record, "CALL ", IDX.POS )þWHILE POS DOþ  LINE.NUM = DCOUNT(record[1,POS+1],@AM)þ  LINE = TRIM(record<LINE.NUM>)þ  IF LINE[1,1] # "*" AND LINE[1,1] # "!" THENþ    CALL.POS = INDEX( LINE, 'CALL ', 1 )þ    QCPOS = CALL.POSþ    GOSUB QUOTE.CHECK ;* Make sure the "CALL " is not in a quoteþ    SKIP.LINE = 0þ    IF IN.QUOTE THEN SKIP.LINE = 1 ELSEþ      MID.CMNT.POS = INDEX(LINE,';*',1)þ      IF MID.CMNT.POS AND MID.CMNT.POS < CALL.POS THENþ        * Is the mid-line comment within a quote?þ        QCPOS = MID.CMNT.POSþ        GOSUB QUOTE.CHECKþ        IF NOT(IN.QUOTE) THEN SKIP.LINE = 1þ      ENDþ    ENDþ    IF SKIP.LINE THEN ;* This is happening inside a literal string, ignore it.þ      IDX.POS += 1þ      CONTINUEþ    ENDþ    TEMP.STR = LINE[1,CALL.POS]þ    SUBNAME = LINE[CALL.POS+5,999]þ    IF INDEX( SUBNAME,'(',1) THENþ      SUBNAME = FIELD( SUBNAME, '(', 1 )þ    END ELSE SUBNAME = FIELD(SUBNAME,' ',1)þ    SUBNAME = TRIM(SUBNAME)þ    *þ    READ CATPTR FROM F.MD, SUBNAME ELSE CATPTR = ""þ    IF CATPTR # "" THENþ      SUBFILE = FIELD( CATPTR<3>, ' ', 1 ) ; *PJS 07-22-15* UDþ      IF SUBFILE = '' THEN SUBFILE=filenameþ    END ELSE SUBFILE = filename    þ    UKEY = SUBFILE:"*":SUBNAMEþ    LOCATE UKEY IN SUBLIST<3> SETTING FOUND.POS THENþ      SUBLIST<4,FOUND.POS,-1> = LINE.NUMþ    END ELSEþ      SUBLIST<1,LPOS> = SUBFILEþ      SUBLIST<2,LPOS> = SUBNAMEþ      SUBLIST<3,LPOS> = UKEYþ      SUBLIST<4,LPOS> = LINE.NUMþ      LPOS += 1þ    ENDþ  ENDþ  IDX.POS += 1þREPEATþRETURNþ*þBUILD.INCLIST: * Build a list of include items used by this programþ*þIDX.POS = 1þLPOS = 1þLOOPþ  POS = INDEX( record, "INCLUDE ", IDX.POS )þWHILE POS DOþ  LINE.NUM = DCOUNT(record[1,POS+1],@AM)þ  LINE = TRIM(record<LINE.NUM>)þ  SEMI.POS = INDEX( LINE, ';', 1 )þ  IF SEMI.POS THEN LINE = LINE[1,SEMI.POS-1]þ  IF TRIM(LINE[1,8]) = "INCLUDE" THENþ    INC.POS = INDEX( LINE, 'INCLUDE ', 1 )þ    QCPOS = INC.POSþ    GOSUB QUOTE.CHECKþ    IF IN.QUOTE THEN ;* This is happening inside a literal string, ignore it.þ      IDX.POS += 1þ      CONTINUEþ    ENDþ    INCPARAM = LINE[INC.POS+8,999]þ    INCFILE = FIELD( INCPARAM, ' ', 1 )þ    INCITEM = FIELD( INCPARAM, ' ', 2 )þ    IF INCITEM = '' THENþ      INCITEM = INCFILEþ      INCFILE = filenameþ    ENDþ    UKEY = INCFILE:"*":INCITEMþ    LOCATE UKEY IN INCLIST<3> SETTING FOUND.POS THENþ      INCLIST<4,FOUND.POS,-1> = LINE.NUMþ    END ELSEþ      INCLIST<1,LPOS> = INCFILEþ      INCLIST<2,LPOS> = INCITEMþ      INCLIST<3,LPOS> = UKEYþ      INCLIST<4,LPOS> = LINE.NUMþ      LPOS += 1þ    ENDþ  ENDþ  IDX.POS += 1þREPEATþRETURNþ*þBUILD.FILELIST: * Build a list of files used by this programþ*þIDX.POS = 1þLPOS = 1þLOOPþ  POS = INDEX( record, "OPEN ",IDX.POS )þWHILE POS DOþ  LINE.NUM = DCOUNT(record[1,POS+1],@AM)þ  LINE = TRIM(record<LINE.NUM>)þ  IF LINE[1,1] # "*" AND LINE[1,1] # "!" THENþ    OPOS = INDEX( LINE, 'OPEN ', 1 )þ    QCPOS = OPOSþ    GOSUB QUOTE.CHECK ;* Make sure this doesn't appear inside a literal stringþ    IF IN.QUOTE THENþ      IDX.POS += 1þ      CONTINUEþ    ENDþ    CONVERT "'" TO '"' IN LINE ;* Standaraize the quote characterþ    CONVERT "\" TO '"' IN LINEþ    * An open statement may look like this: OPEN "","FILENAME"  - Get rid of the "", if it existsþ    DPOS = INDEX( LINE, '"",', 1 )þ    IF DPOS THENþ      LINE = LINE[1,DPOS-1]:LINE[DPOS+3,999]þ    ENDþ    OPARAM = LINE[OPOS+5,999]þ    TPOS = INDEX( OPARAM, ' TO ', 1 )þ    IF NOT(TPOS) THENþ      IDX.POS += 1þ      CONTINUE ;* Must not be an open statement.þ    ENDþ    FILEVAR = OPARAM[TPOS+4,999]þ    FILEVAR = FIELD( TRIM( FILEVAR ), ' ', 1 )þ    OPARAM = OPARAM[1,TPOS]þ*3-9-15*    FILENAME = TRIM(OPARAM)þ*3-9-15*    IF FILENAME[1,1] = '"' THEN FILENAME = FIELD(FILENAME,'"',2)þ*3-9-15*    UKEY = FILENAME:"*":FILEVARþ    FILENAME.VAR = TRIM(OPARAM); *3-9-15*þ    IF FILENAME.VAR[1,1] = '"' THEN FILENAME.VAR = FIELD(FILENAME.VAR,'"',2); *3-9-15*þ    UKEY = FILENAME.VAR:"*":FILEVAR; *3-9-15*þ    LOCATE UKEY IN FILELIST<4> SETTING FOUND.POS THENþ      FILELIST<5,FOUND.POS,-1> = LINE.NUMþ    END ELSEþ*3-9-15*      FILELIST<1,LPOS> = FILENAMEþ      FILELIST<1,LPOS> = FILENAME.VAR; *3-9-15*þ      FILELIST<2,LPOS> = FILEVARþ      FILELIST<3,LPOS,1> = "Open"þ      FILELIST<4,LPOS> = UKEYþ      FILELIST<5,LPOS,1> = LINE.NUMþ      F.R.IDX = 1; F.R.LINES = ""þ      LOOPþ        F.R.POS = INDEX( record, "FROM ":FILEVAR, F.R.IDX )þ      WHILE F.R.POS DOþ        F.R.IDX += 1þ        IF F.R.LINES # "" THEN F.R.LINES := ","þ        F.R.LINES := DCOUNT(record[1,F.R.POS+1],@AM)þ      REPEATþ      IF F.R.IDX > 1 THENþ        * Read operationþ        FILELIST<3,LPOS,-1> = "Read"þ        FILELIST<5,LPOS,-1> = F.R.LINESþ      ENDþ      *þ      F.W.IDX = 1 ; F.W.LINES = ""þ      LOOPþ        F.W.POS =  INDEX( record, "ON ":FILEVAR, F.W.IDX )þ      WHILE F.W.POS DOþ        F.W.IDX += 1þ        IF F.W.LINES # "" THEN F.W.LINES := ","þ        F.W.LINES := DCOUNT(record[1,F.W.POS+1],@AM)þ      REPEATþ      IF F.W.IDX > 1 THENþ        * Write operationþ        FILELIST<3,LPOS,-1> = "Write"þ        FILELIST<5,LPOS,-1> = F.W.LINESþ      ENDþ      *þ      F.D.IDX = 1 ; F.D.LINES = ""þ      LOOPþ        F.D.POS =  INDEX( record, "DELETE ":FILEVAR, F.D.IDX )þ      WHILE F.D.POS DOþ        F.D.IDX += 1þ        IF F.D.LINES # "" THEN F.D.LINES := ","þ        F.D.LINES := DCOUNT(record[1,F.D.POS+1],@AM)þ      REPEATþ      IF F.D.IDX > 1 THENþ        * Delete operationþ        FILELIST<3,LPOS,-1> = "Delete"þ        FILELIST<5,LPOS,-1> = F.D.LINESþ      ENDþ      LPOS += 1þ    ENDþ  ENDþ  IDX.POS += 1þREPEATþRETURNþ*þQUOTE.CHECK: * Is the data in LINE at QCPOS inside quotes?þ*þCURR.Q = ""þFOR SEEK.POS = 1 TO QCPOSþ  QCH = LINE[SEEK.POS,1]þ  BEGIN CASEþ    CASE CURR.Q # ""þ      IF QCH = CURR.Q THENþ        CURR.Q = ""þ      ENDþ    CASE QCH = "'" ; CURR.Q = QCHþ    CASE QCH = '"' ; CURR.Q = QCHþ    CASE QCH = '\' ; CURR.Q = QCHþ  END CASEþNEXT SEEK.POSþIF CURR.Q # "" THEN IN.QUOTE = 1 ELSE IN.QUOTE = 0þRETURN006540MVDB.ADMINþ0c2* Copyright (C) 2007 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written by: Luke Bucklin, Sierra Bravoþ* Date: November, 2007þ* Description: Administration area of Bravo Dashboardþ*þ* 08-18-16 Tom Parker of Zumasys - Convert password input to hex before savingþ* 07-22-15 Mike Street OF ZUMASYS - MODIFIED FOR UniDataþ*          CHANGE OCONV(X,'U3060') TO DIGEST('MD5'...)þ*þ* 09-23-16 Peter Schellenbachþ*  Add support for alternate logo defined for each user (MVDB.USERS attr 7).þ*  Requires corresponding changes in WEB.FORMS admin_template.html andþ*  javascripts initAdminTemplate.js to edit the alternate logo field.þ*þ* TPARKER 8-18-16 Fix bug where encrypted passwords were being stored in MVDB.USERS withoutþ*  converting to hex (MVDB.MAIN compares hex-converted encrypted password).þ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD WWW.INCLUDEþINCLUDE WBPD MVDB.INCLUDEþINCLUDE WBPD FI.MVDB.USERSþINCLUDE WBPD FI.MVDB.WIDGETSþINCLUDE WBPD FI.MVDB.DEFSþINCLUDE WBPD FI.MVDB.WIDGET.TYPESþ*þDIM DB.AREAS(5)þ*þOPEN '','MVDB.WIDGETS' TO F.MVDB.WIDGETS ELSE STOP 201, 'MVDB.WIDGETS'þOPEN '','MVDB.SUBS' TO F.MVDB.SUBS ELSE STOP 201, 'MVDB.SUBS'þOPEN '','MVDB.USERS' TO F.MVDB.USERS ELSE STOP 201, 'MVDB.USERS'þOPEN '','MVDB.DEFS' TO F.MVDB.DEFS ELSE STOP 201, 'MVDB.DEFS'þOPEN '','MVDB.WIDGET.TYPES' TO F.MVDB.WIDGET.TYPES ELSE STOP 201, 'MVDB.WIDGET.TYPES'þOPEN '','MVDB.CONTROL' TO F.MVDB.CONTROL ELSE STOP 201, 'MVDB.CONTROL'þOPEN '','MVDB.THEMES' TO F.MVDB.THEMES ELSE STOP 201, 'MVDB.THEMES'þ*þDIM SITE$SETTINGS(100)þEQU SITE$AUTH.SUB     TO SITE$SETTINGS(1)þEQU SITE$NULL.PW.OK   TO SITE$SETTINGS(2)þEQU SITE$W.MAX.DUR    TO SITE$SETTINGS(3)þEQU SITE$TCP.PORT     TO SITE$SETTINGS(4)þEQU SITE$ALT.LOGO     TO SITE$SETTINGS(7)þEQU SITE$THEME        TO SITE$SETTINGS(8)þEQU SITE$CHARSET      TO SITE$SETTINGS(9)þ*þMATREAD SITE$SETTINGS FROM F.MVDB.CONTROL, "MVDB.SETTINGS" ELSE MAT SITE$SETTINGS = ""þREADV THEME.CSS FROM F.MVDB.THEMES, SITE$THEME, 1 ELSE THEME.CSS = ''þIF SITE$ALT.LOGO = '' THENþ  SITE.LOGO = '/db/images/mv-logo.png'þEND ELSEþ  SITE.LOGO = SITE$ALT.LOGOþ  IF NOT(INDEX(SITE.LOGO,'/',1)) THENþ    SITE.LOGO = '/db/images/':SITE.LOGOþ  ENDþENDþIF THEME.CSS # '' THEN THEME.CSS = '<link rel="Stylesheet" href="/db/themes/':THEME.CSS:'" media="screen" type="text/css" />'þIF SITE$CHARSET = '' THEN SITE$CHARSET = 'UTF-8'þ*þ*SESSION$GLOBAL.DEBUG = 1þ*þGLOBAL.INFO(100) = 0þCALL GET.SESSION.VAR("adminauth",adminauth)þCALL PUT.SESSION.VAR("dd_mode",0)þadminpass = ""þIF adminauth # 1 THENþ  FORM = '<html><head><meta http-equiv="Refresh" content="0; url=/dbc/MVDB.MAIN" />'þ  FORM := '</head><body><p>Administrative priviledges are required. 'þ  FORM:= 'Please <a href="/dbc/MVDB.MAIN">log in</a>.</p></body></html>'þ  CALL WEB.SEND(FORM)þ  GLOBAL.INFO(100) = 1 ;* Intentional stopþ  STOPþENDþ*þLOCATE "action" IN CGI$VARS SETTING POS THENþ  action = CGI$VALS<POS>þEND ELSE action = ""þLOCATE "filter" IN CGI$VARS SETTING POS THENþ  filter = CGI$VALS<POS>þEND ELSEþ  CALL GET.SESSION.VAR("widget_filter",filter)þENDþLOCATE "clearfilter" IN CGI$VARS SETTING POS THENþ  filter = ""þENDþCALL PUT.SESSION.VAR("widget_filter",filter)þ*þLOCATE "unfail_widget" IN CGI$VARS SETTING POS THENþ  UNFAIL.WIDGET = CGI$VALS<POS>þ  CALL GET.SESSION.VAR("failed_widgets",FAILED.WIDGETS)þ  LOCATE UNFAIL.WIDGET IN FAILED.WIDGETS SETTING DPOS THENþ    FAILED.WIDGETS = DELETE( FAILED.WIDGETS, DPOS, 0, 0 )þ    CALL PUT.SESSION.VAR("failed_widgets",FAILED.WIDGETS)þ  ENDþ  action = "widgets"þENDþ*þACTIVE.MENU = ''þHTML = ''þSCRIPTS = ""þBEGIN CASEþ  CASE action = "users" OR action = ""þ    GOSUB LOAD.USERSþ  CASE action = "widgets"þ    GOSUB LOAD.WIDGETSþ  CASE action = "save_widget"þ    LOCATE "save_widget" IN CGI$VARS SETTING POS THENþ      LOCATE "save_widgetid" IN CGI$VARS SETTING POS THENþ        save.widgetid = CGI$VALS<POS>þ        LOCATE "newwidget" IN CGI$VARS SETTING POS THENþ          newwidget = (CGI$VALS<POS> = 1)þ        END ELSE newwidget = ""þ        IF newwidget = 1 THENþ          LOCATE "new_widgetid" IN CGI$VARS SETTING POS THENþ            save.widgetid = CGI$VALS<POS>þ          ENDþ        END ELSE newwidget = 0þ        IF newwidget THENþ          MATREAD WIDGET.ITEM FROM F.MVDB.WIDGETS, save.widgetid THENþ            SQN = 1þ            LOOPþ              new.saveid = save.widgetid:"-":SQNþ              MATREAD WIDGET.ITEM FROM F.MVDB.WIDGETS, new.saveid THENþ                SQN += 1þ              END ELSEþ                save.widgetid = new.saveidþ                EXITþ              ENDþ            REPEATþ          ENDþ        ENDþ        IF save.widgetid # "" THENþ          MATREAD WIDGET.ITEM FROM F.MVDB.WIDGETS, save.widgetid ELSE MAT WIDGET.ITEM = ''þ          LOCATE "widget_sub" IN CGI$VARS SETTING POS THENþ            WIDGET.SUB = CGI$VALS<POS>þ          ENDþ          LOCATE "widget_users" IN CGI$VARS SETTING POS THENþ            USER.LIST = CGI$VALS<POS>þ            CONVERT "," TO @VM IN USER.LISTþ            WIDGET.USERS = USER.LISTþ          END ELSE WIDGET.USERS = ""þ          LOCATE "new_widget_name" IN CGI$VARS SETTING POS THENþ            NEW.NAME = CGI$VALS<POS>þ            IF NEW.NAME = save.widgetid THEN NEW.NAME = ""þ          END ELSE NEW.NAME = ""þ          IF NEW.NAME # "" THENþ            * A rename of the widget has occurred.þ            MATWRITE WIDGET.ITEM ON F.MVDB.WIDGETS, NEW.NAMEþ            DELETE F.MVDB.WIDGETS, save.widgetidþ            * Rename instances of this widget name within dashboard definitionsþ            SELECT F.MVDB.DEFSþ            LOOPþ              READNEXT DBID ELSE EXITþ              MATREADU DB.ITEM FROM F.MVDB.DEFS, DBID ELSE CONTINUEþ              LOOPþ                LOCATE save.widgetid IN DB.WIDGETS<1> SETTING RPOS THENþ                  FOUND = 1þ                  DB.WIDGETS<1,RPOS> = NEW.NAMEþ                END ELSE FOUND = 0þ              WHILE FOUND DO REPEATþ              MATWRITE DB.ITEM ON F.MVDB.DEFS, DBIDþ            REPEATþ          END ELSEþ            MATWRITE WIDGET.ITEM ON F.MVDB.WIDGETS, save.widgetidþ          ENDþ        ENDþ      ENDþ    END ELSEþ      LOCATE "delete_widget" IN CGI$VARS SETTING POS THENþ        LOCATE "save_widgetid" IN CGI$VARS SETTING POS THENþ          save.widgetid = CGI$VALS<POS>þ          DELETE F.MVDB.WIDGETS, save.widgetidþ        ENDþ      ENDþ    ENDþ    GOSUB LOAD.WIDGETSþ  CASE action = "dashboards"þ    GOSUB LOAD.DASHBOARDSþ  CASE action = "editdb" OR action = "adddb"þ    ACTIVE.MENU = "DASHBOARDS"þ    READ INNER.TEMPLATE FROM F.WEB.FORMS, "admin_dashboards.html" ELSE INNER.TEMPLATE = "admin_dashboards.html not found"þ    DASHBOARD.LIST = ''þ    EXECUTE 'SSELECT MVDB.DEFS' CAPTURING JUNKþ    LOOPþ      READNEXT ID ELSE EXITþ      DASHBOARD.LIST<-1> = IDþ    REPEATþ    CALL SWAP(DASHBOARD.LIST, CHAR(254), '","')þ    DASHBOARD.LIST = '"':DASHBOARD.LIST:'"'þ    CALL SWAP(INNER.TEMPLATE,'<!-- list_of_dashboard_ids -->',DASHBOARD.LIST)þ    *þ    IF action = "adddb" THENþ      edit.id = "new_db"þ      EDIT.PROMPT = '<input id="edit_dbid" type="text" value="Untitled Dashboard" name="edit_dbid"/>'þ      CALL SWAP(INNER.TEMPLATE,'<!-- save_dbid -->',edit.id)þ      CALL SWAP(INNER.TEMPLATE,'<!-- edit_dbid -->',EDIT.PROMPT)þ      MAT DB.ITEM = ''þ    END ELSEþ      LOCATE "edit_dbid" IN CGI$VARS SETTING POS THENþ        edit.id = CGI$VALS<POS>þ      END ELSE edit.id = ""þ      *þ      MATREAD DB.ITEM FROM F.MVDB.DEFS, edit.id ELSE MAT DB.ITEM = ''þ      *þ      EDIT.PROMPT = '<input id="db_id" type="text" value="':edit.id:'" name="db_new_id" size="63" />' þ      CALL SWAP(INNER.TEMPLATE,'<!-- save_dbid -->',edit.id)þ      CALL SWAP(INNER.TEMPLATE,'<!-- edit_dbid -->',EDIT.PROMPT)þ    ENDþ    CALL MVDB.SUB.WIDGET.LIST(WIDGET.LIST)þ    *þ    SCRIPT1 = 'var widgetList = new Array("");':CHAR(10)þ    CALL SWAP(INNER.TEMPLATE,'<!-- db_desc -->',DB.DESC)þ    CALL SWAP(INNER.TEMPLATE,'<!-- db_sort -->',DB.SORT)þ    *þ    *DB.THEME db_theme select listþ    *þ    theme.select = '<select name="db_theme">'þ    theme.select := CHAR(10):'<option value="">Default Theme</option>'þ    EXECUTE 'SSELECT MVDB.THEMES' CAPTURING JUNKþ    THEME.LIST = ''þ    LOOPþ      READNEXT THEME.ID ELSE EXITþ      READV CSS.NAME FROM F.MVDB.THEMES, THEME.ID, 1 ELSE CSS.NAME = ''þ      IF CSS.NAME # '' THENþ        SELECTED = ''þ        IF THEME.ID = DB.THEME THEN SELECTED = ' selected'þ        theme.select := CHAR(10):'<option value="':THEME.ID:'"':SELECTED:'>':THEME.ID:'</option>'þ      ENDþ    REPEATþ    theme.select := CHAR(10):'</select>':CHAR(10)þ    CALL SWAP(INNER.TEMPLATE,'<!-- db_theme -->',theme.select)    þ    CALL SWAP(INNER.TEMPLATE,'<!-- db_sort -->',DB.SORT)þ    *þ    SHOW.USERS = DB.USERS.ALLOWEDþ    CONVERT @VM TO "," IN SHOW.USERSþ    CALL SWAP(INNER.TEMPLATE,'<!-- db_users -->',SHOW.USERS)þ    *þ    ACTIVE1 = "" ; ACTIVE2 = "" ; ACTIVE3 = ""þ    IF DB.TEMPLATE = "" THEN DB.TEMPLATE = 1þ    SCRIPT1 := 'var defaultLayout=':DB.TEMPLATE:';':CHAR(10)þ    BEGIN CASEþ      CASE DB.TEMPLATE = 3 ; ACTIVE3 = 'class="active"'þ      CASE DB.TEMPLATE = 2 ; ACTIVE2 = 'class="active"'þ      CASE DB.TEMPLATE = 1 OR 1 ; ACTIVE1 = 'class="active"'þ    END CASEþ    LAYOUT.OPTS  = '<li ':ACTIVE1:'><label>1 column</label><img alt="1" src="/db/images/1-column-layout.png" /></li>'þ    LAYOUT.OPTS := '<li ':ACTIVE2:'><label>2 column</label><img alt="2" src="/db/images/2-column-layout.png" /></li>'þ    LAYOUT.OPTS := '<li ':ACTIVE3:'><label>3 column</label><img alt="3" src="/db/images/3-column-layout.png" /></li>'þ    *þ    CALL SWAP(INNER.TEMPLATE,'<!-- db_layout_opts -->',LAYOUT.OPTS)þ    *þ    * Create a list of widgets by areaþ    *þ    MAT DB.AREAS = ""þ    FOR X = 1 TO DCOUNT( DB.WIDGETS, @VM )þ      WID = DB.WIDGETS<1,X>þ      CALL SWAP(WID,'"','\"')þ      LOCATE WID IN WIDGET.LIST<1> SETTING WPOS THENþ        WWIDTH = WIDGET.LIST<6,WPOS>þ        WTYPE = WIDGET.LIST<4,WPOS>þ        FAIL.TEXT = WIDGET.LIST<8,WPOS>þ      END ELSEþ        WTYPE = "UNKNOWN"þ        WWIDTH = 1þ        FAIL.TEXT = ""þ      ENDþ      THIS.AREA = DB.WIDGET.AREA<1,X>þ      IF NOT(THIS.AREA MATCHES "1N") THEN THIS.AREA = 1þ      IF THIS.AREA < 1 OR THIS.AREA > 5 THEN THIS.AREA = 1þ      MATREAD WIDGET.TYPES FROM F.MVDB.WIDGET.TYPES, WTYPE THENþ        CLASS.NAME = FIELD(WT$ICON,'.',1)þ        CONVERT "_" TO "-" IN CLASS.NAMEþ        WIDTH.CLASS = ""þ        BEGIN CASEþ          CASE WWIDTH = 1 ; WIDTH.CLASS = 'widget-small'þ          CASE WWIDTH = 2 ; WIDTH.CLASS = 'widget-medium'þ          CASE WWIDTH = 3 OR 1; WIDTH.CLASS = 'widget-large'þ        END CASEþ        SHOW.WID = WIDþ        IF FAIL.TEXT # "" THEN SHOW.WID := " (":FAIL.TEXT:")"þ        DB.AREAS(THIS.AREA) := '<div name="':WID:'" class="':CLASS.NAME:'"><span type="':WTYPE:'" class="':WIDTH.CLASS:'" >':SHOW.WID:'</span></div>'þ      ENDþ    NEXT Xþ    FOR X = 1 TO 5þ      CALL SWAP(INNER.TEMPLATE,'<!-- AREA_':X:'_WIDGETS -->',DB.AREAS(X))þ    NEXT Xþ    *þ    * Build widget option listþ    *þ    WOPTS = ''þ    ALL.WIDGET.CNT = DCOUNT( WIDGET.LIST<1>, @VM )þ    FOR X = 1 TO ALL.WIDGET.CNTþ      USE.DESC = WIDGET.LIST<2,X>þ      WID = WIDGET.LIST<1,X>þ      WDESC = WIDGET.LIST<2,X>þ      WTYPE = WIDGET.LIST<4,X>þ      WWIDTH = WIDGET.LIST<6,X>þ      FAIL.TEXT = WIDGET.LIST<8,X>þ      CALL SWAP(WDESC,'"','\"')þ      CALL SWAP(WID,'"','\"')þ      MATREAD WIDGET.TYPES FROM F.MVDB.WIDGET.TYPES, WTYPE THENþ        CLASS.NAME = FIELD(WT$ICON,'.',1)þ        CONVERT "_" TO "-" IN CLASS.NAMEþ        WIDTH.CLASS = ""þ        BEGIN CASEþ          CASE WWIDTH = 1 ; WIDTH.CLASS = 'widget-small'þ          CASE WWIDTH = 2 ; WIDTH.CLASS = 'widget-medium'þ          CASE WWIDTH = 3 OR 1; WIDTH.CLASS = 'widget-large'þ        END CASEþ        SHOW.WID = WIDþ        IF FAIL.TEXT # "" THEN SHOW.WID := " (":FAIL.TEXT:")"þ        WOPTS := '<div class="':CLASS.NAME:'"><span name="':WID:'" class="widget-id ':WIDTH.CLASS:'" type="':WTYPE:'">':SHOW.WID:'</span></div>':CHAR(10)þ      ENDþ      SCRIPT1 := \widgetList["\:WID:\"] = new Array("\:WDESC:\","\:WTYPE:\","\:WIDGET.LIST<6,X>:\");\þ    NEXT Xþ    *þ    GOSUB MAKE.DB.SCRIPTþ    SCRIPTS<-1> = SCRIPT1þ    *þ    CALL SWAP(INNER.TEMPLATE,'<!-- widget_list -->',WOPTS)þ    HTML = INNER.TEMPLATEþ  CASE action = "save_db"þ    LOCATE "save_db" IN CGI$VARS SETTING POS THENþ      SAVE.OK = 1þ      rename.id = ""þ      LOCATE "save_dbid" IN CGI$VARS SETTING POS THENþ        save.id = CGI$VALS<POS>þ        IF save.id = "new_db" THENþ          LOCATE "edit_dbid" IN CGI$VARS SETTING POS THENþ            save.id = CGI$VALS<POS>þ          END ELSE save.id = ""þ          IF save.id = "" THEN SAVE.OK = 0 ELSEþ            MATREAD DB.ITEM FROM F.MVDB.DEFS, save.id THEN SAVE.OK = 0þ          ENDþ        END ELSEþ          LOCATE "db_new_id" IN CGI$VARS SETTING POS THENþ            rename.id = CGI$VALS<POS>þ          ENDþ        ENDþ        CONVERT '"\' TO '' IN rename.idþ        CONVERT '"\' TO '' IN save.idþ        IF SAVE.OK THENþ          MATREAD DB.ITEM FROM F.MVDB.DEFS, save.id ELSE MAT DB.ITEM = ''þ          LOCATE "db_desc" IN CGI$VARS SETTING POS THENþ            DB.DESC = CGI$VALS<POS>þ          ENDþ          LOCATE "db_theme" IN CGI$VARS SETTING POS THENþ            DB.THEME = CGI$VALS<POS>þ          ENDþ          LOCATE "db_sort" IN CGI$VARS SETTING POS THENþ            DB.SORT = CGI$VALS<POS>þ          ENDþ          LOCATE "db_layout" IN CGI$VARS SETTING POS THENþ            DB.TEMPLATE = CGI$VALS<POS>þ          ENDþ          LOCATE "db_users" IN CGI$VARS SETTING POS THENþ            DB.USERS.ALLOWED = CGI$VALS<POS>þ          ENDþ          CONVERT "," TO @VM IN DB.USERS.ALLOWEDþ          *þ          LOCATE "widgets" IN CGI$VARS SETTING POS THENþ            WIDGET.LIST = CGI$VALS<POS>þ          END ELSE WIDGET.LIST = ""þ          CONVERT CHAR(13) TO @AM IN WIDGET.LISTþ          CONVERT CHAR(10) TO "" IN WIDGET.LISTþ          WCNT = DCOUNT( WIDGET.LIST, @AM )þ          DB.WIDGETS = ''þ          DB.WIDGET.AREA = ''þ          DB.WIDGET.ORDER = ''þ          FOR WX = 1 TO WCNTþ            THIS.W = WIDGET.LIST<WX>þ            DB.WIDGET.AREA<1,WX> = FIELD( THIS.W, ',', 1 )þ            DB.WIDGET.ORDER<1,WX> = FIELD( THIS.W,',', 2 )þ            DB.WIDGETS<1,WX> = OCONV(THIS.W,'G2,99' )þ          NEXT WXþ          IF rename.id # "" AND rename.id # save.id THENþ            DELETE F.MVDB.DEFS, save.idþ            MATWRITE DB.ITEM ON F.MVDB.DEFS, rename.idþ          END ELSEþ            MATWRITE DB.ITEM ON F.MVDB.DEFS, save.idþ          ENDþ        ENDþ      ENDþ    END ELSEþ      LOCATE "delete_db" IN CGI$VARS SETTING POS THENþ        LOCATE "save_dbid" IN CGI$VARS SETTING POS THENþ          del.id = CGI$VALS<POS>þ          DELETE F.MVDB.DEFS, del.idþ        ENDþ      ENDþ    ENDþ    GOSUB LOAD.DASHBOARDSþ  CASE action = "save_user"þ    LOCATE "save_userid" IN CGI$VARS SETTING POS THENþ      save.userid = CGI$VALS<POS>þ      LOCATE "delete_user" IN CGI$VARS SETTING POS THENþ        DELETE F.MVDB.USERS, save.useridþ      END ELSEþ        LOCATE "newuser" IN CGI$VARS SETTING POS THENþ          newuser = 1þ          LOCATE "new_userid" IN CGI$VARS SETTING POS THENþ            save.userid = CGI$VALS<POS>þ          ENDþ        END ELSE newuser = 0þ        SAVE.OK = 1þ        IF newuser THENþ          MATREAD USER.ITEM FROM F.MVDB.USERS, save.userid THENþ            SAVE.OK = 0þ          ENDþ        ENDþ        IF SAVE.OK AND save.userid # "" THENþ          MATREAD USER.ITEM FROM F.MVDB.USERS, save.userid ELSE MAT USER.ITEM = ''þ          LOCATE "username" IN CGI$VARS SETTING POS THENþ            USER.NAME = CGI$VALS<POS>þ          ENDþ          LOCATE "default_dashboard" IN CGI$VARS SETTING POS THENþ            USER.DEFAULT.DB = CGI$VALS<POS>þ          ENDþ          LOCATE "user_password" IN CGI$VARS SETTING POS THENþ            IF CGI$VALS<POS> # "" THENþ*07-22-15 UD*             USER.PASSWORD = OCONV(CGI$VALS<POS>,"U3060")þ              IF DIGEST('MD5', CGI$VALS<POS>, 1, USER.PASSWORD) <> 0 THEN ; *07-22-15 UD*þ                SAVE.OK = 0 ; *07-22-15 UD*þ              END ELSEþ                USER.PASSWORD = OCONV(USER.PASSWORD, 'MX0C'); *TPARKER 8-18-16 UD*þ              ENDþ            ENDþ          ENDþ          LOCATE "user_role" IN CGI$VARS SETTING POS THENþ            USER.ROLE = CGI$VALS<POS>þ          ENDþ          IF USER.ROLE = "" THEN USER.ROLE = "User"þ          * PJS 09-23-16 save optional user logoþ          LOCATE "opt_logo_path" IN CGI$VARS SETTING POS THENþ            USER.ALT.LOGO = CGI$VALS<POS>þ          END ELSEþ            USER.ALT.LOGO = ""þ          ENDþ          IF SAVE.OK THEN ; *07-22-15 UD* if DIGEST() function failed, don't save user (no password!)þ            MATWRITE USER.ITEM ON F.MVDB.USERS, save.useridþ          ENDþ        ENDþ      ENDþ    ENDþ    GOSUB LOAD.USERSþ  CASE 1þ    READ HTML FROM F.WEB.FORMS, "admin_menu.html" ELSE ADMIN.MENU = "admin_menu.html not found."þEND CASEþREAD ADMIN.TEMPLATE FROM F.WEB.FORMS, "admin_template.html" ELSE ADMIN.TEMPLATE = "admin_template.html not found."þCALL SWAP(ADMIN.TEMPLATE,'<!--CHARACTER_SET-->',SITE$CHARSET)þHEADER = '<div id="dashboard_nav">'þHEADER := '<ol class="dashboard_list">'þIF ACTIVE.MENU = "USERS" THEN ACTIVE = 'class="db_active"' ELSE ACTIVE = ""þHEADER := '<li ':ACTIVE:'><a href="':CGI$PATH:'/MVDB.ADMIN?action=users">Users</a></li>'þIF ACTIVE.MENU = "WIDGETS" THEN ACTIVE = 'class="db_active"' ELSE ACTIVE = ""þHEADER := '<li ':ACTIVE:'><a href="':CGI$PATH:'/MVDB.ADMIN?action=widgets">Widgets</a></li>'þIF ACTIVE.MENU = "DASHBOARDS" THEN ACTIVE = 'class="db_active"' ELSE ACTIVE = ""þHEADER := '<li ':ACTIVE:'><a href="':CGI$PATH:'/MVDB.ADMIN?action=dashboards">Dashboards</a></li>'þOPEN 'RSS.BP' TO F.RSS.BP THENþ  HEADER := '<li><a href="':CGI$PATH:'/RSS.MAINT">RSS Feed Maintenance</a></li>'þENDþOPEN 'MVPKG.DATA' TO F.MVPKG.DATA THENþ  HEADER := '<li><a href="':CGI$PATH:'/MVPKG.MAIN">Package Manager</a></li>'þENDþHEADER := '<li><a href="':CGI$PATH:'/MVDB.MAIN">Return to Dashboard</a></li>'þHEADER := '</ol>'þHEADER := '</div>'þCALL SWAP(ADMIN.TEMPLATE,'<!-- HEADER -->',HEADER)þFOOTER = ''þCALL SWAP(ADMIN.TEMPLATE,'<!-- FOOTER -->',FOOTER)þ*þCALL SWAP(ADMIN.TEMPLATE,'<!-- ADMIN_MAIN -->',HTML)þCALL SWAP(ADMIN.TEMPLATE,'<!-- ADMIN_SCRIPTS -->',SCRIPTS)þCALL SWAP(ADMIN.TEMPLATE,'<!-- SITE_LOGO -->',SITE.LOGO)þCALL SWAP(ADMIN.TEMPLATE,'<!-- SITE_THEME -->',THEME.CSS)þCALL WEB.SEND(ADMIN.TEMPLATE)þGLOBAL.INFO(100) = 1 ;* Process completed successfullyþSTOPþ*þLOAD.USERS: *þ*þ    ACTIVE.MENU = "USERS"þ    EXECUTE 'SSELECT MVDB.USERS' CAPTURING JUNKþ    HTML = '<table width="100%">'þ    HTML<-1> = '<tr><td colspan="5"><a href="':CGI$PATH:'/MVDB.ADMIN?action=adduser" class="add-user">Add User</a></td></tr>'þ    HTML<-1> = '<tr><th>User ID</th>'þ    HTML<-1> = '<th>Name</th>' þ    HTML<-1> = '<th>Default Dashboard</th>'þ    HTML<-1> = '<th>Role</th>'þ    HTML<-1> = '<th>Action</th>' þ    HTML<-1> = '</tr>'þ    *þ    LOOPþ      READNEXT ID ELSE EXITþ      MATREAD USER.ITEM FROM F.MVDB.USERS, ID ELSE MAT USER.ITEM = ""þ      IF USER.ROLE = "" THEN USER.ROLE = "User"þ      HTML<-1> = '<tr><td>':ID:'</td>'þ      HTML<-1> = '<td>':USER.NAME:'</td>'þ      HTML<-1> = '<td>':USER.DEFAULT.DB:'</td>'þ      CALL SWAP(ID,'"','\"')þ      CALL SWAP(USER.NAME,'"','\"')þ      CALL SWAP(USER.DEFAULT.DB,'"','\"')þ      CALL SWAP(USER.DEFAULT.DB,"'","&apos;")þ      * PJS 09-23-16: added USER.ALT.LOGO parameter to editUser()þ      ACTIONS = \&nbsp;<a href='javascript:editUser("\:ID:\","\:USER.NAME:\","\:USER.DEFAULT.DB:\","\:USER.ROLE:\","\:USER.ALT.LOGO:\");'><img title="Edit User" class="icon" src="/db/icons/user_edit.png" /></a>\þ      ACTIONS := \&nbsp;<a href='javascript:deleteUser("\:ID:\");'><img title="Delete User" class="icon" src="/db/icons/user_delete.png" /></a>\þ      HTML<-1> = '<td>':USER.ROLE:'</td>'þ      HTML<-1> = '<td>':ACTIONS:'</td>'þ      HTML<-1> = '</tr>'þ    REPEATþ    HTML<-1> = '<tr><td colspan="5"><a href="':CGI$PATH:'/MVDB.ADMIN?action=adduser" class="add-user">Add User</a></td></tr>'þ    HTML<-1> = '</table>'þ    *þ    GOSUB MAKE.DB.SCRIPTþRETURNþ*þLOAD.WIDGETS: *þ*þACTIVE.MENU = "WIDGETS"þCALL MVDB.SUB.WIDGET.LIST(WIDGET.LIST)þFFORM = '<form action="':CGI$PATH:'/MVDB.ADMIN" method="get">'þFFORM := '<input type="hidden" name="action" value="widgets">'þFFORM := 'Filter: <input type="text" name="filter" value="':filter:'"> <input type=submit name=fbtn value="Go">'þIF filter # "" THEN FFORM := ' <a href="':CGI$PATH:'/MVDB.ADMIN?action=widgets&clearfilter">Clear Filter</a>'þFFORM := '</form>'þHTML = '<table width="100%">'þHTML<-1> = '<tr><td colspan="3"><a href="':CGI$PATH:'/MVDB.ADMIN?action=addwidget" class="add-widget">Add a Widget</a></td>'þHTML<-1> = '<td colspan="4" align="right">':FFORM:'</td></tr>'þHTML<-1> = '<tr><th colspan="2">Widget ID</th>'þHTML<-1> = '<th>Type</th>' þHTML<-1> = '<th>Description</th>' þHTML<-1> = '<th>Subroutine</th>' þHTML<-1> = '<th>Users Allowed</th>' þHTML<-1> = '<th>Actions</th>' þHTML<-1> = '</tr>'þ*þWIDGET.CNT = DCOUNT( WIDGET.LIST<1>, @VM )þFOR WDX = 1 TO WIDGET.CNTþ  ID = WIDGET.LIST<1,WDX>þ  WDESC = WIDGET.LIST<2,WDX>þ  WSUB = WIDGET.LIST<3,WDX>þ  WTYPE = WIDGET.LIST<4,WDX>þ  WTITLE = WIDGET.LIST<5,WDX>þ  WWIDTH = WIDGET.LIST<6,WDX>þ  FAIL.STATUS = WIDGET.LIST<7,WDX>þ  FAIL.TEXT = WIDGET.LIST<8,WDX>þ  MATREAD WIDGET.TYPES FROM F.MVDB.WIDGET.TYPES, WTYPE ELSE MAT WIDGET.TYPES = ""þ  IF filter # "" THENþ    FILTER.MATCH = 0þ    IF INDEX(WDESC,filter,1) THEN FILTER.MATCH = 1þ    IF INDEX(WTITLE,filter,1) THEN FILTER.MATCH = 1þ    IF INDEX(WSUB,filter,1) THEN FILTER.MATCH = 1þ  END ELSE FILTER.MATCH =1þ  IF FILTER.MATCH THENþ    IF WT$ICON # "" THENþ      ICON.IMG = '<img height="20" width="20" src="/db/icons/':WT$ICON:'" />'þ    END ELSE ICON.IMG = "&nbsp;"þ    ID.LINK = IDþ    CALL SUB.URL.ENCODE(ID.LINK)þ    ID.LINK = '<a href="':CGI$PATH:'/MVDB.MAIN?udview=':ID.LINK:'&dd" target="_blank" title="Open in new window">':ID:'</a>'þ    HTML<-1> = '<tr><td class="widget-name">':ID.LINK:'</td><td class="widget-icon">':ICON.IMG:'</td>'þ    HTML<-1> = '<td>':WTYPE:'</td>'þ    IF WTITLE = "" THEN WTITLE = WDESCþ    HTML<-1> = '<td>':WTITLE:'</td>'þ    ENC.WIDGET.SUB = WSUBþ    CALL SUB.URL.ENCODE(ENC.WIDGET.SUB)þ    HTML<-1> = '<td><a target="MVDB.SUBS_':ENC.WIDGET.SUB:'" href="':CGI$PATH:'/MVDB.WEB.ED?ed_file=MVDB.SUBS&ed_item=':ENC.WIDGET.SUB:'" title="Edit Source">':WSUB:'</a></td>'þ    MATREAD WIDGET.ITEM FROM F.MVDB.WIDGETS, ID ELSE MAT WIDGET.ITEM = ""þ    IF WIDGET.USERS # "" THENþ      SHOW.USERS = WIDGET.USERSþ      CONVERT @VM TO "," IN SHOW.USERSþ      PASS.USER.LIST = SHOW.USERSþ    END ELSEþ      SHOW.USERS = "Anybody"þ      PASS.USER.LIST = ""þ    ENDþ    HTML<-1> = '<td>':SHOW.USERS:'</td>'þ    CALL SWAP(WDESC,"'","\'")þ    CALL SWAP(WSUB,"'","\'")þ    CALL SWAP(PASS.USER.LIST,"'","\'")þ    URL.ID = IDþ    CALL SUB.URL.ENCODE(URL.ID)þ    CALL SWAP(ID,"'","\'")þ    ACTIONS = \<a href="javascript:editWidget('\:ID:\','\:WDESC:\','\:WSUB:\','\:PASS.USER.LIST:\');"><img title="Edit Widget" class="icon" src="/db/icons/cog_edit.png" /></a>\þ    ACTIONS := '&nbsp;'þ    ACTIONS := \<a href="javascript:copyWidget('Copy of \:ID:\','\:WDESC:\','\:WSUB:\','\:PASS.USER.LIST:\');"><img title="Copy Widget" class="icon" src="/db/icons/page_copy.png" /></a>\þ    ACTIONS := '&nbsp;'þ    ACTIONS := \<a href="javascript:deleteWidget('\:ID:\','\:WDESC:\','\:WSUB:\','\:PASS.USER.LIST:\');"><img title="Delete Widget" class="icon" src="/db/icons/cog_delete.png" /></a>\þ    IF FAIL.STATUS = 1 THENþ      * This widget has a fatal error and has been added to the "failed_widgets" session variable. Allow the admin to reset this status.þ      ACTIONS := \&nbsp;<a href="/dbc/MVDB.ADMIN?unfail_widget=\:URL.ID:\&action=widgets"><img title="Reset Fail Status" class="icon" src="/db/icons/arrow_redo.png" /></a>\þ    ENDþ    HTML<-1> = '<td>':ACTIONS:'</td>'þ    HTML<-1> = '</tr>'þ  ENDþNEXT WDXþHTML<-1> = '<tr><td colspan="7"><a href="" class="add-widget">Add a Widget</a></td></tr>'þHTML<-1> = '</table>'þ*þSCRIPTS = 'var widgetList = new Array('þEXECUTE "SSELECT MVDB.WIDGETS" CAPTURING JUNKþFIRST = 1þLOOPþ  READNEXT ID ELSE EXITþ  CALL SWAP(ID,'"','\"')þ  IF NOT(FIRST) THEN SCRIPTS := ','þ  FIRST = 0þ  SCRIPTS := '"':ID:'"'þREPEATþSCRIPTS := ');'þRETURNþ*þLOAD.DASHBOARDS: *þ*þACTIVE.MENU = "DASHBOARDS"þEXECUTE 'SSELECT MVDB.DEFS' CAPTURING JUNKþHTML = '<table width="100%">'þHTML<-1> = '<tr><td colspan="5"><a href="':CGI$PATH:'/MVDB.ADMIN?action=adddb" class="add-dashboard">Add A Dashboard</a></td></tr>'þHTML<-1> = '<tr><th>Dashboard ID</th>'þHTML<-1> = '<th>Description</th>' þHTML<-1> = '<th>Users Allowed</th>' þHTML<-1> = '<th>Actions</th>' þHTML<-1> = '</tr>'þ*þLOOPþ  READNEXT ID ELSE EXITþ  MATREAD DB.ITEM FROM F.MVDB.DEFS, ID ELSE MAT DB.ITEM = ''þ  HTML<-1> = '<tr><td>':ID:'</td>'þ  HTML<-1> = '<td>':DB.DESC:'</td>'þ  IF DB.USERS.ALLOWED # "" THENþ    SHOW.USERS = DB.USERS.ALLOWEDþ    CONVERT @VM TO "," IN SHOW.USERSþ  END ELSE SHOW.USERS = "Anybody"þ  HTML<-1> = '<td>':SHOW.USERS:'</td>'þ  ACTIONS = '<a href="':CGI$PATH:'/MVDB.ADMIN?action=editdb&edit_dbid=':ID:'"><img title="Edit Dashboard" class="icon" src="/db/icons/layout_edit.png" /></a>&nbsp;'þ  ACTIONS := \<a onClick="return confirm('DELETE: Are you sure?');" href="\:CGI$PATH:\/MVDB.ADMIN?action=save_db&delete_db=1&save_dbid=\:ID:\"><img title="Delete Dashboard" class="icon" src="/db/icons/layout_delete.png" /></a>\þ  HTML<-1> = '<td>':ACTIONS:'</td>'þ  HTML<-1> = '</tr>'þREPEATþHTML<-1> = '<tr><td colspan="5"><a href="':CGI$PATH:'/MVDB.ADMIN?action=adddb" class="add-dashboard">Add A Dashboard</a></td></tr>'þHTML<-1> = '</table>'þRETURNþ*þMAKE.DB.SCRIPT: *þ*þSCRIPTS = 'var dashboardList = new Array('þEXECUTE 'SSELECT MVDB.DEFS' CAPTURING JUNKþFIRST = 1þLOOPþ  READNEXT ID ELSE EXITþ  CALL SWAP(ID,'"','\"')þ  IF NOT(FIRST) THEN SCRIPTS := ','þ  FIRST = 0þ  SCRIPTS := '"':ID:'"'þREPEATþSCRIPTS := ');'þRETURN0002DCGET.SESSION.VARþ0c2SUBROUTINE GET.SESSION.VAR( var, VAL )þ*þ* Copyright (C) 2003 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written by: Michael Derheim, Sierra Bravoþ* Date: 10/25/03þ* Description: This program reads a value from the current webþ*              session record.þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD WWW.INCLUDEþ*þEQU FALSE TO 0, TRUE TO 1þEQU AM TO CHAR(254), VM TO CHAR(253), SVM TO CHAR(252)þVAL = ''þ*þREAD REC FROM F.WEB.SESSION, SESSION$ID THENþ  LOCATE var IN REC<1> SETTING POS THENþ    VAL = REC<2,POS>þ  END ELSEþ    VAL = ''þ  ENDþENDþ*þCONVERT CHAR(2) TO @AM IN VALþCONVERT CHAR(3) TO @VM IN VALþCONVERT CHAR(4) TO @SVM IN VALþ*þCALL PUT.SESSION.VAR('LastSessionAccess', DATE():'*':TIME())þ*þRETURNþ*000E80SUB.EXCEL.FUNCþ0c2SUBROUTINE SUB.EXCEL.FUNC(ACTION,SPREADSHEET,CSV.WIDGET.NAME)þ*þ* Copyright (c) 2020 Zumasys, Inc. All rights reserved.þ* Description: EXCEL utility functionsþ*þINCLUDE WBPD WWW.INCLUDEþINCLUDE WBPD MVDB.INCLUDEþ*þ*þ*þSPREADSHEET=''þ*þ* ISOLATE THE TITLEþ*þBEGIN CASEþ  CASE ACTION = 'generate'þ         * Use widget name to create a filename for the CSV fileþ         OPEN '','MVDB.CONTROL' TO F.MVDB.CONTROL ELSE STOP 201, 'MVDB.CONTROL'þ         CALL SUB.GET.NEXT.ID(UNIQUE.ID,F.MVDB.CONTROL)    þ         CSV.FILE.NAME = CSV.WIDGET.NAME:'_' :UNIQUE.IDþ         CALL SET.CONTENT.TYPE('text/csv')þ         SESSION$HEADERS<-1> = 'Content-Disposition: attachment; filename="':CSV.FILE.NAME:'.csv"'þ         * Build the CSV contentþ         GOSUB BUILD.SPREADSHEET.CONTENTþ         SPREADSHEET=CHANGE(SPREADSHEET,CHAR(254),CHAR(13):CHAR(10))þ         CALL SWAP(SPREADSHEET,'&nbsp;',' ')þ         CSV.SIZE=LEN(SPREADSHEET)þ         SESSION$HEADERS<-1>='Content-Length:':CSV.SIZEþEND CASEþRETURNþ*þBUILD.SPREADSHEET.CONTENT:þ*þBEGIN CASEþ   CASE W$TYPE = 'TABLE'þ      GOSUB TYPE.IS.TABLEþ      DASHBOARD.TYPE='Report'þ   CASE INDEX(W$TYPE,'COLUMN',1)þ      GOSUB TYPE.IS.BAR.OR.COLUMNþ      DASHBOARD.TYPE='Chart'þ   CASE INDEX(W$TYPE,'BAR',1)þ      GOSUB TYPE.IS.BAR.OR.COLUMNþ      DASHBOARD.TYPE='Chart'þ   CASE INDEX(W$TYPE,'LINE',1)þ      GOSUB TYPE.IS.BAR.OR.COLUMNþ      DASHBOARD.TYPE='Chart'þ   CASE INDEX(W$TYPE,'AREA',1)þ      GOSUB TYPE.IS.BAR.OR.COLUMNþ      DASHBOARD.TYPE='Chart'þ   CASE INDEX(W$TYPE,'PIE',1)þ      GOSUB TYPE.IS.PIEþ      DASHBOARD.TYPE='Pie'þ   CASE INDEX(W$TYPE,'DOUGHNUT',1)þ      GOSUB TYPE.IS.PIEþ      DASHBOARD.TYPE='Pie'þEND CASEþ*þ* STRIP OUT HTML STUFF AND CONVERT TO CSVþ*þMAX.ROWS=DCOUNT(SPREADSHEET,CHAR(254))þFOR ROW.NO = 1 TO MAX.ROWSþ   ROW=SPREADSHEET<ROW.NO>þ   *þ   * <br> to spaceþ   *þ   LOOPþ      POS=INDEX(ROW,'<br>',1)þ   UNTIL NOT(POS) DOþ      ROW=ROW[1,POS-1]:' ':(ROW[POS+4,9999])þ   REPEATþ   *þ   * ISOLATE XXX IN ]<a hrev.....">XXX</a>]þ   *þ   LOOPþ      POS=INDEX(ROW,'</a>',1)þ   UNTIL NOT(POS) DOþ      VAL.NO=DCOUNT(ROW[1,POS],CHAR(253))þ      VAL=ROW<1,VAL.NO>þ      POS=INDEX(VAL,'</a>',1)þ      VAL=VAL[1,POS-1]þ      POS=INDEX(VAL,'">',1)þ      VAL=VAL[POS+2,999]þ      ROW<1,VAL.NO>=VALþ   REPEATþ   MAX.VALS=DCOUNT(ROW,CHAR(253))þ   FOR VAL.NO = 1 TO MAX.VALSþ      IF DASHBOARD.TYPE = 'Chart' AND VAL.NO > 1 THENþ         VAL=ROW<1,VAL.NO>þ         IF NUM(VAL) AND NOT(INDEX(VAL,',',1)) THEN VAL=OCONV(VAL,'MD0,')þ         ROW<1,VAL.NO>=VALþ       ENDþ      ROW<1,VAL.NO>='"':ROW<1,VAL.NO>:'"'þ    NEXT VAL.NOþ   SPREADSHEET<ROW.NO>=ROWþ NEXT ROW.NOþCONVERT CHAR(253) TO ',' IN SPREADSHEETþRETURNþ*þTYPE.IS.TABLE:þ*þSPREADSHEET<-1>=W$TABLE.COL.LABELSþSPREADSHEET<-1>=W$TABLE.DATAþSPREADSHEET<-1>=W$TABLE.TOTALSþRETURNþ*þTYPE.IS.BAR.OR.COLUMN:þ*þSPREADSHEET<-1>='Displayed as: ':W$BAR.YMEMOþCOL.HEADINGS=W$BAR.LABELSþCONVERT CHAR(254) TO CHAR(253) IN COL.HEADINGS;  * MULTI-SERIES MAY HAVE SEVERALþIF COL.HEADINGS<1,2> = '' THEN;  * ONLY ONE THEN USE W$BAR.YMEMOþ   COL.HEADINGS=W$BAR.YMEMOþ ENDþCOL.HEADINGS=INSERT(COL.HEADINGS,1,1,0,W$BAR.XMEMO)þSPREADSHEET<-1>=COL.HEADINGSþNUM.ROWS=DCOUNT(W$BAR.XLABELS,CHAR(253))þNUM.COL.VALUES=DCOUNT(W$BAR.VALUES,CHAR(254))þFOR ROW.NO = 1 TO NUM.ROWSþ   THIS.ROW=W$BAR.XLABELS<1,ROW.NO>þ   FOR COL.NO = 1 TO NUM.COL.VALUESþ      THIS.COL=W$BAR.VALUES<COL.NO,ROW.NO>þ      IF NUM(THIS.COL) THENþ         IF THIS.COL > 999 THENþ            THIS.COL=OCONV(THIS.COL,'MD0,')þ          ENDþ       ENDþ      THIS.ROW<1,COL.NO+1>=THIS.COLþ    NEXT COL.NOþ   SPREADSHEET<-1>=THIS.ROWþ NEXT ROW.NOþRETURNþ*þTYPE.IS.PIE:þ*þSPREADSHEET<-1>=W$PIE.LABELSþSPREADSHEET<-1>=W$PIE.VALUESþRETURNþEND0009A5XML.DATAþ0c2CALL WDB.VARS(VARS, VALS)þDISPLAY.TERM = 1þWEB.DATA = ''þLINE.CNT = 1þNUM.BYTES = 0þ*þ****************************************þ* q = number of bytes to quit early onþ* default is full dumpþ****************************************þLOCATE 'q' IN VARS SETTING POS THENþ  q = VALS<POS>þEND ELSEþ  q = ''þENDþ*þ****************************************þ* l = number of lines of text to printþ* default is 10000þ****************************************þLOCATE 'l' IN VARS SETTING POS THENþ  l = VALS<POS>þEND ELSEþ  l = 10000þENDþ*þ****************************************þ* b = number of characters per lineþ* default is 10þ****************************************þLOCATE 'b' IN VARS SETTING POS THENþ  b = VALS<POS>þEND ELSEþ  b = 10þENDþ*þ****************************************þ* w = use web.load or printþ* if w is 0, then use WEB.LOADþ* default is 0þ****************************************þLOCATE 'w' IN VARS SETTING POS THENþ  w = VALS<POS>þEND ELSEþ  w = 0þENDþ*þ****************************************þ* p = number of seconds to pause beforeþ*     starting to send outputþ* default is 0þ****************************************þLOCATE 'p' IN VARS SETTING POS THENþ  p = VALS<POS>þEND ELSEþ  p = 0þENDþ*þ****************************************þ* s = which quit string to useþ* default = 800 WDB-COMPLETEþ****************************************þLOCATE 's' IN VARS SETTING POS THENþ  s = VALS<POS>þEND ELSEþ  s = '800 WDB-COMPLETE'þENDþ*þ****************************************þ* MAIN PROGRAMþ****************************************þIF w # 0 THENþ  SLEEP pþENDþFOR X = 1 TO lþ  NUM.CHARS = LEN(LINE.CNT) + 1þ  LINE = ''þ  NUM.ZEROS = b - NUM.CHARSþ  FOR Y = 1 TO NUM.ZEROSþ    LINE := '0'þ    NUM.BYTES += 1þ  NEXT Yþ  LINE := LINE.CNTþ  NUM.BYTES += LEN(LINE.CNT) + 1 ; * this is for the line counter and the line breakþ  GOSUB CHECK.EARLY.TERMINATEþ  IF w = 0 THENþ    WEB.DATA<-1> = LINEþ    IF TERM.DATA # '' THENþ      WEB.DATA<-1> = TERM.DATAþ    ENDþ  END ELSEþ    PRINT LINEþ    IF TERM.DATA # '' THENþ      PRINT TERM.DATAþ    ENDþ  ENDþ  LINE.CNT += 1þNEXT XþIF w = 0 THENþ  SLEEP pþ  CALL WEB.SEND(WEB.DATA)þENDþSTOPþ*þ********************************************************************************þCHECK.EARLY.TERMINATE:þ********************************************************************************þTERM.DATA = ''þIF q # '' AND NUM.BYTES >= q AND DISPLAY.TERM = 1 THENþ  TERM.DATA = s:CHAR(10):CHAR(10)þ  DISPLAY.TERM = 0þENDþRETURNþ*þ0001C9DESTROY.SESSIONþ0c2SUBROUTINE DESTROY.SESSIONþ*þ* Copyright (C) 2003 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written by: Michael Derheim, Sierra Bravoþ* Date: 10/25/03þ* Description: This program removes the session recordsþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD WWW.INCLUDEþ* Initþ*EQU FALSE TO 0, TRUE TO 1þ*EQU AM TO CHAR(254), VM TO CHAR(253), SVM TO CHAR(252)þ*þCALL SET.COOKIE("sessionid=; path=/")þ*þDELETE F.WEB.SESSION, SESSION$IDþRETURNþ*0021C5RSS.MAINTþ0c2*þ* Copyright (C) 2007 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written by: Luke Bucklin, Sierra Bravoþ* Date: March 10, 2009þ* Description: RSS Feed Maintenanceþ*þINCLUDE WBPD WWW.INCLUDEþINCLUDE RSS.BP RSS.DATA.INCþ*þOPEN '','RSS.FEEDS' TO F.RSS.FEEDS ELSE STOP 201, 'RSS.FEEDS'þOPEN '','WEB.FORMS' TO F.WEB.FORMS ELSE STOP 201, 'WEB.FORMS'þOPEN '','MD' TO F.MD ELSEþ  OPEN '','VOC' TO F.MD ELSE STOP 201, 'MD'þENDþOPEN '','MVDB.CONTROL' TO F.MVDB.CONTROL ELSE STOP 201, 'MVDB.CONTROL'þOPEN '','MVDB.THEMES' TO F.MVDB.THEMES ELSE STOP 201, 'MVDB.THEMES'þ*þDIM SITE$SETTINGS(100)þEQU SITE$AUTH.SUB     TO SITE$SETTINGS(1)þEQU SITE$NULL.PW.OK   TO SITE$SETTINGS(2)þEQU SITE$W.MAX.DUR    TO SITE$SETTINGS(3)þEQU SITE$TCP.PORT     TO SITE$SETTINGS(4)þEQU SITE$ALT.LOGO     TO SITE$SETTINGS(7)þEQU SITE$THEME        TO SITE$SETTINGS(8)þEQU SITE$CHARSET      TO SITE$SETTINGS(9)þ*þMATREAD SITE$SETTINGS FROM F.MVDB.CONTROL, "MVDB.SETTINGS" ELSE MAT SITE$SETTINGS = ""þREADV THEME.CSS FROM F.MVDB.THEMES, SITE$THEME, 1 ELSE THEME.CSS = ''þIF SITE$ALT.LOGO = '' THENþ  SITE.LOGO = '/db/images/mv-logo.png'þEND ELSEþ  SITE.LOGO = SITE$ALT.LOGOþ  IF NOT(INDEX(SITE.LOGO,'/',1)) THENþ    SITE.LOGO = '/db/images/':SITE.LOGOþ  ENDþENDþIF THEME.CSS # '' THEN THEME.CSS = '<link rel="Stylesheet" href="/db/themes/':THEME.CSS:'" media="screen" type="text/css" />'þIF SITE$CHARSET = '' THEN SITE$CHARSET = 'UTF-8'þ*þCALL GET.SESSION.VAR("adminauth",adminauth)þCALL PUT.SESSION.VAR("dd_mode",0)þadminpass = ""þIF adminauth # 1 THENþ  FORM = '<html><head><meta http-equiv="Refresh" content="0; url=/dbc/MVDB.MAIN" />'þ  FORM := '</head><body><p>Administrative priviledges are required. 'þ  FORM:= 'Please <a href="/dbc/MVDB.MAIN">log in</a>.</p></body></html>'þ  CALL WEB.SEND(FORM)þ  STOPþENDþ*þLOCATE "action" IN CGI$VARS SETTING POS THENþ  action = CGI$VALS<POS>þEND ELSE action = ""þLOCATE "id" IN CGI$VARS SETTING POS THENþ  id = CGI$VALS<POS>þEND ELSE id = ""þLOCATE "cancel_edit" IN CGI$VARS SETTING POS THENþ  action = "list"þENDþ*þHTML = ''þBEGIN CASEþ  CASE action = "edit" OR action = "add" AND 0 ;* This code is depricatedþ    IF action = "edit" THENþ      READ FEED.REC FROM F.RSS.FEEDS, id ELSE FEED.REC = ""þ    END ELSE FEED.REC = ""þ    FEED.NAME = FEED.REC<1>þ    FEED.DESC = FEED.REC<3>þ    CRLF = CHAR(13):CHAR(10)þ    CALL SWAP(FEED.DESC,'<br />',CRLF)þ    SEL.SUB = FEED.REC<4>þ    ITEM.SUB = FEED.REC<5>þ    READ INNER.TEMPLATE FROM F.WEB.FORMS, "rss_edit.html" ELSE INNER.TEMPLATE = "rss_edit.html missing"þ    IF action = "add" THENþ      edit_id = '<input type="text" name="new_id" value="">'þ      id = "NEW"þ    END ELSEþ      edit_id = idþ    ENDþ    CALL SWAP(INNER.TEMPLATE,'<!-- feed_id -->',id)þ    CALL SWAP(INNER.TEMPLATE,'<!-- edit_feed_id -->',edit_id)þ    CALL SWAP(INNER.TEMPLATE,'<!-- feed_name -->',FEED.NAME)þ    CALL SWAP(INNER.TEMPLATE,'<!-- feed_desc -->',FEED.DESC)þ    CALL SWAP(INNER.TEMPLATE,'<!-- sel_sub -->',SEL.SUB)þ    CALL SWAP(INNER.TEMPLATE,'<!-- item_sub -->',ITEM.SUB)þ    *þ    SEL.SUB.MSG = '' ; ITEM.SUB.MSG = ''þ    IF SEL.SUB # "" THENþ      READ TST FROM F.MD, SEL.SUB ELSEþ        SEL.SUB.MSG = 'Not Cataloged'þ      ENDþ    ENDþ    IF ITEM.SUB # "" THENþ      READ TST FROM F.MD, ITEM.SUB ELSEþ        ITEM.SUB.MSG = 'Not Cataloged'þ      ENDþ    ENDþ    CALL SWAP(INNER.TEMPLATE,'<!-- sel_sub_msg -->',SEL.SUB.MSG)þ    CALL SWAP(INNER.TEMPLATE,'<!-- item_sub_msg -->',ITEM.SUB.MSG)þ    *þ    FEED.MODE.NAMES = FEED.REC<6>þ    FEED.MODE.PARAMS = FEED.REC<7>þ    FEED.MODES = ""þ    FOR N = 1 TO DCOUNT( FEED.MODE.NAMES<1>, @VM )þ      FEED.MODES<-1> = FEED.MODE.NAMES<1,N>:',':FEED.MODE.PARAMS<1,N>þ    NEXT Nþ    CALL SWAP(FEED.MODES,@AM,CRLF)þ    CALL SWAP(INNER.TEMPLATE,'<!-- feed_modes -->',FEED.MODES)þ    HTML = INNER.TEMPLATEþ  CASE action = "delete" AND id # ""þ    DELETE F.RSS.FEEDS, idþ    GOSUB LOAD.FEEDSþ  CASE action = "save" AND id # ""þ    FEED.REC = ""þ    LOCATE "feed_name" IN CGI$VARS SETTING POS THENþ      name = CGI$VALS<POS>þ    END ELSE name = ""þ    LOCATE "feed_desc" IN CGI$VARS SETTING POS THENþ      desc = CGI$VALS<POS>þ    END ELSE desc = ""þ    CONVERT CHAR(13) TO "" IN descþ    CALL SWAP(desc,CHAR(10),'<br />')þ    LOCATE "sel_sub" IN CGI$VARS SETTING POS THENþ      sel_sub = CGI$VALS<POS>þ    END ELSE sel_sub = ""þ    LOCATE "item_sub" IN CGI$VARS SETTING POS THENþ      item_sub = CGI$VALS<POS>þ    END ELSE item_sub = ""þ    FEED.REC<1> = nameþ    FEED.REC<3> = descþ    FEED.REC<4> = sel_subþ    FEED.REC<5> = item_subþ    LOCATE "feed_modes" IN CGI$VARS SETTING POS THENþ      feed_modes = CGI$VALS<POS>þ    END ELSE feed.modes = ""þ    CONVERT CHAR(13) TO "" IN feed_modesþ    CONVERT CHAR(10) TO @AM IN feed_modesþ    FOR N = 1 TO DCOUNT( feed_modes, @AM )þ      IF TRIM( feed_modes<N> ) # "" THENþ        FEED.REC<6,N> = TRIM( FIELD( feed_modes<N>, ',',  1 ) )þ        FEED.REC<7,N> = TRIM( FIELD( feed_modes<N>, ',',  2 ) )þ      ENDþ    NEXT Nþ    IF id = "NEW" THENþ      LOCATE "new_id" IN CGI$VARS SETTING POS THENþ        id = CGI$VALS<POS>þ      ENDþ      IF id = "NEW" THEN id="NEW1"þ    ENDþ    IF id # "" THENþ      WRITE FEED.REC ON F.RSS.FEEDS, idþ    ENDþ    GOSUB LOAD.FEEDSþ  CASE 1 ; * Action = list (default)þ    GOSUB LOAD.FEEDSþEND CASEþ*þREAD ADMIN.TEMPLATE FROM F.WEB.FORMS, "rss_admin_template.html" ELSE ADMIN.TEMPLATE = "rss_admin_template.html not found."þCALL SWAP(ADMIN.TEMPLATE,'<!--CHARACTER_SET-->',SITE$CHARSET)þHEADER = '<div id="dashboard_nav">'þHEADER := '<ol class="dashboard_list">'þHEADER := '<li><a href="':CGI$PATH:'/MVDB.ADMIN?action=users">Users</a></li>'þHEADER := '<li><a href="':CGI$PATH:'/MVDB.ADMIN?action=widgets">Widgets</a></li>'þHEADER := '<li><a href="':CGI$PATH:'/MVDB.ADMIN?action=dashboards">Dashboards</a></li>'þHEADER := '<li class="db_active"><a href="':CGI$PATH:'/RSS.MAINT">RSS Feed Maintenance</a></li>'þOPEN 'MVPKG.DATA' TO F.MVPKG.DATA THENþ  HEADER := '<li><a href="':CGI$PATH:'/MVPKG.MAIN">Package Manager</a></li>'þENDþHEADER := '<li><a href="':CGI$PATH:'/MVDB.MAIN">Return to Dashboard</a></li>'þHEADER := '</ol>'þHEADER := '</div>'þCALL SWAP(ADMIN.TEMPLATE,'<!-- HEADER -->',HEADER)þFOOTER = ''þCALL SWAP(ADMIN.TEMPLATE,'<!-- FOOTER -->',FOOTER)þCALL SWAP(ADMIN.TEMPLATE,'<!-- ADMIN_MAIN -->',HTML)þCALL SWAP(ADMIN.TEMPLATE,'<!-- SITE_LOGO -->',SITE.LOGO)þCALL SWAP(ADMIN.TEMPLATE,'<!-- SITE_THEME -->',THEME.CSS)þCALL WEB.SEND(ADMIN.TEMPLATE)þSTOPþ*þLOAD.FEEDS: *þ*þHTML = '<table width="100%">'þHTML<-1> = '<tr><td colspan="6"><a href="" class="add-feed">Add a Feed</a></td></tr>'þHTML<-1> = '<tr><th>ID</th><th>Name</th><th>Feed URL</th><th>Sel SUB</th><th>Item SUB</th><th>Action</th></tr>'þþEXECUTE "SSELECT RSS.FEEDS BY NAME" CAPTURING JUNKþLOOPþ  READNEXT FID ELSE EXITþ  READ FEED.REC FROM F.RSS.FEEDS, FID ELSE CONTINUEþ  FEED.NAME = FEED.REC<1>þ  CALL RSS.XML.ENCODE(FEED.NAME,"")þ  FEED.URL = "http://":CGI$SERVER.NAME:CGI$PATH:'/RSS.MAIN?feed=':FIDþ  FEED.URL = '<a target="_blank" href="':FEED.URL:'">':FEED.URL:'</a>'þ  FEED.DESC = FEED.REC<3>þ  SEL.SUB = FEED.REC<4>þ  ITEM.SUB = FEED.REC<5>þ  URL.SEL.SUB = SEL.SUBþ  URL.ITEM.SUB = ITEM.SUBþ  CALL SUB.URL.ENCODE(URL.SEL.SUB)þ  CALL SUB.URL.ENCODE(URL.ITEM.SUB)þ  ROW = '<tr><td>':FID:'</td><td>':FEED.NAME:'</td><td>':FEED.URL:'</td><td><a href="/dbc/MVDB.WEB.ED?ed_file=RSS.BP&ed_item=':SEL.SUB:'" target="RSS.BP_':URL.SEL.SUB:'">':SEL.SUB:'</a></td><td><a href="/dbc/MVDB.WEB.ED?ed_file=RSS.BP&ed_item=':ITEM.SUB:'" target="RSS.BP_':URL.ITEM.SUB:'">':ITEM.SUB:'</a></td>'þ  ROW := \<td>\þ  IF FID = "FEEDS" THENþ    ROW := '&nbsp;'þ  END ELSEþ    FEED.MODE.NAMES = FEED.REC<6>þ    FEED.MODE.PARAMS = FEED.REC<7>þ    FEED.MODES = ""þ    FOR N = 1 TO DCOUNT( FEED.MODE.NAMES<1>, @VM )þ      FEED.MODES<-1> = FEED.MODE.NAMES<1,N>:',':FEED.MODE.PARAMS<1,N>þ    NEXT Nþ    CALL SWAP(FEED.MODES,@AM,'\n')þ    CALL SWAP(FEED.MODES,'"','\"')þ    CALL SWAP(FEED.NAME,'"','\"')þ    CALL SWAP(FEED.DESC,'"','\"')þ    CALL SWAP(SEL.SUB,'"','\"')þ    CALL SWAP(ITEM.SUB,'"','\"')þ    ROW := \<a href="javascript:editFeed('\:FID:\','\:FEED.NAME:\','\:FEED.DESC:\','\:SEL.SUB:\','RSS.BP_\:URL.SEL.SUB:\','\:ITEM.SUB:\','RSS.BP_\:URL.ITEM.SUB:\','\:FEED.MODES:\');"><img title="Edit Feed" class="icon" src="/db/icons/feed_edit.png" /></a> &nbsp;\þ    ROW := \<a onClick="return confirm('DELETE: Are you sure?');" href="/dbc/RSS.MAINT?action=delete&id=\:FID:\"><img title="Delete Feed" class="icon" src="/db/icons/feed_delete.png" /></a>\þ  ENDþ  ROW := '</td></tr>'þ  HTML<-1> = ROWþREPEATþHTML<-1> = '<tr><td colspan="6"><a href="" class="add-feed">Add a Feed</a></td></tr>'þHTML<-1> = '</table>'þRETURN0003F5VALIDATE.SESSIONþ0c2SUBROUTINE VALIDATE.SESSION( FLAG )þ*þ* Copyright (C) 2003 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written By   : Michael Schmidt, Sierra Bravoþ* Date Written : 11/7/2003þ* Description  : This program will validate the session.þ*             þ***************************************************************************þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD WWW.INCLUDEþEQU FALSE TO 0, TRUE TO 1þEQU AM TO CHAR(254), VM TO CHAR(253), SVM TO CHAR(252)þFLAG = FALSEþIF SESSION$ID # "" THENþ  READ REC FROM F.WEB.SESSION, SESSION$ID THENþ    SESSION.DATE = REC<3>    þ    SESSION.TIME = REC<4>þ    CURRENT.DATE = DATE()þ    CURRENT.TIME = TIME()þ    MAX.SECONDS = 86400; * Total number of seconds in a dayþ    MAX.DIFF.AMOUNT = SESSION$TIME.OUT * 60 ; * Get the time in secondsþ    CURRENT.TIME = ((CURRENT.DATE - SESSION.DATE) * MAX.SECONDS) + CURRENT.TIMEþ    DIFF.TIME = CURRENT.TIME - SESSION.TIMEþ    IF DIFF.TIME <= MAX.DIFF.AMOUNT THENþ      FLAG = TRUEþ    ENDþ  ENDþENDþ*þRETURNþ*0002B5WEB.FLUSHþ0c2SUBROUTINE WEB.FLUSHþ**********************************************************************þ* Copyright (C) 2003 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written By   : Michael Schmidt, Sierra Bravo Corporationþ* Date Written : 11/06/03þ* Description  : This program sets the calls SET.BUFFER(FALSE) then þ*                calls WEB.SEND("") if the SESSION$OUTPUT variablesþ*                length is greater then 0.þ*              þ**********************************************************************þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD WWW.INCLUDEþEQU FALSE TO 0, TRUE TO 1þ*þCALL SET.BUFFER(FALSE)þ*IF LEN(SESSION$OUTBUF) > 0 THENþ  CALL WEB.SEND("")þ*ENDþ*þRETURNþ*0006C9SET.BUFFERþ0c2SUBROUTINE SET.BUFFER( B.VAL )þ**********************************************************************þ* Copyright (C) 2003 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written By   : Michael Schmidt, Sierra Bravo Corporationþ* Date Written : 11/06/03þ* Updated by: Peter Schellenbach, Zumasysþ* Date Updated : 11/30/17þ* Description  : This program sets the SESSION$OUTBUF.FLAG and optionallyþ*                SESSION$OUTBUF.SIZE variables to enable or disableþ*                buffering of output generated by WSEND. If bufferingþ*                is enabled, be sure to call WFLUSH to flush the finalþ*                buffer content.þ*þ*                B.VAL = 0 : disable bufferingþ*                B.VAL = 1 : enable buffering using current buffer sizeþ*                B.VAL > 1 : enable buffering and set buffer size toþ*                            this value.þ*þ*                By default buffering is disabled. If buffering will beþ*                used, call WSETBUFFER before the first call to WSEND.þ*                If the size of buffer content ever exceeds the bufferþ*                size, the buffer is flushed to the client along withþ*                any headers, and buffering is disabled.þ*              þ**********************************************************************þINCLUDE WBPD WWW.INCLUDEþEQU FALSE TO 0, TRUE TO 1þ*þIF NUM(B.VAL) AND B.VAL > 0 AND B.VAL <= 1000000 THENþ  * Set buffer size and enable bufferingþ  SESSION$OUTBUF.SIZE = B.VALþ  SESSION$OUTBUF.FLAG = TRUEþEND ELSEþ  * Enable or disable bufferingþ  IF B.VAL # TRUE AND B.VAL # FALSE THENþ    IF B.VAL = "" THENþ      B.VAL = FALSEþ    END ELSEþ      B.VAL = TRUEþ    ENDþ  ENDþ  SESSION$OUTBUF.FLAG = B.VALþENDþRETURNþEND000296SET.CONTENT.TYPEþ0c2SUBROUTINE SET.CONTENT.TYPE( C.TYPE )þ**********************************************************************þ* Copyright (C) 2003 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written By   : Michael Schmidt, Sierra Bravo Corporationþ* Date Written : 10/25/03þ* Description  : This program sets the SESSION$CONTENT.TYPE variable.þ*              þ**********************************************************************þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD WWW.INCLUDEþ*þEQU FALSE TO 0, TRUE TO 1þEQU AM TO CHAR(254), VM TO CHAR(253), SVM TO CHAR(252)þ*þIF C.TYPE = "" THENþ  C.TYPE = "text/html"þENDþ*þSESSION$CONTENT.TYPE = C.TYPEþ*þRETURNþ*000DFEINIT.WWWþ0c2**********************************************************************þ* Copyright (C) 2004 Sierra Bravo Corporation, All Rights Reservedþ*þ* This software is the property of Sierra Bravo Corporation and mayþ* not be duplicated or modified without the express written permissionþ* of Sierra Bravo Corporation.þ*þ* Written By   : Michael Derheim, Sierra Bravo Corporationþ* Description  : Initialize the standard WWW includes. Parse cookies, etc.þ*þ* Modified By: Mike Street, Zumasys for UniData compatibilityþ* Date: 07/22/2015þ* Description: Changed PROCREAD to use @SENTENCE in the ELSE clauseþ*þþ**********************************************************************þ**********************************************************************þ*                                                                    *  þ* 10-25-16 Peter Schellenbach                                        *þ*                                                                    *  þ***       THIS PROGRAM IS OBSOLETE AND IS NO LONGER USED! ***        *þ*                                                                    *  þ**********************************************************************þ**********************************************************************þ*þ*#MAKE# RL $OPTIONS D3þ*þINCLUDE WBPD WWW.INCLUDEþ*þOPEN '','WEB.SESSION' TO F.WEB.SESSION ELSE STOP 201, 'WEB.SESSION'þ*þMAT WWW.INFO = ""þ*þ*MS 07-22-15*PROCREAD TCL.LINE ELSE TCL.LINE = ''þPROCREAD TCL.LINE ELSE TCL.LINE = @SENTENCE ; *MS 07-22-15*þ*þCGI$UNIQUE.ID = FIELD( TCL.LINE, ' ', 2)þ*þ* Populate the vars and valsþ*þCALL WDB.VARS(VARS,VALS)þCGI$VARS = VARSþCGI$VALS = VALSþ*þLOCATE "APPSVR_ID" IN CGI$VARS SETTING POS THENþ  CGI$APPSVR.ID = CGI$VALS<POS>þ  CGI$VARS = DELETE( CGI$VARS, POS, 0, 0 )þ  CGI$VALS = DELETE( CGI$VALS, POS, 0, 0 )þEND ELSEþ  CGI$APPSVR.ID = ""þENDþ*þ* How many active users are online?þ*þSELECT F.WEB.SESSIONþUSER.COUNT = 0þLOOPþ  READNEXT WSID ELSE EXITþ  READ SREC FROM F.WEB.SESSION, WSID ELSE CONTINUEþ  LOCATE "userid" IN SREC<1> SETTING UPOS THEN USER.COUNT += 1þREPEATþPRINT "Client-Count: ":USER.COUNTþ*þ* Load the Cookie variables and valuiesþLOCATE 'HTTP_COOKIE' IN VARS SETTING POS THENþ  CSTRING = VALS<POS>þEND ELSE CSTRING = ''þ*þCONVERT ';' TO @AM IN CSTRINGþNUM.COOKIES = DCOUNT(CSTRING, @AM)þFOR Y = 1 TO NUM.COOKIESþ  CGI$CVARS<Y> = TRIM(FIELD(CSTRING<Y>,'=',1))þ  CGI$CVALS<Y> = CSTRING<Y>[(1+INDEX(CSTRING<Y>,'=',1)),99999]þNEXT Yþ* Load the session ID if there is oneþCALL GET.SESSION.ID( SESSION$ID, VARS, VALS )þIF (SESSION$ID = '') THENþ  CALL CREATE.SESSION(SESSION$ID)þ  CALL SET.COOKIE("sessionid=":SESSION$ID)þENDþSESSION$GLOBAL.DEBUG = 0þSESSION$DEBUG.TEXT = ''þ* Clear the out buffer and set some generic varsþSESSION$CONTENT.SENT = 0þOPEN '','WEB.SESSION' TO F.WEB.SESSION ELSE STOP 201, "WEB.SESSION"þOPEN '','WEB.FORMS' TO F.WEB.FORMS ELSE STOP 201, 'WEB.FORMS'þ*þLOCATE "HTTP_HOST" IN CGI$VARS SETTING POS THENþ  CGI$SERVER.NAME = CGI$VALS<POS>þEND ELSE CGI$SERVER.NAME = ""þLOCATE "SERVER_PORT" IN CGI$VARS SETTING POS THENþ  CGI$SERVER.PORT = CGI$VALS<POS>þEND ELSE CGI$SERVER.PORT = ""þIF CGI$SERVER.PORT = "" OR CGI$SERVER.PORT = "0" THENþ  OPEN '','MVDB.CONTROL' TO F.MVDB.CONTROL THENþ    READV TCP.PORT FROM F.MVDB.CONTROL, 'MVDB.SETTINGS', 4 ELSE TCP.PORT = ""þ  ENDþ  CGI$SERVER.PORT = TCP.PORTþENDþIF CGI$SERVER.PORT # "" THEN CGI$SERVER.NAME := ":":CGI$SERVER.PORTþLOCATE "SIMPLEWEB_HANDLER" IN CGI$VARS SETTING POS THENþ  CGI$PATH = CGI$VALS<POS>þ  IF CGI$PATH[1,1] # "/" THEN CGI$PATH = "/":CGI$PATHþEND ELSE CGI$PATH = "/dbc"þSTOPþ*þEND005BABMV.DEBUGþ0c2* WDEBUGþ*þ* Debug REST Servicesþ* Copyright (c) 2017 Zumasys Inc.þ* Rewritten by Peter Schellenbach, 10/18/2017þ*þ* Based on original version:þ*  Copyright (C) 2007 Sierra Bravo Corporation, All Rights Reservedþ*  Written by: Luke Bucklin, Sierra Bravoþ*  Date: Sometime, 2006-ishþ*þINCLUDE WBPD WWW.INCLUDEþINCLUDE WBPD FI.WDB.DEBUGþ*þCLR.SCR = @(-1)þCLR.EOS = @(-3)þMAX.LINES = SYSTEM(3) - 4þMAX.COLS = SYSTEM(2) - 1þIF MAX.LINES <= 0 OR CLR.SCR = '' OR CLR.EOS = '' THENþ  MAX.LINES = 20þ  CLR.SCR = ''þ  CLR.EOS = ''þ  PRMPT.LINE = CHAR(13):CHAR(10)þEND ELSEþ  PRMPT.LINE = @(0, MAX.LINES + 2):CLR.EOSþENDþPROMPT ''þ*þPRINT CLR.SCR:þPRINTþPRINT 'WDEBUG Web Request Degug Tool'þPRINTþPRINT 'The WDEBUG tool allows you to inspect, modify and re-run web requests.'þPRINT 'Whenever a request for a debuggable resource is processed by WDB.INIT,'þPRINT 'a debug record for the request is added to the WDB.DEBUG file. WDEBUG'þPRINT 'allows you to select a debug record, view the request details, edit the'þPRINT 'request variables, re-run the request and view the response.'þPRINTþPRINT 'To debug web requests for a resource, set attribute 7 of the WDB.RESOURCE'þPRINT 'record for the resource to 1, then issue the web request from the client'þPRINT 'browser or other agent. WDEBUG will show a list of recent web requests to'þPRINT 'select from.'þPRINTþPRINT 'Start WDEBUG with an active select list if you need to use special criteria'þPRINT 'to select the record(s) you need to debug.'þPRINTþPRINT 'Press <enter> to continue':þINPUT ANSþ*þOPEN 'WDB.DEBUG' TO F.WDB.DEBUG ELSEþ  PRINT 'The WDB.DEBUG data file is required to use WDEBUG. Default installations'þ  PRINT 'only create the dictionary for this file. Please create the data section'þ  PRINT 'to use WDEBUG: CREATE-FILE DATA WDB.DEBUG 101.'þ  STOPþENDþ*þSESSION.FLAG = 0þOPEN 'WEB.SESSION' TO F.WEB.SESSION THEN SESSION.FLAG = 1 ;* can restore session when running debug reqestþ*þEDITOR = ''þIDS = ''þNUM.IDS = 0þIF SYSTEM(11) THENþ  LOOPþ    READNEXT ID ELSE EXITþ    READV X FROM F.WDB.DEBUG, ID, 1 THENþ      IDS<-1> = IDþ      NUM.IDS += 1þ    END ELSEþ      PRINT ID:' not found in WDB.DEBUG!'þ    ENDþ  REPEATþENDþUSE.SUPPLIED.LIST = (NUM.IDS > 0)þ*þLOOPþ  IF NOT(USE.SUPPLIED.LIST) THENþ* Select available WDB.DEBUG itemsþ    CMND = 'SSELECT WDB.DEBUG WITH TYPE = "C" "R" BY-DSND DATE BY-DSND TIME'þ    EXECUTE CMND CAPTURING RESULTþ    IF SYSTEM(11) = 0 THENþ      PRINT "No items found."þ      STOPþ    ENDþ    IDS = ''þ    NUM.IDS = 0þ    LOOPþ      READNEXT ID ELSE EXITþ      IDS<-1> = IDþ      NUM.IDS += 1þ    REPEATþ  ENDþ*þ  TOP = 0þ  LOOPþ* Display page of itemsþ    PRINT CLR.SCR:þ    PRINT "Ln Date. Time.... Path................ Remote Address...... Request ID........."þ    FOR CNTR = 1 TO MAX.LINES UNTIL CNTR + TOP > NUM.IDSþ      DBG.ID = IDS<CNTR>þ      READ DBGREC FROM F.WDB.DEBUG, DBG.ID ELSE CONTINUEþ      PATH.INFO = DBGREC<WDBG_PATH>þ      IF PATH.INFO = '' THEN PATH.INFO = DBGREC<WDBG_HANDLER>:'/':DBGREC<WDBG_RESOURCE>þ      PRINT CNTR "R#2 ":þ      PRINT OCONV(DBGREC<WDBG_DATE>, 'D0-') "L#5 ":þ      PRINT OCONV(DBGREC<WDBG_TIME>, 'MTS') "L#8 ":þ      PRINT PATH.INFO "L#20 ":þ      PRINT DBGREC<WDBG_REMOTE_ADDR> "L#20 ":þ      PRINT DBGREC<WDBG_REQUEST_ID>[1,20]þ    NEXT CNTRþ    IF TOP + MAX.LINES > NUM.IDS THEN BOT = NUM.IDS ELSE BOT = TOP + MAX.LINESþ    PRINT "Showing items ":(TOP + 1):"-":BOT:" of ":NUM.IDSþ*þ    LOOPþ      PRINT PRMPT.LINE:"Command: (Q)uit (R)efresh (C)lear (N)ext (P)rev (##) Line to debug: ":þ      INPUT COMMANDþ      IF COMMAND MATCHES '1N0N' THENþ        IF COMMAND >= 1 AND COMMAND <= MAX.LINES AND COMMAND + TOP <= NUM.IDS THENþ          DBG.ID = IDS<COMMAND + TOP>þ          GOSUB debug.requestþ        ENDþ        COMMAND = ''þ      END ELSEþ        COMMAND = OCONV(COMMAND[1,1], 'MCU')þ        IF COMMAND = '' THEN COMMAND = 'N'þ        IF INDEX('ERCNPQ', COMMAND, 1) = 0 THEN COMMAND = ''þ      ENDþ    WHILE COMMAND = '' DO REPEATþ*þ    BEGIN CASEþ      CASE COMMAND = 'N'þ        IF TOP + MAX.LINES < NUM.IDS THEN TOP += MAX.LINESþ      CASE COMMAND = 'P'þ        IF TOP - MAX.LINES >= 0 THEN TOP -= MAX.LINESþ    END CASEþ  WHILE COMMAND = 'N' OR COMMAND = 'P' DO REPEATþ*þUNTIL COMMAND = 'Q' DOþ  BEGIN CASEþ    CASE COMMAND = 'R' ; NULLþ    CASE COMMAND = 'C'þ      EXECUTE 'SELECT WDB.DEBUG WITH TYPE = "C" "R"'þ      PRINT 'Are you sure you want to clear these items from the WDB.DEBUG file? ':þ      INPUT ANSþ      ANS = OCONV(ANS[1,1],'MCU')þ      IF ANS = 'Y' THENþ        IF SYSTEM(11) THENþ          LOOPþ            READNEXT ID ELSE EXITþ            DELETE F.WDB.DEBUG, IDþ          REPEATþ        ENDþ      END ELSEþ        CLEARSELECTþ      ENDþ  END CASEþREPEATþSTOPþ*þ*----------þdebug.request:þ*----------þ*þREAD DBGREC FROM F.WDB.DEBUG, DBG.ID ELSEþ  PRINT "The selected item '":DBG.ID:"' is not available!"þ  PRINTþ  PRINT 'Press <enter> to continue':þ  INPUT ANSþ  RETURNþENDþEDIT.ID = 'D':DBG.ID[2, LEN(DBG.ID)]þLOOPþ  PRINT PRMPT.LINE:"Debugging ":DBG.ID[1,28]:" - command: (Q)uit (V)iew (E)dit (R)un: ":þ  INPUT COMMANDþ  COMMAND = OCONV(COMMAND[1,1], 'MCU')þUNTIL COMMAND = 'Q' DOþ  BEGIN CASEþ    CASE COMMAND = 'V'þ      GOSUB view.requestþ    CASE COMMAND = 'E'þ      GOSUB edit.requestþ    CASE COMMAND = 'R'þ      GOSUB run.requestþ  END CASEþREPEATþRETURNþ*þ*----------þview.request:þ*----------þ*þIF DBGREC = '' THENþ  PRINT 'No debug info is available for this request!'þ  PRINTþ  PRINT 'Press <enter> to continue':þ  INPUT ANSþ  RETURNþENDþGOSUB to.editþNUM.LNS = DCOUNT(EDIT.REC, @AM)þI = 1þLOOP WHILE I <= NUM.LNS DOþ  X = EDIT.REC<I>þ  IF LEN(X) > MAX.COLS THENþ    *UD* X = FOLD(X, MAX.COLS)þ    FOLD.STRING = X; GOSUB fold.string; X = FOLD.STRING ; *UD*þ    EDIT.REC<I> = Xþ    N = COUNT(X, @AM)þ    NUM.LNS += Nþ    I += Nþ  ENDþ  I += 1þREPEATþIF NUM.LNS = 0 THEN NUM.LNS = 1þNUM.PGS = INT((NUM.LNS - 1) / MAX.LINES) + 1þCUR.PG = 1þLOOPþ  PG.TOP = (CUR.PG - 1) * MAX.LINESþ  IF PG.TOP + MAX.LINES > NUM.LNS THEN LPP = NUM.LNS - PG.TOP ELSE LPP = MAX.LINESþ  PRINT CLR.SCR:þ  PRINT 'Page ':CUR.PG:' of ':NUM.PGS:SPACE(10):DBG.IDþ  PRINTþ  FOR I = 1 TO LPPþ    PRINT EDIT.REC<I + PG.TOP>þ  NEXT Iþ  PRINT PRMPT.LINE:'Command: (Q)uit (N)ext (P)rev (##) Goto page ':þ  INPUT COMMANDþ  IF COMMAND MATCHES '1N0N' THENþ    IF COMMAND >= 1 AND COMMAND <= NUM.PGS THEN CUR.PG = COMMANDþ  END ELSEþ    COMMAND = OCONV(COMMAND[1,1], 'MCU')þ  ENDþUNTIL COMMAND = 'Q' DOþ  BEGIN CASEþ    CASE COMMAND = 'N' OR COMMAND = ''þ      IF CUR.PG < NUM.PGS THEN CUR.PG = CUR.PG + 1þ    CASE COMMAND = 'P'þ      IF CUR.PG > 1 THEN CUR.PG = CUR.PG - 1þ  END CASEþREPEATþRETURNþ*þ*----------þedit.request:þ*----------þ*þIF EDITOR = '' THEN GOSUB choose.editorþIF EDITOR <> '' THENþ  EDIT.ID = 'D':DBG.IDþ  GOSUB to.editþ  WRITE EDIT.REC ON F.WDB.DEBUG, EDIT.IDþ  CMND = EDITOR:' WDB.DEBUG ':EDIT.IDþ  EXECUTE CMNDþ  READ EDIT.REC FROM F.WDB.DEBUG, EDIT.ID ELSE NULLþ  DELETE F.WDB.DEBUG, EDIT.IDþ  GOSUB from.editþENDþRETURNþ*þ*----------þrun.request:þ*----------þ*þIF DBGREC = '' THENþ  PRINT 'No debug info is available for this request!'þ  PRINTþ  PRINT 'Press <enter> to continue':þ  INPUT ANSþ  RETURNþENDþ*þHANDLER.NAME = DBGREC<WDBG_HANDLER>þRESOURCE.NAME = DBGREC<WDBG_RESOURCE>þ* Reconstruct query stringþQSTR = ''þQSEP = ''þ* headers and server variablesþN = DCOUNT(DBGREC<WDBG_HEADER_VARS>, @VM)þFOR I = 1 TO Nþ  HDR.VAR = DBGREC<WDBG_HEADER_VARS, I>þ  URLENCODE.STRING = DBGREC<WDBG_HEADER_VALS, I>þ  GOSUB url.encodeþ  QSTR := QSEP:HDR.VAR:'=':NEW.STRINGþ  QSEP = '&'þNEXT Iþ* form variablesþN = DCOUNT(DBGREC<WDBG_CGI_VARS>, @VM)þFOR I = 1 TO Nþ  HDR.VAR = DBGREC<WDBG_CGI_VARS, I>þ  URLENCODE.STRING = DBGREC<WDBG_CGI_VALS, I>þ  GOSUB url.encodeþ  QSTR := QSEP:HDR.VAR:'=':NEW.STRINGþ  QSEP = '&'þNEXT Iþ* bodyþTHE.BODY = DBGREC<WDBG_BODY>þIF THE.BODY <> '' THENþ  URLENCODE.STRING = CHANGE(THE.BODY, @VM, CHAR(10))þ  GOSUB url.encodeþ  QSTR := QSEP:'__body__=':NEW.STRINGþENDþ* restore session stateþIF SESSION.FLAG THENþ  SESSION.ID = DBGREC<WDBG_SESSION_ID>þ  IF SESSION.ID <> '' THENþ    SESSION.REC = ''þ    SESSION.REC<1> = DBGREC<WDBG_SESSION_VARS>þ    SESSION.REC<2> = DBGREC<WDBG_SESSION_VALS>þ    SESSION.REC<3> = DBGREC<WDBG_SESSION_DATE>þ    SESSION.REC<4> = DBGREC<WDBG_SESSION_TIME>þ    WRITE SESSION.REC ON F.WEB.SESSION, SESSION.IDþ  ENDþENDþ* break the query string into 1000 byte chunksþN = INT((LEN(QSTR) - 1) / 1000) + 1þ* build the command lineþRUN.ID = DBGREC<WDBG_REQUEST_ID>þCMND = 'WDB.INIT ':HANDLER.NAME:'/':RESOURCE.NAME:' ':RUN.ID:'-1-':N:' %% _WDEBUG_MODE_'þ*þ* run the commandþPRINTþPRINT 'Executing the request: ':CMNDþPRINTþMAT WWW.INFO = ""þEXECSTART = SYSTEM(12)þ* send query string as stacked inputþFOR I = 1 TO Nþ  DATA QSTR[((I - 1) * 1000) + 1, 1000]þNEXT IþEXECUTE CMND CAPTURING RESPONSEþEXECDUR = SYSTEM(12) - EXECSTARTþPRINT 'Request complete. Press <enter> to parse results':þINPUT ANSþ*þ* update the request runtimeþDBGREC<WDBG_DATE> = DATE()þDBGREC<WDBG_TIME> = TIME()þDBGREC<WDBG_DURATION> = EXECDURþ* process the responseþLINT.BEFORE = ''þLINT.AFTER = ''þWARN = ''þERR = ''þ* Gather lint from before the start tag and after the complete tagþDBGREC<WDBG_WARNING> = '' ;* WarningsþDBGREC<WDBG_ERROR> = '' ;* ErrorsþDBGREC<WDBG_LINT> = '' ;* LintþIF RESPONSE<1> = "700 WDB-START" THENþ  RESPONSE = DELETE(RESPONSE, 1)þEND ELSEþ  TAG = @AM:"700 WDB-START":@AMþ  TAG.POS = INDEX(RESPONSE, TAG, 1)þ  IF TAG.POS = 0 THENþ    WARN = '700 WDB-START tag is missing from response'þ    LINT.BEFORE = RESPONSEþ    RESPONSE = ''þ  END ELSEþ    IF TAG.POS >= 1 THENþ      LINT.BEFORE = RESPONSE[1, TAG.POS - 1]þ      RESPONSE = RESPONSE[TAG.POS + LEN(TAG), LEN(RESPONSE)]þ    ENDþ  ENDþENDþN = DCOUNT(RESPONSE, @AM)þIF RESPONSE<N> = "800 WDB-COMPLETE" THENþ  RESPONSE = DELETE(RESPONSE, N)þEND ELSEþ  TAG = @AM:"800 WDB-COMPLETE":@AMþ  TAG.POS = INDEX(RESPONSE, TAG, 1)þ  IF TAG.POS = 0 THENþ    WARN = '800 WDB-COMPLETE tag missing from response!'þ  END ELSEþ    LINT.AFTER = RESPONSE[TAG.POS + LEN(TAG), LEN(RESPONSE)]þ    RESPONSE = RESPONSE[1, TAG.POS - 1]þ  ENDþENDþ* Clean up lintþIF TRIM(CHANGE(LINT.BEFORE, @AM, '')) = '' THEN LINT.BEFORE = ''þIF TRIM(CHANGE(LINT.AFTER, @AM, '')) = '' THEN LINT.AFTER = ''þIF LINT.BEFORE <> '' OR LINT.AFTER <> '' THENþ  LINT = LINT.BEFOREþ  IF LINT.BEFORE <> '' AND LINT.AFTER <> '' THEN LINT := @AM:'...':@AMþ  LINT := LINT.AFTERþ  DBGREC<WDBG_LINT> = LOWER(LINT)þENDþ* Parse the response headersþDBGREC<WDBG_RESPONSE_VARS> = ''þDBGREC<WDBG_RESPONSE_VALS> = ''þDBGREC<WDBG_RESPONSE_CONTENT> = ''þNUM.VARS = 0þSTATUS.CODE = ''þEOH = INDEX(RESPONSE, @AM:@AM, 1) ;* headers end at first blank line in responseþIF EOH = 0 THEN EOH = LEN(RESPONSE) + 1þN = DCOUNT(RESPONSE[1, EOH - 1], @AM)þFOR I = 1 TO Nþ  HDR.LINE = RESPONSE<I>þ  IF HDR.LINE[1,10] = '500 ERROR ' THENþ    ERR = HDR.LINE[11, LEN(HDR.LINE)]þ    IF STATUS.CODE = '' THEN STATUS.CODE = 500þ  END ELSEþ    HDR.VAR = FIELD(HDR.LINE, ':', 1)þ    HDR.VAL = TRIMF(HDR.LINE[COL2() + 1, LEN(HDR.LINE)])þ    M = LEN(HDR.VAR)þ    FOR J = 1 TO Mþ      IF NOT(HDR.VAR[J,1] MATCHES '1A') AND HDR.VAR[J,1] <> '-' THENþ        HDR.VAR = ''þ        EXITþ      ENDþ    NEXT Jþ    IF HDR.LINE[LEN(HDR.VAR) + 1, 1] <> ':' THEN HDR.VAR = ''þ    IF HDR.VAR = '' THENþ      NUM.VARS += 1þ      DBGREC<WDBG_RESPONSE_VARS, NUM.VARS> = '_BAD_'þ      DBGREC<WDBG_RESPONSE_VALS, NUM.VARS> = HDR.LINE ;* invalid header line!þ    END ELSEþ      IF HDR.VAR = 'X-MVDB-STATUS' THENþ        STATUS.CODE = HDR.VALþ      END ELSEþ        NUM.VARS += 1þ        DBGREC<WDBG_RESPONSE_VARS, NUM.VARS> = HDR.VARþ        DBGREC<WDBG_RESPONSE_VALS, NUM.VARS> = HDR.VALþ      ENDþ    ENDþ  ENDþNEXT IþIF STATUS.CODE = '' THEN STATUS.CODE = 200þDBGREC<WDBG_STATUS> = STATUS.CODEþ* save response contentþIF EOH + 2 <= LEN(RESPONSE) THENþ  DBGREC<WDBG_RESPONSE_CONTENT> = LOWER(RESPONSE[EOH + 2, LEN(RESPONSE)])þENDþDBGREC<WDBG_WARNING> = WARNþDBGREC<WDBG_ERROR> = ERRþRETURNþ*þ*----------þto.edit:þ*----------þ*þEDIT.REC = ''þEDIT.REC<-1> = '[INFO] (do not edit this section)'þEDIT.REC<-1> = 'Date            = ':OCONV(DBGREC<WDBG_DATE>,'D4')þEDIT.REC<-1> = 'Time            = ':OCONV(DBGREC<WDBG_TIME>,'MTS')þEDIT.REC<-1> = 'Duration        = ':DBGREC<WDBG_DURATION>þEDIT.REC<-1> = 'Port            = ':DBGREC<WDBG_PORT>þEDIT.REC<-1> = 'Handler         = ':DBGREC<WDBG_HANDLER>þEDIT.REC<-1> = 'Resource        = ':DBGREC<WDBG_RESOURCE>þEDIT.REC<-1> = 'Controller      = ':DBGREC<WDBG_CONTROLLER>þEDIT.REC<-1> = 'Program         = ':DBGREC<WDBG_PROGRAM>þEDIT.REC<-1> = 'RequestID       = ':DBGREC<WDBG_REQUEST_ID>þEDIT.REC<-1> = 'Method          = ':DBGREC<WDBG_METHOD>þEDIT.REC<-1> = 'Path            = ':DBGREC<WDBG_PATH>þEDIT.REC<-1> = 'RemoteAddr      = ':DBGREC<WDBG_REMOTE_ADDR>þEDIT.REC<-1> = 'Status          = ':DBGREC<WDBG_STATUS>þIF DBGREC<WDBG_WARNING> <> '' THENþ  EDIT.REC<-1> = 'WARNING: ':DBGREC<WDBG_WARNING>þENDþIF DBGREC<WDBG_ERROR> <> '' THENþ  EDIT.REC<-1> = 'ERROR: ':DBGREC<WDBG_ERROR>þENDþIF DBGREC<WDBG_LINT> <> '' THENþ  EDIT.REC<-1> = 'LINT:':@AM:RAISE(DBGREC<WDBG_LINT>)þENDþ* Request headers and server variablesþEDIT.REC<-1> = @AM:'[HEADERS]'þN = DCOUNT(DBGREC<WDBG_HEADER_VARS>, @VM)þFOR I = 1 TO Nþ  HDR.VAR = DBGREC<WDBG_HEADER_VARS, I>þ  HDR.VAL = DBGREC<WDBG_HEADER_VALS, I>þ  EDIT.REC<-1> = HDR.VAR:SPACE(16-LEN(HDR.VAR)):'= ':HDR.VALþNEXT Iþ* Query string variablesþN = DCOUNT(DBGREC<WDBG_CGI_VARS>, @VM)þIF N > 0 THENþ  EDIT.REC<-1> = @AM:'[VARS]'þ  FOR I = 1 TO Nþ    CGI.VAR = DBGREC<WDBG_CGI_VARS, I>þ    CGI.VAL = DBGREC<WDBG_CGI_VALS, I>þ    EDIT.REC<-1> = CGI.VAR:SPACE(16-LEN(CGI.VAR)):'= ':CGI.VALþ  NEXT IþENDþ* CookiesþLOCATE 'HTTP_COOKIE' IN DBGREC<WDBG_HEADER_VARS> SETTING POS THENþ  CSTRING = DBGREC<WDBG_HEADER_VALS, POS>þEND ELSE CSTRING = ''þCONVERT ';' TO @AM IN CSTRINGþN = DCOUNT(CSTRING, @AM)þIF N > 0 THENþ  EDIT.REC<-1> = @AM:'[COOKIES]'þ  FOR I = 1 TO Nþ    COOKIE.VAR = TRIM(FIELD(CSTRING<I>, '=', 1))þ    COOKIE.VAL = CSTRING<I>[COL2() + 1, 99999]þ    EDIT.REC<-1> = COOKIE.VAR:SPACE(16-LEN(COOKIE.VAR)):'= ':COOKIE.VALþ  NEXT IþENDþ* REST parametersþLOCATE 'PATH_INFO' IN DBGREC<WDBG_HEADER_VARS> SETTING POS THENþ  PATH = DBGREC<WDBG_HEADER_VALS, POS>þEND ELSE PATH = ''þIF PATH[1,1] = '/' THEN PATH = PATH[2,9999]þN = DCOUNT(PATH, '/')þIF N > 0 THENþ  EDIT.REC<-1> = @AM:'[PARAMS]'þ  FOR I = 3 TO Nþ    PARAM.VAR = 'Param[':(I-2):']'þ    EDIT.REC<-1> = PARAM.VAR:SPACE(16-LEN(PARAM.VAR)):'= ':FIELD(PATH, '/', I)þ  NEXT IþENDþ* Session variablesþIF SESSION.FLAG THENþ  SESSION.ID = DBGREC<WDBG_SESSION_ID>þ  IF SESSION.ID <> '' THENþ    N = DCOUNT(DBGREC<WDBG_SESSION_VARS>, @VM)þ    IF N > 0 THENþ      EDIT.REC<-1> = @AM:'[SESSION]'þ      EDIT.REC<-1> = '_SessionID      = ':SESSION.IDþ      IF DBGREC<WDBG_SESSION_DATE> <> '' THEN EDIT.REC<-1> = '_Date           = ':OCONV(DBGREC<20>, 'D4')þ      IF DBGREC<WDBG_SESSION_TIME> <> '' THEN EDIT.REC<-1> = '_Time           = ':OCONV(DBGREC<21>, 'MTS')þ      FOR I = 1 TO Nþ        SESSION.VAR = DBGREC<WDBG_SESSION_VARS, I>þ        EDIT.REC<-1> = SESSION.VAR:SPACE(16-LEN(SESSION.VAR)):'= ':DBGREC<WDBG_SESSION_VALS, I>þ      NEXT Iþ    ENDþ  ENDþENDþ* Request bodyþTHE.BODY = DBGREC<WDBG_BODY>þIF THE.BODY <> '' THENþ  EDIT.REC<-1> = @AM:'[BODY]':@AM:RAISE(THE.BODY)þENDþ* Response headersþN = DCOUNT(DBGREC<WDBG_RESPONSE_VARS>, @VM)þIF N > 0 THENþ  EDIT.REC<-1> = @AM:'[RESPONSE_HEADERS]'þ  FOR I = 1 TO Nþ    HDR.VAR = DBGREC<WDBG_RESPONSE_VARS, I>þ    HDR.VAL = DBGREC<WDBG_RESPONSE_VALS, I>þ    EDIT.REC<-1> = HDR.VAR:SPACE(16-LEN(HDR.VAR)):'= ':HDR.VALþ  NEXT IþENDþ* Response contentþTHE.CONTENT = DBGREC<WDBG_RESPONSE_CONTENT>þIF THE.CONTENT <> '' THENþ  EDIT.REC<-1> = @AM:'[RESPONSE_CONTENT]':@AM:RAISE(THE.CONTENT)þENDþ*þRETURNþ*þ*----------þfrom.edit:þ*----------þ*þSESSION.ID = ''þHANDLER.NAME = DBGREC<WDBG_HANDLER>þRESOURCE.NAME = DBGREC<WDBG_RESOURCE>þ* If COOKIES section exists, rebuild HTTP_COOKIE headerþCOOKIES = ''þSECT = 'COOKIES'þGOSUB find.sectionþIF SECT.START > 0 THENþ  FOR I = SECT.START + 1 TO SECT.ENDþ    COOKIE = EDIT.REC<I>þ    IF COOKIE <> '' THENþ      COOKIE.NAME = TRIM(FIELD(COOKIE, '=', 1))þ      COOKIE.VAL = TRIMF(COOKIE[COL2() + 1, LEN(COOKIE)])þ      COOKIES := COOKIE.NAME:'=':COOKIE.VAL:';'þ      IF OCONV(COOKIE.NAME, 'MCU') = 'SESSIONID' THEN SESSION.ID = COOKIE.VALþ    ENDþ  NEXT Iþ  IF COOKIES[LEN(COOKIES), 1] = ';' THEN COOKIES = COOKIES[1, LEN(COOKIES) - 1]þENDþ* If PARAMS section exists, rebuild PATH_INFO headerþPARAMS = ''þSECT = 'PARAMS'þGOSUB find.sectionþIF SECT.START > 0 THENþ  PNUM = 1þ  FOR I = SECT.START + 1 TO SECT.ENDþ    PARAM = EDIT.REC<I>þ    IF PARAM <> '' THENþ      PARAM.NAME = TRIM(OCONV(FIELD(PARAM, '=', 1), 'MCU'))þ      PARAM.VAL = TRIMF(PARAM[COL2() + 1, LEN(PARAM)])þ      IF PARAM.NAME <> 'PARAM[':PNUM:']' THEN EXITþ      PARAMS := '/':PARAM.VALþ      PNUM += 1þ    ENDþ  NEXT Iþ  IF PARAMS <> '' THEN PARAMS = '/':HANDLER.NAME:'/':RESOURCE.NAME:PARAMS ;* handler & resource come before paramsþENDþ* Get headers and server variablesþDBGREC<WDBG_HEADER_VARS> = ''þDBGREC<WDBG_HEADER_VALS> = ''þNUM.VARS = 0þSECT = 'HEADERS'þGOSUB find.sectionþIF SECT.START > 0 THENþ  FOR I = SECT.START + 1 TO SECT.ENDþ    VAR.LINE = EDIT.REC<I>þ    IF VAR.LINE <> '' THENþ      VAR.NAME = TRIM(FIELD(VAR.LINE, '=', 1))þ      VAR.VAL = TRIMF(VAR.LINE[COL2() + 1, LEN(VAR.LINE)])þ* check for special headersþ      BEGIN CASEþ        CASE OCONV(VAR.NAME, 'MCU') = 'HTTP_COOKIE'þ          IF COOKIES <> '' THENþ            VAR.VAL = COOKIESþ          ENDþ        CASE OCONV(VAR.NAME, 'MCU') = 'PATH_INFO'þ          IF PARAMS <> '' THENþ            VAR.VAL = PARAMSþ          ENDþ          IF VAR.VAL[1,1] <> '/' THEN VAR.VAL = '/' : VAR.VALþ          IF COUNT(VAR.VAL, '/') >= 2 THENþ            HANDLER.NAME = FIELD(VAR.VAL, '/', 2)þ            RESOURCE.NAME = FIELD(VAR.VAL, '/', 3)þ          ENDþ          DBGREC<WDBG_PATH> = VAR.VALþ        CASE OCONV(VAR.NAME, 'MCU') = 'REQUEST_METHOD'þ          DBGREC<WDBG_METHOD> = VAR.VAL      þ        CASE OCONV(VAR.NAME, 'MCU') = 'REMOTE_ADDR'þ          DBGREC<WDBG_REMOTE_ADDR> = VAR.VALþ      END CASEþ      NUM.VARS += 1þ      DBGREC<WDBG_HEADER_VARS, NUM.VARS> = VAR.NAMEþ      DBGREC<WDBG_HEADER_VALS, NUM.VARS> = VAR.VALþ    ENDþ  NEXT Iþ  DBGREC<WDBG_HANDLER> = HANDLER.NAMEþ  DBGREC<WDBG_RESOURCE> = RESOURCE.NAMEþENDþ* Get form variablesþDBGREC<WDBG_CGI_VARS> = ''þDBGREC<WDBG_CGI_VALS> = ''þNUM.VARS = 0þSECT = 'VARS'þGOSUB find.sectionþIF SECT.START > 0 THENþ  FOR I = SECT.START + 1 TO SECT.ENDþ    VAR.LINE = EDIT.REC<I>þ    IF VAR.LINE <> '' THENþ      VAR.NAME = TRIM(FIELD(VAR.LINE, '=', 1))þ      VAR.VAL = TRIMF(VAR.LINE[COL2() + 1, LEN(VAR.LINE)])þ      NUM.VARS += 1þ      DBGREC<WDBG_CGI_VARS, NUM.VARS> = VAR.NAMEþ      DBGREC<WDBG_CGI_VALS, NUM.VARS> = VAR.VALþ    ENDþ  NEXT IþENDþ* Get bodyþDBGREC<WDBG_BODY> = ''þSECT = 'BODY'þGOSUB find.sectionþIF SECT.START > 0 THENþ  I = INDEX(EDIT.REC, @AM, SECT.START)þ  IF I > 0 THENþ    I += 1þ    J = INDEX(EDIT.REC, @AM, SECT.END)þ    IF J = 0 THEN J = LEN(EDIT.REC) + 1 ELSE J -= 1þ    IF EDIT.REC[J - 1, 1] = @AM AND J > 1 THEN J -= 1þ    THE.BODY = EDIT.REC[I, J - I + 1]þ    DBGREC<WDBG_BODY> = LOWER(THE.BODY)þ  ENDþENDþ* Get session stateþIF SESSION.FLAG AND SESSION.ID <> '' THENþ  DBGREC<WDBG_SESSION_ID> = ''þ  DBGREC<WDBG_SESSION_VARS> = ''þ  DBGREC<WDBG_SESSION_VALS> = ''þ  DBGREC<WDBG_SESSION_DATE> = ''þ  DBGREC<WDBG_SESSION_TIME> = ''þ  NUM.VARS = 0þ  SECT = 'SESSION'þ  GOSUB find.sectionþ  IF SECT.START > 0 THENþ    FOR I = SECT.START + 1 TO SECT.ENDþ      SESSION.LINE = EDIT.REC<I>þ      SESSION.VAR = TRIM(FIELD(SESSION.LINE, '=', 1))þ      SESSION.VAL = TRIMF(SESSION.LINE[COL2() + 1, LEN(SESSION.LINE)])þ      BEGIN CASEþ        CASE SESSION.VAR = '_SessionID'þ          DBGREC<WDBG_SESSION_ID> = SESSION.VALþ        CASE SESSION.VAR = '_Date'þ          DBGREC<WDBG_SESSION_DATE> = ICONV(SESSION.VAL, 'D')þ        CASE SESSION.VAR = '_Time'þ          DBGREC<WDBG_SESSION_TIME> = ICONV(SESSION.VAL, 'MTS')þ        CASE 1þ          NUM.VARS += 1þ          DBGREC<WDBG_SESSION_VARS, NUM.VARS> = SESSION.VARþ          DBGREC<WDBG_SESSION_VALS, NUM.VARS> = SESSION.VALþ      END CASEþ    NEXT Iþ  ENDþENDþ* Get response headersþDBGREC<WDBG_RESPONSE_VARS> = ''þDBGREC<WDBG_RESPONSE_VALS> = ''þNUM.VARS = 0þSECT = 'RESPONSE_HEADERS'þGOSUB find.sectionþIF SECT.START > 0 THENþ  FOR I = SECT.START + 1 TO SECT.ENDþ    VAR.LINE = EDIT.REC<I>þ    IF VAR.LINE <> '' THENþ      VAR.NAME = TRIM(FIELD(VAR.LINE, '=', 1))þ      VAR.VAL = TRIMF(VAR.LINE[COL2() + 1, LEN(VAR.LINE)])þ      NUM.VARS += 1þ      DBGREC<WDBG_RESPONSE_VARS, NUM.VARS> = VAR.NAMEþ      DBGREC<WDBG_RESPONSE_VALS, NUM.VARS> = VAR.VALþ    ENDþ  NEXT IþENDþ* Get response contentþDBGREC<WDBG_RESPONSE_CONTENT> = ''þSECT = 'RESPONSE_CONTENT'þGOSUB find.sectionþIF SECT.START > 0 THENþ  I = INDEX(EDIT.REC, @AM, SECT.START)þ  IF I > 0 THENþ    I += 1þ    J = INDEX(EDIT.REC, @AM, SECT.END)þ    IF J = 0 THEN J = LEN(EDIT.REC) + 1 ELSE J -= 1þ    IF EDIT.REC[J - 1, 1] = @AM AND J > 1 THEN J -= 1þ    THE.CONTENT = EDIT.REC[I, J - I + 1]þ    DBGREC<WDBG_RESPONSE_CONTENT> = LOWER(THE.CONTENT)þ  ENDþENDþRETURNþ*þ*----------þchoose.editor:þ*----------þ*þPRINTþLOOPþ  PRINT 'Select the editor you want to use: 1 = AE, 2 = ED, 3 = other: ':þ  INPUT ANSþUNTIL ANS EQ '' DOþ  BEGIN CASEþ    CASE ANS = 1þ      EDITOR = 'AE'þ      EXITþ    CASE ANS = 2þ      EDITOR = 'ED'þ      EXITþ    CASE ANS = 3þ      PRINT 'Enter the verb to invoke your editor: ':þ      INPUT TMPþ      PRINT TMP:' OK?':þ      INPUT ANSþ      ANS = OCONV(ANS[1,1], 'MCU')þ      IF ANS = 'Y' THENþ        EDITOR = TMPþ        EXITþ      ENDþ  END CASEþREPEATþRETURNþ*þ*----------þfind.section:þ*----------þ*þSECT.START = -1þSECT.END = -1þTAG = @AM:'[':SECT:']':@AMþTAG.POS = INDEX(EDIT.REC, TAG, 1)þIF TAG.POS = 0 THEN RETURN ;* Section not foundþSECT.START = DCOUNT(EDIT.REC[1, TAG.POS], @AM)þSECT.END = DCOUNT(EDIT.REC, @AM)þFOR I = SECT.START + 1 TO SECT.ENDþ  SECT.LN = EDIT.REC<I>þ  IF SECT.LN MATCHES '"["1A0A"]"' OR SECT.LN MATCHES '"["1A0A"_"1A0A"]"' THENþ* beginning of next section is end of current sectionþ    SECT.END = I - 1þ    EXITþ  ENDþNEXT IþRETURNþ*þ*----------þurl.encode:þ*----------þ*þNEW.STRING = ""þUE.LEN = LEN(URLENCODE.STRING)þFOR UEX = 1 TO UE.LENþ  UE.CHR = URLENCODE.STRING[UEX,1]þ  UE.CVAL = SEQ(UE.CHR)þ  BEGIN CASEþ    CASE UE.CVAL < 32; ENC.FLAG = 1   ;* control characterþ    CASE UE.CVAL = 37 OR UE.CVAL = 38 OR UE.CVAL = 43 OR UE.CVAL = 61; ENC.FLAG = 1 ;* % & + =þ    CASE UE.CVAL = 127; ENC.FLAG = 1  ;* DEL control characterþ    CASE UE.CVAL >= 252; ENC.FLAG = 1 ;* delimiter characterþ    CASE 1 ; ENC.FLAG = 0þ  END CASEþ  IF ENC.FLAG THENþ    UE.CHR = "%":(OCONV(UE.CVAL,'MCDX') 'R%2')þ  ENDþ  NEW.STRING := UE.CHRþNEXT UEXþRETURNþ*þ*----------þfold.string:þ*----------þ*þNEW.STRING = ''þNUM.FOLD = DCOUNT(FOLD.STRING, @AM)þMIN.FOLD = MAX.COLS - INT(MAX.COLS / 3)þFOR FOLD.IDX = 1 TO NUM.FOLDþFOLD.LINE = FOLD.STRING<FOLD.IDX>þLOOP WHILE LEN(FOLD.LINE) > MAX.COLS DOþFOLD.BRK = 0þFOR FOLD.BRK.IDX = MAX.COLS TO MIN.FOLD STEP -1þIF FOLD.LINE[FOLD.BRK.IDX, 1] = ' ' THENþ    FOLD.BRK = FOLD.BRK.IDXþ    EXITþENDþNEXT FOLD.BRK.IDXþIF FOLD.BRK = 0 THEN FOLD.BRK = MAX.COLS + 1þNEW.STRING<-1> = FOLD.LINE[1, FOLD.BRK - 1]þIF FOLD.LINE[FOLD.BRK, 1] = ' ' THEN FOLD.BRK = FOLD.BRK + 1þFOLD.LINE = FOLD.LINE[FOLD.BRK, LEN(FOLD.LINE)]þREPEATþNEW.STRING<-1> = FOLD.LINEþNEXT FOLD.IDXþFOLD.STRING = NEW.STRINGþRETURNþ*þEND000FBCSUB.DEBUG.WIDGETþ0c2    SUBROUTINE SUB.DEBUG.WIDGETþ* @(#) SUB.DEBUG.WIDGET Ported to jBASE 17:00:17  08 JUL 2015þ*  The following variable names were convertedþ*   PROG,LN,DATE,TIMEþ* þ* 07-17-15 Peter Schellenbach - removed D3 runtime error code - if there is a way toþ*   get UniData runtime errors, create new SUB.GET.RUNTIME.ERRORS subroutine and callþ*   it to get the errors.þ*þ* 01-20-16 Peter Schellenbach - added code to insert extra widget info after runtime errors.þ*   Call new SUB.LOG.DEBUG.INFO in widget code to save extra widget info for display here.þ*þ    INCLUDE WBPD MVDB.INCLUDEþ*þ    W$TYPE = "HTML"þ    W$TITLE = "Widget Debug: ":G$WIDGET.NAMEþ    IF GLOBAL.INFO(90) = "FAIL" THENþ        W$TITLE := " (Widget Failed)"þ    END ELSEþ        W$TITLE := ' (Debug Mode)'þ    ENDþ    W$WIDTH = 3     ;* Maybe we can track the last known width of this widgetþ*þ    IF G$QUERYMODE THEN RETURNþ*þ    OPEN '','WEB.FORMS' TO F.WEB.FORMS ELSEþ        W$HTML.DATA = '<h2>Unable to open WEB.FORMS</h2>'þ        RETURNþ    ENDþ    READ W$HTML.DATA FROM F.WEB.FORMS, "widget_debug.html" ELSE W$HTML.DATA = "<h2>Error: widget_debug.html is missing.</h2>"þ*þ    WIDGET.SUB.NAME = GLOBAL.INFO(91)   ;* Set by MVDB.MAIN before re-assigning the subroutine name to this program.þ*þ    EDIT.LINK = ''þ    IF G$ADMIN.USER THENþ* Add a link to edit the subroutineþ        URL.SUBNAME = WIDGET.SUB.NAMEþ        CALL SUB.URL.ENCODE(URL.SUBNAME)þ        EDIT.LINK = '<a href="/dbc/MVDB.WEB.ED?ed_file=MVDB.SUBS&ed_item=':URL.SUBNAME:'" target="MVDB.SUBS_':URL.SUBNAME:'">Edit Subroutine</a>'þ    ENDþ*þ    UDINFO = ""þ    FOR UDPOS = 1 TO 100þ        IF WIDGET.USER.DATA(UDPOS) # "" THENþ            UDINFO := '<tr><td>':UDPOS:'</td><td>':WIDGET.USER.DATA(UDPOS):'</td></tr>':CHAR(10)þ        ENDþ    NEXT UDPOSþ*þ    URL.WIDGET.NAME = G$WIDGET.NAMEþ    CALL SUB.URL.ENCODE(URL.WIDGET.NAME)þ    IF GLOBAL.INFO(90) = "FAIL" THENþ        DB.REASON = "<hr />This widget has been disabled for one of the following reasons:"þ        DB.REASON := '<ul><li>The widget subroutine has an error causing it to terminate unexpectedly.</li>'þ        DB.REASON := '<li>The page was refreshed or a new dashboard page was loaded before the widget subroutine finished running.</li>'þ        DB.REASON := '<li>The widget is running, but it is taking too long for it to finish.</li>'þ        DB.REASON := '<li>The widget subroutine encountered a system error and could not finish running.</li></ul>'þ        REMOVE.LINK = '<a href="/dbc/MVDB.MAIN?unfail_widget=':URL.WIDGET.NAME:'">click here</a>'þ        REMEDY =  "When the problem has been corrected, ":REMOVE.LINK:" to take this widget out of debug mode.<hr />"þ    END ELSEþ        DB.REASON = ""þ        REMEDY = ""þ    ENDþ*þ* Runtime errors?þ*þ    RE.INFO = ""þ    *PJS 07-17-15 Universe TODO: get runtime errors*þ    MAX.ERRS = 50þ    *TODO: CALL SUB.GET.RUNTIME.ERRORS(RE.INFO, '', WIDGET.SUB.NAME, MAX.ERRS, G$ADMIN.USER)þ    RE.INFO := CHAR(10): '</table>'þ    *þ    *PJS 01-20-16 Check for widget debug info and add to runtime errors section.þ    * To use this feature, widget code can call SUB.LOG.DEBUG.INFO with widgetþ    * name and a message. The last 100 lines of message text are saved in WDB.DEBUGþ    * for the widget and displayed here after runtime errors by the debug widget.þ    OPEN 'WDB.DEBUG' TO F.WDB.DEBUG THENþ        READ EXTRA.INFO FROM F.WDB.DEBUG,G$WIDGET.NAME THENþ            CALL SWAP(EXTRA.INFO,@AM,CHAR(10))þ            RE.INFO := '<pre>':CHAR(10):EXTRA.INFO:CHAR(10):'</pre>':CHAR(10)þ        ENDþ    END þ    þ*þ    CALL SWAP(W$HTML.DATA,'<!-- WIDGET_NAME -->',G$WIDGET.NAME)þ    CALL SWAP(W$HTML.DATA,'<!-- WIDGET_SUB_NAME -->',WIDGET.SUB.NAME)þ    CALL SWAP(W$HTML.DATA,'<!-- WIDGET_EDIT_LINK -->',EDIT.LINK)þ    CALL SWAP(W$HTML.DATA,'<!-- DEBUG_REASON -->',DB.REASON)þ    CALL SWAP(W$HTML.DATA,'<!-- REMEDY -->',REMEDY)þ    CALL SWAP(W$HTML.DATA,'<!-- WIDGET_USER_DATA -->',UDINFO)þ    CALL SWAP(W$HTML.DATA,'<!-- RUNTIME_ERRORS -->',RE.INFO)þ    RETURN000474MVAPPS.STATUSþ0c2*þ* Program: MVAPPS.STATUSþ* Author: Luke Bucklin, Sierra Bravo Corporationþ* Date: January 4, 2010þ* Purpose: Provide app status information to the mvappsvr config appþ*þAPP.LIST = ""þAPP.CNT = 0þPRINT "MVAPPS START"þOPEN '','MVAPPS.INSTALLED' TO F.MVAPPS.INSTALLED THENþ  EXECUTE 'SSELECT MVAPPS.INSTALLED' CAPTURING JUNKþ  LOOPþ    READNEXT ID ELSE EXITþ    READ REC FROM F.MVAPPS.INSTALLED, ID THENþ      APP.CNT += 1þ      APP.LIST<1,APP.CNT> = IDþ      APP.LIST<2,APP.CNT> = REC<1>þ      APP.LIST<3,APP.CNT> = REC<2>þ      APP.LIST<4,APP.CNT> = REC<3>þ      APP.LIST<5,APP.CNT> = OCONV(REC<4>,'D2/')þ    ENDþ  REPEATþENDþAPP.NAMES = APP.LIST<2>þCONVERT "|" TO "\" IN APP.NAMESþAPP.LIST<2> = APP.NAMESþPRINT "MVAPPS-VERSION: 1.0"þDATA "VERSION"þEXECUTE "APP.INSTALLER" CAPTURING AIVþLOCATE "Installer Version" IN AIV SETTING POS THENþ  VNO = AIV<POS+1>þEND ELSE VNO = "?"þIF NOT(VNO MATCHES "1N0N'.'0X") THEN VNO = "?"þPRINT "INSTALLER-VERSION: ":VNOþPRINT 'APP-COUNT: ':APP.CNTþFOR N = 1 TO APP.CNTþ  PRINT 'APP: ':APP.LIST<2,N>:",":APP.LIST<3,N>:",":APP.LIST<4,N>:",":APP.LIST<5,N>þNEXT NþPRINT "MVAPPS END"þSTOPþEND000789SUB.MVDB.FEATURESþ0c2SUBROUTINE SUB.MVDB.FEATURES(USER.LIMIT,MAPS.ENABLED,FUSION.WIDGETS.ENABLED,WATERMARK)þINCLUDE WBPD WWW.INCLUDEþINCLUDE WBPD MVDB.INCLUDEþ*þ*þ* Decipher the license dataþ*þCDIGIT = CGI$APPSVR.ID[1,1]þLSEG1 = CGI$APPSVR.ID[2,5]þLSEG2 = CGI$APPSVR.ID[7,7]þLSEG3 = CGI$APPSVR.ID[14,8]þUID4 = CGI$UNIQUE.ID "R%4"þUID3 = UID4 "R%3"þUID2 = UID4 "R%2"þUIDL1 = UID4 "R%1"þUIDL2 = UID4[3,1]þ*þCHKVAL = 0þFOR N = 2 TO 21þ  CHKVAL += SEQ(CGI$APPSVR.ID[N,1])þNEXT NþCHKVAL = MOD(CHKVAL,16)þ*þ* SEGMENT 1: Extract license editionþ*þSEG1 = OCONV(LSEG1,'MCXD')þSEG1 = SEG1 / (4*(UID4+1))þLICENSE.EDITION = SEG1-1þ*þ* SEGMENT 2: Extract user limitþ*þSEG2 = OCONV(LSEG2,'MCXD')þSEG2 = SEG2 / (3*(UID3+1))þLICENSE.CNT = SEG2þ*þ* SEGMENT 3: Extract system idþ*þSEG3 = OCONV(LSEG3,'MCXD')þSEG3 = SEG3 / (UIDL1 + UIDL2 + 2)þLICENSE.SYSID = SEG3þ*þWWW.INFO(46) = OCONV(CHKVAL,'MCDX'):'/':OCONV(LSEG3,'MCXD'):" / ":(UIDL1 + UIDL2 + 2):" = ":LICENSE.SYSIDþWWW.INFO(47) = LICENSE.CNT:'/':LICENSE.EDITIONþWWW.INFO(48) = LICENSE.SYSIDþ*þUSER.LIMIT = LICENSE.CNTþMAPS.ENABLED = 0þFUSION.WIDGETS.ENABLED = 0þWATERMARK = ''þEDITION = ''þBEGIN CASEþ  CASE LICENSE.EDITION = 1þ    FUSION.WIDGETS.ENABLED = 1þ    MAPS.ENABLED = 1þ    WATERMARK = 'Development Version'þ    EDITION = 'Development Edition'þ  CASE LICENSE.EDITION = 2 þ    EDITION = 'Standard Edition'þ  CASE LICENSE.EDITION = 3þ    FUSION.WIDGETS.ENABLED = 1þ    EDITION = 'Professional Edition'þ  CASE LICENSE.EDITION = 4þ    FUSION.WIDGETS.ENABLED = 1þ    MAPS.ENABLED = 1þ    EDITION = 'Enterprise Edition'þ  CASE LICENSE.EDITION = 5þ    FUSION.WIDGETS.ENABLED = 1þ    MAPS.ENABLED = 1þ    WATERMARK = 'Evaluation Version'þ    EDITION = 'Evaluation'þ  CASE 1þ    EDITION = 'Edition unavailable'þEND CASEþ*þ*Populate globals for user referenceþ*þG$LICENSE.COUNT = LICENSE.CNTþG$EDITION = EDITION ;*:' | ':CGI$APPSVR.ID:' | ':CGI$UNIQUE.IDþG$SYSTEM.ID = LICENSE.SYSIDþ*þRETURN007424MVPKG.MAINþ0c2* @(#) MVPKG.MAIN Ported to jBASE 17:00:17  08 JUL 2015þ* Copyright (C) 2010 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written by: Dave Bucklin, Sierra Bravoþ* Date: May, 2010þ* Description: Administration area of Bravo Dashboardþ*þ*#MAKE# RL $OPTIONS D3þ    INCLUDE WBPD WWW.INCLUDEþ    INCLUDE WBPD MVDB.INCLUDEþ*UD INCLUDE WBPD MVPKG.INCLUDEþ    INCLUDE WBPD FI.MVDB.WIDGETSþ    INCLUDE WBPD FI.MVDB.DEFSþ    INCLUDE WBPD FI.MVDB.WIDGET.TYPESþ*þ    EQU TRUE TO 1, FALSE TO 0, AM TO CHAR(254), VM TO CHAR(253), SVM TO CHAR(252)þ*þ    OPEN '','MVPKG.DATA' TO F.MVPKG.DATA ELSE STOP 201, 'MVPKG.DATA'þ    OPEN '','MVDB.WIDGETS' TO F.MVDB.WIDGETS ELSE STOP 201, 'MVDB.WIDGETS'þ    OPEN '','MVDB.SUBS' TO F.MVDB.SUBS ELSE STOP 201, 'MVDB.SUBS'þ    OPEN '','MVDB.DEFS' TO F.MVDB.DEFS ELSE STOP 201, 'MVDB.DEFS'þ    OPEN '','MVDB.WIDGET.TYPES' TO F.MVDB.WIDGET.TYPES ELSE STOP 201, 'MVDB.WIDGET.TYPES'þ    OPEN '','MVDB.CONTROL' TO F.MVDB.CONTROL ELSE STOP 201, 'MVDB.CONTROL'þ    OPEN '','WEB.FORMS' TO F.WEB.FORMS ELSE STOP 201, 'WEB.FORMS'þ    OPEN '','MD' TO F.MD ELSEþ        OPEN '','VOC' TO F.MD ELSE STOP 201, 'MD'þ    ENDþ*þ    DIM PKG.REC(40)þ    DIM SITE$SETTINGS(100)þ    EQU SITE$AUTH.SUB     TO SITE$SETTINGS(1)þ    EQU SITE$NULL.PW.OK   TO SITE$SETTINGS(2)þ    EQU SITE$W.MAX.DUR    TO SITE$SETTINGS(3)þ    EQU SITE$TCP.PORT     TO SITE$SETTINGS(4)þ    EQU SITE$ALT.LOGO     TO SITE$SETTINGS(7)þ    EQU SITE$THEME        TO SITE$SETTINGS(8)þ    EQU SITE$CHARSET      TO SITE$SETTINGS(9)þ*þ    EQU STEP$WIDGETS TO 1þ    EQU STEP$DASHBOARDS TO 2þ    EQU STEP$ITEMS TO 3þ    EQU STEP$WEB.FILES TO 4þ    EQU STEP$SETTINGS TO 5þ    EQU STEP$SUMMARY TO 6þ*þ    MATREAD SITE$SETTINGS FROM F.MVDB.CONTROL, "MVDB.SETTINGS" ELSE MAT SITE$SETTINGS = ""þ    IF SITE$ALT.LOGO = '' THENþ        SITE.LOGO = '/db/images/mv-logo.png'þ    END ELSEþ        SITE.LOGO = SITE$ALT.LOGOþ        IF NOT(INDEX(SITE.LOGO,'/',1)) THENþ            SITE.LOGO = '/db/images/':SITE.LOGOþ        ENDþ    ENDþ    IF SITE$THEME # '' THEN SITE$THEME = '<link rel="Stylesheet" href="/db/themes/':SITE$THEME:'" media="screen" type="text/css" />'þ    IF SITE$CHARSET = '' THEN SITE$CHARSET = 'UTF-8'þ*þ    CALL GET.SESSION.VAR("adminauth",adminauth)þ    CALL PUT.SESSION.VAR("dd_mode",0)þ    adminpass = ""þ    IF adminauth # 1 THENþ        FORM = '<html><head><meta http-equiv="Refresh" content="0; url=/dbc/MVDB.MAIN" />'þ        FORM := '</head><body><p>Administrative priviledges are required. 'þ        FORM:= 'Please <a href="/dbc/MVDB.MAIN">log in</a>.</p></body></html>'þ        CALL WEB.SEND(FORM)þ        STOPþ    ENDþ*þ    HTML = ''þ    LOCATE "action" IN CGI$VARS SETTING POS THENþ        action = CGI$VALS<POS>þ    END ELSE action = ""þ    LOCATE 'pkg_id' IN CGI$VARS SETTING POS THENþ        PKG.ID = CGI$VALS<POS>þ    END ELSE PKG.ID = ''þ*þ    BEGIN CASEþ    CASE action = 'rebuild'þ        MATREAD PKG.REC FROM F.MVPKG.DATA, PKG.ID THENþ*translate this package definition into something usable by the package builderþ            OPEN 'MAKE.FILE,':PKG.ID TO F.MAKE.FILE ELSEþ                EXECUTE "CREATE-FILE DATA MAKE.FILE,":PKG.ID:" 11"þ                OPEN 'MAKE.FILE,':PKG.ID TO F.MAKE.FILE ELSE STOP 201, 'MAKE.FILE,':PKG.IDþ            ENDþ            CLEARFILE F.MAKE.FILEþ*þ*Dashboardsþ*þ            WIDGET.LIST = ''  ;*composite of dashboard and individual widgetsþ            DB.LIST = ''þ            FILE.LIST = ''þ            DB.CNT = DCOUNT(PKG$DASHBOARDS<1>,VM)þ            FOR ON.DB = 1 TO DB.CNTþ                IF PKG$DASHBOARDS.OVR<1,ON.DB> = 1 THEN LIST.POS = 2 ELSE LIST.POS = 1þ                IF PKG$DASHBOARDS.ADD<1,ON.DB> = 1 THENþ*add the widgets from this dbþ                    READV WIDGETS FROM F.MVDB.DEFS, PKG$DASHBOARDS<1,ON.DB>, 2 ELSE WIDGETS = ''þ                    WCNT = DCOUNT(WIDGETS<1>,VM)þ                    FOR ON.W = 1 TO WCNTþ                        LOCATE WIDGETS<1,ON.W> IN WIDGET.LIST<LIST.POS> SETTING DUM ELSEþ                            WIDGET.LIST = INSERT(WIDGET.LIST,LIST.POS,0,0,WIDGETS<1,ON.W>)þ                        ENDþ                    NEXT ON.Wþ                ENDþ                DB.LIST<LIST.POS,-1> = PKG$DASHBOARDS<1,ON.DB>þ            NEXT ON.DBþ*DB.LIST = PKG$DASHBOARDSþ*CONVERT VM TO AM IN DB.LISTþ*WRITE DB.LIST ON F.MAKE.FILE, 'DATA_MVDB.DEFS'þ            PKG.LIST = DB.LIST<1>þ            CONVERT VM TO AM IN PKG.LISTþ            IF DCOUNT(PKG.LIST,AM) THENþ                WRITE PKG.LIST ON F.MAKE.FILE, 'DATA_MVDB.DEFS'þ                FILE.LIST<-1> = 'MVDB.DEFS'þ            ENDþ            O.PKG.LIST = DB.LIST<2>þ            CONVERT VM TO AM IN O.PKG.LISTþ            IF DCOUNT(O.PKG.LIST,AM) THENþ                WRITE O.PKG.LIST ON F.MAKE.FILE, 'DATA_O:MVDB.DEFS'þ                FILE.LIST<-1> = 'O:MVDD.DEFS'þ            ENDþ*þ*Widget defs and subsþ*þ            WCNT = DCOUNT(PKG$WIDGETS<1>,VM)þ            FOR ON.W = 1 TO WCNTþ                IF PKG$WIDGETS.OVR<1,ON.DB> = 1 THEN LIST.POS = 2 ELSE LIST.POS = 1þ                LOCATE PKG$WIDGETS<1,ON.W> IN WIDGET.LIST<LIST.POS> SETTING DUM ELSEþ                    WIDGET.LIST = INSERT(WIDGET.LIST,LIST.POS,0,0,WIDGETS<1,ON.W>)þ                ENDþ            NEXT ON.Wþ*WRITE WIDGET.LIST ON F.MAKE.FILE, 'DATA_MVDB.WIDGETS'þ            WGT.LIST = WIDGET.LIST<1>þ            CONVERT VM TO AM IN WGT.LISTþ            IF DCOUNT(WGT.LIST,AM) THENþ                WRITE WGT.LIST ON F.MAKE.FILE, 'DATA_MVDB.WIDGETS'þ                FILE.LIST<-1> = 'MVDB.WIDGETS'þ            ENDþ            O.WGT.LIST = WIDGET.LIST<2>þ            CONVERT VM TO AM IN O.WGT.LISTþ            IF DCOUNT(WGT.LIST,AM) THENþ                WRITE O.WGT.LIST ON F.MAKE.FILE, 'DATA_O:MVDB.WIDGETS'þ                FILE.LIST<-1> = 'O:MVDB.WIDGETS'þ            ENDþ*þ            COMPILE.COMMANDS = ''þ            SUB.LIST = ''þ            WCNT = DCOUNT(WIDGET.LIST,AM)þ            FOR ON.W = 1 TO WCNTþ                READV SUB.NAME FROM F.MVDB.WIDGETS, WIDGET.LIST<ON.W>, 1 THENþ                    LOCATE SUB.NAME IN SUB.LIST SETTING DUM ELSEþ                        SUB.LIST = INSERT(SUB.LIST,1,0,0,SUB.NAME)þ                        IF PKG$COMPILE.OPT = 1 THENþ                            COMPILE.COMMANDS<-1> = 'COMPILE MVDB.SUBS ':SUB.NAMEþ                            IF PKG$FLASH.OPT = 1 THEN COMPILE.COMMANDS := " (O"þ                        ENDþ                    ENDþ                ENDþ            NEXT ON.Wþ            WRITE SUB.LIST ON F.MAKE.FILE, 'DATA_MVDB.SUBS'þ*þ*Additional files and itemsþ*þ            FILE.CNT = DCOUNT(PKG$FILES<1>,VM)þ            FOR ON.FILE = 1 TO FILE.CNTþ                FNAME = PKG$FILES<1,ON.FILE>þ                ITEM.LIST = ''þ                IF PKG$LIST<1,ON.FILE> # '' THENþ                    EXECUTE 'GET-LIST ':PKG$LIST.FILE<1,ON.FILE>:' ':PKG$LIST<1,ON.FILE> CAPTURING JUNKþ                    LOOPþ                        READNEXT ID ELSE EXITþ                        ITEM.LIST<-1> = IDþ                    REPEATþ                END ELSEþ                    IF PKG$ITEMS<1,ON.FILE> = '*' THENþ                        EXECUTE 'SELECT ':PKG$FILES.DICT<1,ON.FILE>:' ':PKG$FILES<1,ON.FILE> CAPTURING JUNKþ                        LOOPþ                            READNEXT ID ELSE EXITþ                            ITEM.LIST<-1> = IDþ                        REPEATþ                    END ELSEþ                        ITEM.LIST = PKG$ITEMS<1,ON.FILE>þ                        CONVERT SVM TO AM IN ITEM.LISTþ                    ENDþ                ENDþ                IF PKG$FILES.OVR<1,ON.FILE> = 1 THEN FNAME = 'O:':FNAMEþ                IF PKG$FILES.DICT<1,ON.FILE> = 'DICT' THENþ                    WRITE ITEM.LIST ON F.MAKE.FILE, "DICT_":FNAMEþ                END ELSEþ                    WRITE ITEM.LIST ON F.MAKE.FILE, "DATA_":FNAMEþ                ENDþ                LOCATE FNAME IN FILE.LIST SETTING DUM ELSEþ                    FILE.LIST<-1> = FNAMEþ                ENDþ            NEXT ON.FILEþ*þ            WRITE FILE.LIST ON F.MAKE.FILE, 'FILE.LIST'þ*þ            PRE.COMMANDS = PKG$PRE.CMDþ            CONVERT VM TO AM IN PRE.COMMANDSþ            WRITE PRE.COMMANDS ON F.MAKE.FILE, 'PRE.COMMANDS'þ            POST.COMMANDS = PKG$POST.CMDþ            CONVERT VM TO AM IN POST.COMMANDSþ            POST.COMMANDS<-1> = COMPILE.COMMANDSþ            WRITE POST.COMMANDS ON F.MAKE.FILE, 'POST.COMMANDS'þ*þ            CALL MVDB.BUILD.PACKAGE(PKG.ID,PATH,SIZE)þ            PKG$BUILD.TS = DATE() : TIME() "R%5"þ            PKG$BUILD.SEQ += 1þ            PKG$SIZE = SIZEþ            PKG$PATH = PATHþ            MATWRITE PKG.REC ON F.MVPKG.DATA, PKG.IDþ        ENDþ        GOSUB LOAD.PKGSþ    CASE action = 'addfile'þ        LOCATE 'file_name' IN CGI$VARS SETTING POS THENþ            FILE.NAME = CGI$VALS<POS>þ        END ELSE FILE.NAME = ''þ        LOCATE 'file_dict' IN CGI$VARS SETTING POS THENþ            FILE.DICT = CGI$VALS<POS>þ        END ELSE FILE.DICT = ''þ        LOCATE 'file_ovr' IN CGI$VARS SETTING POS THENþ            FILE.OVR = CGI$VALS<POS>þ        END ELSE FILE.OVR = ''þ        LOCATE 'list_file' IN CGI$VARS SETTING POS THENþ            LIST.FILE = CGI$VALS<POS>þ        END ELSE LIST.FILE = ''þ        LOCATE 'list_name' IN CGI$VARS SETTING POS THENþ            LIST.NAME = CGI$VALS<POS>þ        END ELSE LIST.NAME = ''þ        LOCATE 'items' IN CGI$VARS SETTING POS THENþ            ITEMS = CGI$VALS<POS>þ            CONVERT ',' TO SVM IN ITEMSþ        END ELSE ITEMS = ''þ        IF PKG.ID # '' AND FILE.NAME # '' AND ((LIST.NAME # '' AND LIST.FILE # '') OR ITEMS # '') THENþ            MATREAD PKG.REC FROM F.MVPKG.DATA, PKG.ID THENþ                ADD.POS = DCOUNT(PKG$FILES<1>,VM) + 1þ                PKG$FILES<1,ADD.POS> = FILE.NAMEþ                PKG$FILES.DICT<1,ADD.POS> = FILE.DICTþ                PKG$ITEMS<1,ADD.POS> = ITEMSþ                PKG$LIST<1,ADD.POS> = LIST.NAMEþ                PKG$LIST.FILE<1,ADD.POS> = LIST.FILEþ*PKG$FILES.OVR<1,ADD.POS> = FILE.OVRþ                DATA 'LIST ':FILE.DICT:' ':FILE.NAME:' TOTAL SIZE DET-SUPP'þ                IF LIST.NAME # '' THENþ                    EXECUTE 'SELECT ':LIST.FILE:' ':LIST.NAME CAPTURING OUTPUTþ                    END ELSE IF ITEMS = "*" THENþ                        EXECUTE 'SELECT ':FILE.DICT:' ':FILE.NAME CAPTURING OUTPUTþ                    END ELSEþ                        ITEM.LIST = ITEMSþ                        CALL SWAP(ITEM.LIST,SVM,'""')þ                        EXECUTE 'SELECT ':FILE.DICT:' ':FILE.NAME:' "':ITEM.LIST:'"' CAPTURING OUTPUTþ                    ENDþ                    PKG$FILES.SIZE<1,ADD.POS> = TRIM(OUTPUT<7>) + 0þ                    MATWRITE PKG.REC ON F.MVPKG.DATA, PKG.IDþ                ENDþ                GOSUB EDIT.PACKAGEþ            END ELSEþ                PRINT "Error 1"þ            ENDþ        CASE action = 'edit'þ            MATREAD PKG.REC FROM F.MVPKG.DATA, PKG.ID THENþ                GOSUB EDIT.PACKAGEþ            ENDþ        CASE action = 'save'þ            VAR.CNT = DCOUNT(CGI$VARS,AM)þ            MATREAD PKG.REC FROM F.MVPKG.DATA, PKG.ID ELSE MAT PKG.REC = ''þ*Clear these so we can rebuild them. We have the technology.þ            PKG$WIDGETS = ''þ            PKG$WIDGETS.OVR = ''þ            PKG$DASHBOARDS = ''þ            PKG$DASHBOARDS.OVR = ''þ            PKG$DASHBOARDS.ADD = ''þ            PKG$FILES.OVR = ''þ            PKG$WEB.IMAGE = ''þ            PKG$WEB.CSS = ''þ            PKG$WEB.JS = ''þ            PKG$WEB.ICON = ''þ            PKG$WEB.IMAGE.OVR = ''þ            PKG$WEB.CSS.OVR = ''þ            PKG$WEB.JS.OVR = ''þ            PKG$WEB.ICON.OVR = ''þ            WIDGET.ADD.POS = 1þ            DB.ADD.POS = 1þ            IMAGE.ADD.POS = 1þ            CSS.ADD.POS = 1þ            JS.ADD.POS = 1þ            ICON.ADD.POS = 1þ            FOR ON.VAR = 1 TO VAR.CNTþ                THIS.VAR = CGI$VARS<ON.VAR>þ                THIS.VAL = CGI$VALS<ON.VAR>þ                BEGIN CASEþ                CASE THIS.VAL = ''þ*Get widgetsþ                CASE THIS.VAR[1,11] = 'widget_ovr_'þ                CASE THIS.VAR[1,7] = 'widget_'þ                    WIDGET.ID = THIS.VAR[8,99]þ                    OVR = 'widget_ovr_':WIDGET.IDþ                    OVR.FLAG = 0þ                    LOCATE OVR IN CGI$VARS SETTING POS THENþ                        OVR.FLAG = 1þ                    ENDþ                    PKG$WIDGETS<1,WIDGET.ADD.POS> = WIDGET.IDþ                    PKG$WIDGETS.OVR<1,WIDGET.ADD.POS> = OVR.FLAGþ                    WIDGET.ADD.POS += 1þ*Get Dashboardsþ                CASE THIS.VAR[1,10] = 'dashboard_'þ                    DB.ID = THIS.VAR[11,99]þ                    OVR = 'db_ovr_':DB.IDþ                    ADD = 'db_add_':DB.IDþ                    OVR.FLAG = 0; ADD.FLAG = 0þ                    LOCATE OVR IN CGI$VARS SETTING POS THENþ                        OVR.FLAG = 1þ                    ENDþ                    LOCATE ADD IN CGI$VARS SETTING POS THENþ                        ADD.FLAG = 1þ                    ENDþ                    PKG$DASHBOARDS<1,DB.ADD.POS> = DB.IDþ                    PKG$DASHBOARDS.OVR<1,DB.ADD.POS> = OVR.FLAGþ                    PKG$DASHBOARDS.ADD<1,DB.ADD.POS> = ADD.FLAGþ                    DB.ADD.POS += 1þ*Get file overwite flagsþ                CASE THIS.VAR[1,10] = 'files_ovr_'þ                    OVR.POS = FIELD(THIS.VAR,'_',3)þ                    PKG$FILES.OVR<1,OVR.POS> = 1þ*Get web filesþ                CASE THIS.VAR = 'web_images'þ                    CALL SWAP(THIS.VAL,CHAR(13):CHAR(10),VM)þ                    PKG$WEB.IMAGE = TRIM(THIS.VAL,VM)þ                CASE THIS.VAR = 'web_icons'þ                    CALL SWAP(THIS.VAL,CHAR(13):CHAR(10),VM)þ                    PKG$WEB.ICON = TRIM(THIS.VAL,VM)þ                CASE THIS.VAR = 'web_css'þ                    CALL SWAP(THIS.VAL,CHAR(13):CHAR(10),VM)þ                    PKG$WEB.CSS = TRIM(THIS.VAL,VM)þ                CASE THIS.VAR = 'web_js'þ                    CALL SWAP(THIS.VAL,CHAR(13):CHAR(10),VM)þ                    PKG$WEB.JS = TRIM(THIS.VAL,VM)þ                END CASEþ            NEXT ON.VARþ*Get settingsþ            LOCATE 'pkg_pre_cmd' IN CGI$VARS SETTING POS THENþ                PKG$PRE.CMD = CGI$VALS<POS>þ                CALL SWAP(PKG$PRE.CMD,CHAR(13):CHAR(10),VM)þ            END ELSE PKG$PRE.CMD = ''þ            LOCATE 'pkg_post_cmd' IN CGI$VARS SETTING POS THENþ                PKG$POST.CMD = CGI$VALS<POS>þ                CALL SWAP(PKG$POST.CMD,CHAR(13):CHAR(10),VM)þ            END ELSE PKG$POST.CMD = ''þ            LOCATE 'compile_opt' IN CGI$VARS SETTING POS THENþ                PKG$COMPILE.OPT = 1þ            END ELSE PKG$COMPILE.OPT = 0þ            LOCATE 'flash_opt' IN CGI$VARS SETTING POS THENþ                PKG$FLASH.OPT = 1þ            END ELSE PKG$FLASH.OPT = 1þ            LOCATE 'access_opt' IN CGI$VARS SETTING POS THENþ                PKG$ACCESS.OPT = 1þ            END ELSE PKG$ACCESS.OPT = 0þ            LOCATE 'pkg_name' IN CGI$VARS SETTING POS THENþ                PKG$NAME = CGI$VALS<POS>þ            ENDþ            LOCATE 'pkg_desc' IN CGI$VARS SETTING POS THENþ                PKG$DESC = CGI$VALS<POS>þ            ENDþ            MATWRITE PKG.REC ON F.MVPKG.DATA, PKG.IDþ            GOSUB LOAD.PKGSþ        CASE action = 'delete'þ            DELETE F.MVPKG.DATA, PKG.IDþ            EXECUTE 'DELETE-FILE MAKE.FILE,':PKG.ID CAPTURING JUNKþ            GOSUB LOAD.PKGSþ        CASE 1þ            GOSUB LOAD.PKGSþ        END CASEþ*þ        READ ADMIN.TEMPLATE FROM F.WEB.FORMS, "pkg_list_template.html" ELSE ADMIN.TEMPLATE = "pkg_list_template.html not found."þ        CALL SWAP(ADMIN.TEMPLATE,'<!--CHARACTER_SET-->',SITE$CHARSET)þ        HEADER = '<div id="dashboard_nav">'þ        HEADER := '<ol class="dashboard_list">'þ        HEADER := '<li><a href="':CGI$PATH:'/MVDB.ADMIN?action=users">Users</a></li>'þ        HEADER := '<li><a href="':CGI$PATH:'/MVDB.ADMIN?action=widgets">Widgets</a></li>'þ        HEADER := '<li><a href="':CGI$PATH:'/MVDB.ADMIN?action=dashboards">Dashboards</a></li>'þ        OPEN 'RSS.BP' TO F.RSS.BP THENþ            HEADER := '<li><a href="':CGI$PATH:'/RSS.MAINT">RSS Feed Maintenance</a></li>'þ        ENDþ        HEADER := '<li class="db_active"><a href="':CGI$PATH:'/RSS.MAINT">Package Manager</a></li>'þ        HEADER := '<li><a href="':CGI$PATH:'/MVDB.MAIN">Return to Dashboard</a></li>'þ        HEADER := '</ol>'þ        HEADER := '</div>'þ        CALL SWAP(ADMIN.TEMPLATE,'<!-- HEADER -->',HEADER)þ        FOOTER = ''þ        CALL SWAP(ADMIN.TEMPLATE,'<!-- FOOTER -->',FOOTER)þ        CALL SWAP(ADMIN.TEMPLATE,'<!-- ADMIN_MAIN -->',HTML)þ        CALL SWAP(ADMIN.TEMPLATE,'<!-- SITE_LOGO -->',SITE.LOGO)þ        CALL SWAP(ADMIN.TEMPLATE,'<!-- SITE_THEME -->',SITE$THEME)þ        CALL WEB.SEND(ADMIN.TEMPLATE)þ        STOPþ*þLOAD.PKGS:þ*þ        HTML = '<table width="100%">'þ        HTML<-1> = '<tr><td colspan="6"><a href="':CGI$PATH:'/MVPKG.MAIN?action=editpkg" class="add-pkg">Add a Package</a></td></tr>'þ        HTML<-1> = '<tr><th>Package</th><th>Last Build</th><th>Size</th><th>Build#</th><th>Description</th><th>Action</th></tr>'þ        EXECUTE "SSELECT MVPKG.DATA BY NAME" CAPTURING JUNKþ        LOOPþ            READNEXT FID ELSE EXITþ            MATREAD PKG.REC FROM F.MVPKG.DATA, FID ELSE CONTINUEþ            IF PKG$SIZE # '' THENþ                BEGIN CASEþ                CASE PKG$SIZE >= PWR(10,9)þ                    PKG$SIZE = OCONV(PKG$SIZE,"MD29"):' GB'þ                CASE PKG$SIZE >= PWR(10,6)þ                    PKG$SIZE = OCONV(PKG$SIZE,"MD26"):' MB'þ                CASE PKG$SIZE >= PWR(10,3)þ                    PKG$SIZE = OCONV(PKG$SIZE,"MD23"):' kB'þ                CASE 1þ                    PKG$SIZE := ' bytes'þ                END CASEþ            ENDþ            BUILD.DATE = OCONV(PKG$BUILD.TS[1,5],"D2/")þ            BUILD.TIME = OCONV(PKG$BUILD.TS[6,5],"MTS")þ            ROW = '<tr><td>':PKG$NAME:'</td><td>':BUILD.DATE:' ':BUILD.TIME:'</td>'þ            ROW := '<td>':PKG$SIZE:'</td><td>':PKG$BUILD.SEQ:'</td><td>':PKG$DESC:'</td>'þ            ROW := '<td><a href="/dbc/MVPKG.MAIN?action=edit&pkg_id=':FID:'"><img src="/db/icons/brick_edit.png" title="Edit"></a> 'þ            ROW := \<a onClick="return confirm('DELETE: Are you sure?');" href="/dbc/MVPKG.MAIN?action=delete&pkg_id=\:FID:\"><img src="/db/icons/brick_delete.png" title="Delete"></a> \þ            ROW := '<a href="/dbc/MVPKG.MAIN?action=rebuild&pkg_id=':FID:'"><img src="/db/icons/brick_go.png" title="Rebuild"></a>'þ            ROW := '<a href="/dbc/MVPKG.MAIN?action=download&pkg_id=':FID:'"><img src="/db/icons/arrow_down.png" title="Download"></a></td></tr>'þ            HTML<-1> = ROWþ        REPEATþ        HTML<-1> = '<tr><td colspan="6"><a href="':CGI$PATH:'/MVPKG.MAIN?action=editpkg" class="add-pkg">Add a Package</a></td></tr>'þ        HTML<-1> = '</table>'þ        RETURNþ*þEDIT.PACKAGE:þ        CALL MVDB.SUB.WIDGET.LIST(WIDGET.LIST)þ        HTML<-1> = '<form action="':CGI$PATH:'/MVPKG.MAIN" method="POST">'þ        HTML<-1> = 'Package Name: <input type="text" name="pkg_name" value="':PKG$NAME:'"><br/>'þ        HTML<-1> = 'Description: <input type="text" name="pkg_desc" value="':PKG$DESC:'"><br/>'þ        HTML<-1> = '<input type="hidden" name="action" value="save">'þ        HTML<-1> = '<input type="hidden" name="pkg_id" value="':PKG.ID:'">'þ        HTML<-1> = '<div id="submit"><input class="ui-state-default ui-corner-all" type="submit" value="Save" /></div> 'þ        HTML<-1> = '<div id="tabs"> 'þ        HTML<-1> = '<ul><li><a href="#tabs-1">Widgets</a></li>'þ        HTML<-1> = '<li><a href="#tabs-2">Dashboards</a></li>'þ        HTML<-1> = '<li><a href="#tabs-3">File Items</a></li>'þ        HTML<-1> = '<li><a href="#tabs-4">Web Files</a></li>'þ        HTML<-1> = '<li><a href="#tabs-5">Settings</a></li></ul>'þ        HTML<-1> = '<div id="tabs-1" class="tab_content">'þ*þ        HTML<-1> = '<table width="100%">'þ        HTML<-1> = '<tr><th>Selected</th><th>Widget</th><th>Type</th><th>Subroutine</th><th>Overwrite</th></tr>'þ        WIDGET.CNT = DCOUNT(WIDGET.LIST<1>,VM)þ        FOR W.POS = 1 TO WIDGET.CNTþ            IF WIDGET.LIST<7,W.POS> = 1 THEN CLASS = 'error' ELSE CLASS = 'p'þ            LOCATE WIDGET.LIST<1,W.POS> IN PKG$WIDGETS<1> SETTING POS THENþ                CHECKED = 'checked'þ            END ELSE CHECKED = ''þ            HTML<-1> = '<tr class="':CLASS:'"><td><input type="checkbox" name="widget_':WIDGET.LIST<1,W.POS>:'" value="checked" ':CHECKED:'></td>'þ            HTML := '<td>':WIDGET.LIST<1,W.POS>:'</td><td>':WIDGET.LIST<4,W.POS>:'</td><td>':WIDGET.LIST<3,W.POS>:'</td>'þ            IF PKG$WIDGETS.OVR<1,POS> = 1 THENþ                CHECKED = 'checked'þ            END ELSE CHECKED = ''þ            HTML := '<td><input type="checkbox" name="widget_ovr_':WIDGET.LIST<1,W.POS>:'" value="checked" ':CHECKED:'></td></tr>'þ        NEXT W.POSþ        HTML<-1> = '</table>'þ*þ        EXECUTE 'SSELECT MVDB.DEFS' CAPTURING JUNKþ        HTML<-1> = '</div><!--#tabs-1-->'þ        HTML<-1> = '<div id="tabs-2" class="tab_content"> 'þ        HTML<-1> = '<table width="100%">'þ        HTML<-1> = '<tr><th>Selected</th><th>Dashboard ID</th><th>Description</th><th>Include Widgets</th><th>Overwrite</th></tr>'þ*þ        DB.POS = 1þ        LOOPþ            READNEXT ID ELSE EXITþ            MATREAD DB.ITEM FROM F.MVDB.DEFS, ID ELSE MAT DB.ITEM = ''þ            HTML<-1> = '<tr>'þ            LOCATE ID IN PKG$DASHBOARDS<1> SETTING POS THENþ                CHECKED = 'checked'þ            END ELSE CHECKED = ''þ            HTML<-1> = '<td><input type="checkbox" name="dashboard_':ID:'" value="checked" ':CHECKED:'></td>'þ            HTML<-1> = '<td>':ID:'</td>'þ            HTML<-1> = '<td>':DB.DESC:'</td>'þ            ADD.CHECKED = ''; OVR.CHECKED = ''þ            IF CHECKED # '' THENþ                IF PKG$DASHBOARDS.ADD<1,POS> = 1 THENþ                    ADD.CHECKED = 'checked'þ                ENDþ                IF PKG$DASHBOARDS.OVR<1,POS> = 1 THENþ                    OVR.CHECKED = 'checked'þ                ENDþ            ENDþ*HTML<-1> = '<td><input type="checkbox" name="db_add_':ID:'" value="checked" ':ADD.CHECKED:'></td>'þ            HTML<-1> = '<td><input type="button" value="Add Widgets to Package"></td>'þ            HTML<-1> = '<td><input type="checkbox" name="db_ovr_':ID:'" value="checked" ':OVR.CHECKED:'></td>'þ            HTML<-1> = '</tr>'þ            DB.POS += 1þ        REPEATþ        HTML<-1> = '</table>'þ*þ        HTML<-1> = '</div><!--#tabs-2-->'þ        HTML<-1> = '<div id="tabs-3" class="tab_content">'þ        HTML<-1> = '<table width="100%">'þ        HTML<-1> = '<tr><td colspan="5"><a href="/dbc/MVPKG.MAIN?action=addfile" class="add-file">Add a File</a></td></tr>'þ        HTML<-1> = '<tr><th>File Name</th><th>Items/List</th><th>Size</th><th>Overwrite</th><th>Action</th></tr>'þ        FILE.CNT = DCOUNT(PKG$FILES<1>,VM)þ        FOR ON.FILE = 1 TO FILE.CNTþ            FILE.ERR = 0; ITEM.ERR = 0þ            OPEN PKG$FILES.DICT<1,ON.FILE>,PKG$FILES<1,ON.FILE> TO PKG.FILEVAR ELSE FILE.ERR = 1þ            HTML<-1> = '<tr><td 'þ            IF FILE.ERR THEN HTML := 'class="error"'þ            HTML := '>':PKG$FILES.DICT<1,ON.FILE>:' ':PKG$FILES<1,ON.FILE>:'</td>'þ            IF PKG$LIST<1,ON.FILE> # '' THENþ                OPEN PKG$LIST.FILE<1,ON.FILE> TO LISTFILE THENþ                    READV TST FROM LISTFILE, PKG$LIST<1,ON.FILE>, 1 ELSEþ                        ITEM.ERR = 1þ                    ENDþ                END ELSE ITEM.ERR = 1þ                HTML<-1> = '<td 'þ                IF ITEM.ERR THEN HTML := 'class="error"'þ                HTML := '>List: 'þ                IF PKG$LIST.FILE<1,ON.FILE> # '' THENþ                    HTML := PKG$LIST.FILE:', 'þ                ENDþ                HTML := PKG$LIST<1,ON.FILE>:'</td>'þ            END ELSEþ                IF NOT(FILE.ERR = 1) THENþ                    IF PKG$ITEMS<1,ON.FILE> # '*' THENþ                        ITEM.CNT = DCOUNT(PKG$ITEMS<1,ON.FILE>,SVM)þ                        FOR ON.ITEM = 1 TO ITEM.CNTþ                            READV TST FROM PKG.FILEVAR, PKG$ITEMS<1,ON.FILE,ON.ITEM>, 1 ELSEþ                                ITEM.ERR = 1þ                            ENDþ                        NEXT ON.ITEMþ                    ENDþ                END ELSE ITEM.ERR = 1þ                SHOW.ITEMS = PKG$ITEMS<1,ON.FILE>þ                CONVERT SVM TO ',' IN SHOW.ITEMSþ                IF LEN(SHOW.ITEMS) > 20 THENþ                    SHOW.ITEMS = SHOW.ITEMS[1,20]:'...'þ                ENDþ                HTML<-1> = '<td 'þ                IF ITEM.ERR THEN HTML := 'class="error"'þ                HTML := '>':SHOW.ITEMS:'</td>'þ            ENDþ            SHOW.SIZE = PKG$FILES.SIZE<1,ON.FILE>þ            IF SHOW.SIZE # '' THENþ                BEGIN CASEþ                CASE SHOW.SIZE >= PWR(10,9)þ                    SHOW.SIZE = OCONV(SHOW.SIZE,"MD29"):' GB'þ                CASE SHOW.SIZE >= PWR(10,6)þ                    SHOW.SIZE = OCONV(SHOW.SIZE,"MD26"):' MB'þ                CASE SHOW.SIZE >= PWR(10,3)þ                    SHOW.SIZE = OCONV(SHOW.SIZE,"MD23"):' kB'þ                CASE 1þ                    SHOW.SIZE := ' bytes'þ                END CASEþ            ENDþ            HTML<-1> = '<td>':SHOW.SIZE:'</td>'þ            IF PKG$FILES.OVR<1,ON.FILE> = 1 THEN CHECKED = 'checked' ELSE CHECKED = ''þ            HTML<-1> = '<td><input type="checkbox" name="files_ovr_':ON.FILE:'" ':CHECKED:'></td>'þ            HTML<-1> = \<td><a href="javascript:editFile('\:PKG$FILES.DICT<1,ON.FILE>:',':PKG$FILES<1,ON.FILE>:',':PKG$LIST.FILE<1,ON.FILE>:',':PKG$LIST<1,ON.FILE>:',':PKG$ITEMS<1,ON.FILE>:\');"><img title="Edit" class="icon" src="/db/icons/pencil.png"></a>\þ            HTML<-1> = \<a href="javascript:deleteFile('\:ON.FILE:\')"><img title="Delete" class="icon" src="/db/icons/delete.png"></a>\þ            HTML<-1> = '</td></tr>'þ        NEXT ON.FILEþ        HTML<-1> = '<tr><td colspan="5"><a href="/dbc/MVPKG.MAIN?action=addfile" class="add-file">Add a File</a></td></tr></table>'þ*þ        HTML<-1> = '</div><!--#tabs-3-->'þ        HTML<-1> = '<div id="tabs-4" class="tab_content">'þ        HTML<-1> = '<div id="accordion">'þ        HTML<-1> = '<h3><a href="#">Images</a></h3><div>'þ        IMAGE.CNT = DCOUNT(PKG$WEB.IMAGE<1>,VM)þ        HTML<-1> = '<textarea rows="8" cols="40" name="web_images">'þ        FOR ON.IMAGE = 1 TO IMAGE.CNTþ            IF PKG$WEB.IMAGE.OVR<1,ON.IMAGE> = 1 THEN CHECKED = 'checked' ELSE CHECKED = ''þ*HTML<-1> = '<li><input type="checkbox" name="image_ovr_':ON.IMAGE:'" value="1" ':CHECKED:'><input type="text" name="image_':ON.IMAGE:'" value="':PKG$WEB.IMAGE<1,ON.IMAGE>:'"></li>'þ            HTML<-1> = PKG$WEB.IMAGE<1,ON.IMAGE>þ        NEXT ON.IMAGEþ        HTML<-1> = '</textarea></div>'þ        HTML<-1> = '<h3><a href="#">CSS</a></h3><div>'þ        CSS.CNT = DCOUNT(PKG$WEB.CSS<1>,VM)þ        HTML<-1> = '<textarea rows="8" cols="40" name="web_css">'þ        FOR ON.CSS = 1 TO CSS.CNTþ            IF PKG$WEB.CSS.OVR<1,ON.CSS> = 1 THEN CHECKED = 'checked' ELSE CHECKED = ''þ*HTML<-1> = '<li><input type="checkbox" name="css_ovr_':ON.CSS:'" value="checked" ':CHECKED:'><input type="text" name="css_':ON.CSS:'" value="':PKG$WEB.CSS<1,ON.CSS>:'"></li>'þ            HTML<-1> = PKG$WEB.CSS<1,ON.CSS>þ        NEXT ON.CSSþ        HTML<-1> = '</textarea></div>'þ        HTML<-1> = '<h3><a href="#">Javascript</a></h3><div>'þ        JS.CNT = DCOUNT(PKG$WEB.JS<1>,VM)þ        HTML<-1> = '<textarea rows="8" cols="40" name="web_js">'þ        FOR ON.JS = 1 TO JS.CNTþ            IF PKG$WEB.JS.OVR<1,ON.JS> = 1 THEN CHECKED = 'checked' ELSE CHECKED = ''þ*HTML<-1> = '<li><input type="checkbox" name="js_ovr_':ON.JS:'" value="checked" ':CHECKED:'><input type="text" name="js_':ON.JS:'" value="':PKG$WEB.JS<1,ON.JS>:'"></li>'þ            HTML<-1> = PKG$WEB.JS<1,ON.JS>þ        NEXT ON.JSþ        HTML<-1> = '</textarea></div>'þ        HTML<-1> = '<h3><a href="#">Icons</a></h3><div>'þ        ICON.CNT = DCOUNT(PKG$WEB.ICON<1>,VM)þ        HTML<-1> = '<textarea rows="8" cols="40" name="web_icons">'þ        FOR ON.ICON = 1 TO ICON.CNTþ            IF PKG$WEB.ICON.OVR<1,ON.ICON> = 1 THEN CHECKED = 'checked' ELSE CHECKED = ''þ*HTML<-1> = '<li><input type="checkbox" name="icon_ovr_':ON.ICON:'" value="checked" ':CHECKED:'><input type="text" name="icon_':ON.ICON:'" value="':PKG$WEB.ICON<1,ON.ICON>:'"></li>'þ            HTML<-1> = PKG$WEB.ICON<1,ON.ICON>þ        NEXT ON.ICONþ        HTML<-1> = '</textarea></div>'þ        HTML<-1> = '</div>'þ*þ        HTML<-1> = '</div><!--#tabs-4-->'þ        HTML<-1> = '<div id="tabs-5" class="tab_content">'þ*HTML<-1> = '<b>Settings</b>'þ        HTML<-1> = '<ul><li>Pre-Install Commands</li>'þ        CALL SWAP(PKG$PRE.CMD,VM,CHAR(13):CHAR(10))þ        HTML<-1> = '<li><textarea rows="5" cols="50" name="pkg_pre_cmd">':PKG$PRE.CMD:'</textarea></li>'þ        HTML<-1> = '<li>Post-Install Commands</li>'þ        CALL SWAP(PKG$POST.CMD,VM,CHAR(13):CHAR(10))þ        HTML<-1> = '<li><textarea rows="5" cols="50" name="pkg_post_cmd">':PKG$POST.CMD:'</textarea></li>'þ        IF PKG$COMPILE.OPT = 1 THEN CHECKED = 'checked' ELSE CHECKED = ''þ        HTML<-1> = '<li><input type="checkbox" name="compile_opt" value="checked" ':CHECKED:'> Compile widget subroutines</li>'þ        IF PKG$FLASH.OPT = 1 THEN CHECKED = 'checked' ELSE CHECKED = ''þ        HTML<-1> = '<li><input type="checkbox" name="flash_opt" value="checked" ':CHECKED:'> Flash compile widget subroutines</li>'þ        IF PKG$ACCESS.OPT = 1 THEN CHECKED = 'checked' ELSE CHECKED = ''þ        HTML<-1> = '<li><input type="checkbox" name="access_opt" value="checked" ':CHECKED:'> Include dashboard and widget user access settings</li>'þ        HTML<-1> = '</ul></div></div></form>'þ        RETURN0010B1CONVERT.DICTSþ0c2     PROGRAM CONVERT.DICTSþ** For UniData, convert dictionaries to UD formatþ    PROMPT ":"þ    CRT "Enter list of dictionaries to be converted separated by '|' : "þ    INPUT ARGSþ    IF ARGS # "" THENþ        LV = 0þ        FOR I = 1 TO DCOUNT(ARGS,'|')þ            FILE.NAME = FIELD(ARGS,'|',I)þ            OPEN "DICT",FILE.NAME TO FV THENþ                SELECT FV TO LVþ                DONE = 0þ                LOOPþ                    READNEXT ID FROM LV ELSE DONE = 1þ                UNTIL DONE DOþ                    READ Z FROM FV,ID THENþ                        IF Z<1> = 'A' OR Z<1> = 'S' THENþ* Convert A-type and S-type dictionary items to D-type or I-typeþ                            Z<4> = Z<3>þ                            Z<3> = Z<7>þ                            Z<5> = Z<10>:Z<9>þ                            IF Z<8>[1,1] = 'A' THENþ* Convert A-correlative to I-type expressionþ*þ*   A-correaltive must have precise syntax for automated conversion:þ*    - attribute numbers must be enclosed in parentheses, like (2) for attribute 2þ*        these are converted to EXTRACT(@RECORD(n,0,0)þ*    - attribute names using N(name) syntax are converted by removing the leading Nþ*         reserved words like 'DATE' or 'TIME' are not allowed for attribute namesþ*    - sum function S() is converted to SUM()þ*    - system date D operand is must be enclosed in parenthese, like (D), converted to (@DATE)þ* þ                                Z<1> = 'I'þ                                EXPR = Z<8>[3,999]þ                                * Change (nn) references to EXTRACT(@RECORD,nn,0,0)þ                                FOR J = 1 TO COUNT(EXPR,'(')þ                                    K = INDEX(EXPR,'(',J)þ                                    IF K > 0 THENþ                                        IF EXPR[K,999] MATCHES '(1N0N)0X' THENþ                                            M = INDEX(EXPR[K,999],')',1)þ                                            IF M > 0 THENþ                                                EXPR = EXPR[1,K-1]:'EXTRACT(@RECORD,':EXPR[K+1,M-2]:',0,0)':EXPR[K+M,999]þ                                            ENDþ                                        ENDþ                                    ENDþ                                NEXT Jþ                                * Change N(attr) to (attr)þ                                LOOP K = INDEX(EXPR,'N(',1) WHILE K DO EXPR = EXPR[1,K-1]:EXPR[K+1,999] REPEATþ                                * Change S(expr) to SUM(expr)þ                                LOOP K = INDEX(EXPR,'S(',1) WHILE K DO EXPR = EXPR[1,K-1]:'SUM':EXPR[K+1,999] REPEATþ                                * Change (D) to (@DATE)þ                                LOOP K = INDEX(EXPR,'(D)',1) WHILE K DO EXPR = EXPR[1,K]:'@DATE':EXPR[K+2,999] REPEATþ                                Z<2> = EXPRþ                            END ELSEþ                                IF Z<8>[1,1] = 'T' THENþ* Convert T-correlative to I-type TRANS() functionþ                                    Z<1> = 'I'þ                                    TFILE = FIELD(Z<8>,';',1)[2,999]þ                                    TKEY = Z<2>þ                                    Z<2> = 'TRANS(':TFILE:',':TKEY:',':FIELD(Z<8>,';',4):',"':FIELD(Z<8>,';',2):'")'þ                                END ELSEþ                                    IF Z<8>[1,1] = 'G' THENþ                                        IF Z<2> = 0 THEN OPND = '@ID' ELSE OPND = 'EXTRACT(@RECORD,':Z<2>:',0,0)'þ                                        Z<1> = 'I'þ                                        Z<2> = 'OCONV(':OPND:",'":Z<8>:"')"þ                                    END ELSEþ                                        Z<1> = 'D'þ                                    ENDþ                                ENDþ                            ENDþ                            IF Z<16> = 'V' THEN Z<6> = 'MV' ELSE Z<6> = 'S'þ                            Z<7> = ''þ                            Z<8> = ''þ                            Z<9> = ''þ                            Z<10> = ''þ                            WRITE Z ON FV,IDþ                        ENDþ                    ENDþ                REPEATþ                EXECUTE 'COMPILE.DICT ':FILE.NAME CAPTURING JUNKþ            ENDþ        NEXT Iþ    ENDþEND000EA9RSS.MAINþ0c2* RSS.MAINþ*þ* Program: RSS.MAINþ* Author: Luke Bucklinþ* Date: 2/23/2009þ*þ* Purpose: Create an RSS feed using user-defined subroutine callsþ*þ* Modified by Mike Street of Zumasys 07-22-15 for UniData compatiblity:þ*   When testing for cataloged program, check if line 1 is 'C', not 'VR'.þ*þINCLUDE WBPD WWW.INCLUDEþINCLUDE RSS.BP RSS.DATA.INCþ*þCALL SET.CONTENT.TYPE("application/xml")þ*þOPEN '','RSS.FEEDS' TO F.RSS.FEEDS ELSE STOP 201, 'RSS.FEEDS'þOPEN '','MD' TO F.MD ELSEþ  OPEN '','VOC' TO F.MD ELSE STOP 201, 'MD OR VOC'þENDþOPEN 'MVDB.CONTROL' TO F.MVDB.CONTROL ELSE STOP 201, 'MVDB.CONTROL'þ*þFEED.REC = ""þLOCATE "feed" IN CGI$VARS SETTING POS THENþ  feed = CGI$VALS<POS>þ  READ FEED.REC FROM F.RSS.FEEDS, feed ELSE FEED.REC = ""þENDþIF FEED.REC = "" THENþ  feed = "FEEDS"þ  READ FEED.REC FROM F.RSS.FEEDS, feed ELSEþ    CALL SET.CONTENT.TYPE("application/xml")þ    CALL WEB.SEND('<H1>No feeds configured</H1>')þ    STOPþ  ENDþENDþSEL.SUB = FEED.REC<4>þITEM.SUB = FEED.REC<5>þMAT RSS.DATA = ""þRSS$FEED.REC = FEED.RECþREAD CATPTR FROM F.MD, SEL.SUB ELSE CATPTR = ""þ*MS 07-22-15*IF CATPTR<1> = "VR" THENþIF CATPTR<1> = "C" THEN ; *MS 07-22-15*þ  CALL @SEL.SUB(CGI$VARS,CGI$VALS,feed,F.FEED.FILE,MAT RSS.DATA)þEND ELSEþ  RSS$FEED.REC<1> = "Feed error: ":SEL.SUB:" not cataloged."þENDþFEED.REC = RSS$FEED.RECþCALL RSS.XML.ENCODE(FEED.REC,1)þFEED.TITLE = FEED.REC<1>þFEED.LINK = "http://":CGI$SERVER.NAME:CGI$PATH:'/RSS.MAIN?feed=':feedþIF FEED.REC<2> # "" THEN FEED.LINK := "&":FEED.REC<2>þFEED.DESC = FEED.REC<3>þXML = ""þXML<-1> = '<?xml version="1.0" ?>'þXML<-1> = '<rss version="2.0">'þXML<-1> = '<channel>'þXML<-1> = ' <title>':FEED.TITLE:'</title>'þXML<-1> = ' <link>':FEED.LINK:'</link>'þSHOW.DESC = FEED.DESCþIF SHOW.DESC = "" THEN SHOW.DESC = FEED.TITLEþXML<-1> = ' <description>':SHOW.DESC:'</description>'þXML<-1> = ' <generator>Sierra Bravo Pick RSS</generator>'þXDATE = DATE()þXTIME = TIME()þGOSUB MAKE.DATE.TIMEþXML<-1> = ' <lastBuildDate>':DATE.TIME:'</lastBuildDate>'þ*þIF SYSTEM(11) THENþ  SELECT TO ID.LISTþEND ELSE ID.LIST = ""þSUB.ERR = 0þLOOPþ  READNEXT RID FROM ID.LIST ELSE EXITþ  READ FEED.REC FROM F.FEED.FILE, RID ELSE EXITþ  READ CATPTR FROM F.MD, ITEM.SUB ELSE CATPTR = ""þ*MS 07-22-15*  IF CATPTR<1> = "VR" THENþ  IF CATPTR<1> = "C" THEN ; *MS 07-22-15*þ    CALL @ITEM.SUB(CGI$VARS,CGI$VALS,F.FEED.FILE,RID,FEED.REC,MAT RSS.DATA)þ  END ELSEþ    SUB.ERR = 1þ    MAT RSS.DATA = ""þ    RSS$TITLE = "Subroutine ":ITEM.SUB:" not cataloged."þ    RSS$DESCRIPTION = "Feed Error"þ    RSS$DATE = ICONV("1/1/2000",'D')þ    RSS$TIME = ICONV("12:00:00",'MT')þ  ENDþ  FOR XX = 1 TO 5þ    CALL RSS.XML.ENCODE(RSS.DATA(XX),1)þ  NEXT XXþ  XML<-1> = '<item>'þ  XML<-1> = ' <title>':RSS$TITLE:'</title>'þ  IF INDEX(RSS$LINK,'//',1) THENþ    LINK = RSS$LINKþ  END ELSE IF RSS$LINK # "" THENþ    LINK = "http://":CGI$SERVER.NAME:CGI$PATH:'/':RSS$LINKþ  END ELSEþ    LINK = ""þ  ENDþ  XML<-1> = ' <link>':LINK:'</link>'þ  XML<-1> = ' <author>':RSS$AUTHOR:'</author>'þ  XML<-1> = ' <description><![CDATA['þ  XML<-1> = RSS$DESCRIPTIONþ  XML<-1> =']]></description>'þ  XDATE = RSS$DATEþ  XTIME = RSS$TIMEþ  GOSUB MAKE.DATE.TIMEþ  XML<-1> = '<pubDate>':DATE.TIME:'</pubDate>'þ  XML<-1> = '</item>'þ  CALL WEB.SEND(XML)þ  XML = ''þREPEATþXML<-1> = '</channel>'þXML<-1> = '</rss>'þCALL WEB.SEND(XML)þSTOPþ*þMAKE.DATE.TIME: *þ*þREADV GMT.OFFSET FROM F.MVDB.CONTROL, 'MVDB.SETTINGS', 6 ELSE GMT.OFFSET = 0þIF XTIME = "" THEN XTIME = TIME()þIF XDATE = "" THEN XDATE = DATE()þ*XTIME += ICONV("5:00",'MT')þXTIME += 3600 * (GMT.OFFSET * (-1))þIF XTIME > 86400 THENþ  XTIME -= 86400þ  XDATE += 1þENDþDATE.TIME = OCONV(XDATE,'DWA')[1,3]:', ':OCONV(XDATE,'DD'):' ':OCONV(XDATE,'DMA')[1,3]:' ':OCONV(XDATE,'DY'):' ':OCONV(XTIME,'MTS')þRETURN000DD8MVDB.PURGE.SESSIONSþ0c2* @(#) MVDB.PURGE.SESSIONS Ported to jBASE 17:00:17  08 JUL 2015þ*  The following variable names were convertedþ*   DATE,TIMEþ* þ*þ* Copyright (C) 2007 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written by: Luke Bucklin, Sierra Bravoþ* Date: November, 2007þ* Description: Purge old session dataþ*þ* Modified By: Mike Street, Zumasys for UniData compatibilityþ* Date: 07/22/2015þ* Description: Changed TCLREAD to use @SENTENCEþ* 11-30-15 TOM PARKER - PURGE BASED ON PASSED USERIDþ* 01-25-16 TOM PARKER - DONT AUTO PURGE EMAILED AND WEBSERVICE LOGINS FOR 10 MINUTESþ*þ*#MAKE# RL $OPTIONS D3þ    OPEN '','WEB.SESSION' TO F.WEB.SESSION ELSE STOP 201, 'WEB.SESSION'þ    OPEN '','MVDB.UDATA' TO F.MVDB.UDATA ELSE STOP 201, 'MVDB.UDATA'þ    OPEN '','MVDB.CONTROL' TO F.MVDB.CONTROL ELSE STOP 201, 'MVDB.CONTROL'þ*þ    READ SETTINGS.REC FROM F.MVDB.CONTROL, 'MVDB.SETTINGS' ELSE SETTINGS.REC = ""þ    PURGE.AGE = SETTINGS.REC<5> * 3600  ;* Specified in hoursþ    IF PURGE.AGE = 0 THEN PURGE.AGE = 8 * 3600þ*þ*MS 07-22-15*TCLREAD TCL.LINEþ    TCL.LINE = @SENTENCE     ;*MS 07-22-15*þ    PS.LIST = OCONV( TCL.LINE, 'G1 999' )þ    PS.LIST = TRIM( PS.LIST )þ    CONVERT " " TO @AM IN PS.LISTþ*11-30-15*    IF PS.LIST # "" THENþ*11-30-15*        XLINE = "SELECT WEB.SESSION "þ*11-30-15*        FOR N = 1 TO DCOUNT(PS.LIST,@AM)þ*11-30-15*            XLINE := "'":PS.LIST<N>:"' "þ*11-30-15*        NEXT Nþ*11-30-15*        EXECUTE XLINE CAPTURING JUNKþ*11-30-15*        FORCE.PURGE = 1þ*11-30-15*    END ELSEþ*11-30-15*        EXECUTE 'SSELECT WEB.SESSION' CAPTURING JUNKþ*11-30-15*        FORCE.PURGE = 0þ*11-30-15*    ENDþ    EXECUTE 'SSELECT WEB.SESSION' CAPTURING JUNK; *11-30-15*þ    PURGE.LIST = ''þ    LOOPþ        READNEXT SESS.ID ELSE EXITþ        READ SESS.REC FROM F.WEB.SESSION,SESS.ID ELSE SESS.REC = ''þ        PURGE.THIS = 0þ        PURGE.WEBSERVICE=0;  *01-25-16*þ*11-30-15*        IF FORCE.PURGE THENþ*11-30-15*            PURGE.THIS = 1þ*11-30-15*        END ELSEþ        LOCATE SESS.ID IN PS.LIST SETTING PURGE.THIS ELSEþ           PURGE.THIS=0þ           LOCATE 'userid' IN SESS.REC<1> SETTING USERID.POS ELSE USERID.POS=0þ           IF USERID.POS THENþ              USERID=SESS.REC<2,USERID.POS>þ*01-25-16*              LOCATE USERID IN PS.LIST SETTING PURGE.THIS ELSE PURGE.THIS=0þ              LOCATE USERID IN PS.LIST SETTING PURGE.WEBSERVICE ELSE PURGE.WEBSERVICE=0; *01-25-16þ            ENDþ         ENDþ        IF NOT(PURGE.THIS) THENþ            LOCATE "LastSessionAccess" IN SESS.REC<1> SETTING VPOS THENþ                Date = FIELD(SESS.REC<2,VPOS>,'*',1)þ                Time = FIELD(SESS.REC<2,VPOS>,'*',2)þ*þ                AGE = (DATE()-Date) * 86400þ                AGE += (TIME()-Time)þ*þ*01-25-16*                IF AGE > PURGE.AGE THENþ                IF PURGE.WEBSERVICE THEN THIS.PURGE.AGE=600 ELSE THIS.PURGE.AGE=PURGE.AGE; * 01-25-16þ                IF AGE > THIS.PURGE.AGE THEN; * 01-25-16þ                    PURGE.THIS = 1þ                ENDþ            END ELSE PURGE.THIS = 1þ        ENDþ        IF PURGE.THIS THENþ            DELETE F.WEB.SESSION, SESS.IDþ            PURGE.LIST<-1> = SESS.IDþ        ENDþ    REPEATþ*þ    EXECUTE 'SELECT MVDB.UDATA' CAPTURING JUNKþ    LOOPþ        READNEXT ID ELSE EXITþ        SID = FIELD( ID, '$', 1 )þ        LOCATE SID IN PURGE.LIST SETTING POS THENþ            DELETE F.MVDB.UDATA, IDþ        END ELSEþ            READ TST FROM F.WEB.SESSION, SID ELSEþ                DELETE F.MVDB.UDATA, IDþ            ENDþ        ENDþ    REPEATþ    STOP00300FAPP.INSTALLERþ0c2*þ* Copyright (C) 2009 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written by: Luke Bucklin, Sierra Bravo Corporationþ* Date: 07/15/2009þ* Description: Application installerþ*þ* Modified By: Dave Bucklin, Nerdery Interactive Labsþ* Date: 02/04/2011þ* Description: Add overwrite flag, clashes handling specific to MVDashboardþ*þ* Modified By: Mike Street, Zumasysþ* Date: 07/22/2015þ* Description: Adapt for UniDataþ*þ* Modified By: Peter Schellenbach, Zumasysþ* Date: 07/28/2015þ* Description: added DATA stacking for EXECUTE commands (UniData CONVERT.DICTS program)þ*þ*þ    BUFFER = ""þ*þ    INSTALL.LOG.ON = 0þ    INSTALL.LOG.ID = "INSTALL*":DATE():"*":TIME()þ    INSTALL.LOG = ""þ    PROCESS.STATUS = 0þ    OVR.FLAG = 0þ    PROMPT ""þ    PRINT "File path: ":    þ    INPUT PACKAGE.FILEþ    IF PACKAGE.FILE = "VERSION" THENþ        PRINTþ        PRINT "Installer Version"þ        PRINT "1.0"þ        STOPþ    ENDþ*þ    returnCode = ""þ*þ    OPENSEQ PACKAGE.FILE TO HANDLE ELSEþ        PRINT "Unable to open sequential file"þ        STOPþ    ENDþ*UD   HANDLE = %OPEN(PACKAGE.FILE,O$RDONLY+O$BINARY)þ*UD   IF NOT(HANDLE) THENþ*UD       PRINT "Unable to open file." ; STOPþ*UD   ENDþ*þ    L = 0þ    PACKET = ""þ    LOOP    þ*UD     L = %READ(HANDLE,BUFFER,10000)þ*UDþ        OSBREAD BUFFER FROM HANDLE LENGTH 10000 þ*UD   IF PACKET = '' THENþ*UD      CRT 'CANT READ BUFFER'þ*UD      STOPþ*UD    ENDþ*UD   BUFFER=''þ*UD ENDþ        L=LEN(BUFFER)þ*END UD*þ    WHILE L > 0 DOþ        PACKET := BUFFERþ    REPEATþ    IF PACKET = "" THENþ        PRINT "No package."þ        STOPþ    ENDþ    INSTALL.ID = TIMEDATE()þ    KEEP.SOURCE = "1"þ*þ    PRINTþ    PRINT "Installing..."þ*þ    OPEN '','MV.PACKED.FILE' TO F.PACKED.FILE ELSEþ        CMD = "CREATE-FILE MV.PACKED.FILE 1 31"þ        GOSUB EXEC.CMDþ        OPEN '','MV.PACKED.FILE' TO F.PACKED.FILE ELSEþ            ERRFILE = "MV.PACKED.FILE"þ            GOSUB OPEN.ERRþ            STOPþ        ENDþ    ENDþ    WRITE PACKET ON F.PACKED.FILE, "PACKAGE"þþ    OPEN '','VOC' TO F.MD ELSEþ        ERRFILE = "VOC"þ        GOSUB OPEN.ERRþ        STOPþ    ENDþ    OPEN "MV.INSTALL" TO F.INSTALL ELSEþ        CMD = "CREATE-FILE MV.INSTALL 1 11"þ        GOSUB EXEC.CMDþ        OPEN "MV.INSTALL" TO F.INSTALL ELSEþ            ERRFILE = "MV.INSTALL"þ            GOSUB OPEN.ERRþ            STOPþ        ENDþ    ENDþ    OPEN "MV.INSTALL.CF" TO F.INSTALL.CF ELSEþ        CMD = "CREATE-FILE MV.INSTALL.CF 1 11"þ        GOSUB EXEC.CMDþ        OPEN "MV.INSTALL.CF" TO F.INSTALL.CF ELSEþ            ERRFILE = "MV.INSTALL.CF"þ            GOSUB OPEN.ERRþ            STOPþ        ENDþ    ENDþ    OPEN "MVAPPS.INSTALLED" TO F.MVAPPS.INSTALLED ELSEþ        CMD = "CREATE-FILE MVAPPS.INSTALLED 3 31"þ        GOSUB EXEC.CMDþ        OPEN "MVAPPS.INSTALLED" TO F.MVAPPS.INSTALLED ELSEþ            ERRFILE = "MVAPPS.INSTALLED"þ            GOSUB OPEN.ERRþ            STOPþ        ENDþ    ENDþ    OPEN "DICT","MVDB.CLASHES" TO FD.MVDB.CLASHES ELSEþ        CMD = "CREATE-FILE DICT MVDB.CLASHES 3"þ        GOSUB EXEC.CMDþ    ENDþ    INSTALL.LOG.ON = 1þ*þ    CLEARFILE F.INSTALLþ    DELETE F.INSTALL.CF, "MVAPPS-PRE-SCRIPT"      ;* Get rid of this just in case one is left overþ    DELETE F.INSTALL.CF, "MVAPPS-POST-SCRIPT"þ    DELETE F.INSTALL.CF, "PACKAGE.INFO"þ    TARGET = F.INSTALLþ    TARGET.NAME = "MV.INSTALL"þ    GOSUB UNPACKþ* All individual file packages are now in INSTALLþ* Unpack the MD scriptsþ    READ PACKET FROM F.INSTALL, "MV.INSTALL.CF" THENþ        TARGET = F.INSTALL.CFþ        TARGET.NAME = "MV.INSTALL.CF"þ        GOSUB UNPACKþ        DELETE F.INSTALL, "MV.INSTALL.CF"þ    ENDþ*þ* Execute scripts that are required prior to compilationþ*þ    READ CMD FROM F.INSTALL.CF, "MVAPPS-PRE-SCRIPT" THENþ        LOG.LINE = TIMEDATE():": Processing PRE-INSTALL commands..."þ        INSTALL.LOG<-1> = LOG.LINEþ* Execute commands that need to be run before the install process beginsþ        GOSUB EXEC.CMDþ        LOG.LINE = TIMEDATE():": Completed PRE-INSTALL commands."þ        INSTALL.LOG<-1> = LOG.LINEþ    ENDþ    READ PACKAGE.INFO FROM F.INSTALL.CF, "PACKAGE.INFO" ELSE PACKAGE.INFO = ""þ    PACKAGE.ID = PACKAGE.INFO<6>þ    PACKAGE.INFO<4> = DATE()þ    PACKAGE.INFO<5> = TIME()þ*þ    SELECT F.INSTALLþ    LOOPþ        READNEXT PKG.ID ELSE EXITþ        IF PKG.ID # "" THENþ            READ PACKET FROM F.INSTALL, PKG.ID THENþ                TARGET.FILE = FIELD(PKG.ID," ",1)þ                IF TARGET.FILE[1,7] = "BINARY:" THEN TARGET.FILE=TARGET.FILE[8,999]        ;*UDþ                DICT.MOD = FIELD( PKG.ID," ",2)þ                DATA.MOD = FIELD( PKG.ID," ",3)þ                DICT = ""þ                IF FIELD( PKG.ID,'_',1 ) = "DICT" THENþ                    TARGET.FILE = FIELD( PKG.ID, '_', 2 )þ                    IF TARGET.FILE[1,7] = "BINARY:" THEN TARGET.FILE=TARGET.FILE[8,999]    ;*UDþ                    DICT = "DICT"þ                ENDþ                OPEN DICT,TARGET.FILE TO F.TARGET ELSEþ                    IF NOT(INDEX(TARGET.FILE,':',1)) THENþ                        IF DICT.MOD = "" THEN DICT.MOD = 3þ                        IF DATA.MOD = "" THEN DATA.MOD = 31þ                        CMD = "CREATE-FILE ":TARGET.FILE:" ":DICT.MOD:" ":DATA.MODþ                        GOSUB EXEC.CMDþ                    ENDþ                    OPEN DICT,TARGET.FILE TO F.TARGET ELSEþ                        PRINT "Unable to create file ":TARGET.FILEþ                        GOSUB CLEANUPþ                        STOPþ                    ENDþ                ENDþ                TARGET = F.TARGETþ                TARGET.NAME = TRIM(DICT:" ":TARGET.FILE)þ                GOSUB UNPACKþ            ENDþ        ENDþ    REPEATþ*þ* Execute script required post compilationþ*þ    READ CMD FROM F.INSTALL.CF, "MVAPPS-POST-SCRIPT" THENþ        LOG.LINE = TIMEDATE():": Processing POST-INSTALL commands..."þ        INSTALL.LOG<-1> = LOG.LINEþ* Use compile options if they are present.þ        OPEN 'MVDB.CONTROL' TO F.MVDB.CONTROL THENþ            READ COMPILE.SETUP FROM F.MVDB.CONTROL, 'COMPILE.SETUP' THENþ                COMPILE.VERB = FIELD(COMPILE.SETUP<1>,' ',1)þ                IF COMPILE.VERB # '' THENþ                    OPTS = FIELD(COMPILE.SETUP<1>,'(',2)þ                    IF OPTS # '' THEN OPTS = "(":OPTSþ                    CMD.CNT = DCOUNT( CMD, @AM )þ                    FOR CMD.XX = 1 TO CMD.CNTþ                        IF FIELD(CMD<CMD.XX>,' ',1) = 'BASIC' OR FIELD(CMD<CMD.XX>,' ',1) = 'COMPILE' THENþ*make sure we use the right verb and options from the compile.setupþ                            CMD<CMD.XX> = COMPILE.VERB:' ':CMD<CMD.XX>[INDEX(CMD<CMD.XX>,' ',1)+1,999]:' ':OPTSþ                        ENDþ                    NEXT CMD.XXþ                ENDþ            ENDþ        ENDþ* Execute commands that need to be run at the end of the install processþ        GOSUB EXEC.CMDþ        LOG.LINE = TIMEDATE():": Completed POST-INSTALL commands."þ        INSTALL.LOG<-1> = LOG.LINEþ    ENDþ*þ*UD*    IF NOT(KEEP.SOURCE) THENþ*UD*        FOR X = 1 TO DCOUNT( SOURCE.FILES, @AM )þ*UD*            CMD = "CLEAR-FILE DATA ":SOURCE.FILES<X>þ*UD*            GOSUB EXEC.CMDþ*UD*        NEXT Xþ*UD*    ENDþ    READ INSTALL.LIST FROM F.INSTALL.CF, "LAST.INSTALL" ELSE INSTALL.LIST = ""þ    INSTALL.LIST = INSERT( INSTALL.LIST, 1, 0, 0, INSTALL.ID )þ    WRITE INSTALL.LIST ON F.INSTALL.CF, "LAST.INSTALL"þ    GOSUB CLEANUPþ    INSTALL.LOG<-1> = TIMEDATE():": Install complete."þ    WRITE INSTALL.LOG ON F.INSTALL.CF, INSTALL.LOG.IDþ    WRITE PACKAGE.INFO ON F.MVAPPS.INSTALLED, PACKAGE.IDþ    PROCESS.STATUS = 1þ    GOSUB SEND.DATAþ    STOPþ*********þUNPACK:   *þ*********þ    PRINT "Unpacking ":TARGET.NAME:"... ":þ*þ    BYTES = 0þ    CNT = 0þ    LOOPþ        PLENGTH = OCONV( PACKET[1,6], 'MCXD' )þ        REC = PACKET[7,PLENGTH]þ        PACKET = PACKET[PLENGTH+7,9999999]þ        ID = REC<1>þ        REC = DELETE( REC, 1, 0, 0 )þ        TYP = REC[1,2]þ        OVR.FLAG = REC[3,1]þ        REC = REC[4,9999999]þ        IF TYP = "0x" THENþ            REC = OCONV( REC, 'MY' )þ            END ELSE IF TYP # "0c" THENþ                REC = TYP:RECþ            ENDþ*þ            CNT += 1þ            BYTES += LEN(REC)þ            IF OVR.FLAG THENþ                IF DICT = "" THENþ*If we're not installing DICT items, compare for CLASHESþ                    READ CLASH FROM TARGET, ID THENþ                        BEGIN CASEþ*Preserve dashboard user passwordsþ                        CASE TARGET.FILE = "MVDB.USERS"þ                            IF CLASH<1> # REC<1> THEN REC<1> = CLASH<1>þ*Preserve dashboard access profileþ                        CASE TARGET.FILE = "MVDB.DEFS"þ                            IF CLASH<5> # REC<5> THEN REC<5> = CLASH<5>þ*Preserve widget access profileþ                        CASE TARGET.FILE = "MVDB.WIDGETS"þ                            IF CLASH<2> # REC<2> THEN REC<2> = CLASH<2>þ*Preserve widget compile optionþ                        CASE TARGET.FILE = "MVDB.CONTROL" AND ID = "COMPILE.SETUP"þ                            IF CLASH<1> # REC<1> THEN REC<1> = CLASH<1>þ                        END CASEþ                        IF CLASH # '' AND REC # CLASH THENþ                            CLASH.NAME = TARGET.NAMEþ                            CONVERT " " TO "_" IN CLASH.NAMEþ                            OPEN 'MVDB.CLASHES,':CLASH.NAME TO F.CLASHES ELSEþ                                *UD* CMD = "CREATE-FILE DATA MVDB.CLASHES,":CLASH.NAME:" 7"þ                                CMD = "CREATE-FILE MULTIFILE MVDB.CLASHES,":CLASH.NAME:" 7" ; *UD*þ                                GOSUB EXEC.CMDþ                                OPEN 'MVDB.CLASHES,':CLASH.NAME TO F.CLASHES ELSEþ                                    PRINT "Unable to create file MVDB.CLASHES,":CLASH.NAMEþ                                    GOSUB CLEANUPþ                                    STOPþ                                ENDþ                            ENDþ                            WRITE CLASH ON F.CLASHES, IDþ                            CLOSE F.CLASHESþ                        ENDþ                    ENDþ                ENDþ                WRITE REC ON TARGET, IDþ            END ELSEþ                READ TST FROM TARGET, ID ELSEþ                    WRITE REC ON TARGET, IDþ                ENDþ            ENDþ            IF NOT(MOD(CNT,500)) THEN PRINT "*":þ        UNTIL PACKET = "" DO REPEATþ        IF CNT # 1 THEN PLURAL = "s" ELSE PLURAL = ""þ        PRINT CNT:" record":PLURAL:"."þ        LOG.LINE = TIMEDATE():": UNPACKED ":CNT:" RECORDS TO ":TARGET.NAMEþ        INSTALL.LOG<-1> = LOG.LINEþ        RETURNþ**********þCLEANUP:  *þ**********þ        CLEARFILE F.INSTALLþ        CLEARFILE F.PACKED.FILEþ        RETURNþ*þEXEC.CMD: *þ*þ        CMD.CNT = DCOUNT( CMD, @AM )þ        FOR CMD.XX = 1 TO CMD.CNTþ            THIS.CMD = CMD<CMD.XX>þ            *UD* Stacked data?þ            IF INDEX(THIS.CMD,@VM,1) THENþ                THIS.DATA = THIS.CMD<1,1>þ                THIS.CMD = THIS.CMD<1,2>þ            END ELSEþ                THIS.DATA = ''þ            ENDþ            LOG.LINE = TIMEDATE():": EXEC: ":THIS.CMDþ            INSTALL.LOG<-1> = LOG.LINEþ            IF FIELD(THIS.DATA,' ',1) NE "SELECT" THENþ            DATA.CNT = DCOUNT(THIS.DATA,@VM)þ            *UD* Use DATA statements for stacked dataþ            FOR DATA.XX = 1 TO DATA.CNTþ                DATA THIS.DATA<1,DATA.XX>þ            NEXT DATA.XXþ            ENDþ            * Run the commandþ            IF FIELD(THIS.DATA,' ',1) = "SELECT" THENþ                IF FIELD(THIS.CMD,' ',1) = "CATALOG" THEN DATA "Y"þ                CRT "Executing   ":THIS.CMDþ                EXECUTE THIS.DATA : @AM : THIS.CMD þ            END ELSEþ                CRT "Executing   ":THIS.CMDþ                EXECUTE THIS.CMDþ            ENDþ            IF INSTALL.LOG.ON THENþ                WRITE INSTALL.LOG ON F.INSTALL.CF, INSTALL.LOG.IDþ            ENDþ        NEXT CMD.XXþ        RETURNþ*þOPEN.ERR: *þ*þ        LOG.LINE = TIMEDATE():": FILE OPEN ERROR: ":ERRFILEþ        INSTALL.LOG<-1> = LOG.LINEþ        PRINT LOG.LINEþ        GOSUB SEND.DATAþ        RETURNþ*þSEND.DATA:*þ*þ        PRINTþ        IF PROCESS.STATUS = 1 THEN INSTALL.STATUS = "Success" ELSE INSTALL.STATUS = "Failed"þ        PRINT "Install process finished. Status: ":INSTALL.STATUSþ        RETURNþ    END001A64WEB.SENDþ0c2SUBROUTINE WEB.SEND(FORM)þ********************þ*þ* (C) Copyright 2003 Sierra Bravo Corporation, All rights reserved.þ*þ* Program: WEB.SENDþ* Library: WBPþ*  Author: Luke J. Bucklinþ*    Date: 2/29/00þ*þ* Purpose: Send the web page.þ*þ* Modified By  : Mike Schmidt, Sierra Bravoþ* Date Revised : 11/06/2003þ* Modification : The program was modified to account for the following:þ*                1) Header Management: This program will check to seeþ*                   if the content type has been written to the browserþ*                   before ever printing anything to standard out.  Ifþ*                   the headers have not been sent, the program will printþ*                   the headers using the SESSION$CONTENT.TYPE,þ*                   SESSION$HEADERS, and SESSION$COOKIES session variables.þ*                   The program will then set the SESSION$CONTENT.SENTþ*                   variable.þ*                   WARNING: This program assumes that the global SESSIONþ*                   variables were setup prior to using this subroutine.þ*                   WARNING: The SESSION$OUTBUF.SIZE should not be reliedþ*                   upon to prevent the buffer from exceeding the set limit.þ*                   This program simply flushes the buffer if it exceedsþ*                   the set size limit.þ*þ*                2) Buffer Management: Instead of always printing everyþ*                   thing to standard out, by default the program willþ*                   write everything passed into into the SESSION$OUTBUFþ*                   variable.  This program will then flush the bufferþ*                   under certain situations.  The first is if the bufferþ*                   size reaches the limit set in SESSION$OUTBUF.SIZE. Ifþ*                   this happens the prgram will flush the buffer thenþ*                   reinitialize it.  The second is if the SESSION$OUTBUF.FLAGþ*                   is set to FALSE, then this program will always flushþ*                   the buffer.þ*þ*                3) The program will display debug information if the globalþ*                   variable SESSION$GLOBAL.DEBUG flag is >= 3.þ*þ* Modified by Mike Street, Zumasys 07-22-15 for UniData compatiblity:þ*   Changed NOT(ASSIGNED()) to UNASSIGNED()þ*þ* Modified by Peter Schellenbach of Zumasys 12-15-15 for new PDF generation featureþ*   do not append form & @AM to output buffer if form is nullþ*   do not add DOCTYPE to output unless content type is htmlþ*   do not include debug output if content type is not html or xmlþ*þ* 09-23-16 Tom Parker - Eliminate GO_BACK button support and replace withþ*          logic to handle standard browser back button (need to prevent browserþ*          from caching MVDB pages).þ*þ* 04-21-17 Peter Schellenbach - send response status code before Content-type,þ*          if set (X-MVDB-STATUS private header).þ*þ* 10-18-17 Peter Schellenbach - removed duplicate debug info section. Changed conditionþ*          for sending debug info to SESSION$GLOBAL.DEBUG >= 3 instead of = 1.þ*          Eliminate extra AM appended to the form data.þ*þ********************þ*þ* Add the incoming string to the buffer.þINCLUDE WBPD WWW.INCLUDEþ*þ*UD* IF NOT(ASSIGNED(SESSION$CONTENT.SENT)) THENþIF UNASSIGNED(SESSION$CONTENT.SENT) THEN ; *UD*þ  MAT WWW.INFO = ""þ  SESSION$CONTENT.SENT = 1þENDþ*þSHOW.SESSION.VARS = 0þIF SESSION$GLOBAL.DEBUG >= 3 THENþ  OPEN 'WEB.SESSION' TO F.WEB.SESSION THEN SHOW.SESSION.VARS = 1þENDþ*þIF FORM <> '' THENþ  CALL SWAP(FORM,'<!-- CGI$PATH -->',CGI$PATH)þ  *PJS 09-21-2017*SESSION$OUTBUF := FORM:@AMþ  SESSION$OUTBUF := FORM ; *PJS 09-21-2017*þENDþ*þ* If the buffer is greater then the max size or the buffer flag is false then flush.þIF LEN(SESSION$OUTBUF) >= SESSION$OUTBUF.SIZE OR NOT(SESSION$OUTBUF.FLAG) THENþ* Before flushing, check to see if the headers have been send.þ  IF NOT(SESSION$CONTENT.SENT) THENþ    IF SESSION$STATUS.CODE > 0 THENþ* 04-21-17 send the status code before headersþ      PRINT "X-MVDB-STATUS: ":SESSION$STATUS.CODEþ    ENDþ* The headers have not been sent so send them now.þ    IF SESSION$CONTENT.TYPE = "" THENþ      CALL SET.CONTENT.TYPE("")þ    ENDþ* If there are any cookies that need to be set, do it now.þ    PRINT "Content-type: ":SESSION$CONTENT.TYPEþ* If there are any cookies that need to be set, do it now.þ    FOR I = 1 TO DCOUNT(SESSION$COOKIES,@AM)þ      COOKIE = SESSION$COOKIES<I>þ      IF INDEX(COOKIE, "; path=", 1) + INDEX(COOKIE, ";path=", 1) = 0 THEN COOKIE := "; path=/"þ      PRINT "Set-Cookie: ":COOKIEþ    NEXT Iþ* If there are any additional headers that need to be set, do it now.þ* 9-23-16 *    PRINT 'Cache-Control: no-cache'þ    PRINT 'Expires: Mon, 26 Jul 1997 05:00:00 GMT'; * 9-26-13 *þ    PRINT 'Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0'; * 9-26-13 *þ    PRINT 'Pragma: no-cache'; * 9-26-13 *þ    FOR I = 1 TO DCOUNT(SESSION$HEADERS,@AM)þ      PRINT SESSION$HEADERS<I>þ    NEXT Iþ* Now print the blank line that ends the headers.þ    PRINTþ    IF INDEX(SESSION$CONTENT.TYPE,'html',1) THENþ      IF INDEX(SESSION$OUTBUF<1>,'<!DOCTYPE',1) = 0 THENþ        PRINT '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"'þ        PRINT '"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">'þ      ENDþ    ENDþ* Set the SESSION$CONTENT.SENT variable so next time we know not to send the headers.þ    SESSION$CONTENT.SENT = 1þ* From this point on, do not buffer.þ    IF SESSION$OUTBUF.FLAG THENþ      CALL SET.BUFFER(0)þ    ENDþ  ENDþ  LINE.CNT = DCOUNT( SESSION$OUTBUF, @AM )þ  FOR LINE.J = 1 TO LINE.CNTþ    PRINT SESSION$OUTBUF<LINE.J>þ  NEXT LINE.Jþ  IF SESSION$GLOBAL.DEBUG >= 3 THENþ    IF INDEX(SESSION$CONTENT.TYPE,'xml',1) OR INDEX(SESSION$CONTENT.TYPE,'html',1) THENþ* If the debug flag is set then dump all the session information to the browser.þ      PRINT '<!-- Debug Information generated by WEB.SEND.  This feature can be turned off by'þ      PRINT '     setting the SESSION$GLOBAL.DEBUG = "1" in the initalization program     -->'þ      PRINT '<!-- START DEBUG OUPUT 'þ      PRINT '     GET AND POST VARS:'þ      FOR I = 1 TO DCOUNT(CGI$VARS,@AM)þ        PRINT '     ':CGI$VARS<I>:' = ':CGI$VALS<I>þ      NEXT Iþ      PRINTþ      IF SHOW.SESSION.VARS THENþ        PRINT '    SESSION VARIABLES:'þ        PRINT '    SESSION$ID = ':SESSION$IDþ        READ REC FROM F.WEB.SESSION, SESSION$ID THENþ          PRINT '    SESSION DATE = ':OCONV(REC<3>,'D4/')þ          PRINT '    SESSION TIME = ':OCONV(REC<4>,'MTS,')þ          FOR I = 1 TO DCOUNT(REC<1>,@VM)þ            PRINT '    ':REC<1,I>:' = ':REC<2,I>þ          NEXT Iþ        ENDþ      ENDþ        PRINT '    END DEBUG OUTPUT -->'þ        PRINTþ      ENDþ    ENDþ  SESSION$OUTBUF = ''þ  ENDþ  RETURNþEND00009CWDB.VIEWþ0c2*þCALL WDB.VARS(VARS,VALS)þHEADING "Variable" "L#20":" ":"Value"þFOR N = 1 TO DCOUNT( VARS, @AM )þ  PRINT VARS<N> "L#20":" ":VALS<N>þNEXT NþSTOP0016A0SUB.PDF.FUNCþ0c2SUBROUTINE SUB.PDF.FUNC(ACTION, MAIN.TEMPLATE)þ*þ* Copyright (c) 2016 Zumasys, Inc. All rights reserved.þ* Description: PDF utility functionsþ*þINCLUDE WBPD WWW.INCLUDEþINCLUDE WBPD MVDB.INCLUDEþ*þDIM PDF$SETTINGS(10)þEQU PDF$ENABLED   TO PDF$SETTINGS(1)þEQU PDF$COMMAND   TO PDF$SETTINGS(2)þEQU PDF$DIRECTORY TO PDF$SETTINGS(3)þEQU PDF$LIFETIME  TO PDF$SETTINGS(4)þ*þIF INDEX(SYSTEM(33),'Win',1) THEN isWindows = 1 ELSE isWindows = 0 ;*UD*þ*þOPEN '','MVDB.CONTROL' TO F.MVDB.CONTROL ELSE STOP 201, 'MVDB.CONTROL'þMATREAD PDF$SETTINGS FROM F.MVDB.CONTROL,'PDF.SETTINGS' ELSE MAT PDF$SETTINGS=''þ*þOPEN '','WDB.DEBUG' TO F.WDB.DEBUG THEN LOGGING = 1 ELSE LOGGING = 0þ*þBEGIN CASEþ  CASE ACTION = 'generate'þ    * HTML templates may have references to css, javascript, images, etc. so swap these to be file referencesþ    IF LOGGING THENþ      CALL SUB.LOG.DEBUG.INFO(G$WIDGET.NAME,'SUB.PDF.FUNC generate')þ    ENDþ    IF isWindows THEN DIRSEP = '\' ELSE DIRSEP = '/'þ    LOCATE 'INSTALL_PATH' IN CGI$VARS SETTING POS THENþ      DBROOT = CGI$VALS<POS>þ    END ELSEþ      IF isWindows THENþ        DBROOT = 'C:\Program Files (x86)\Zumasys\MV Dashboard\bin\mvappsvr'þ      END ELSEþ        DBROOT = '/usr/local/mvappsvr/bin/mvappsvr'þ      ENDþ    ENDþ    IF isWindows THEN CONVERT '\' TO '/' IN DBROOT ;* HTML path uses forward slashþ    NDS = DCOUNT(DBROOT,'/')þ    POS = INDEX(DBROOT,'/',NDS-2)þ    IF POS = 0 THEN POS = LEN(DBROOT)þ    DBROOT = DBROOT[1,POS]:'docroot/db/'þ    *IF LOGGING THENþ    *  SAVE.MAIN.TEMPLATE = MAIN.TEMPLATEþ    *ENDþ    *þ    * TODO: the SWAP() below handles any references to images, css & scriptsþ    * that are found in the HTML to be rendered, but if there are referencesþ    * to images within css these are not handled. Need to figure out how toþ    * handle these.þ    *þ    CALL SWAP(MAIN.TEMPLATE,'/db/',DBROOT)þ    *þ    ** CLONED FROM WEB.SENDþ    CALL SWAP(MAIN.TEMPLATE,'<!-- CGI$PATH -->',CGI$PATH)þ    IF INDEX(MAIN.TEMPLATE<1>,'<!DOCTYPE',1) = 0 THEN    þ      MAIN.TEMPLATE = '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"':@AM:'"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">':MAIN.TEMPLATEþ    ENDþ    ** END CLONE FROM WEB.SENDþ    *þ    * Open the native content directory & get path to sameþ    OPEN 'NATIVE.CONTENT' TO F.NATIVE.DIR ELSEþ      PRINT '500 ERROR: CANNOT OPEN NATIVE.CONTENT'þ      STOP ;* intentional stopþ    ENDþ    NATIVE.DIR = PDF$DIRECTORYþ    IF isWindows THEN CONVERT '/' TO '\' IN NATIVE.DIR ;*UV may have wrong separator!þ    IF NATIVE.DIR[LEN(NATIVE.DIR),1] NE DIRSEP THEN NATIVE.DIR = NATIVE.DIR : DIRSEPþ    *þ    * Generate unique ID for HTML & PDF files in NATIVE.CONTENTþ    CALL SUB.GET.NEXT.ID(UNIQUE.ID,F.MVDB.CONTROL)þ    HTM.ID=UNIQUE.ID:'.htm'þ    PDF.ID=UNIQUE.ID:'.pdf'þ    *þ    * Save HTML in native content directoryþ    WRITE MAIN.TEMPLATE ON F.NATIVE.DIR,HTM.IDþ    *þ    * Build command line for PDF converterþ    INPFILE = NATIVE.DIR:HTM.IDþ    OUTFILE = NATIVE.DIR:PDF.IDþ    CMDLINE = PDF$COMMANDþ    IF CMDLINE = '' THENþ      PRINT '500 ERROR: PDF CONVERT COMMAND MISSING'þ      STOP ;* intentional stopþ    ENDþ    CALL SWAP(CMDLINE,'[INPUT_FILE]',INPFILE)þ    CALL SWAP(CMDLINE,'[OUTPUT_FILE]',OUTFILE)þ    CMDLINE = '!':CMDLINE ;*UD* quotes around INPFILE & OUTFILE on UD?þ    *þ    * Execute the PDF convert commandþ    EXECUTE CMDLINE CAPTURING OUTPUTþ    *TODO: check for errors creating PDF fileþ    IF LOGGING THENþ      CALL SUB.LOG.DEBUG.INFO(G$WIDGET.NAME,'Command line: ':CMDLINE)þ      CALL SUB.LOG.DEBUG.INFO(G$WIDGET.NAME,'docroot/db: ':DBROOT)þ      CALL SUB.LOG.DEBUG.INFO(G$WIDGET.NAME,'Command output:':@AM:OUTPUT)þ      *CALL SWAP(SAVE.MAIN.TEMPLATE,'&','&amp;')þ      *CALL SWAP(SAVE.MAIN.TEMPLATE,'<','&lt;')þ      *CALL SWAP(SAVE.MAIN.TEMPLATE,'>','&gt;')þ      *CALL SUB.LOG.DEBUG.INFO(G$WIDGET.NAME,'MAIN.TEMPLATE':@AM:SAVE.MAIN.TEMPLATE)þ    ENDþ    *þ    * Send content file name to mvappsvr using special headerþ    PRINT 'X-MVDB-CONTENT-FILE: ':OUTFILEþ    CALL SET.CONTENT.TYPE('application/pdf')þ    SESSION$HEADERS<-1> = 'Content-Disposition: attachment; filename=':PDF.IDþ    *þ    * Remove HTML file from native content directoryþ    IF NOT(LOGGING) THENþ      DELETE F.NATIVE.DIR,HTM.IDþ    ENDþ    *þ    * All done!þ    *þ  CASE ACTION = 'cleanup'þ    IF PDF$LIFETIME >= 999999 THEN RETURN ;* Keep PDF files foreverþ    IF PDF$LIFETIME = 0 THEN Freq = 3600 ELSE Freq = 86400þ    Today = DATE()þ    Now = (Today * 86400) + TIME()þ    READU PDF.CLEANUP.REC FROM F.MVDB.CONTROL,'PDF.CLEANUP.TASK' THENþ      Prev = PDF.CLEANUP.REC<1>þ    END ELSEþ      Prev = Now - Freqþ    ENDþ    IF Now < Prev + Freq THENþ      RELEASE F.MVDB.CONTROL,'PDF.CLEANUP.TASK'þ      RETURNþ    ENDþ    IF OCONV('0','D2/')[1,2] # '31' THEN USA.DATE=1 ELSE USA.DATE=0þ    * Preform cleanup once per day (or once per hour for immediate removal)þ    PDF.CLEANUP.REC = Nowþ    WRITE PDF.CLEANUP.REC ON F.MVDB.CONTROL,'PDF.CLEANUP.TASK' ON ERRORþ      NULLþ    ENDþ    OPEN 'NATIVE.CONTENT' TO F.NATIVE.DIR ELSE RETURNþ    SELECT F.NATIVE.DIRþ    DONE = 0þ    LOOPþ      READNEXT PDF.ID ELSE DONE = 1þ    UNTIL DONE DOþ      IF PDF.ID MATCHES '18N.pdf' OR PDF.ID MATCHES '18N.PDF' THENþ        IF USA.DATE THENþ          PDFTime = (ICONV(PDF.ID[5,2]:'/':PDF.ID[7,2]:'/':PDF.ID[1,4],'D') * 86400) + (PDF.ID[9,2] * 3600) + (PDF.ID[11,2] * 60) + PDF.ID[13,2]þ        END ELSEþ          PDFTime = (ICONV(PDF.ID[7,2]:'/':PDF.ID[5,2]:'/':PDF.ID[1,4],'D') * 86400) + (PDF.ID[9,2] * 3600) + (PDF.ID[11,2] * 60) + PDF.ID[13,2]þ        ENDþ        Expires = PDFTime + (PDF$LIFETIME * 86400) + 1800þ        IF Expires < Now THENþ          DELETE F.NATIVE.DIR,PDF.ID ON ERRORþ            NULLþ          ENDþ        ENDþ      ENDþ    REPEATþ    *þEND CASEþRETURNþEND00031FDELETE.SESSION.VARþ0c2    SUBROUTINE DELETE.SESSION.VAR( Var )þ* @(#) DELETE.SESSION.VAR Ported to jBASE 17:00:16  08 JUL 2015þ*  The following variable names were convertedþ*   VARþ* þ*þ* Copyright (C) 2003 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written by: Michael Derheim, Sierra Bravoþ* Date: 10/25/03þ* Description: This program reads a value from the current webþ*              session record.þ* Initþ*#MAKE# RL $OPTIONS D3þ    INCLUDE WBPD WWW.INCLUDEþ    EQU FALSE TO 0, TRUE TO 1þ    EQU AM TO CHAR(254), VM TO CHAR(253), SVM TO CHAR(252)þ*þ    READ REC FROM F.WEB.SESSION, SESSION$ID THENþ        LOCATE Var IN REC<1> SETTING POS THENþ            DELETE REC<1,POS>þ            DELETE REC<2,POS>þ            WRITE REC ON F.WEB.SESSION, SESSION$IDþ        ENDþ    ENDþ*þ    RETURN000338XML.ENCODEþ0c2SUBROUTINE XML.ENCODE(STRING.TO.PARSE, FLAG)þ*þ* Copyright (C) 2007 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written by: David Kam (Probably), Sierra Bravoþ* Date: Unknownþ* Description: Encode text prior to inserting into XML documentsþ*þ*#MAKE# RL $OPTIONS D3þIF STRING.TO.PARSE # '' THENþ  IF INDEX(STRING.TO.PARSE,'<!CDATA[',1) > 0 THENþ    FLAG = 'X'þ  ENDþ  IF INDEX(STRING.TO.PARSE,']]>',1) > 0 THENþ    FLAG = 'X'þ  ENDþ  IF FLAG = 'C' THENþ    STRING.TO.PARSE = '<[!CDATA[':STRING.TO.PARSE:']]>'þ  END ELSEþ    CALL SWAP(STRING.TO.PARSE,'&','&amp;')þ    CALL SWAP(STRING.TO.PARSE,'<','&lt;')þ    CALL SWAP(STRING.TO.PARSE,'>','&gt;')þ    CALL SWAP(STRING.TO.PARSE,'"','&quot;')þ    CALL SWAP(STRING.TO.PARSE,"'",'&#39;') ;*dmb 12/7/10 &apos; wasn't rendering correctly in IE8þ  ENDþENDþRETURN0004A5TIMEOUT.SESSIONþ0c2*þ* Copyright (C) 2004 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written by: Michael Derheim, Sierra Bravoþ* Date: 06/03/04þ* Description: This program is used to timeout session records.  This programþ*              should be run at regular intervals to remove unused session records.þ*            þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD WWW.INCLUDEþ*þEQU FALSE TO 0, TRUE TO 1þEQU AM TO CHAR(254), VM TO CHAR(253), SVM TO CHAR(252)þVAL = ''þ*þTODAY = DATE()þNOW   = TIME()þ*þOPEN '','WEB.SESSION' TO F.WEB.SESSION ELSE STOPþ*þCMD = 'SELECT WEB.SESSION'þEXECUTE CMD CAPTURING JUNKþ*þLOOPþ  READNEXT ID ELSE EXITþ  READU REC FROM F.WEB.SESSION, ID THENþ    LOCATE 'LastSessionAccess' IN REC<1> SETTING POS THENþ      LAST.ACCESS = REC<2,POS>þþ      LA.DAY = FIELD(LAST.ACCESS,'*',1)þ      LA.TIME = FIELD(LAST.ACCESS,'*',2)þþ      IF (LA.DAY < (TODAY-1)) THENþ        * If it is two days old, then get rid of it.þ        DELETE F.WEB.SESSION, IDþ      ENDþ    END ELSEþ      TOTAL.VARS = DCOUNT(REC<1>, @VM)þ      REC<1,TOTAL.VARS+1> = 'LastSessionAccess'þ      REC<2,TOTAL.VARS+1> = DATE():'*':TIME()þ      WRITE REC ON F.WEB.SESSION, IDþ    ENDþ  ENDþREPEATþ*þEND0000A8GET.CGIþ0c2SUBROUTINE GET.CGI(VARNAME,VALUE)þ*þINCLUDE WBPD WWW.INCLUDEþ*þLOCATE VARNAME IN CGI$VARS SETTING POS THENþ  VALUE = CGI$VALS<POS>þEND ELSE VALUE = ""þRETURN0014B5DRILLDOWN.STACK.RTNEþ0c2SUBROUTINE DRILLDOWN.STACK.RTNE(F.MVDB.UDATA,DD.STACK,GO.BACK)þ*þ* 4-25-16 Tom Parker - Created to support drilldown cookie concept to þ*                      allow for automatic go back functionalityþ* 09-23-16 Tom Parker - Made obsolete with changes in philosophy on howþ*                       to handle going back from drilldownsþINCLUDE WBPD WWW.INCLUDEþINCLUDE WBPD MVDB.INCLUDEþINCLUDE WBPD FI.MVDB.USERSþINCLUDE WBPD FI.MVDB.DEFSþINCLUDE WBPD FI.MVDB.WIDGETSþINCLUDE WBPD FI.MVDB.WIDGET.TYPESþ*þEQU TRUE TO 1, FALSE TO 0, AM TO CHAR(254), VM TO CHAR(253), SVM TO CHAR(252)þ*þMATREAD GLOBAL.USER.DATA FROM F.MVDB.UDATA, SESSION$ID:'$UG' ELSE MAT GLOBAL.USER.DATA=''þSTACK.ID=SESSION$ID:'$DD.STACK'þREAD DD.STACK FROM F.MVDB.UDATA, STACK.ID ELSE DD.STACK=''þIF DD.STACK <> '' THENþ   LAST.STACK.CNTR=DCOUNT(DD.STACK,AM)þ   LAST.STACK.ENTRY.ID=SESSION$ID:'$DD.':LAST.STACK.CNTRþ   READ LAST.CGI.REC FROM F.MVDB.UDATA, LAST.STACK.ENTRY.ID:'.VARS' ELSE LAST.CGI.REC=''þ END ELSEþ   LAST.STACK.CNTR=0þ   LAST.CGI.REC=''þ ENDþVAL.VARS=CGI$VARS; CONVERT AM TO VM IN VAL.VARSþCGI.REC=VAL.VARSþVAL.VALS=CGI$VALS; CONVERT AM TO VM IN VAL.VALSþCGI.REC<2>=VAL.VALSþLOCATE 'dd' IN CGI$VARS SETTING POS ELSE POS=999þDD.VAR=CGI$VALS<POS>þ* DBNAME WILL BE GO_BACK IF PULLING BACK FROM DRILLDOWNþLOCATE 'dbname' IN CGI$VARS SETTING POS ELSE POS=999þDBNAME=CGI$VALS<POS>þ*þ** IF DOING A BACKUP PULL IN INFORMATION FROM PREVIOUSþ*þIF (DBNAME = "GO_BACK" OR DBNAME = "go_back") AND LAST.STACK.CNTR > 1 THENþ   DELETE.STACK.ENTRY.ID=SESSION$ID:'$DD.':LAST.STACK.CNTRþ   DELETE F.MVDB.UDATA, DELETE.STACK.ENTRY.ID:'.GUD'þ   DELETE F.MVDB.UDATA, DELETE.STACK.ENTRY.ID:'.WUD'þ   DELETE F.MVDB.UDATA, DELETE.STACK.ENTRY.ID:'.VARS'þ   DD.STACK=DELETE(DD.STACK,LAST.STACK.CNTR,0,0)þ   WRITE DD.STACK ON F.MVDB.UDATA, STACK.IDþ   NEW.STACK.ENTRY.ID=SESSION$ID:'$DD.':LAST.STACK.CNTR-1þ   READ CGI.REC FROM F.MVDB.UDATA, NEW.STACK.ENTRY.ID:'.VARS' ELSE CGI.REC=''þ   CGI$VARS=CGI.REC<1>þ   CONVERT VM TO AM IN CGI$VARSþ   CGI$VALS=CGI.REC<2>þ   CONVERT VM TO AM IN CGI$VALSþ   MATREAD GLOBAL.USER.DATA FROM F.MVDB.UDATA, NEW.STACK.ENTRY.ID:'.GUD' ELSE MAT GLOBAL.USER.DATA=''þ   MATWRITE GLOBAL.USER.DATA ON F.MVDB.UDATA, SESSION$ID:'$UG'þ**   MATREAD WIDGET.USER.DATA FROM F.MVDB.UDATA, NEW.STACK.ENTRY.ID:'.WUD' ELSE MAT WIDGET.USER.DATA=''þ   GO.BACK=1þ   RETURNþ ENDþ*þ** IF FROM A SUBMIT BUTTON THEN SIMPLY REFRESH LAST STACK ENTRYþ** BUT MAKE SURE IT HAS DRILLDOWN IF PREVIOUS DIDþ** SAME APPLIES TO DEBUG AND UNDEBUG BUTTONþ*þLOCATE 'debug_widget' IN CGI$VARS SETTING DEBUG.POS ELSE DEBUG.POS=0þLOCATE 'undebug_widget' IN CGI$VARS SETTING UNDEBUG.POS ELSE UNDEBUG.POS=0þLOCATE 'sw' IN CGI$VARS SETTING POS ELSE POS=999þSW.VAR=CGI$VALS<POS>þINP.POS=INDEX(VM:VAL.VARS,VM:'inp_',1)þIF (SW.VAR <> '' AND INP.POS) OR DEBUG.POS OR UNDEBUG.POS THENþ   LOCATE 'dd' IN LAST.CGI.REC<1> SETTING DD.POS ELSE DD.POS=999þ   DD.VAL=LAST.CGI.REC<2,DD.POS>þ   IF DD.VAL <> '' THENþ      LOCATE 'dd' IN CGI$VARS SETTING DD.POS ELSE DD.POS=DCOUNT(CGI$VARS,AM)+1þ      IF CGI$VALS<DD.POS> = '' THENþ         CGI.REC<1,DD.POS>='dd'þ         CGI.REC<2,DD.POS>=DD.VALþ         CGI$VARS<DD.POS>='dd'þ         CGI$VALS<DD.POS>=DD.VALþ       ENDþ    ENDþ   * DEBUG POSITION MAY HAVE CHANGED SO FIND AGAINþ   IF DEBUG.POS THENþ      LOCATE 'debug_widget' IN CGI.REC<1> SETTING DEBUG.POS ELSE DEBUG.POS=0þ      IF DEBUG.POS THENþ         CGI.REC=DELETE(CGI.REC,1,DEBUG.POS,0)þ         CGI.REC=DELETE(CGI.REC,2,DEBUG.POS,0)þ       ENDþ    ENDþ   IF UNDEBUG.POS THENþ      LOCATE 'undebug_widget' IN CGI.REC<1> SETTING UNDEBUG.POS ELSE UNDEBUG.POS=0þ      IF UNDEBUG.POS THENþ         CGI.REC=DELETE(CGI.REC,1,UNDEBUG.POS,0)þ         CGI.REC=DELETE(CGI.REC,2,UNDEBUG.POS,0)þ       ENDþ    ENDþ   STACK.ENTRY.ID=LAST.STACK.ENTRY.IDþ   GOSUB WRITE.STACKþ   RETURNþ ENDþ*þ*þ** SIMPLY WRITE OUT THIS SESSION INFORMATION IF:þ**    1.  NOTHING YET ON THE STACKþ**    2.  ONLY ONE ENTRY ON THE STACK AND THIS ISN'T A DRILL DOWNþ*þIF NOT(LAST.STACK.CNTR) OR (LAST.STACK.CNTR = 1 AND DD.VAR = '') THENþ   *þ   STACK.ENTRY.ID=SESSION$ID:'$DD.1'þ   DD.STACK=STACK.ENTRY.IDþ   GOSUB WRITE.STACKþ   RETURNþ ENDþ*þ** ID DOING A DRILLDOWN THEN PUSH ONTO STACKþ*þIF DD.VAR <> '' THENþ   NEXT.STACK.CNTR=LAST.STACK.CNTR+1þ   STACK.ENTRY.ID=SESSION$ID:'$DD.':NEXT.STACK.CNTRþ   DD.STACK<NEXT.STACK.CNTR>=STACK.ENTRY.IDþ   GOSUB WRITE.STACKþ   RETURNþ ENDþ*þ** IF NO CHANGE IN CGI VARS THEN REFRESH LAST STACK ENTRYþ*þIF CGI.REC = LAST.CGI.REC THENþ   STACK.ENTRY.ID=LAST.STACK.ENTRY.IDþ   GOSUB WRITE.STACKþ   RETURNþ ENDþ*þ** ALL ELSE SHOULD BE A NEW DASHBOARD SO START OVER WITH STACKþ** AFTER PURGING ALL PREVIOUSLY STACKED ITEMSþ*þIF LAST.STACK.CNTR > 1 THENþ   FOR DELETE.CNTR = LAST.STACK.CNTR TO 2 STEP -1þ      DELETE.STACK.ENTRY.ID=SESSION$ID:'$DD.':DELETE.CNTRþ      DELETE F.MVDB.UDATA, DELETE.STACK.ENTRY.ID:'.GUD'þ      DELETE F.MVDB.UDATA, DELETE.STACK.ENTRY.ID:'.WUD'þ      DELETE F.MVDB.UDATA, DELETE.STACK.ENTRY.ID:'.VARS'þ    NEXT DELETE.CNTRþ ENDþSTACK.ENTRY.ID=SESSION$ID:'$DD.1'þDD.STACK=STACK.ENTRY.IDþGOSUB WRITE.STACKþ*þRETURNþ*þWRITE.STACK:þ*þWRITE DD.STACK ON F.MVDB.UDATA, STACK.IDþWRITE CGI.REC ON F.MVDB.UDATA, STACK.ENTRY.ID:'.VARS'þMATWRITE GLOBAL.USER.DATA ON F.MVDB.UDATA, STACK.ENTRY.ID:'.GUD'þRETURNþ*þEND000D0CMVDB.DEBUGþ0c2*þ* Copyright (C) 2007 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written by: Luke Bucklin, Sierra Bravoþ* Date: December, 2007þ* Description: Dashboard & Widget Debuggerþ*þ*#MAKE# RL $OPTIONS D3þINCLUDE WBPD MVDB.INCLUDEþINCLUDE WBPD FI.MVDB.WIDGETSþPROMPT ''þ*þOPEN '','MVDB.DEBUG.INFO' TO F.MVDB.DEBUG.INFO ELSEþ  EXECUTE 'CREATE-FILE MVDB.DEBUG.INFO 1 3' CAPTURING JUNKþ  OPEN '','MVDB.DEBUG.INFO' TO F.MVDB.DEBUG.INFO ELSE STOP 201, 'MVDB.DEBUG.INFO'þENDþOPEN '','MVDB.WIDGETS' TO F.MVDB.WIDGETS ELSE STOP 201, 'MVDB.WIDGETS'þ*þMY.PORT = FIELD( OCONV( '', 'U50BB' ), ' ', 1 )þDEBUG.ID = MY.PORTþ*þREAD DB.REC FROM F.MVDB.DEBUG.INFO, DEBUG.ID ELSE DB.REC = ''þ*þWIDGET.ID = DB.REC<1>þ*þPRINT "Bravo Dashboard Debugger"þPRINTþOK = 0þLOOPþ  PRINT "Widget (?=list)":þ  IF WIDGET.ID # "" THEN PRINT " (":WIDGET.ID:")":þ  PRINT ": ":þ  INPUT USE.WIDGET.IDþ  IF USE.WIDGET.ID # '' THEN WIDGET.ID = USE.WIDGET.IDþ  BEGIN CASEþ    CASE WIDGET.ID = ''þ      STOPþ    CASE WIDGET.ID = "?"þ      EXECUTE "SORT MVDB.WIDGETS"þ      PRINTþ      WIDGET.ID = ''þ    CASE 1þ      MATREAD WIDGET.ITEM FROM F.MVDB.WIDGETS, WIDGET.ID THENþ        OK = 1þ      END ELSEþ        PRINT "Invalid widget ID: ":WIDGET.IDþ      ENDþ  END CASEþUNTIL OK DO REPEATþDB.REC<1> = WIDGET.IDþ*þUSERID = DB.REC<2>þPRINTþOK = 0þLOOPþ  PRINT "User ID (?=list)":þ  IF USERID # "" THEN PRINT " (":USERID:")":þ  PRINT ": ":þ  INPUT USE.USERIDþ  IF USE.USERID # '' THEN USERID = USE.USERIDþ  BEGIN CASEþ    CASE USERID = "?"þ      EXECUTE 'SORT MVDB.USERS'þ      PRINTþ      USERID = ''þ    CASE 1þ      OK = 1þ  END CASEþUNTIL OK DO REPEATþ*þDB.REC<2> = USERIDþ*þG$CURRENT.DB = DB.REC<3>þPRINTþOK = 0þLOOPþ  PRINT "Dashboard ID (?=list)":þ  IF G$CURRENT.DB # "" THEN PRINT " (":G$CURRENT.DB:")":þ  PRINT ": ":þ  INPUT USE.DBþ  IF USE.DB # '' THEN G$CURRENT.DB = USE.DBþ  BEGIN CASEþ    CASE USE.DB = "?"þ      EXECUTE 'SORT MVDB.DEFS'þ      PRINTþ      G$CURRENT.DB = ''þ    CASE 1þ      OK = 1þ  END CASEþUNTIL OK DO REPEATþ*þDB.REC<3> = G$CURRENT.DBþ*þ* Pull in user dataþ*þMATREAD WIDGET.USER.DATA FROM F.MVDB.DEBUG.INFO,DEBUG.ID:"$":WIDGET.ID ELSE MAT WIDGET.USER.DATA = ''þ*þLOOPþ  PRINT "Widget User Data"þ  PRINT "----------------"þ  FOR X = 1 TO 100þ    IF WIDGET.USER.DATA(X) # '' THENþ      PRINT X "R#3":". '":WIDGET.USER.DATA(X):"'"þ    ENDþ  NEXT Xþ  PRINTþ  PRINT "User Data field # to change or ENTER to continue: ":þ  INPUT UPOSþWHILE UPOS MATCHES "1N0N" DOþ  PRINT "Position ":UPOSþ  PRINT "Current Value: ":WIDGET.USER.DATA(UPOS)þ  PRINT "New Value: ":þ  INPUT NEW.VALþ  WIDGET.USER.DATA(UPOS) = NEW.VALþREPEATþ*þMATWRITE WIDGET.USER.DATA ON F.MVDB.DEBUG.INFO, DEBUG.ID:"$":WIDGET.IDþ*þWRITE DB.REC ON F.MVDB.DEBUG.INFO, DEBUG.IDþ*þMAT WIDGET.INFO = ''þG$WIDGET.NAME = WIDGET.IDþG$WIDGET.SUB = WIDGET.SUBþG$USERID = USERIDþG$QUERYMODE = ''þG$DRILLDOWNMODE = 0þ*þPRINTþPRINT "Use Debugger (y/N): ":þINPUT USE.DEBUGþIF USE.DEBUG = "Y" THEN DEBUG ELSEþ  PRINT "Calling ":WIDGET.SUBþENDþ*#MAKE# RL IF 0 THENþSTART.TIMER = SYSTEM(12)þ*#MAKE# RL ENDþUSE.SUB.NAME = WIDGET.SUBþCALL @USE.SUB.NAMEþ*#MAKE# RL IF 0 THENþDURATION = SYSTEM(12) - START.TIMERþ*#MAKE# RL END ELSEþ*#MAKE# RL   DURATION = "Unavailable"þ*#MAKE# RL ENDþMATWRITE WIDGET.USER.DATA ON F.MVDB.DEBUG.INFO, DEBUG.ID:"$":WIDGET.IDþPRINT "Call completed. Duration: ":DURATIONþSTOP000A3BMVDB.SUB.WIDGET.LISTþ0c2SUBROUTINE MVDB.SUB.WIDGET.LIST(WIDGET.LIST)þ*þ* Copyright (C) 2007 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written by: Luke Bucklin, Sierra Bravoþ* Date: November, 2007þ* Description: Produce a list of defined widgets.þ*þ*#MAKE# RL $OPTIONS D3þOPEN '','MVDB.WIDGETS' TO F.MVDB.WIDGETS ELSE STOP 201, 'MVDB.WIDGETS'þOPEN '','MD' TO F.MD ELSEþ  OPEN '','VOC' TO F.MD ELSE STOP 201, 'MD OR VOC'þENDþ*þINCLUDE WBPD MVDB.INCLUDEþINCLUDE WBPD FI.MVDB.WIDGETSþ*þCALL GET.SESSION.VAR("failed_widgets",FAILED.WIDGETS) ;* Retrieve a list of failed widgets this sessionþCALL GET.SESSION.VAR("running_widget",FAILED.WIDGET)þCALL GET.SESSION.VAR("running_widget_dt",FAILED.WIDGET.DT)þIF FAILED.WIDGET # "" THENþ  FW.DATE = FIELD( FAILED.WIDGET.DT, '*', 1 )þ  FW.TIME = FIELD( FAILED.WIDGET.DT, '*', 2 )þ  FW.LAPSE = TIME() - FW.TIMEþ  FW.LAPSE += ((DATE() - FW.DATE) * 86400)þ  IF FW.LAPSE < 2 THEN FAILED.WIDGET = "" ;* No more than 2 seconds to run a widget in query modeþENDþIF FAILED.WIDGET # "" THENþ  CALL PUT.SESSION.VAR("running_widget","")þ  CALL PUT.SESSION.VAR("running_widget_dt","")þ  LOCATE FAILED.WIDGET IN FAILED.WIDGETS SETTING FWPOS ELSEþ    FAILED.WIDGETS<-1> = FAILED.WIDGETþ    CALL PUT.SESSION.VAR("failed_widgets",FAILED.WIDGETS)þ  ENDþENDþ*þWIDGET.LIST = ''þ*þEXECUTE 'SSELECT MVDB.WIDGETS' CAPTURING JUNKþ*þDP = 0þLOOPþ  READNEXT ID ELSE EXITþ  MATREAD WIDGET.ITEM FROM F.MVDB.WIDGETS, ID ELSE MAT WIDGET.ITEM = ''þ  DP += 1þ  WIDGET.LIST<1,DP> = IDþ  SUBNAME = WIDGET.SUBþ  G$QUERYMODE = 1þ  G$WIDGET.NAME = IDþ  MAT WIDGET.INFO = ''þ  MAT WIDGET.USER.DATA = ''þ  MAT GLOBAL.TEMP.DATA = ''þ  MAT GLOBAL.USER.DATA = ''þ  FAIL.STATUS = 0 ;* Okayþ  FAIL.TEXT = ""þ  LOCATE ID IN FAILED.WIDGETS SETTING POS THENþ    W$TYPE = "FAILED"þ    W$TITLE = "Failed Widget - ":SUBNAMEþ    W$WIDTH = 3þ    FAIL.STATUS = 1 ;* Failedþ    FAIL.TEXT = "Subroutine Failed"þ  END ELSEþ    READ CATPTR FROM F.MD, SUBNAME THENþ      CALL PUT.SESSION.VAR("running_widget",ID)þ      DT.STAMP = DATE():"*":TIME()þ      CALL PUT.SESSION.VAR("running_widget_dt",DT.STAMP)þ      CALL @SUBNAMEþ      CALL PUT.SESSION.VAR("running_widget","")þ      CALL PUT.SESSION.VAR("running_widget_dt","")þ    END ELSEþ      W$TYPE = "FAILED"þ      W$TITLE = "Not Cataloged - ":SUBNAMEþ      W$WIDTH = 3þ      FAIL.TEXT = "Subroutine Not Cataloged"þ    ENDþ  ENDþ  IF FIELD(W$TYPE,':',1) = "MAP" THEN W$TYPE = "MAP"þ  WIDGET.LIST<3,DP> = SUBNAMEþ  WIDGET.LIST<4,DP> = W$TYPEþ  WIDGET.LIST<5,DP> = W$TITLEþ  WIDGET.LIST<6,DP> = W$WIDTHþ  WIDGET.LIST<7,DP> = FAIL.STATUSþ  WIDGET.LIST<8,DP> = FAIL.TEXTþREPEATþRETURN00042EGET.SESSION.IDþ0c2SUBROUTINE GET.SESSION.ID( SESSION.ID, VARS, VALS )þ*þ* Copyright (C) 2003 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written by: Michael Derheim, Sierra Bravoþ* Date: 10/25/03þ* Description: This program extracts the session id from the VARS and VALSþ*              The programmer could just as easily parse out the HTTP_COOKIEþ*              header and get the value, but this just standardizes the þ*              process.þ*             þ* Initþ*#MAKE# RL $OPTIONS D3þEQU FALSE TO 0, TRUE TO 1þEQU AM TO CHAR(254), VM TO CHAR(253), SVM TO CHAR(252)þSESSION.ID = ''þ*þNUM.VARS = DCOUNT(VARS, AM)þFOR X = 1 TO NUM.VARSþ  IF (VARS<X> = 'HTTP_COOKIE') THENþ    CSTRING = VALS<X>þ        CALL SWAP( CSTRING, '%3B ', ';')þ    CONVERT ';' TO AM IN CSTRINGþ    NUM.COOKIES = DCOUNT(CSTRING, AM)þ    FOR Y = 1 TO NUM.COOKIESþ      CVAR = TRIM(FIELD(CSTRING<Y>,'=',1))þ      CVAL = CSTRING<Y>[(1+INDEX(CSTRING<Y>,'=',1)),99999]þ      IF (CVAR = 'sessionid') THENþ        SESSION.ID = TRIM(CVAL)þ        EXITþ      ENDþ    NEXT Yþ  ENDþNEXT Xþ*þRETURNþ*0001C5RSS.XML.ENCODEþ0c2SUBROUTINE RSS.XML.ENCODE(STRING.TO.PARSE, FLAG)þ*þ* Copyright (C) 2007 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written by: David Kam (Probably), Sierra Bravoþ* Date: Unknownþ* Description: Encode text prior to inserting into XML documentsþ*þSWAP.CHARS = \&<>\þFOR SW = 1 TO LEN(SWAP.CHARS)þ  CH = SWAP.CHARS[SW,1]þ  HX = OCONV(SEQ(CH),'MCDX')þ  SWTO = "&#x":HX "R%2":";"þ  CALL SWAP(STRING.TO.PARSE,CH,SWTO)þNEXT SWþRETURNþþ000536PUT.SESSION.VARþ0c2SUBROUTINE PUT.SESSION.VAR( var, VAL )þ*þ* Copyright (C) 2003 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written by: Michael Derheim, Sierra Bravoþ* Date: 10/25/03þ* Description: This program inserts a variable in the the currentþ*              session record.  If the variable already exists, itþ*              is replaced.  If it does not exist, then it is created.þ*#MAKE# RL $OPTIONS D3þ* InitþINCLUDE WBPD WWW.INCLUDEþEQU FALSE TO 0, TRUE TO 1þEQU AM TO CHAR(254), VM TO CHAR(253), SVM TO CHAR(252)þIF SESSION$ID = "" THEN RETURNþ*þ* Need to get rid of the VM,SVM, and AM chars so that we canþ* store multi-valued data in the record. I am changing them toþ* very small ASCII codes that are usually not used.  This shouldþ* be pretty safe.þ*þCONVERT AM TO CHAR(2) IN VALþCONVERT VM TO CHAR(3) IN VALþCONVERT SVM TO CHAR(4) IN VALþ*þREAD REC FROM F.WEB.SESSION, SESSION$ID ELSE REC = ''þTOTAL.VARS = DCOUNT(REC<1>, VM)þLOCATE var IN REC<1> SETTING POS THENþ  REC<2,POS> = VALþEND ELSEþ  NEXT.REC = TOTAL.VARS + 1þ  REC<1,NEXT.REC> = varþ  REC<2,NEXT.REC> = VALþENDþWRITE REC ON F.WEB.SESSION, SESSION$IDþCONVERT CHAR(2) TO AM IN VALþCONVERT CHAR(3) TO VM IN VALþCONVERT CHAR(4) TO SVM IN VALþ*þIF (var # 'LastSessionAccess') THENþ  CALL PUT.SESSION.VAR('LastSessionAccess', DATE():'*':TIME())þENDþ*þRETURN000B3EWDB.VARSþ0c2SUBROUTINE WDB.VARS( VARS, VALS )þ*þ* Copyright (C) 2003 Sierra Bravo Corporation, All Rights Reservedþ*þ* Written by: Michael Derheim, Sierra Bravoþ* Date: 12/24/03þ* Description: This program is used to gather the vars and vals from aþ*              web request.þ*þ* Modified By: Peter Schellenbach, Zumasysþ* Date: 06/12/2015þ* Description: Changed PROCREAD to use SENTENCE() in the ELSE clauseþ*þ* Modified By: Peter Schellenbach, Zumasysþ* Date: 10/25/2016þ* Description: Added INCLUDE WWW.INCLUDE so we have access to CGI$UNIQUE.IDþ*              in /WWW/ COMMON, instead of using PROCREAD / SENTENCE.þ*þ*#MAKE# RL $OPTIONS D3þ*þINCLUDE WBPD WWW.INCLUDE ; *PJS 10-25-16*þ*þVARS = ''þVALS = ''þVAR.POS = 1þDIM TEMP(50)þ*þ*PJS 06-12-15*PROCREAD TCL.LINE ELSE TCL.LINE = ''þ*PJS 10-25-16*PROCREAD TCL.LINE ELSE TCL.LINE = SENTENCE() ; *PJS 06-12-15*þ*PJS 10-25-16*UNIQUE.ID = FIELD( TCL.LINE, ' ', 2)þUNIQUE.ID = CGI$UNIQUE.ID ;*PJS 10-25-16*þ*þOPEN '','WDB.Q' TO WDB.Q ELSE RETURNþ*þIF (UNIQUE.ID # '') THENþ  READ QSTRING FROM WDB.Q, UNIQUE.ID ELSE QSTRING = ''þ  CONVERT @AM TO '' IN QSTRINGþ  QLENGTH=LEN(QSTRING)þ  IF QSTRING[1,1] = '"' AND QSTRING[LEN(QSTRING),1] = '"' THENþ    QSTRING = QSTRING[2,LEN(QSTRING)-2] ;* UNIDATA hackþ  ENDþ  CONVERT '&' TO @AM IN QSTRINGþ  FOR X = 1 TO DCOUNT( QSTRING, @AM )þ    IF (TRIM(FIELD(QSTRING<X>,'=',1)) # '') THENþ      HEX.STRING = FIELD(QSTRING<X>, '=', 1) ; GOSUB CONVERT.HEXþ      VARS<VAR.POS> = HEX.STRINGþ      EQ.POS = INDEX(QSTRING<X>,'=',1)þ      HEX.STRING = QSTRING<X>[EQ.POS+1,QLENGTH] ; GOSUB CONVERT.HEXþ      VALS<VAR.POS> = HEX.STRINGþ      VAR.POS += 1þ    ENDþ  NEXT XþENDþRETURNþ*------------þCONVERT.HEX:þ*------------þHSLEN = LEN(HEX.STRING)þIF HSLEN > 5000 THENþ*IF 0 THENþ  CHUNKLEN = INT( HSLEN / 50 )þ  START.POS = 1þ  FOR CHX = 1 TO 49þ    CUT.POINT = (START.POS-1) + CHUNKLENþ    NCC = 0þ    LOOP UNTIL HEX.STRING[CUT.POINT+1,1] = "%" OR NCC > 1 DOþ      CUT.POINT += 1þ      NCC += 1þ    REPEATþ    TEMP(CHX) = HEX.STRING[START.POS,CHUNKLEN+NCC]þ    START.POS += CHUNKLEN + NCCþ  NEXT CHXþ  TEMP(50) = HEX.STRING[START.POS,QLENGTH]þ  MAX.TEMP.LOC = 50þEND ELSEþ  TEMP(1) = HEX.STRINGþ  MAX.TEMP.LOC = 1þENDþHEX.STRING = ""þFOR TEMP.LOC = 1 TO MAX.TEMP.LOC þ  IDX = 1þ  CONVERT '+' TO ' ' IN TEMP(TEMP.LOC)þ  LOOPþ    LOC = INDEX( TEMP(TEMP.LOC), '%', IDX )þ  WHILE LOC DOþ    IF TEMP(TEMP.LOC)[LOC+1,1] = "%" THENþ      IDX += 2þ    END ELSEþ      SWAP.VAL = TEMP(TEMP.LOC)[LOC+1,2]þ      SWAP.VAL = OCONV( SWAP.VAL, 'MCU' )þ      SWAP.VAL = OCONV(SWAP.VAL,'MCXD')þ      IF SWAP.VAL MATCHES "1N0N" THEN SWAP.VAL = CHAR(SWAP.VAL)þ  *    SWAP.VAL = CHAR(OCONV(SWAP.VAL,'MCXD'))þ      TEMP(TEMP.LOC)=TEMP(TEMP.LOC)[1,LOC-1]:SWAP.VAL:TEMP(TEMP.LOC)[LOC+3,QLENGTH]þ      IF SWAP.VAL = '%' THENþ        IDX += 1þ      ENDþ    ENDþ  REPEATþ  HEX.STRING := TEMP(TEMP.LOC)þNEXT TEMP.LOCþ*þRETURN00095FUSER.UPDATEþ0c2*On a new install, this should encrypt the default, plaintext passwords.þ*On an upgrade, it will encrypt all user passwords if they have not been encrypted by this program.þ* 1-2-15 TFP don't if the password is the same as the encryption of the userþ*        name then don't encrypt againþ* Modified by Mike Street of Zumasys 07-22-15 for UniData compatiblity:þ*   Change U3060 user exist to use DIGEST('MD5',...) instead.þ*þ* 06-19-17 PJS After initial installation, scan for any MVDB.USERS records whereþ* the password in USER.REC<1> is the same as the user ID. These are default usersþ* 'admin' and 'guest', and the default plaintext password on attr 1 is encryptedþ* and the user record updated. The USER.UPDATE flag in MVDB.CONTROL is updated toþ* 2 so this process will not be repeated during upgrades. There is a special caseþ* where the USER.UPDATE flag is 1, which indicates that the previous version ofþ* MVDB.ADMIN had a bug where passwords were stored in the users record before butþ* conversion to hex was not done. In this case, the MD5 hash in attr 1 is convertedþ* to hex and the user record is updated.þ*þOPEN 'MVDB.USERS' TO F.MVDB.USERS ELSE STOP 201, 'MVDB.USERS'þOPEN 'MVDB.CONTROL' TO F.MVDB.CONTROL ELSE STOP 201, 'MVDB.CONTROL'þREADV USER.UPDATE.FLAG FROM F.MVDB.CONTROL, "USER.UPDATE",1 ELSE USER.UPDATE.FLAG = ''þIF USER.UPDATE.FLAG + 0 < 2 THENþ  SELECT F.MVDB.USERSþ  LOOPþ    READNEXT USER.ID ELSE EXITþ    READ USER.REC FROM F.MVDB.USERS, USER.ID THENþ      MUST.UPDATE = 0þ      * Check for plaintext passwords in original installationþ      IF USER.ID = USER.REC<1> THEN        þ        IF DIGEST('MD5', USER.REC<1>, 1, ENCRYPTED.PSWD) = 0 THEN ; *07-22-15 UD*þ          ENCRYPTED.PSWD = OCONV(ENCRYPTED.PSWD, 'MX0C') ; *07-22-15 UD*þ          MUST.UPDATE = 1þ        ENDþ      END ELSEþ        * Check for non-hex encrypted password in MVDB.USERS caused by bug in prior versions of MVDB.ADMINþ        IF USER.UPDATE.FLAG = 1 THENþ          ENCRYPTED.LEN = LEN(USER.REC<1>)þ          IF ENCRYPTED.LEN = 16 THENþ            ENCRYPTED.PSWD = OCONV(USER.REC<1>, 'MX0C') ; *07-22-15 UD*þ            MUST.UPDATE = 1þ          END        þ        ENDþ      ENDþ      IF MUST.UPDATE THENþ        USER.REC<1> = ENCRYPTED.PSWDþ        WRITE USER.REC ON F.MVDB.USERS, USER.IDþ      ENDþ    ENDþ  REPEATþ  WRITEV 2 ON F.MVDB.CONTROL, "USER.UPDATE", 1þENDþSTOPþEND0020FEMVDB.BUILD.PACKAGEþ0c2    SUBROUTINE MVDB.BUILD.PACKAGE(MAKE.FILE,LOCATION,SIZE)þ*þ*þ* Modified by Mike Street, Zumasys 07-22-15 for UniData compatiblity:þ*   Changed reserved variable name 'LENGTH' to 'Length'þ*þ*   INCLUDE DM,BP,UNIX.H FCNTL.Hþ*   INCLUDE DM,BP,UNIX.H MODE.Hþ*   INCLUDE WBPD MVPKG.INCLUDEþ*þ    EQU FALSE TO 0, TRUE TO 1þ    EQU AM TO CHAR(254), VM TO CHAR(253)þ*UD CHAR BUFFER[10000]þ    BUFFER = ""þ    DIM PKG.REC(40)þ    LOCATION = ''þ    SIZE = 0þ*þ    OPEN "MAKE.FILE,":MAKE.FILE TO F.MAKE.FILE ELSEþ        OPEN MAKE.FILE TO F.MAKE.FILE ELSE STOP 201, MAKE.FILEþ    ENDþ    OPEN '','MVAPPS.INSTALLED' TO F.MVAPPS.INSTALLED ELSEþ        EXECUTE "CREATE-FILE MVAPPS.INSTALLED 3 11" CAPTURING JUNKþ        OPEN '','MVAPPS.INSTALLED' TO F.MVAPPS.INSTALLED ELSE STOP 201, 'MVAPPS.INSTALLED'þ    ENDþ    OPEN '','MVPKG.DATA' TO F.MVPKG.DATA ELSEþ        EXECUTE "CREATE-FILE MVPKG.DATA 3 11" CAPTURING JUNKþ        OPEN '','MVPKG.DATA' TO F.MVPKG.DATA ELSE STOP 201, 'MVPKG.DATA'þ    ENDþ    OPEN '','PACKED.FILE' TO TARGET.FILE ELSEþ        EXECUTE "CREATE-FILE PACKED.FILE 3 31" CAPTURING JUNKþ        OPEN '','PACKED.FILE' TO TARGET.FILE ELSE STOP 201, 'PACKED.FILE'þ    ENDþ    MATREAD PKG.REC FROM F.MVPKG.DATA, MAKE.FILE ELSE RETURNþ    PACKAGE.NAME = PKG$NAMEþ    PACKAGE.NAME = OCONV(PACKAGE.NAME,"MCAN")þ    PACKAGE.DESCRIPTION = PKG$DESCþ    PACKAGE.VERSION = PKG$BUILD.SEQ + 1þ    IF MAKE.FILE = '' OR PACKAGE.NAME = '' THEN RETURNþ*þ    PACKAGE.INFO = ""þ    PACKAGE.MODE = 1þ* Set up the temporary storage area for the scriptsþ    OPEN "MAKE.TEMP" TO F.MAKE.TEMP ELSEþ        EXECUTE "CREATE-FILE MAKE.TEMP 1 31" CAPTURING JUNKþ        OPEN "MAKE.TEMP" TO F.MAKE.TEMP ELSE STOP 201, "MAKE.TEMP"þ    ENDþ    CLEARFILE F.MAKE.TEMPþ    OPEN "PACKED.FILE" TO F.PACKED.FILE ELSEþ        EXECUTE "CREATE-FILE PACKED.FILE 1 31" CAPTURING JUNKþ        OPEN "PACKED.FILE" TO F.PACKED.FILE ELSE STOP 201, "PACKED.FILE"þ    ENDþ    CLEARFILE F.PACKED.FILEþ    BINARY.OPT = " (B"þ    PACKAGE.INFO<1> = PACKAGE.DESCRIPTIONþ    PACKAGE.INFO<2> = PACKAGE.VERSIONþ    PACKAGE.INFO<3> = "db"þ    PACKAGE.INFO<6> = PACKAGE.NAMEþ*þ    TARGET = "D3"þ    SCRIPT = ""þ    SCRIPT.SEG = 0þ*þ    READ COMMANDS FROM F.MAKE.FILE, TARGET:"*PRE.COMMANDS" ELSEþ        READ COMMANDS FROM F.MAKE.FILE, "PRE.COMMANDS" ELSE COMMANDS = ""þ    ENDþ    GOSUB ADD.COMMANDSþ*þ    WRITE SCRIPT ON F.MAKE.TEMP, "MVAPPS-PRE-SCRIPT"þ    WRITE PACKAGE.INFO ON F.MAKE.TEMP, "PACKAGE.INFO"þ    SCRIPT = ""þ*þ    READ FILE.LIST FROM F.MAKE.FILE, TARGET:"*FILE.LIST" ELSEþ        READ FILE.LIST FROM F.MAKE.FILE, "FILE.LIST" ELSE FILE.LIST = ""þ    ENDþ    FOR FX = 1 TO DCOUNT( FILE.LIST, @AM )þ        FNAME = FILE.LIST<FX>þ        FX.OVR = FALSEþ        IF FNAME[1,2] = 'O:' THENþ            FNAME=FNAME[3,999]þ            FX.OVR = TRUEþ        ENDþ        OPEN FNAME TO FVAR THENþ            READ ITEM.LIST FROM F.MAKE.FILE, TARGET:"*DATA_":FNAME ELSEþ                READ ITEM.LIST FROM F.MAKE.FILE, "DATA_":FNAME ELSE ITEM.LIST = ""þ            ENDþ            IF ITEM.LIST<1> = "*" THENþ                SELECT FVARþ                ITEM.LIST = ''þ                LOOPþ                    READNEXT ITEM.LIST.ID ELSE EXITþ                    ITEM.LIST<-1> = ITEM.LIST.IDþ                REPEATþ            ENDþ            WRITE ITEM.LIST ON F.MAKE.TEMP, FNAMEþ            EXECUTE "QSELECT MAKE.TEMP '":FNAME:"'" CAPTURING JUNKþ            IF SYSTEM(11) THENþ                GOSUB PACK.FILEþ            ENDþ            DELETE F.MAKE.TEMP, FNAMEþ            OPEN "DICT",FNAME TO D.FVAR THENþ                READ ITEM.LIST FROM F.MAKE.FILE, TARGET:"*DICT_":FNAME ELSEþ                    READ ITEM.LIST FROM F.MAKE.FILE, "DICT_":FNAME ELSE ITEM.LIST = ""þ                ENDþ                FNAME = "DICT ":FNAMEþ                IF ITEM.LIST<1> = "*" THENþ                    SELECT D.FVARþ                    ITEM.LIST = ''þ                    LOOPþ                        READNEXT ITEM.LIST.ID ELSE EXITþ                        ITEM.LIST<-1> = ITEM.LIST.IDþ                    REPEATþ                ENDþ                WRITE ITEM.LIST ON F.MAKE.TEMP, FNAMEþ                EXECUTE "QSELECT MAKE.TEMP '":FNAME:"'" CAPTURING JUNKþ                IF SYSTEM(11) THENþ                    GOSUB PACK.FILEþ                ENDþ                DELETE F.MAKE.TEMP, FNAMEþ            ENDþ        ENDþ    NEXT FXþ*þ    READ COMMANDS FROM F.MAKE.FILE, TARGET:"*POST.COMMANDS" ELSEþ        READ COMMANDS FROM F.MAKE.FILE, "POST.COMMANDS" ELSE COMMANDS = ""þ    ENDþ    SCRIPT = ""þ    GOSUB ADD.COMMANDSþ    WRITE SCRIPT ON F.MAKE.TEMP, "MVAPPS-POST-SCRIPT"þ    EXECUTE 'SELECT MAKE.TEMP "MVAPPS-PRE-SCRIPT" "MVAPPS-POST-SCRIPT" "PACKAGE.INFO"' CAPTURING JUNKþ    FNAME = "MAKE.TEMP"þ    GOSUB PACK.FILEþ*þ* Change the name of the file containing the scripts from MAKE.TEMP to MDþ* so they can be executed upon arrival.þ*þ    READ REC FROM F.PACKED.FILE, "MAKE.TEMP" ELSE REC = ""þ    WRITE REC ON F.PACKED.FILE, "MV.INSTALL.CF"þ    DELETE F.PACKED.FILE, "MAKE.TEMP"þ*þ    FNAME = "PACKED.FILE"þ    GOSUB PACK.FILEþ    READ PACKAGE FROM F.PACKED.FILE, "PACKED.FILE" ELSE RETURNþ    CLEARFILE F.PACKED.FILEþ    WRITE PACKAGE ON F.PACKED.FILE, PACKAGE.NAME:'-':PACKAGE.VERSIONþ    OUT.DIR = "/tmp/"þ*   HANDLE = %OPEN(OUT.DIR:PACKAGE.NAME,O$CREAT+O$TRUNC+O$RDWR+O$BINARY)þ    OPENSEQ OUT.DIR:PACKAGE.NAME TO HANDLE THENþ        ORIG.LEN =LEN(PACKAGE)þ        WTOT = 0þ        LOOPþ            IF LEN(PACKAGE) >= 10000 THENþ                BUFFER = PACKAGE[1,10000]þ                BLEN = 10000þ                PACKAGE = PACKAGE[10001,9999999]þ            END ELSEþ                BUFFER = PACKAGEþ                BLEN = LEN(PACKAGE)þ                PACKAGE = ""þ            ENDþ*UD         W = %WRITE(HANDLE,BUFFER,BLEN)þ            WRITESEQ BUFFER APPEND TO HANDLE ELSE RETURNþ            WTOT += BLENþ        WHILE PACKAGE # "" DO REPEATþ        LOCATION = OUT.DIR:PACKAGE.NAMEþ        SIZE = WTOTþ    ENDþ    RETURNþ*þADD.COMMANDS:       *þ*þ    FOR CMDX = 1 TO DCOUNT( COMMANDS, @AM )þ        SCRIPT<-1> = COMMANDS<CMDX>þ    NEXT CMDXþ    RETURNþ*þCHECK.DPOINTER:     * Check to see if the record contains a dpointerþ*þ    D.POINTER = FALSEþ    IF OCONV(REC<1>[1,1],'MCU') = "D" THENþ        IF FILE.TYPE = "DICT" THENþ            IF REC<2> MATCHES "3N0N" AND REC<3> MATCHES "1N0N" THENþ                D.POINTER = TRUEþ            ENDþ        ENDþ    ENDþ    RETURNþ*þPACK.FILE:þ    ARG.LIST = TRIM( FNAME )þ    BINARY = 1þ*þ    FILE.TYPE = 'DATA'þ    FILE.NAME = FIELD( ARG.LIST, ' ', 1 )þ    POS = 2þ    IF FILE.NAME = "DATA" OR FILE.NAME = "DICT" THENþ        FILE.TYPE = FILE.NAMEþ        FILE.NAME = FIELD( ARG.LIST, ' ', 2 )þ        POS = 3þ    ENDþ    IF FILE.TYPE = "DATA" THEN FILE.TYPE = ""þ*þ    OPEN FILE.TYPE,FILE.NAME TO PACK.FILE ELSE RETURNþ    PACK.FILE.ID = ''þ    IF FILE.TYPE # "" THEN PACK.FILE.ID = FILE.TYPE:"_"þ    IF FX.OVR THEN PACK.FILE.ID := 'O:'þ    PACK.FILE.ID := FILE.NAMEþ*þ*Packing PACK.FILE.IDþ*þ    IF INDEX(FILE.NAME,'BINARY:',1) THENþ        HEX.MODE = 1þ    END ELSE HEX.MODE = 0þ    CHK.FILE.NAME = FILE.NAMEþ    Count = 0þ    SELECT PACK.FILEþ    EOF = FALSEþ    PACK.REC = ""þ    DLIST = ""þ    SEPARATOR = @AMþ    LOOPþ        READNEXT CHK.REC.ID ELSE EOF = TRUEþ    UNTIL EOF DOþ        READ REC FROM PACK.FILE, CHK.REC.ID ELSE REC = ""þ*Remove db/widget user access data?þ        IF PKG$ACCESS.OPT # 1 THENþ            IF FILE.NAME = 'MVDB.DEFS' THENþ                REC<5> = ''þ                END ELSE IF FILE.NAME = 'MVDB.WIDGETS' THENþ                    REC<2> = ''þ                ENDþ            ENDþ            GOSUB CHECK.DPOINTERþ            IF NOT( D.POINTER ) THENþ                Count = Count + 1þ                IF HEX.MODE THENþ                    REC = CHK.REC.ID:SEPARATOR:"0x":OCONV(REC,'MX0C')þ                END ELSEþ                    REC = CHK.REC.ID:SEPARATOR:"0c":RECþ                ENDþ                Length = OCONV( LEN(REC), 'MCDX' ) "R%6"þ                PACK.REC = PACK.REC:Length:RECþ            END ELSEþ                DLIST<-1> = CHK.REC.IDþ            ENDþ        REPEATþ*þ        FOR D = 1 TO DCOUNT( DLIST, AM )þ*PRINTþ*PRINT "Item '":DLIST<D>:"' is a D-Pointer.  Not packed."þ        NEXT Dþ        IF PACK.REC # "" THENþ            WRITE PACK.REC ON TARGET.FILE, PACK.FILE.IDþ        ENDþ*PRINT PACK.FILE.ID:" packed.  ":Count:" records packed into ":PACK.FILE.IDþ        RETURN00029BSET.STATUS.CODEþ0c2SUBROUTINE SET.STATUS.CODE( STATUS.CODE )þ**********************************************************************þ* Copyright (C) 2020 Zumasys, Inc., All Rights Reservedþ*þ* Written By   : Peter Schellenbachþ* Date Written : 04/21/2017þ* Description  : This program sets the response status code sentþ*                back to client. Successful requests should returnþ*                status code 200 (this is the default). Status codeþ*                500 indicates a generic server failure.þ*              þ**********************************************************************þINCLUDE WBPD WWW.INCLUDEþSESSION$STATUS.CODE = STATUS.CODEþ*þRETURNþ*0001E6WDB.TESTþ0c2INCLUDE WBPD WWW.INCLUDEþPRINT "junk before content"þPRINT CHAR(10)þPRINT "Content-type: text/html"þPRINT ""þCALL WDB.VARS( VARS, VALS )þPRINT "<pre>"þPRINT "Vars: "þFOR X = 1 TO DCOUNT(VARS, @AM)þ  PRINT VARS<X>:" = ":VALS<X>þNEXT XþPRINTþFOR N = 45 TO 49þ  PRINT "WWW.INFO(":N:"): ":WWW.INFO(N)þNEXT NþPRINT "</pre>"þPRINT '<form method="POST" action="/dbc/WDB.TEST">'þPRINT '<input type="text" name="thing">'þPRINT '<input type="submit" value="submit">'þPRINT '</form>'þ*00019ACREATE.WEBSERVICE.PASSWORDþ0c2SUBROUTINE CREATE.WEBSERVICE.PASSWORD(PASSWORD,PASSTIME)þ* VALID PASSWORD IS THE SUM OF MMDDYY + SSMMHH (FROM PASSTIME)þ* INVERT THE TIME TO SSMMHHþPASSTIME=OCONV(TIME(),'MTS')þCONVERT ':' TO '' IN PASSTIMEþEMITSSAP=''þFOR TIME.I = 6 TO 1 STEP -1þ  EMITSSAP:=PASSTIME[TIME.I,1]þNEXT TIME.IþOTODAY=OCONV(DATE(),'D2-')þCONVERT '-' TO '' IN OTODAYþPASSWORD=OTODAY+EMITSSAPþRETURNþEND0040CBWDB.INITþ0c2*þ* Copyright (C) 2017 Zumasys, Inc., All Rights Reservedþ*þ* Written by: Michael Derheim, Sierra Bravoþ* Date: 12/24/03þ* Description: This program is the man entry point for web transactions.þ*þ* Modified By: Peter Schellenbach, Zumasysþ* Date: 06/12/2015þ* Description: Changed PROCREAD to use SENTENCE() in the ELSE clause.þ*              When reading MD PROC item, if its missing, read againþ*              with '.PROC' suffix on ID. This way we can keep the PROCþ*              in the MD as a flag that the function is allowed, but notþ*              require it in the MD, since jBASE does not place catalogþ*              items in the MD.þ*þ* Modified by Mike Street of Zumasys 07-22-15 for UniData compatiblity:þ*   Change PROCREAD to use @SENTENCE in the ELSE clauseþ*þ* Modified By: Peter Schellenbach, Zumasysþ* Date: 07/28/2015þ* Description: UniData SYSTEM(19) replacement using DATE(), SYSTEM(12) & RND() to create unique IDþ*þ* Modified By: Peter Schellenbach, Zumasysþ* Date: 10/25/2016þ* Description: This program was made more generic, so that it can serveþ*              as the main entry point for both MVDB and REST services.þ*              The MVDB specific code has been refactored into MVDB.INIT.þ*              A new WDB.RESOURCE file is used to determine supportedþ*              resources and the name of the program to handle the resource.þ*              For example, the MVDB.MAIN record in the WDB.RESOURCE fileþ*              defines MVDB.INIT as the handler for the MVDB.RESOURCE.þ*þ*              Removed PROCREAD (and calling PROC from MD). Only useþ*              SENTENCE now.þ*þ* Modified By: Peter Schellenbach, Zumasysþ* Date: 04/21/2017þ* Description: Updated to use CONFIG record in WDB.RESOURCE toþ*þ* Modified By: Peter Schellenbach, Zumasysþ* Date: 06/16/2017þ* Description: For REST, separate header & request vars from rest of cgi vars.þ*              Fix VARS variable conflict in APPEND.REC to use QSTR and saveþ*              QSTR in WDB.DEBUG record instead of VARS. Change program nameþ*              in WDB.DEBUG record ID to RSRC.ID so MV.DEBUG can recreate theþ*              WDB.INIT command line.þ*þ* Modified By: Peter Schellenbach, Zumasysþ* Date: 10/18/2017þ* Description: Save detailed debug info in WDB.DEBUG record to enable reproducingþ*              original environment when debugging requests.þ*              WDB.DEBUG: initialized from WDB.RESOURCE record attr 7, set whenþ*              WDB.INIT should create debug records in WDB.DEBUG file for use by WDEBUG.þ*              WDEBUG.MODE: set if WDB.INIT is being called by WDEBUG instead of mvappsvr.þ*þ* Modified By: Peter Schellenbach, Zumasysþ* Date: 11/29/2017þ* Description: Provide for execution of dashboard or REST service in a differentþ*              account. New RSRC.ACCOUNT field added to WDB.RESOURCE records.þ*              Use LOGTO to switch accounts prior to executing the resourceþ*              handler program.þ*þINCLUDE WBPD WWW.INCLUDEþINCLUDE WBPD FI.WDB.RESOURCEþINCLUDE WBPD FI.WDB.DEBUGþ*þMAT WWW.INFO = ''þSTATUS.CODE = 0þLOGGING = 0þLOG.REC = ''þWDB.DEBUG = 0þWDEBUG.MODE = 0þ*þOPEN 'WDB.Q' TO Q ELSEþ  ERR = 'Cannot open Queue file'þ  GOSUB SEND.ERRORþENDþOPEN 'WDB.RESOURCE' TO F.RESOURCE ELSEþ  ERR = 'Cannot open resource file'þ  GOSUB SEND.ERRORþENDþ*þ* Read and parse config settingsþ*þ*  Important config settings:þ*   LOGLEVEL - see belowþ*   DEFAULT_HANDLER - if a "handler" is not included in RESOURCE.NAME, use this default handlerþ*   DEFAULT_RESOURCE - if a "resource" is not included in RESOURCE.NAME, use this default resourceþ*þ*   Note: PATH_INFO is the part of the URL beginning with a forward slash (/) after theþ*   server/port and before the query string. It is interpreted as:þ*     /<handler>/<resource>/<REST parameter>/<another REST parameter> ...þ*þ*   MVAppSvr will pass <handler>/<resource> as 2nd command line argument, unless the defaultþ*   handler is being used, then only <resource> is passed.þ*þREAD TEMPCONFIG FROM F.RESOURCE, 'CONFIG' ELSE TEMPCONFIG = ''þNUMCONFIG = DCOUNT(TEMPCONFIG, @AM)þCGI$CONFIG = ''þCONFIGCNTR = 0þFOR A = 2 TO NUMCONFIGþ  CONFIGNAME = TEMPCONFIG<A,1>þ  CONFIGVALUE = TEMPCONFIG<A,2>þ  IF CONFIGNAME <> '' THENþ    LOCATE CONFIGNAME IN CGI$CONFIG<1,1> SETTING POS ELSEþ      CONFIGCNTR += 1þ      CGI$CONFIG<1,1,CONFIGCNTR> = CONFIGNAMEþ    ENDþ    CGI$CONFIG<1,2,CONFIGCNTR> = CONFIGVALUEþ  ENDþNEXT Aþ*þ* Get the logging level from configþ*þ*  Log levels:þ*   0 - no loggingþ*   1 - log errorsþ*   2 - log all requestsþ*   3 - log everything (debug mode)þ*þ*  Log info is written to the WDB.LOG file. Requests and errors are loggedþ*  using a unique ID.þ*þSESSION$GLOBAL.DEBUG = 0þLOCATE 'LOGLEVEL' IN CGI$CONFIG<1,1> SETTING POS THENþ  TEMPVALUE = CGI$CONFIG<1,2,POS>þ  IF TEMPVALUE MATCHES '1N' THEN SESSION$GLOBAL.DEBUG = TEMPVALUE + 0þENDþLOGGING = SESSION$GLOBAL.DEBUGþIF LOGGING THENþ  OPEN 'WDB.LOG' TO F.LOG ELSE LOGGING = 0þENDþ*þ* Get default handlerþ*þDEFAULT.HANDLER = 'DBC' ;* ensure this is defined!þLOCATE 'DEFAULT_HANDLER' IN CGI$CONFIG<1,1> SETTING POS THENþ  DEFAULT.HANDLER = OCONV(CGI$CONFIG<1,2,POS>, 'MCU')þENDþ*þ* Parse the command lineþ*þTCL.LINE = @SENTENCE ; *UD*þRESOURCE.NAME = OCONV(FIELD(TCL.LINE, ' ', 2), 'MCU')þINIT.VARS = FIELD(TCL.LINE, ' ', 3)þVAR.STRING = FIELD(TCL.LINE, ' ', 4)þXTRA.OPTS = FIELD(TCL.LINE, ' ', 5)þ*þUNIQUE.ID = FIELD(INIT.VARS, '-', 1)þONCOM     = FIELD(INIT.VARS, '-', 2)þCOMCOUNT  = FIELD(INIT.VARS, '-', 3)þ*þ* Get handler from RESOURCE.NAME argumentþ*þIF DCOUNT(RESOURCE.NAME, '/') = 2 THENþ  HANDLER.NAME = OCONV(FIELD(RESOURCE.NAME, '/', 1), 'MCU')þ  RESOURCE.NAME = OCONV(FIELD(RESOURCE.NAME, '/', 2), 'MCU')þEND ELSEþ  HANDLER.NAME = DEFAULT.HANDLERþ  RESOURCE.NAME = OCONV(RESOURCE.NAME, 'MCU')þENDþ*þ* Get the resource record from WDB.RESOURCE fileþ*þRSRC.ID = HANDLER.NAME:'*':RESOURCE.NAMEþMAT RSRC.ITEM = ''þMATREAD RSRC.ITEM FROM F.RESOURCE, RSRC.ID ELSEþ  IF HANDLER.NAME = DEFAULT.HANDLER THENþ    MATREAD RSRC.ITEM FROM F.RESOURCE,RESOURCE.NAME ELSE NULLþ  ENDþENDþ*þ* Sort out the debug modesþ*þ*  WDEBUG.MODE is set when the request was initiated by WDEBUG rather than web.þ*  WDB.DEBUG is set when the resource indicates to log debug info for web requests.þ*  WDEBUG.MODE and WDB.DEBUG are exclusive!þ*  SESSION$WDEBUG.MODE can be tested by resource handlers to break into debugger, or ???þIF INDEX(XTRA.OPTS, '_WDEBUG_MODE_', 1) THEN WDEBUG.MODE = 1þSESSION$WDEBUG.MODE = WDEBUG.MODEþIF NOT(WDEBUG.MODE) THENþ  WDB.DEBUG = RSRC.DEBUG.MODEþ  IF WDB.DEBUG THENþ    OPEN 'WDB.DEBUG' TO F.WDB.DEBUG ELSE WDB.DEBUG = 0þ  ENDþENDþ*þ* Validate the resource - return error if invalid or disabledþ*þIF (RSRC.TYPE = 'P') AND RSRC.ENABLED THENþ  CGI.MODE = RSRC.PARSE.CGIþ  IF ONCOM = 1 AND VAR.STRING = '%%' THENþ* READ VARS FROM STDIN INSTEAD OF COMMAND LINEþ    PROMPT ''þ    ECHO OFFþ    FOR ONCOM = 1 TO COMCOUNTþ      INPUT VAR.STRINGþ      IF ONCOM < COMCOUNT THENþ        GOSUB APPEND.RECþ      ENDþ    NEXT ONCOMþ    ECHO ONþ    ONCOM = COMCOUNTþ  ENDþ  IF (ONCOM = COMCOUNT) THENþ    GOSUB APPEND.RECþ    IF LOGGING > 1 THENþ      LOG.REC<1> = RESOURCE.NAMEþ      LOG.REC<2> = DATE()þ      LOG.REC<3> = SYSTEM(12) ;* START TIMEþ      LOG.REC<6> = COMCOUNTþ    ENDþ*þ* Populate the vars and valsþ*þ    CGI$UNIQUE.ID = UNIQUE.IDþ    IF RSRC.PROGRAM <> '' THENþ      CGI$RESOURCE.NAME = RSRC.PROGRAMþ    END ELSEþ      CGI$RESOURCE.NAME = RESOURCE.NAMEþ    ENDþ    IF CGI.MODE THENþ*þ* Parse CGI, request & header variablesþ*þ      CALL WDB.VARS(VARS, VALS)þ      LOCATE "APPSVR_ID" IN VARS SETTING POS THENþ        CGI$APPSVR.ID = VALS<POS>þ        VARS = DELETE(VARS, POS, 0, 0)þ        VALS = DELETE(VALS, POS, 0, 0)þ      END ELSEþ        CGI$APPSVR.ID = ""þ      ENDþ      LOCATE "__body__" IN VARS SETTING POS THENþ        CGI$BODY = VALS<POS>þ        VARS = DELETE(VARS, POS, 0, 0)þ        VALS = DELETE(VALS, POS, 0, 0)þ      ENDþ*þ* Copy CGI variables to CGI$VARS/CGI$VALS and request & header variables to CGI$HEADERVARS/CGI$HEADERVALSþ*þ      REQUEST.VAR.NAMES = 'SIMPLEWEB_MODULE':@AM:'SIMPLEWEB_HANDLER':@AM:'REMOTE_ADDR':@AM:'REMOTE_HOST':@AM:'REMOTE_USER':@AMþ      REQUEST.VAR.NAMES := 'REQUEST_METHOD':@AM:'PROTOCOL_VERSION':@AM:'PATH_INFO':@AM:'CONTENT_TYPE':@AM:'SERVER_PORT':@AM:'INSTALL_PATH'þ      NUM.VARS = DCOUNT(VARS, @AM)þ      HDR.VAR.NUM = 1þ      CGI.VAR.NUM = 1þ      FOR Y = 1 TO NUM.VARSþ        IS.HDR.VAR = 0þ        VAR.NAME = VARS<Y>þ        IF VAR.NAME[1,5] = 'HTTP_' THENþ          IS.HDR.VAR = 1þ        END ELSEþ          LOCATE VAR.NAME IN REQUEST.VAR.NAMES SETTING POS THEN IS.HDR.VAR = 1þ        ENDþ        IF IS.HDR.VAR THENþ          CGI$HEADERVARS<HDR.VAR.NUM> = VAR.NAMEþ          CGI$HEADERVALS<HDR.VAR.NUM> = VALS<Y>þ          HDR.VAR.NUM += 1þ        END ELSEþ          CGI$VARS<CGI.VAR.NUM> = VAR.NAMEþ          CGI$VALS<CGI.VAR.NUM> = VALS<Y>þ          CGI.VAR.NUM += 1þ        ENDþ      NEXT Yþ*þ* Load the Cookie variables and valuesþ*þ      LOCATE 'HTTP_COOKIE' IN VARS SETTING POS THENþ        CSTRING = VALS<POS>þ      END ELSE CSTRING = ''þ      CONVERT ';' TO @AM IN CSTRINGþ      NUM.COOKIES = DCOUNT(CSTRING, @AM)þ      FOR Y = 1 TO NUM.COOKIESþ        CGI$CVARS<Y> = TRIM(FIELD(CSTRING<Y>,'=',1))þ        CGI$CVALS<Y> = CSTRING<Y>[1 + COL2(),99999]þ      NEXT Yþ*þ* Get server infoþ*þ      LOCATE "HTTP_HOST" IN VARS SETTING POS THENþ        CGI$SERVER.NAME = VALS<POS>þ      END ELSE CGI$SERVER.NAME = ""þ      LOCATE "SERVER_PORT" IN VARS SETTING POS THENþ        CGI$SERVER.PORT = VALS<POS>þ      END ELSE CGI$SERVER.PORT = ""þ      IF CGI$SERVER.PORT = "" OR CGI$SERVER.PORT = "0" THENþ        OPEN '','MVDB.CONTROL' TO F.MVDB.CONTROL THENþ          READV TCP.PORT FROM F.MVDB.CONTROL, 'MVDB.SETTINGS', 4 ELSE TCP.PORT = ""þ        ENDþ        CGI$SERVER.PORT = TCP.PORTþ      ENDþ      IF CGI$SERVER.PORT # "" AND INDEX(CGI$SERVER.NAME, ':', 1) = 0 THEN CGI$SERVER.NAME := ":":CGI$SERVER.PORT ;*PJS 10-25-16* Only append port if its not already in the HTTP_HOST headerþ      LOCATE "SIMPLEWEB_HANDLER" IN VARS SETTING POS THENþ        CGI$PATH = VALS<POS>þ        IF CGI$PATH[1,1] # "/" THEN CGI$PATH = "/":CGI$PATHþ      END ELSE CGI$PATH = "/dbc"þ*þ* Extract REST parametersþ*þ      LOCATE "PATH_INFO" IN VARS SETTING POS THENþ        PATH = VALS<POS>þ        IF PATH[1,1] = '/' THEN PATH = PATH[2,9999]þ        Y = INDEX(PATH, '/', 2)þ        IF Y > 0 THENþ          CGI$RESTPARAMS = PATH[Y + 1, 99999]þ          CONVERT '/' TO @AM IN CGI$RESTPARAMSþ        ENDþ      ENDþ    ENDþ*þ* Clear the out buffer and set some generic varsþ*þ    SESSION$CONTENT.SENT = 0þ*þ* LOGTO the account containing the resource, if not the current accountþ*þ    IF RSRC.ACCOUNT <> '' THENþ      IF OCONV(RSRC.ACCOUNT, 'MCU') = OCONV(@WHO, 'MCU') THENþ        RSRC.ACCOUNT = ''þ      END ELSEþ        IF OCONV(RSRC.ACCOUNT, 'MCU') = OCONV(@PATH, 'MCU') THENþ          RSRC.ACCOUNT = ''þ        ENDþ      ENDþ    ENDþ    IF RSRC.ACCOUNT <> '' THENþ      ACCT.FROM = @PATHþ      EXECUTE 'LOGTO ':RSRC.ACCOUNT CAPTURING DUMMYþ      ACCT.TO = @PATHþ      IF ACCT.FROM = ACCT.TO THENþ* LOGTO failed!       þ        STATUS.CODE = 404þ        ERR = 'Resource account unavailable'þ        GOTO SEND.ERRORþ      ENDþ    ENDþ*þ* Run the controller program for the resourceþ*þ    PRINTþ    PRINT "700 WDB-START"þ    IF WDB.DEBUG THENþ      EXECDUR = ''þ      IF RSRC.PROGRAM <> '' THENþ        DBG.ID = 'R/':RSRC.PROGRAM:'/':UNIQUE.IDþ      END ELSEþ        DBG.ID = 'R/':RSRC.CONTROLLER:'/':UNIQUE.IDþ      ENDþ      GOSUB CREATE.DEBUG.RECþ      EXECSTART = SYSTEM(12)þ      EXECUTE RSRC.CONTROLLER:' ':UNIQUE.ID CAPTURING RESPONSEþ      EXECDUR = SYSTEM(12) - EXECSTARTþ      DELETE F.WDB.DEBUG, DBG.IDþ      DBG.ID = 'C':DBG.ID[2, LEN(DBG.ID)]þ      GOSUB UPDATE.DEBUG.RECþ      N = DCOUNT(RESPONSE, @AM)þ      FOR I = 1 TO Nþ        PRINT RESPONSE<I>þ      NEXT Iþ    END ELSEþ      EXECUTE RSRC.CONTROLLER:' ':UNIQUE.IDþ    ENDþ*þ* Wrap upþ*þ    * this call has been moved to MVDB.INIT: CALL WEB.FLUSHþ    PRINT "800 WDB-COMPLETE"þ    DELETE Q, UNIQUE.IDþ    IF LOGGING > 1 THENþ      LOG.REC<4> = SYSTEM(12) ;* END TIMEþ      LOG.REC<5> = LOG.REC<4> - LOG.REC<3>þ      LOG.REC<7> = 1 ;* this is a requestþ      GOSUB UPDATE.LOGþ    ENDþ  END ELSEþ    GOSUB APPEND.RECþ    PRINTþ    PRINT "700 WDB-START"þ    PRINT "800 WDB-COMPLETE"þ  ENDþEND ELSEþ  IF (ONCOM = COMCOUNT) OR (ONCOM = 1 AND VAR.STRING = '%%') THENþ* Final (or only) command part has been received - log the error nowþ    IF LOGGING THENþ      LOG.REC<1> = RESOURCE.NAMEþ      LOG.REC<2> = DATE()þ      LOG.REC<3> = SYSTEM(12)þ      LOG.REC<6> = COMCOUNTþ      LOG.REC<7> = 2 ;* this is an errorþ      BEGIN CASEþ        CASE RSRC.TYPE = ''þ          LOG.REC<8> = 'Undefined resource'þ        CASE RSRC.TYPE <> 'P'þ          LOG.REC<8> = 'Invalid resource'þ        CASE NOT(RSRC.ENABLED)þ          LOG.REC<8> = 'Disabled resource'þ        CASE 1þ          LOG.REC<8> = 'Unknown error'þ      END CASEþ      GOSUB UPDATE.LOGþ    ENDþ    STATUS.CODE = 404þ    ERR = 'Invalid Resource'þ    GOSUB SEND.ERRORþ  END ELSEþ    PRINTþ    PRINT "700 WDB-START"þ    PRINT "800 WDB-COMPLETE"þ  ENDþENDþSTOPþ*þSEND.ERROR:þ*þPRINT "700 WDB-START"þIF STATUS.CODE > 0 THENþ  PRINT 'X-MVDB-STATUS: ':STATUS.CODEþENDþPRINT '500 ERROR ':ERRþPRINT "800 WDB-COMPLETE"þSTOPþ*----------þAPPEND.REC:þ*----------þREADU QSTR FROM Q, UNIQUE.ID ELSE QSTR = ''þQSTR<ONCOM> = VAR.STRINGþWRITE QSTR ON Q, UNIQUE.IDþRETURNþ*----------þUPDATE.LOG:þ*----------þ*UD*LOG.ID = SYSTEM(19)þLOG.ID = (DATE() 'R%5'):(SYSTEM(12) 'R%8'):(RND(1000) 'R%4') ;*UD* we need a unique ID (this is not guaranteed unique, but should suffice)þWRITE LOG.REC ON F.LOG, LOG.IDþRETURNþ*----------þCREATE.DEBUG.REC:þ*----------þDBGREC = ''þDBGREC<WDBG_DATE> = DATE()þDBGREC<WDBG_TIME> = TIME()þDBGREC<WDBG_PORT> = FIELD(OCONV('','U50BB'),' ',1) ;*PortþDBGREC<WDBG_HANDLER> = HANDLER.NAMEþDBGREC<WDBG_RESOURCE> = RESOURCE.NAMEþDBGREC<WDBG_CONTROLLER> = RSRC.CONTROLLERþDBGREC<WDBG_PROGRAM> = RSRC.PROGRAMþDBGREC<WDBG_REQUEST_ID> = UNIQUE.IDþLOCATE "REQUEST_METHOD" IN VARS SETTING POS THENþ  DBGREC<WDBG_METHOD> = VALS<POS>þENDþLOCATE "PATH_INFO" IN VARS SETTING POS THENþ  DBGREC<WDBG_PATH> = VALS<POS>þENDþLOCATE "REMOTE_ADDR" IN VARS SETTING POS THENþ  DBGREC<WDBG_REMOTE_ADDR> = VALS<POS>þENDþ* save headers variablesþDBGREC<WDBG_HEADER_VARS> = LOWER(CGI$HEADERVARS)þDBGREC<WDBG_HEADER_VALS> = LOWER(CGI$HEADERVALS)þIF CGI$APPSVR.ID <> '' THENþ  N = DCOUNT(DBGREC<WDBG_HEADER_VARS>, @VM) + 1þ  DBGREC<WDBG_HEADER_VARS, N> = 'APPSVR_ID'þ  DBGREC<WDBG_HEADER_VALS, N> = CGI$APPSVR.IDþENDþ* save form variablesþDBGREC<WDBG_CGI_VARS> = LOWER(CGI$VARS)þDBGREC<WDBG_CGI_VALS> = LOWER(CGI$VALS)þ* Request bodyþDBGREC<WDBG_BODY> = CHANGE(CHANGE(CGI$BODY, CHAR(13), ''), CHAR(10), @VM)þ* Session variablesþTEMPVARS = OCONV(CGI$CVARS, 'MCU')þLOCATE 'SESSIONID' IN TEMPVARS SETTING POS THENþ  SID = CGI$CVALS<POS>þ  SREC = ''þ  OPEN 'WEB.SESSION' TO F.WEB.SESSION THENþ    READ SREC FROM F.WEB.SESSION, SID ELSE NULLþ  ENDþ  DBGREC<WDBG_SESSION_ID> = SIDþ  DBGREC<WDBG_SESSION_VARS> = SREC<1>þ  DBGREC<WDBG_SESSION_VALS> = SREC<2>þ  DBGREC<WDBG_SESSION_DATE> = SREC<3>þ  DBGREC<WDBG_SESSION_TIME> = SREC<4>þENDþ* save debug info before processing requestþWRITE DBGREC ON F.WDB.DEBUG, DBG.IDþRETURNþ*----------þUPDATE.DEBUG.REC:þ*----------þDBGREC<WDBG_DATE> = DATE()þDBGREC<WDBG_TIME> = TIME()þDBGREC<WDBG_DURATION> = EXECDURþIF STATUS.CODE > 0 THEN DBGREC<WDBG_STATUS> = STATUS.CODE ELSE DBGREC<WDBG_STATUS> = 200þ* save response headersþNUM.VARS = 0þEOH = INDEX(RESPONSE, @AM:@AM, 1) ;* headers end at first blank line in responseþIF EOH = 0 THEN EOH = LEN(RESPONSE) + 1þN = DCOUNT(RESPONSE[1, EOH - 1], @AM)þFOR I = 1 TO Nþ  HDR.LINE = RESPONSE<I>þ  HDR.VAR = FIELD(HDR.LINE, ':', 1)þ  HDR.VAL = TRIMF(HDR.LINE[COL2() + 1, LEN(HDR.LINE)])þ  M = LEN(HDR.VAR)þ  FOR J = 1 TO Mþ    IF NOT(HDR.VAR[J,1] MATCHES '1A') AND HDR.VAR[J,1] <> '-' THENþ      HDR.VAR = ''þ      EXITþ    ENDþ  NEXT Jþ  IF HDR.LINE[LEN(HDR.VAR) + 1, 1] <> ':' THEN HDR.VAR = ''þ  IF HDR.VAR = '' THENþ    NUM.VARS += 1þ    DBGREC<WDBG_RESPONSE_VARS, NUM.VARS> = '_BAD_'þ    DBGREC<WDBG_RESPONSE_VALS, NUM.VARS> = HDR.LINE ;* invalid header line!þ  END ELSEþ    NUM.VARS += 1þ    DBGREC<WDBG_RESPONSE_VARS, NUM.VARS> = HDR.VARþ    DBGREC<WDBG_RESPONSE_VALS, NUM.VARS> = HDR.VALþ  ENDþNEXT Iþ* save response contentþIF EOH + 2 <= LEN(RESPONSE) THENþ  DBGREC<WDBG_RESPONSE_CONTENT> = LOWER(RESPONSE[EOH + 2, LEN(RESPONSE)])þENDþWRITE DBGREC ON F.WDB.DEBUG, DBG.IDþRETURNþ*þEND0002D0SUB.GET.NEXT.IDþ0c2SUBROUTINE SUB.GET.NEXT.ID(NewID,F.CONTROL)þ*þ* Copyright (c) 2020 Zumasys, Inc. All rights reserved.þ* Description: generate a (probably) unique ID based on current time, date and counterþ*þ* Pass MVDB.CONTROL file variable, returns new IDþ* Up to 10,000 IDs can be generated per second without collisionþ* Returned ID format: YYYYMMDDHHMMSSNNNNþ*þD = DATE()þT = TIME()þHHMMSS = OCONV(OCONV(T,'MTS'),'MCN')þYYYY = OCONV(D,'DY')þIF LEN(YYYY) < 4 THEN YYYY=YYYY+2000þMM = OCONV(D,'DM') 'R%%'þDD = OCONV(D,'DD') 'R%%'þCTR = 1þREADVU CTR FROM F.CONTROL,'NEXT.ID.COUNTER',1 ELSEþ CTR = 1þENDþWRITE CTR+1 ON F.CONTROL,'NEXT.ID.COUNTER' ON ERRORþ NULLþENDþNewID = YYYY:MM:DD:HHMMSS:(CTR 'R%%%%')þRETURNþENDþ0002A6SUB.LOG.DEBUG.INFOþ0c2SUBROUTINE SUB.LOG.DEBUG.INFO(WIDGET.NAME,MESSAGE)þ*þ* Copyright (c) 2020 Zumasys, Inc. All rights reserved.þ*þ* Pass widget name and message to log. When widget is placed in debug mode,þ* up to 100 lines of log content are displayed.þ*þEQU MAX.LINES TO 100þ*þOPEN 'WDB.DEBUG' TO F.WDB.DEBUG THENþ  READ EXTRA.INFO FROM F.WDB.DEBUG,WIDGET.NAME ELSE EXTRA.INFO = ''þ  EXTRA.INFO<-1> = TIMEDATE():' ':MESSAGEþ  N = DCOUNT(EXTRA.INFO,@AM)þ  IF N > MAX.LINES THENþ    * DISCARD ALL EXCEPT LAST 100 LINESþ    M = N - MAX.LINESþ    K = INDEX(EXTRA.INFO,@AM,M)þ    EXTRA.INFO = EXTRA.INFO[K+1,999999]þ  ENDþ  WRITE EXTRA.INFO ON F.WDB.DEBUG,WIDGET.NAMEþRETURNþEND000677REBUILD.URL.STRINGþ0c2SUBROUTINE REBUILD.URL.STRING(URL.STRING)þ* 12-15-15þ* 9-23-16 TPARKER - LOGIC TOTALLY REWRITTENþINCLUDE WBPD WWW.INCLUDEþINCLUDE WBPD MVDB.INCLUDEþURL.STRING=''þ*þ** NEED CGI$VARS ALPHABETIZED TO INSURE URL ALWAYS IN SAME ORDERþ** BUT EXCLUDE THOSE ADDED BY MVAPPSVRþ*þMAX.VARS=DCOUNT(CGI$VARS,@AM)þALPHA.VARS=''þALPHA.VALS=''þFOR VAR.CNTR = 1 TO MAX.VARSþ   var=CGI$VARS<VAR.CNTR>þ   BEGIN CASEþ      CASE var = 'SIMPLEWEB_MODULE'; var=''þ      CASE var = 'REMOTE_ADDR'; var=''þ      CASE var = 'REMOTE_HOST'; var=''þ      CASE var = 'REMOTE_USER'; var=''þ      CASE var = 'REQUEST_METHOD'; var=''þ      CASE var = 'PROTOCOL_VERSION'; var=''þ      CASE var = 'HTTP_REFERER'; var=''þ      CASE var = 'HTTP_USER_AGENT'; var=''þ      CASE var = 'HTTP_HOST'; var=''þ      CASE var = 'HTTP_ACCEPT'; var=''þ      CASE var = 'HTTP_COOKIE'; var=''þ      CASE var = 'HTTP_CONNECTION'; var=''þ      CASE var = 'SIMPLEWEB_HANDLER'; var=''þ      CASE var = 'PATH_INFO'; var=''þ      CASE var = 'CONTENT_TYPE'; var=''þ      CASE var = 'SERVER_PORT'; var=''þ      CASE var = 'INSTALL_PATH'; var=''þ      CASE var = 'APPSVR_ID'; var=''þ      CASE var = '__body__'; var=''þ      CASE 1; NULLþ   END CASEþ   IF var <> '' THENþ      val=CGI$VALS<VAR.CNTR>þ      LOCATE var IN ALPHA.VARS BY "AL" SETTING POS ELSE NULLþ      ALPHA.VARS=INSERT(ALPHA.VARS,POS,0,0,var)þ      ALPHA.VALS=INSERT(ALPHA.VALS,POS,0,0,val)þ    ENDþ NEXT VAR.CNTRþMAX.VAR.CNTR=DCOUNT(ALPHA.VARS,@AM)þFOR VAR.CNTR = 1 TO MAX.VAR.CNTRþ   var=ALPHA.VARS<VAR.CNTR>þ   val=ALPHA.VALS<VAR.CNTR>þ   URL.STRING:='&':var:'=':valþ NEXT VAR.CNTRþURL.STRING=URL.STRING[2,999999]þRETURNþEND0023EFMVDB.INITþ0c2*þ*þ* Copyright (C) 2020 Zumasys, Inc., All Rights Reservedþ* Description: perform common dashboard startup functionsþ*þ* 9-23-16 TPARKER MODIFICATIONS TO ELIMINATE GO_BACK AND REPLACE WITHþ*         STANDARD BROWSER BACK BUTTIONþ*þ* 10-25-16 Peter Schellenbach - moved this out of INIT.WWW and intoþ*          this new MVDB.INIT program to handle all MVDB-specificþ*          initialization, then launch individual MVDB resourceþ*          programs (MVDB.MAIN, MVDB.ADMIN, MVDB.WEB.ED).þ*þ*          Additional browser back button fixes:þ*            - do not save and restore SESSION as this reflects the login statusþ*              and after a logout, using browser back and forward, then loggingþ*              back in may cause unexpected logout by using browser back or forward.þ*              Only current_db is restored when backing up.þ*            - push current state before letting MVDB.MAIN process the request.þ*              Since any Go button click or link click only affects a single widget,þ*              only WIDGET.USER.DATA for that specific needs to be pushed. The widgetþ*              can be identified by examining CGI variables 'sw' and 'udview' at theþ*              next level. We do not know which widget state to save at level 'n'þ*              until we receive a request for level 'n+1' which specifies user inputþ*              or drilldown for a specific widget. At this time the widget stateþ*              is saved for the previous stack level.þ*            - no need to save and restore CGI variables, as these are all suppliedþ*              in the query string in the URL, and when going back up the stack,þ*              the URL and query string matches the stack, so the CGI variablesþ*              are identical.þ*            - include the PATH_INFO in the URL when pushing on stack, since weþ*              need to handle other resources (MVDB.ADMIN, MVDB.WEB.ED) besidesþ*              MVDB.MAIN.þ*þEQU AM TO CHAR(254), VM TO CHAR(253), SVM TO CHAR(252)þ*þINCLUDE WBPD WWW.INCLUDEþINCLUDE WBPD MVDB.INCLUDEþ*þOPEN 'WEB.SESSION' TO F.WEB.SESSION ELSE STOP 201, 'WEB.SESSION'þOPEN 'WEB.FORMS' TO F.WEB.FORMS ELSE STOP 201, 'WEB.FORMS' ;** this is in /WWW/ common **þOPEN 'MVDB.UDATA' TO F.MVDB.UDATA ELSE STOP 201, 'MVDB.UDATA'þ*þIF CGI$RESOURCE.NAME = '' THEN CGI$RESOURCE.NAME = 'MVDB.MAIN' ;* safe defaultþ*þMAT GLOBAL.INFO = ''þ*þ* Combine headers & cgi vars (MVDB programs don't use CGI$HEADERVARS/CGI$HEADERVALSþ*þIF CGI$HEADERVARS <> "" THENþ  IF CGI$VARS = "" THENþ    CGI$VARS = CGI$HEADERVARSþ    CGI$VALS = CGI$HEADERVALSþ  END ELSEþ    NUM.HDR.VARS = COUNT(CGI$HEADERVARS, @AM)þ    NUM.HDR.VALS = COUNT(CGI$HEADERVALS, @AM)þ    IF NUM.HDR.VARS >= NUM.HDR.VALS THENþ      * Since there may be missing (null) vals at end of CGI$HEADERVALS,þ      * add appropriate number of @AM to keep vars & vals in sync!þ      CGI$VARS = CGI$HEADERVARS : @AM : CGI$VARSþ      CGI$VALS = CGI$HEADERVALS : STR(@AM, NUM.HDR.VARS - NUM.HDR.VALS + 1) : CGI$VALSþ    ENDþ  ENDþENDþ*þ* Validate the HTTP methodþ*þMETHOD = 'UNKNOWN'þLOCATE "REQUEST_METHOD" IN CGI$VARS SETTING POS THEN METHOD = OCONV(CGI$VALS<POS>, 'MCU')þIF METHOD <> 'GET' AND METHOD <> 'POST' THENþ  PRINT '500 ERROR Unsupported HTTP Method ':METHODþ  STOPþENDþ*þ* Load the session ID if there is oneþ*þCALL GET.SESSION.ID(SESSION$ID, CGI$VARS, CGI$VALS)þIF (SESSION$ID = '') THENþ  CALL CREATE.SESSION(SESSION$ID)þ  CALL SET.COOKIE("sessionid=":SESSION$ID)þENDþ*þ* How many active users are online?þ*þSELECT F.WEB.SESSIONþUSER.COUNT = 0þLOOPþ  READNEXT WSID ELSE EXITþ  READ SREC FROM F.WEB.SESSION, WSID ELSE CONTINUEþ  LOCATE "userid" IN SREC<1> SETTING UPOS THEN USER.COUNT += 1þREPEATþPRINT "Client-Count: ":USER.COUNTþ*þ* Browser "back" button handlerþ*þREAD DD.STACK FROM F.MVDB.UDATA, SESSION$ID:'$DD.STACK' ELSE DD.STACK=''þNEW.STACK.ITEM = 1þMAX.DDS = 0þCALL REBUILD.URL.STRING(URL.STRING)þLOCATE "PATH_INFO" IN CGI$VARS SETTING POS THENþ  URL.PATH =  CGI$VALS<POS>þ  IF URL.PATH = "" OR URL.PATH = "/" THEN URL.PATH = CGI$PATH:"/MVDB.MAIN"þ  IF URL.PATH[1,1] # "/" THEN URL.PATH = "/":URL.PATHþEND ELSE URL.PATH = "/dbc/MVDB.MAIN"þURL = URL.PATH:'?':URL.STRINGþ**W$GOBACK=0þ*þ**CALL SUB.LOG.DEBUG.INFO('MVDB.INIT','BEGIN REQUEST, SESSION=':SESSION$ID:' URL=':URL:' CUR STACK LEVEL=':DCOUNT(DD.STACK,AM):' METHOD=':METHOD)þ*þIF DD.STACK <> '' THENþ  MAX.DDS = DCOUNT(DD.STACK,AM)þ  IF INDEX(DD.STACK,URL,1) THENþ    DD.POS = MAX.DDSþ    LOOPþ      IF DD.POS THENþ        IF URL = DD.STACK<DD.POS> THENþ          NEW.STACK.ITEM = 0þ        ENDþ      ENDþ    UNTIL NOT(DD.POS) OR NOT(NEW.STACK.ITEM) DOþ      DD.POS = DD.POS - 1þ    REPEATþ    IF DD.POS THENþ*þ** BACK BUTTON USED SO POP OFF PREVIOUS DRILLDOWNSþ*þ      GOSUB PURGE.URLS.AFTER.BACKþ      READ GUD FROM F.MVDB.UDATA, SESSION$ID:'$DD.':DD.POS:'.GUD' ELSE GUD=''þ      WRITE GUD ON F.MVDB.UDATA, SESSION$ID:'$UG'þ      READ WUD FROM F.MVDB.UDATA, SESSION$ID:'$DD.':DD.POS:'.WUD' ELSE WUD = ''þ      URL.WIDGET = WUD<1>þ      IF URL.WIDGET <> 'NULL' THENþ        WRITE DELETE(WUD,1,0,0) ON F.MVDB.UDATA, SESSION$ID:'$':URL.WIDGETþ      ENDþ      READ SESSION FROM F.MVDB.UDATA, SESSION$ID:'$DD.':DD.POS:'.SESSION' ELSE SESSION=''þ      LOCATE "userid" IN SESSION<1> SETTING POS THEN userid = SESSION<2,POS> ELSE userid = ''þ      IF userid <> '' THENþ* Restore current dashboard from drilldown stack, but leave other session variables aloneþ        LOCATE "current_db" IN SESSION<1> SETTING POS THEN current_db = SESSION<2,POS> ELSE current_db = ''þ        CALL PUT.SESSION.VAR("current_db", current_db)þ      ENDþ**        W$GOBACK=1þ    ENDþ  ENDþENDþ*þIF NEW.STACK.ITEM THENþ* POST-REDIRECT-GET pattern causes extra GET after POST, but onlyþ* the GET is on browser history, so skip duplicate URLs based onþ* special CGI variables 'dblogin' and 'dbprg' (note: dbprg is notþ* being used at this time).þ  LOCATE "dblogin" IN CGI$VARS SETTING POS THEN dblogin = CGI$VALS<POS> ELSE dblogin = 0þ  LOCATE "dbprg" IN CGI$VARS SETTING POS THEN dbprg = CGI$VALS<POS> ELSE dbprg = 0þ  IF NOT(dblogin) AND NOT(dbprg) THENþ* Push the new URL and session state onto the stackþ    MAX.DDS += 1þ    DD.STACK<MAX.DDS> = URLþ* Save global user before running requestþ    READ GUD FROM F.MVDB.UDATA, SESSION$ID:"$UG" ELSE GUD = ''þ    WRITE GUD ON F.MVDB.UDATA, SESSION$ID:'$DD.':MAX.DDS:'.GUD'þ* Get widget name from request CGI variables & save widget user data before running requestþ    GOSUB GET.URL.WIDGETþ    IF URL.WIDGET = '' THENþ      DELETE F.MVDB.UDATA, SESSION$ID:'$DD.':MAX.DDS-1:'.WUD'þ    END ELSEþ      READ WUD FROM F.MVDB.UDATA, SESSION$ID:'$':URL.WIDGET ELSE WUD = ''þ      WRITE INSERT(WUD,1,0,0,URL.WIDGET) ON F.MVDB.UDATA, SESSION$ID:'$DD.':MAX.DDS-1:'.WUD'þ    ENDþ    READ SESSION FROM F.WEB.SESSION, SESSION$ID ELSE SESSION = ''þ    IF SESSION = '' THENþ      DELETE F.MVDB.UDATA, SESSION$ID:'$DD.':MAX.DDS:'.SESSION'þ    END ELSEþ      WRITE SESSION ON F.MVDB.UDATA, SESSION$ID:'$DD.':MAX.DDS:'.SESSION'þ    ENDþ  ENDþENDþIF DD.STACK = '' THENþ  DELETE F.MVDB.UDATA, SESSION$ID:'$DD.STACK'þEND ELSEþ  WRITE DD.STACK ON F.MVDB.UDATA, SESSION$ID:'$DD.STACK'þENDþ*þ* Run the MVDB program for this resource and check for failureþ*þLOOPþ  TRY.AGAIN = 0þ  APP.FAILURE = 0þ  EXECUTE CGI$RESOURCE.NAMEþ  IF GLOBAL.INFO(100) # 1 THENþ* The dashboard controller quit unexpectedly. If there is a runningþ* widget, it is likely causing the failure. Fail it, and try again.þ    APP.FAILURE = 1þ    CALL GET.SESSION.VAR("running_widget",FAILED.WIDGET)þ    IF FAILED.WIDGET # "" THENþ      CALL PUT.SESSION.VAR("running_widget","")þ      CALL GET.SESSION.VAR("failed_widgets",FAILED.WIDGETS)þ      LOCATE FAILED.WIDGET IN FAILED.WIDGETS SETTING FWPOS ELSEþ        FAILED.WIDGETS<-1> = FAILED.WIDGETþ        CALL PUT.SESSION.VAR("failed_widgets",FAILED.WIDGETS)þ        TRY.AGAIN = 1þ      ENDþ    ENDþ    LOCATE "unfail_widget" IN CGI$VARS SETTING DPOS THENþ      CGI$VARS = DELETE( CGI$VARS, DPOS, 0, 0 )þ      CGI$VALS = DELETE( CGI$VALS, DPOS, 0, 0 )þ    ENDþ  ENDþWHILE TRY.AGAIN DO REPEATþIF APP.FAILURE THENþ  CALL WEB.SEND("An application error occured in program ":CGI$RESOURCE.NAME:".<hr>")þ  HTML = '<table><tr><th>Variable</th><th>Value</th></tr>'þ  FOR X = 1 TO DCOUNT( CGI$VARS, @AM )þ    HTML<-1> = '<tr><td>':CGI$VARS<X>:'</td><td>':CGI$VALS<X>:'</td></tr>'þ  NEXT Xþ  HTML<-1> = '</table>'þ  CALL WEB.SEND(HTML)þENDþ* Final WEB.FLUSH call moved from WDB.INIT to here (makes deploying MVConnect to other accounts simpler)þCALL WEB.FLUSHþ*þ* Doneþ*þSTOPþ*þ* SUPPORT ROUTINES FOR BACK BUTTON HANDLERþ*þPURGE.URLS.AFTER.BACK:þ*þFIRST.PURGE = DD.POS + 1þIF FIRST.PURGE > MAX.DDS THEN RETURNþFOR PURGE.CNTR = MAX.DDS TO FIRST.PURGE STEP -1þ  DD.STACK = DELETE(DD.STACK,PURGE.CNTR,0,0)þ  DELETE F.MVDB.UDATA, SESSION$ID:'$DD.':PURGE.CNTR:'.GUD'þ  DELETE F.MVDB.UDATA, SESSION$ID:'$DD.':PURGE.CNTR:'.WUD'þ  DELETE F.MVDB.UDATA, SESSION$ID:'$DD.':PURGE.CNTR:'.SESSION'þNEXT PURGE.CNTRþRETURNþ*þGET.URL.WIDGET:þ*þURL.WIDGET='NULL'þLOCATE "sw" IN CGI$VARS SETTING POS THENþ  URL.WIDGET = CGI$VALS<POS>þEND ELSEþ  LOCATE "udview" IN CGI$VARS SETTING POS THENþ    URL.WIDGET = CGI$VALS<POS>þ  ENDþENDþRETURNþ*þEND000103SWAPþ0c2SUBROUTINE SWAP(string,SUB1,SUB2)þ*þ*#MAKE# RL $OPTIONS D3þIDX.POS = 1þLOOPþ  POS = INDEX( string, SUB1, IDX.POS )þWHILE POS DOþ  string = string[1,POS-1]:SUB2:string[POS+LEN(SUB1),LEN(string)]þ  IDX.POS = IDX.POS + COUNT(SUB2,SUB1)þREPEATþRETURNþENDþ016F3DMVBP.FORMSþ0c0016F29listpeqs.htmlþ0c2<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">þ<html xmlns="http://www.w3.org/1999/xhtml">þ<head>þ<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />þ<title>Print Queue</title>þ<style type="text/css">þhtml {þmargin:0;þpadding:0;þ}þbody{þmargin:0;þpadding:0;þfont-family:Arial, Helvetica, sans-serif;þfont-size:12px;þbackground: url(/db/images/background_body.gif) 0 0 repeat-x;þ}þ/* *html body {þheight:100%;þ}þ*/þbody.popupþ{þmargin:5px 5px 5px 5px;þ}þp, td, thþ{þfont-size:1em;þ}þpre {þfont-size:1em;þ}þ#container {þposition:relative;þmargin:0 auto;þpadding:15px 20px 0 20px;þ}þ#header {þ}þ#maincontentþ{þbackground: url(/db/images/background_maincontent.gif) 0 0 no-repeat;þpadding:0 0 0 20px;þmargin:0 0 0 0;þposition:relative;þ}þ#content {þbackground: url(/db/images/background_maincontent.gif) 100% 0 no-repeat;þpadding:5px 20px 50px 0;þposition:relative;þmin-height:320px;þ_height:320px;þ}þ/* =HEADER STYLESþ=================================================================*/þ#header #navbar {þposition:absolute;þtop:0;þright:-1px;þheight:30px;þlist-style:none;þmargin:0;þpadding:0 5px 0 0;þbackground: url(/db/images/background_navbar.gif) 0 0 repeat-x;þ}þ#header #navbar li {þheight:10px;þfloat:left;þposition:relative;þ}þ#header #navbar li.myreports {þbackground: url(/db/images/background_navbarleft.gif) 0 0 no-repeat;þpadding-left:15px;þ}þ#header #navbar li.completed {þbackground: url(/db/images/background_navbarright.gif) 100% 0 no-repeat;þpadding-right:15px;þ}þ#header #navbar li.admin {þbackground: url(/db/images/background_tabfirst.gif) 0 12px no-repeat;þpadding-left:15px;þ}þ#header #navbar li.admin a{þbackground: url(/db/images/background_tabfirst.gif) 100% 12px no-repeat;þmargin:0;þpadding:7px 12px 0 3px;þline-height:24px;þheight:24px;þcolor: #333333;þ}þ#header #navbar li.profile {þbackground: url(/db/images/background_tabfirst.gif) 0 12px no-repeat;þpadding-left:15px;þ}þbody.admin #header #navbar li.profile {þbackground: url(/db/images/background_tab.gif) 0 12px no-repeat;þ}þ#header #navbar li.profile a{þbackground: url(/db/images/background_tabright.gif) 100% 12px no-repeat;þpadding:7px 15px 0 0;þmargin:0;þline-height:24px;þheight:24px;þcolor: #333333;þ}þ#header #navbar li a {þfloat:left;þheight:32px;þline-height:32px;þmargin:0;þpadding: 0 8px;þtext-decoration:none;þ}þ#header #navbar li a:hover {þtext-decoration:underlineþ}þ#header #navbar li.active a {þbackground: url(/db/images/background_navbaractive.gif) 50% 0 no-repeat;þheight:30px;þfont-weight:normal;þ}þ#header #navbar a {þcolor: #FFFFFF;þ}þ#header #logo {þposition:absolute;þleft:10px;þtop:20px;þ}þ#header #welcome {þposition:absolute;þright:15px;þtop:40px;þfont-size:.9em;þcolor:#333333;þ}þ#errors, #messages {þpadding:20px 20px 20px 40px;þborder:1px solid #CCCCCC;þbackground: #EEEEEE;þclear:both;þmargin-bottom:40px;þposition:relative;þ}þ/* =FOOTER STYLESþ=================================================================*/þ#footer {þtext-align:center;þfont-size:.8em;þcolor: #999999;þclear:both;þ}þ#footer a {þcolor: #999999;þtext-decoration:none;þ}þ/* =HEADER STYLESþ=================================================================*/þh1 {þfont-weight:normal;þfont-size:26px;þletter-spacing:-1px;þmargin:0 0 10px 0;þ}þh2 {þfont-size:22px;þmargin:10px 0 0 0;þfont-weight:normal;þ}þh3 {þmargin:15px 0 5px 0;þfont-weight:normal;þfont-size:16px;þborder-bottom: 1px solid #999999;þposition:relative;þ}þh4 {þmargin:0;þfont-weight:normal;þfont-size:12px;þ}þ/* =BASIC STYLESþ=================================================================*/þpþ{þmargin: 0 0 10px 0;þline-height:1.3em;þ}þlabelþ{þfont-weight:bold;þ}þ/* =TABLE STYLESþ=================================================================*/þ.listingþ{þborder:1px solid #cccccc;þborder-collapse:collapse;þclear: both;þwidth:100%;þmargin: 0 0 5px 0;þ}þ.listing th, .form .listing th {þbackground-color:#cccccc;þpadding:5px;þtext-align:left;þvertical-align:top;þborder-bottom: 1px solid #cccccc;þcolor: #333333;þ}þtable.sortable th a{þcolor: #333333;þtext-decoration:none;þ}þ.listing td, .form .listing tdþ{þpadding:5px;þborder-bottom:1px solid #cccccc;þvertical-align:top;þ}þ.even td, .even th{þbackground: #EEEEEE;þ}þ.odd td, .odd th{þbackground: #FFFFFF;þ}þ.even .odd th, .even .odd td {þbackground: #FFFFFF;þ}þfieldset {þpadding:0 10px 10px 10px;þmargin: 0 0 10px 0;þposition:relative;þ}þlegend {þmargin-top:5px;þfont-size:22px;þmargin-bottom:10px;þfont-weight:normal;þcolor: #000000;þletter-spacing:-1px;þ}þ.form {þborder-collapse:collapse;þmargin: 0;þpadding: 0;þ}þ.form thþ{þtext-align:right;þpadding:5px 0 5px 5px;þbackground:none;þvertical-align:top;þ}þ.form tdþ{þtext-align:left;þpadding:3px;þvertical-align:top;þ}þspan.button button {þbackground: url(/db/images/background_button.gif) 100% 0 no-repeat;þborder:none;þpadding:0 5px 0 0;þheight:23px;þcolor:#333333;þ}þspan.button {þbackground: url(/db/images/background_button.gif) 0 0 no-repeat;þpadding: 0 0 0 5px;þ}þhtml>body span.button {þpadding: 5px 0 5px 5px;þ}þinput.text {þborder: 1px solid #999999;þ}þinput.date {þwidth:55px;þbackground: url(/db/images/icon_calendar.gif) 2px 50% no-repeat;þpadding-left:20px;þborder: 1px solid #999999;þ}þ/* =PAGING STYLESþ=================================================================*/þ.paging{þtext-align:right;þ}þ.wizardtab {þposition:relative;þ}þ.tabnav {þtext-align:right;þpadding-top:10px;þ}þ.note {þfont-size:smaller;þcolor: #666666;þmargin:0;þ}þa:link, a:visited {þtext-decoration: underline;þcolor: #ff8125;þ}þa:hover {þtext-decoration: underline;þcolor: #333;þ}þa img {þborder:none;þ}þ#printqueue tr:hover td, #printqueue tr.hover td {þbackground:#CCCCCC;þ}þ#printqueue tr:hover .preview, #printqueue tr.hover .preview {þdisplay:block;þz-index:200;þ}þ.preview {þposition:absolute;þright:25px;þtop:25px;þmargin-top:-5px;þborder-top:1px solid #666666;þborder-right:1px solid #666666;þborder-left:1px solid #666666;þfont-size:.8em;þpadding:20px 20px 10px 20px;þbackground: url(/db/images/background_preview.gif) 0 100% repeat-x;þdisplay:none;þ_width: 60em;þmin-width:60em;þ}þa.thumbnail pre {þfloat:left;þmargin:5px;þborder-top:1px solid #666666;þborder-right:1px solid #666666;þborder-left:1px solid #666666;þfont-size:4px;þpadding:5em 5em 4em 5em;þbackground: url(/db/images/background_preview.gif) 0 100% repeat-x;þposition:relative;þ}þa.thumbnail {þtext-decoration:none;þcolor:#666666;þ}þa.thumbnail:hover {þcolor:#000000þ}þ.queued td{þbackground:#FFCC33;þ}þdiv.page {þbackground: #FFFFFF;þborder-top:1px solid #BBBBBB;þborder-right:1px solid #999999;þborder-left:1px solid #333333;þborder-bottom:1px solid #000000;þmargin:10px 0;þpadding:20px;þfloat:left;þclear:both;þ_width:60em;þmin-width:60em;þfont-size:.9em;þ}þ.printDialog {þposition:absolute; þtop:5px; þright:0; þwidth:220px; þbackground:#FFFFFF; þborder: 1px solid #CCCCCC; þborder-top:none;þ}þ.printDialog div {þpadding:0 5px 5px 5px;þ}þ.even .printDialog {þbackground: #EEEEEE;þ}þtr.hover .printDialog, tr:hover .printDialog {þbackground:#CCCCCC;þz-index:201;þ}þ#alerts {þmargin: 50px 0 -30px 0;þ}þform {þmargin: 0;þpadding: 0;þ}þ#search_box {þmargin: 0;þposition: absolute;þtop: 20px;þright: 20px;þtext-align: right;þ}þ</style>þ<script>þ<!--þvar BaseURL = "/";þ-->þ</script>þ<script type="text/javascript" language="javascript">þ/*þBehaviour v1.1 by Ben Nolan, June 2005. Based largely on the workþof Simon Willison (see comments by Simon below).þDescription:þUses css selectors to apply javascript behaviours to enableþunobtrusive javascript in html documents.þUsage:   þvar myrules = {þ'b.someclass' : function(element){þelement.onclick = function(){þalert(this.innerHTML);þ}þ},þ'#someid u' : function(element){þelement.onmouseover = function(){þthis.innerHTML = "BLAH!";þ}þ}þ};þBehaviour.register(myrules);þLicense:þMy stuff is BSD licensed. Not sure about Simon's.þMore information:þhttp://ripcord.co.nz/behaviour/þ*/   þvar Behaviour = {þlist : new Array,þregister : function(sheet){þBehaviour.list.push(sheet);þ},þstart : function(){þBehaviour.addLoadEvent(function(){þBehaviour.apply();þ});þ},þapply : function(){þfor (h=0;sheet=Behaviour.list[h];h++){þfor (selector in sheet){þlist = document.getElementsBySelector(selector);þif (!list){þcontinue;þ}þfor (i=0;element=list[i];i++){þsheet[selector](element);þ}þ}þ}þ},þaddLoadEvent : function(func){þvar oldonload = window.onload;þif (typeof window.onload != 'function') {þwindow.onload = func;þ} else {þwindow.onload = function() {þoldonload();þfunc();þ}þ}þ}þ}þBehaviour.start();þ/*þThe following code is Copyright (C) Simon Willison 2004.þdocument.getElementsBySelector(selector)þ- returns an array of element objects from the current documentþmatching the CSS selector. Selectors can contain element names, þclass names and ids and can be nested. For example:þelements = document.getElementsBySelect('div#main p a.external')þWill return an array of all 'a' elements with 'external' in their þclass attribute that are contained inside 'p' elements that are þcontained inside the 'div' element which has id="main"þNew in version 0.4: Support for CSS2 and CSS3 attribute selectors:þSee http://www.w3.org/TR/css3-selectors/#attribute-selectorsþVersion 0.4 - Simon Willison, March 25th 2003þ-- Works in Phoenix 0.5, Mozilla 1.3, Opera 7, Internet Explorer 6, Internet Explorer 5 on Windowsþ-- Opera 7 fails þ*/þfunction getAllChildren(e) {þreturn e.all ? e.all : e.getElementsByTagName('*');þ}þdocument.getElementsBySelector = function(selector) {þif (!document.getElementsByTagName) {þreturn new Array();þ}þvar tokens = selector.split(' ');þvar currentContext = new Array(document);þfor (var i = 0; i < tokens.length; i++) {þtoken = tokens[i].replace(/^\s+/,'').replace(/\s+$/,'');;þif (token.indexOf('#') > -1) {þvar bits = token.split('#');þvar tagName = bits[0];þvar id = bits[1];þvar element = document.getElementById(id);þif (tagName && element.nodeName.toLowerCase() != tagName) {þreturn new Array();þ}þcurrentContext = new Array(element);þcontinue; // Skip to next tokenþ}þif (token.indexOf('.') > -1) {þvar bits = token.split('.');þvar tagName = bits[0];þvar className = bits[1];þif (!tagName) {þtagName = '*';þ}þvar found = new Array;þvar foundCount = 0;þfor (var h = 0; h < currentContext.length; h++) {þvar elements;þif (tagName == '*') {þelements = getAllChildren(currentContext[h]);þ} else {þelements = currentContext[h].getElementsByTagName(tagName);þ}þfor (var j = 0; j < elements.length; j++) {þfound[foundCount++] = elements[j];þ}þ}þcurrentContext = new Array;þvar currentContextIndex = 0;þfor (var k = 0; k < found.length; k++) {þif (found[k].className && found[k].className.match(new RegExp('\\b'+className+'\\b'))) {þcurrentContext[currentContextIndex++] = found[k];þ}þ}þcontinue; // Skip to next tokenþ}þif (token.match(/^(\w*)\[(\w+)([=~\|\^\$\*]?)=?"?([^\]"]*)"?\]$/)) {þvar tagName = RegExp.$1;þvar attrName = RegExp.$2;þvar attrOperator = RegExp.$3;þvar attrValue = RegExp.$4;þif (!tagName) {þtagName = '*';þ}þvar found = new Array;þvar foundCount = 0;þfor (var h = 0; h < currentContext.length; h++) {þvar elements;þif (tagName == '*') {þelements = getAllChildren(currentContext[h]);þ} else {þelements = currentContext[h].getElementsByTagName(tagName);þ}þfor (var j = 0; j < elements.length; j++) {þfound[foundCount++] = elements[j];þ}þ}þcurrentContext = new Array;þvar currentContextIndex = 0;þvar checkFunction; // This function will be used to filter the elementsþswitch (attrOperator) {þcase '=': // EqualityþcheckFunction = function(e) { return (e.getAttribute(attrName) == attrValue); };þbreak;þcase '~': // Match one of space seperated words þcheckFunction = function(e) { return (e.getAttribute(attrName).match(new RegExp('\\b'+attrValue+'\\b'))); };þbreak;þcase '|': // Match start with value followed by optional hyphenþcheckFunction = function(e) { return (e.getAttribute(attrName).match(new RegExp('^'+attrValue+'-?'))); };þbreak;þcase '^': // Match starts with valueþcheckFunction = function(e) { return (e.getAttribute(attrName).indexOf(attrValue) == 0); };þbreak;þcase '$': // Match ends with value - fails with "Warning" in Opera 7þcheckFunction = function(e) { return (e.getAttribute(attrName).lastIndexOf(attrValue) == e.getAttribute(attrName).length - attrValue.length); };þbreak;þcase '*': // Match ends with valueþcheckFunction = function(e) { return (e.getAttribute(attrName).indexOf(attrValue) > -1); };þbreak;þdefault :þcheckFunction = function(e) { return e.getAttribute(attrName); };þ}þcurrentContext = new Array;þvar currentContextIndex = 0;þfor (var k = 0; k < found.length; k++) {þif (checkFunction(found[k])) {þcurrentContext[currentContextIndex++] = found[k];þ}þ}þcontinue; // Skip to next tokenþ}þif (!currentContext[0]){þreturn;þ}þtagName = token;þvar found = new Array;þvar foundCount = 0;þfor (var h = 0; h < currentContext.length; h++) {þvar elements = currentContext[h].getElementsByTagName(tagName);þfor (var j = 0; j < elements.length; j++) {þfound[foundCount++] = elements[j];þ}þ}þcurrentContext = found;þ}þreturn currentContext;þ}þ/* That revolting regular expression explained þ/^(\w+)\[(\w+)([=~\|\^\$\*]?)=?"?([^\]"]*)"?\]$/þ\---/  \---/\-------------/    \-------/þ|      |         |               |þ|      |         |           The valueþ|      |    ~,|,^,$,* or =þ|   Attribute þTagþ*/þ</script>þ<script type="text/javascript" language="javascript">þ/*  Prototype JavaScript framework, version 1.4.0þ*  (c) 2005 Sam Stephenson <sam@conio.net>þ*þ*  THIS FILE IS AUTOMATICALLY GENERATED. When sending patches, please diffþ*  against the source tree, available from the Prototype darcs repository.þ*þ*  Prototype is freely distributable under the terms of an MIT-style license.þ*þ*  For details, see the Prototype web site: http://prototype.conio.net/þ*þ/*--------------------------------------------------------------------------*/þvar Prototype = {þVersion: '1.4.0',þScriptFragment: '(?:<script.*?>)((\n|\r|.)*?)(?:<\/script>)',þemptyFunction: function() {},þK: function(x) {return x}þ}þvar Class = {þcreate: function() {þreturn function() {þthis.initialize.apply(this, arguments);þ}þ}þ}þvar Abstract = new Object();þObject.extend = function(destination, source) {þfor (property in source) {þdestination[property] = source[property];þ}þreturn destination;þ}þObject.inspect = function(object) {þtry {þif (object == undefined) return 'undefined';þif (object == null) return 'null';þreturn object.inspect ? object.inspect() : object.toString();þ} catch (e) {þif (e instanceof RangeError) return '...';þthrow e;þ}þ}þFunction.prototype.bind = function() {þvar __method = this, args = $A(arguments), object = args.shift();þreturn function() {þreturn __method.apply(object, args.concat($A(arguments)));þ}þ}þFunction.prototype.bindAsEventListener = function(object) {þvar __method = this;þreturn function(event) {þreturn __method.call(object, event || window.event);þ}þ}þObject.extend(Number.prototype, {þtoColorPart: function() {þvar digits = this.toString(16);þif (this < 16) return '0' + digits;þreturn digits;þ},þsucc: function() {þreturn this + 1;þ},þtimes: function(iterator) {þ$R(0, this, true).each(iterator);þreturn this;þ}þ});þvar Try = {þthese: function() {þvar returnValue;þfor (var i = 0; i < arguments.length; i++) {þvar lambda = arguments[i];þtry {þreturnValue = lambda();þbreak;þ} catch (e) {}þ}þreturn returnValue;þ}þ}þ/*--------------------------------------------------------------------------*/þvar PeriodicalExecuter = Class.create();þPeriodicalExecuter.prototype = {þinitialize: function(callback, frequency) {þthis.callback = callback;þthis.frequency = frequency;þthis.currentlyExecuting = false;þthis.registerCallback();þ},þregisterCallback: function() {þsetInterval(this.onTimerEvent.bind(this), this.frequency * 1000);þ},þonTimerEvent: function() {þif (!this.currentlyExecuting) {þtry {þthis.currentlyExecuting = true;þthis.callback();þ} finally {þthis.currentlyExecuting = false;þ}þ}þ}þ}þ/*--------------------------------------------------------------------------*/þfunction $() {þvar elements = new Array();þfor (var i = 0; i < arguments.length; i++) {þvar element = arguments[i];þif (typeof element == 'string')þelement = document.getElementById(element);þif (arguments.length == 1)þreturn element;þelements.push(element);þ}þreturn elements;þ}þObject.extend(String.prototype, {þstripTags: function() {þreturn this.replace(/<\/?[^>]+>/gi, '');þ},þstripScripts: function() {þreturn this.replace(new RegExp(Prototype.ScriptFragment, 'img'), '');þ},þextractScripts: function() {þvar matchAll = new RegExp(Prototype.ScriptFragment, 'img');þvar matchOne = new RegExp(Prototype.ScriptFragment, 'im');þreturn (this.match(matchAll) || []).map(function(scriptTag) {þreturn (scriptTag.match(matchOne) || ['', ''])[1];þ});þ},þevalScripts: function() {þreturn this.extractScripts().map(eval);þ},þescapeHTML: function() {þvar div = document.createElement('div');þvar text = document.createTextNode(this);þdiv.appendChild(text);þreturn div.innerHTML;þ},þunescapeHTML: function() {þvar div = document.createElement('div');þdiv.innerHTML = this.stripTags();þreturn div.childNodes[0] ? div.childNodes[0].nodeValue : '';þ},þtoQueryParams: function() {þvar pairs = this.match(/^\??(.*)$/)[1].split('&');þreturn pairs.inject({}, function(params, pairString) {þvar pair = pairString.split('=');þparams[pair[0]] = pair[1];þreturn params;þ});þ},þtoArray: function() {þreturn this.split('');þ},þcamelize: function() {þvar oStringList = this.split('-');þif (oStringList.length == 1) return oStringList[0];þvar camelizedString = this.indexOf('-') == 0þ? oStringList[0].charAt(0).toUpperCase() + oStringList[0].substring(1)þ: oStringList[0];þfor (var i = 1, len = oStringList.length; i < len; i++) {þvar s = oStringList[i];þcamelizedString += s.charAt(0).toUpperCase() + s.substring(1);þ}þreturn camelizedString;þ},þinspect: function() {þreturn "'" + this.replace('\\', '\\\\').replace("'", '\\\'') + "'";þ}þ});þString.prototype.parseQuery = String.prototype.toQueryParams;þvar $break    = new Object();þvar $continue = new Object();þvar Enumerable = {þeach: function(iterator) {þvar index = 0;þtry {þthis._each(function(value) {þtry {þiterator(value, index++);þ} catch (e) {þif (e != $continue) throw e;þ}þ});þ} catch (e) {þif (e != $break) throw e;þ}þ},þall: function(iterator) {þvar result = true;þthis.each(function(value, index) {þresult = result && !!(iterator || Prototype.K)(value, index);þif (!result) throw $break;þ});þreturn result;þ},þany: function(iterator) {þvar result = true;þthis.each(function(value, index) {þif (result = !!(iterator || Prototype.K)(value, index))þthrow $break;þ});þreturn result;þ},þcollect: function(iterator) {þvar results = [];þthis.each(function(value, index) {þresults.push(iterator(value, index));þ});þreturn results;þ},þdetect: function (iterator) {þvar result;þthis.each(function(value, index) {þif (iterator(value, index)) {þresult = value;þthrow $break;þ}þ});þreturn result;þ},þfindAll: function(iterator) {þvar results = [];þthis.each(function(value, index) {þif (iterator(value, index))þresults.push(value);þ});þreturn results;þ},þgrep: function(pattern, iterator) {þvar results = [];þthis.each(function(value, index) {þvar stringValue = value.toString();þif (stringValue.match(pattern))þresults.push((iterator || Prototype.K)(value, index));þ})þreturn results;þ},þinclude: function(object) {þvar found = false;þthis.each(function(value) {þif (value == object) {þfound = true;þthrow $break;þ}þ});þreturn found;þ},þinject: function(memo, iterator) {þthis.each(function(value, index) {þmemo = iterator(memo, value, index);þ});þreturn memo;þ},þinvoke: function(method) {þvar args = $A(arguments).slice(1);þreturn this.collect(function(value) {þreturn value[method].apply(value, args);þ});þ},þmax: function(iterator) {þvar result;þthis.each(function(value, index) {þvalue = (iterator || Prototype.K)(value, index);þif (value >= (result || value))þresult = value;þ});þreturn result;þ},þmin: function(iterator) {þvar result;þthis.each(function(value, index) {þvalue = (iterator || Prototype.K)(value, index);þif (value <= (result || value))þresult = value;þ});þreturn result;þ},þpartition: function(iterator) {þvar trues = [], falses = [];þthis.each(function(value, index) {þ((iterator || Prototype.K)(value, index) ?þtrues : falses).push(value);þ});þreturn [trues, falses];þ},þpluck: function(property) {þvar results = [];þthis.each(function(value, index) {þresults.push(value[property]);þ});þreturn results;þ},þreject: function(iterator) {þvar results = [];þthis.each(function(value, index) {þif (!iterator(value, index))þresults.push(value);þ});þreturn results;þ},þsortBy: function(iterator) {þreturn this.collect(function(value, index) {þreturn {value: value, criteria: iterator(value, index)};þ}).sort(function(left, right) {þvar a = left.criteria, b = right.criteria;þreturn a < b ? -1 : a > b ? 1 : 0;þ}).pluck('value');þ},þtoArray: function() {þreturn this.collect(Prototype.K);þ},þzip: function() {þvar iterator = Prototype.K, args = $A(arguments);þif (typeof args.last() == 'function')þiterator = args.pop();þvar collections = [this].concat(args).map($A);þreturn this.map(function(value, index) {þiterator(value = collections.pluck(index));þreturn value;þ});þ},þinspect: function() {þreturn '#<Enumerable:' + this.toArray().inspect() + '>';þ}þ}þObject.extend(Enumerable, {þmap:     Enumerable.collect,þfind:    Enumerable.detect,þselect:  Enumerable.findAll,þmember:  Enumerable.include,þentries: Enumerable.toArrayþ});þvar $A = Array.from = function(iterable) {þif (!iterable) return [];þif (iterable.toArray) {þreturn iterable.toArray();þ} else {þvar results = [];þfor (var i = 0; i < iterable.length; i++)þresults.push(iterable[i]);þreturn results;þ}þ}þObject.extend(Array.prototype, Enumerable);þArray.prototype._reverse = Array.prototype.reverse;þObject.extend(Array.prototype, {þ_each: function(iterator) {þfor (var i = 0; i < this.length; i++)þiterator(this[i]);þ},þclear: function() {þthis.length = 0;þreturn this;þ},þfirst: function() {þreturn this[0];þ},þlast: function() {þreturn this[this.length - 1];þ},þcompact: function() {þreturn this.select(function(value) {þreturn value != undefined || value != null;þ});þ},þflatten: function() {þreturn this.inject([], function(array, value) {þreturn array.concat(value.constructor == Array ?þvalue.flatten() : [value]);þ});þ},þwithout: function() {þvar values = $A(arguments);þreturn this.select(function(value) {þreturn !values.include(value);þ});þ},þindexOf: function(object) {þfor (var i = 0; i < this.length; i++)þif (this[i] == object) return i;þreturn -1;þ},þreverse: function(inline) {þreturn (inline !== false ? this : this.toArray())._reverse();þ},þshift: function() {þvar result = this[0];þfor (var i = 0; i < this.length - 1; i++)þthis[i] = this[i + 1];þthis.length--;þreturn result;þ},þinspect: function() {þreturn '[' + this.map(Object.inspect).join(', ') + ']';þ}þ});þvar Hash = {þ_each: function(iterator) {þfor (key in this) {þvar value = this[key];þif (typeof value == 'function') continue;þvar pair = [key, value];þpair.key = key;þpair.value = value;þiterator(pair);þ}þ},þkeys: function() {þreturn this.pluck('key');þ},þvalues: function() {þreturn this.pluck('value');þ},þmerge: function(hash) {þreturn $H(hash).inject($H(this), function(mergedHash, pair) {þmergedHash[pair.key] = pair.value;þreturn mergedHash;þ});þ},þtoQueryString: function() {þreturn this.map(function(pair) {þreturn pair.map(encodeURIComponent).join('=');þ}).join('&');þ},þinspect: function() {þreturn '#<Hash:{' + this.map(function(pair) {þreturn pair.map(Object.inspect).join(': ');þ}).join(', ') + '}>';þ}þ}þfunction $H(object) {þvar hash = Object.extend({}, object || {});þObject.extend(hash, Enumerable);þObject.extend(hash, Hash);þreturn hash;þ}þObjectRange = Class.create();þObject.extend(ObjectRange.prototype, Enumerable);þObject.extend(ObjectRange.prototype, {þinitialize: function(start, end, exclusive) {þthis.start = start;þthis.end = end;þthis.exclusive = exclusive;þ},þ_each: function(iterator) {þvar value = this.start;þdo {þiterator(value);þvalue = value.succ();þ} while (this.include(value));þ},þinclude: function(value) {þif (value < this.start)þreturn false;þif (this.exclusive)þreturn value < this.end;þreturn value <= this.end;þ}þ});þvar $R = function(start, end, exclusive) {þreturn new ObjectRange(start, end, exclusive);þ}þvar Ajax = {þgetTransport: function() {þreturn Try.these(þfunction() {return new ActiveXObject('Msxml2.XMLHTTP')},þfunction() {return new ActiveXObject('Microsoft.XMLHTTP')},þfunction() {return new XMLHttpRequest()}þ) || false;þ},þactiveRequestCount: 0þ}þAjax.Responders = {þresponders: [],þ_each: function(iterator) {þthis.responders._each(iterator);þ},þregister: function(responderToAdd) {þif (!this.include(responderToAdd))þthis.responders.push(responderToAdd);þ},þunregister: function(responderToRemove) {þthis.responders = this.responders.without(responderToRemove);þ},þdispatch: function(callback, request, transport, json) {þthis.each(function(responder) {þif (responder[callback] && typeof responder[callback] == 'function') {þtry {þresponder[callback].apply(responder, [request, transport, json]);þ} catch (e) {}þ}þ});þ}þ};þObject.extend(Ajax.Responders, Enumerable);þAjax.Responders.register({þonCreate: function() {þAjax.activeRequestCount++;þ},þonComplete: function() {þAjax.activeRequestCount--;þ}þ});þAjax.Base = function() {};þAjax.Base.prototype = {þsetOptions: function(options) {þthis.options = {þmethod:       'post',þasynchronous: true,þparameters:   ''þ}þObject.extend(this.options, options || {});þ},þresponseIsSuccess: function() {þreturn this.transport.status == undefinedþ|| this.transport.status == 0þ|| (this.transport.status >= 200 && this.transport.status < 300);þ},þresponseIsFailure: function() {þreturn !this.responseIsSuccess();þ}þ}þAjax.Request = Class.create();þAjax.Request.Events =þ['Uninitialized', 'Loading', 'Loaded', 'Interactive', 'Complete'];þAjax.Request.prototype = Object.extend(new Ajax.Base(), {þinitialize: function(url, options) {þthis.transport = Ajax.getTransport();þthis.setOptions(options);þthis.request(url);þ},þrequest: function(url) {þvar parameters = this.options.parameters || '';þif (parameters.length > 0) parameters += '&_=';þtry {þthis.url = url;þif (this.options.method == 'get' && parameters.length > 0)þthis.url += (this.url.match(/\?/) ? '&' : '?') + parameters;þAjax.Responders.dispatch('onCreate', this, this.transport);þthis.transport.open(this.options.method, this.url,þthis.options.asynchronous);þif (this.options.asynchronous) {þthis.transport.onreadystatechange = this.onStateChange.bind(this);þsetTimeout((function() {this.respondToReadyState(1)}).bind(this), 10);þ}þthis.setRequestHeaders();þvar body = this.options.postBody ? this.options.postBody : parameters;þthis.transport.send(this.options.method == 'post' ? body : null);þ} catch (e) {þthis.dispatchException(e);þ}þ},þsetRequestHeaders: function() {þvar requestHeaders =þ['X-Requested-With', 'XMLHttpRequest',þ'X-Prototype-Version', Prototype.Version];þif (this.options.method == 'post') {þrequestHeaders.push('Content-type',þ'application/x-www-form-urlencoded');þ/* Force "Connection: close" for Mozilla browsers to work aroundþ* a bug where XMLHttpReqeuest sends an incorrect Content-lengthþ* header. See Mozilla Bugzilla #246651.þ*/þif (this.transport.overrideMimeType)þrequestHeaders.push('Connection', 'close');þ}þif (this.options.requestHeaders)þrequestHeaders.push.apply(requestHeaders, this.options.requestHeaders);þfor (var i = 0; i < requestHeaders.length; i += 2)þthis.transport.setRequestHeader(requestHeaders[i], requestHeaders[i+1]);þ},þonStateChange: function() {þvar readyState = this.transport.readyState;þif (readyState != 1)þthis.respondToReadyState(this.transport.readyState);þ},þheader: function(name) {þtry {þreturn this.transport.getResponseHeader(name);þ} catch (e) {}þ},þevalJSON: function() {þtry {þreturn eval(this.header('X-JSON'));þ} catch (e) {}þ},þevalResponse: function() {þtry {þreturn eval(this.transport.responseText);þ} catch (e) {þthis.dispatchException(e);þ}þ},þrespondToReadyState: function(readyState) {þvar event = Ajax.Request.Events[readyState];þvar transport = this.transport, json = this.evalJSON();þif (event == 'Complete') {þtry {þ(this.options['on' + this.transport.status]þ|| this.options['on' + (this.responseIsSuccess() ? 'Success' : 'Failure')]þ|| Prototype.emptyFunction)(transport, json);þ} catch (e) {þthis.dispatchException(e);þ}þif ((this.header('Content-type') || '').match(/^text\/javascript/i))þthis.evalResponse();þ}þtry {þ(this.options['on' + event] || Prototype.emptyFunction)(transport, json);þAjax.Responders.dispatch('on' + event, this, transport, json);þ} catch (e) {þthis.dispatchException(e);þ}þ/* Avoid memory leak in MSIE: clean up the oncomplete event handler */þif (event == 'Complete')þthis.transport.onreadystatechange = Prototype.emptyFunction;þ},þdispatchException: function(exception) {þ(this.options.onException || Prototype.emptyFunction)(this, exception);þAjax.Responders.dispatch('onException', this, exception);þ}þ});þAjax.Updater = Class.create();þObject.extend(Object.extend(Ajax.Updater.prototype, Ajax.Request.prototype), {þinitialize: function(container, url, options) {þthis.containers = {þsuccess: container.success ? $(container.success) : $(container),þfailure: container.failure ? $(container.failure) :þ(container.success ? null : $(container))þ}þthis.transport = Ajax.getTransport();þthis.setOptions(options);þvar onComplete = this.options.onComplete || Prototype.emptyFunction;þthis.options.onComplete = (function(transport, object) {þthis.updateContent();þonComplete(transport, object);þ}).bind(this);þthis.request(url);þ},þupdateContent: function() {þvar receiver = this.responseIsSuccess() ?þthis.containers.success : this.containers.failure;þvar response = this.transport.responseText;þif (!this.options.evalScripts)þresponse = response.stripScripts();þif (receiver) {þif (this.options.insertion) {þnew this.options.insertion(receiver, response);þ} else {þElement.update(receiver, response);þ}þ}þif (this.responseIsSuccess()) {þif (this.onComplete)þsetTimeout(this.onComplete.bind(this), 10);þ}þ}þ});þAjax.PeriodicalUpdater = Class.create();þAjax.PeriodicalUpdater.prototype = Object.extend(new Ajax.Base(), {þinitialize: function(container, url, options) {þthis.setOptions(options);þthis.onComplete = this.options.onComplete;þthis.frequency = (this.options.frequency || 2);þthis.decay = (this.options.decay || 1);þthis.updater = {};þthis.container = container;þthis.url = url;þthis.start();þ},þstart: function() {þthis.options.onComplete = this.updateComplete.bind(this);þthis.onTimerEvent();þ},þstop: function() {þthis.updater.onComplete = undefined;þclearTimeout(this.timer);þ(this.onComplete || Prototype.emptyFunction).apply(this, arguments);þ},þupdateComplete: function(request) {þif (this.options.decay) {þthis.decay = (request.responseText == this.lastText ?þthis.decay * this.options.decay : 1);þthis.lastText = request.responseText;þ}þthis.timer = setTimeout(this.onTimerEvent.bind(this),þthis.decay * this.frequency * 1000);þ},þonTimerEvent: function() {þthis.updater = new Ajax.Updater(this.container, this.url, this.options);þ}þ});þdocument.getElementsByClassName = function(className, parentElement) {þvar children = ($(parentElement) || document.body).getElementsByTagName('*');þreturn $A(children).inject([], function(elements, child) {þif (child.className.match(new RegExp("(^|\\s)" + className + "(\\s|$)")))þelements.push(child);þreturn elements;þ});þ}þ/*--------------------------------------------------------------------------*/þif (!window.Element) {þvar Element = new Object();þ}þObject.extend(Element, {þvisible: function(element) {þreturn $(element).style.display != 'none';þ},þtoggle: function() {þfor (var i = 0; i < arguments.length; i++) {þvar element = $(arguments[i]);þElement[Element.visible(element) ? 'hide' : 'show'](element);þ}þ},þhide: function() {þfor (var i = 0; i < arguments.length; i++) {þvar element = $(arguments[i]);þelement.style.display = 'none';þ}þ},þshow: function() {þfor (var i = 0; i < arguments.length; i++) {þvar element = $(arguments[i]);þelement.style.display = '';þ}þ},þremove: function(element) {þelement = $(element);þelement.parentNode.removeChild(element);þ},þupdate: function(element, html) {þ$(element).innerHTML = html.stripScripts();þsetTimeout(function() {html.evalScripts()}, 10);þ},þgetHeight: function(element) {þelement = $(element);þreturn element.offsetHeight;þ},þclassNames: function(element) {þreturn new Element.ClassNames(element);þ},þhasClassName: function(element, className) {þif (!(element = $(element))) return;þreturn Element.classNames(element).include(className);þ},þaddClassName: function(element, className) {þif (!(element = $(element))) return;þreturn Element.classNames(element).add(className);þ},þremoveClassName: function(element, className) {þif (!(element = $(element))) return;þreturn Element.classNames(element).remove(className);þ},þcleanWhitespace: function(element) {þelement = $(element);þfor (var i = 0; i < element.childNodes.length; i++) {þvar node = element.childNodes[i];þif (node.nodeType == 3 && !/\S/.test(node.nodeValue))þElement.remove(node);þ}þ},þempty: function(element) {þreturn $(element).innerHTML.match(/^\s*$/);þ},þscrollTo: function(element) {þelement = $(element);þvar x = element.x ? element.x : element.offsetLeft,þy = element.y ? element.y : element.offsetTop;þwindow.scrollTo(x, y);þ},þgetStyle: function(element, style) {þelement = $(element);þvar value = element.style[style.camelize()];þif (!value) {þif (document.defaultView && document.defaultView.getComputedStyle) {þvar css = document.defaultView.getComputedStyle(element, null);þvalue = css ? css.getPropertyValue(style) : null;þ} else if (element.currentStyle) {þvalue = element.currentStyle[style.camelize()];þ}þ}þif (window.opera && ['left', 'top', 'right', 'bottom'].include(style))þif (Element.getStyle(element, 'position') == 'static') value = 'auto';þreturn value == 'auto' ? null : value;þ},þsetStyle: function(element, style) {þelement = $(element);þfor (name in style)þelement.style[name.camelize()] = style[name];þ},þgetDimensions: function(element) {þelement = $(element);þif (Element.getStyle(element, 'display') != 'none')þreturn {width: element.offsetWidth, height: element.offsetHeight};þvar els = element.style;þvar originalVisibility = els.visibility;þvar originalPosition = els.position;þels.visibility = 'hidden';þels.position = 'absolute';þels.display = '';þvar originalWidth = element.clientWidth;þvar originalHeight = element.clientHeight;þels.display = 'none';þels.position = originalPosition;þels.visibility = originalVisibility;þreturn {width: originalWidth, height: originalHeight};þ},þmakePositioned: function(element) {þelement = $(element);þvar pos = Element.getStyle(element, 'position');þif (pos == 'static' || !pos) {þelement._madePositioned = true;þelement.style.position = 'relative';þif (window.opera) {þelement.style.top = 0;þelement.style.left = 0;þ}þ}þ},þundoPositioned: function(element) {þelement = $(element);þif (element._madePositioned) {þelement._madePositioned = undefined;þelement.style.position =þelement.style.top =þelement.style.left =þelement.style.bottom =þelement.style.right = '';þ}þ},þmakeClipping: function(element) {þelement = $(element);þif (element._overflow) return;þelement._overflow = element.style.overflow;þif ((Element.getStyle(element, 'overflow') || 'visible') != 'hidden')þelement.style.overflow = 'hidden';þ},þundoClipping: function(element) {þelement = $(element);þif (element._overflow) return;þelement.style.overflow = element._overflow;þelement._overflow = undefined;þ}þ});þvar Toggle = new Object();þToggle.display = Element.toggle;þ/*--------------------------------------------------------------------------*/þAbstract.Insertion = function(adjacency) {þthis.adjacency = adjacency;þ}þAbstract.Insertion.prototype = {þinitialize: function(element, content) {þthis.element = $(element);þthis.content = content.stripScripts();þif (this.adjacency && this.element.insertAdjacentHTML) {þtry {þthis.element.insertAdjacentHTML(this.adjacency, this.content);þ} catch (e) {þif (this.element.tagName.toLowerCase() == 'tbody') {þthis.insertContent(this.contentFromAnonymousTable());þ} else {þthrow e;þ}þ}þ} else {þthis.range = this.element.ownerDocument.createRange();þif (this.initializeRange) this.initializeRange();þthis.insertContent([this.range.createContextualFragment(this.content)]);þ}þsetTimeout(function() {content.evalScripts()}, 10);þ},þcontentFromAnonymousTable: function() {þvar div = document.createElement('div');þdiv.innerHTML = '<table><tbody>' + this.content + '</tbody></table>';þreturn $A(div.childNodes[0].childNodes[0].childNodes);þ}þ}þvar Insertion = new Object();þInsertion.Before = Class.create();þInsertion.Before.prototype = Object.extend(new Abstract.Insertion('beforeBegin'), {þinitializeRange: function() {þthis.range.setStartBefore(this.element);þ},þinsertContent: function(fragments) {þfragments.each((function(fragment) {þthis.element.parentNode.insertBefore(fragment, this.element);þ}).bind(this));þ}þ});þInsertion.Top = Class.create();þInsertion.Top.prototype = Object.extend(new Abstract.Insertion('afterBegin'), {þinitializeRange: function() {þthis.range.selectNodeContents(this.element);þthis.range.collapse(true);þ},þinsertContent: function(fragments) {þfragments.reverse(false).each((function(fragment) {þthis.element.insertBefore(fragment, this.element.firstChild);þ}).bind(this));þ}þ});þInsertion.Bottom = Class.create();þInsertion.Bottom.prototype = Object.extend(new Abstract.Insertion('beforeEnd'), {þinitializeRange: function() {þthis.range.selectNodeContents(this.element);þthis.range.collapse(this.element);þ},þinsertContent: function(fragments) {þfragments.each((function(fragment) {þthis.element.appendChild(fragment);þ}).bind(this));þ}þ});þInsertion.After = Class.create();þInsertion.After.prototype = Object.extend(new Abstract.Insertion('afterEnd'), {þinitializeRange: function() {þthis.range.setStartAfter(this.element);þ},þinsertContent: function(fragments) {þfragments.each((function(fragment) {þthis.element.parentNode.insertBefore(fragment,þthis.element.nextSibling);þ}).bind(this));þ}þ});þ/*--------------------------------------------------------------------------*/þElement.ClassNames = Class.create();þElement.ClassNames.prototype = {þinitialize: function(element) {þthis.element = $(element);þ},þ_each: function(iterator) {þthis.element.className.split(/\s+/).select(function(name) {þreturn name.length > 0;þ})._each(iterator);þ},þset: function(className) {þthis.element.className = className;þ},þadd: function(classNameToAdd) {þif (this.include(classNameToAdd)) return;þthis.set(this.toArray().concat(classNameToAdd).join(' '));þ},þremove: function(classNameToRemove) {þif (!this.include(classNameToRemove)) return;þthis.set(this.select(function(className) {þreturn className != classNameToRemove;þ}).join(' '));þ},þtoString: function() {þreturn this.toArray().join(' ');þ}þ}þObject.extend(Element.ClassNames.prototype, Enumerable);þvar Field = {þclear: function() {þfor (var i = 0; i < arguments.length; i++)þ$(arguments[i]).value = '';þ},þfocus: function(element) {þ$(element).focus();þ},þpresent: function() {þfor (var i = 0; i < arguments.length; i++)þif ($(arguments[i]).value == '') return false;þreturn true;þ},þselect: function(element) {þ$(element).select();þ},þactivate: function(element) {þelement = $(element);þelement.focus();þif (element.select)þelement.select();þ}þ}þ/*--------------------------------------------------------------------------*/þvar Form = {þserialize: function(form) {þvar elements = Form.getElements($(form));þvar queryComponents = new Array();þfor (var i = 0; i < elements.length; i++) {þvar queryComponent = Form.Element.serialize(elements[i]);þif (queryComponent)þqueryComponents.push(queryComponent);þ}þreturn queryComponents.join('&');þ},þgetElements: function(form) {þform = $(form);þvar elements = new Array();þfor (tagName in Form.Element.Serializers) {þvar tagElements = form.getElementsByTagName(tagName);þfor (var j = 0; j < tagElements.length; j++)þelements.push(tagElements[j]);þ}þreturn elements;þ},þgetInputs: function(form, typeName, name) {þform = $(form);þvar inputs = form.getElementsByTagName('input');þif (!typeName && !name)þreturn inputs;þvar matchingInputs = new Array();þfor (var i = 0; i < inputs.length; i++) {þvar input = inputs[i];þif ((typeName && input.type != typeName) ||þ(name && input.name != name))þcontinue;þmatchingInputs.push(input);þ}þreturn matchingInputs;þ},þdisable: function(form) {þvar elements = Form.getElements(form);þfor (var i = 0; i < elements.length; i++) {þvar element = elements[i];þelement.blur();þelement.disabled = 'true';þ}þ},þenable: function(form) {þvar elements = Form.getElements(form);þfor (var i = 0; i < elements.length; i++) {þvar element = elements[i];þelement.disabled = '';þ}þ},þfindFirstElement: function(form) {þreturn Form.getElements(form).find(function(element) {þreturn element.type != 'hidden' && !element.disabled &&þ['input', 'select', 'textarea'].include(element.tagName.toLowerCase());þ});þ},þfocusFirstElement: function(form) {þField.activate(Form.findFirstElement(form));þ},þreset: function(form) {þ$(form).reset();þ}þ}þForm.Element = {þserialize: function(element) {þelement = $(element);þvar method = element.tagName.toLowerCase();þvar parameter = Form.Element.Serializers[method](element);þif (parameter) {þvar key = encodeURIComponent(parameter[0]);þif (key.length == 0) return;þif (parameter[1].constructor != Array)þparameter[1] = [parameter[1]];þreturn parameter[1].map(function(value) {þreturn key + '=' + encodeURIComponent(value);þ}).join('&');þ}þ},þgetValue: function(element) {þelement = $(element);þvar method = element.tagName.toLowerCase();þvar parameter = Form.Element.Serializers[method](element);þif (parameter)þreturn parameter[1];þ}þ}þForm.Element.Serializers = {þinput: function(element) {þswitch (element.type.toLowerCase()) {þcase 'submit':þcase 'hidden':þcase 'password':þcase 'text':þreturn Form.Element.Serializers.textarea(element);þcase 'checkbox':þcase 'radio':þreturn Form.Element.Serializers.inputSelector(element);þ}þreturn false;þ},þinputSelector: function(element) {þif (element.checked)þreturn [element.name, element.value];þ},þtextarea: function(element) {þreturn [element.name, element.value];þ},þselect: function(element) {þreturn Form.Element.Serializers[element.type == 'select-one' ?þ'selectOne' : 'selectMany'](element);þ},þselectOne: function(element) {þvar value = '', opt, index = element.selectedIndex;þif (index >= 0) {þopt = element.options[index];þvalue = opt.value;þif (!value && !('value' in opt))þvalue = opt.text;þ}þreturn [element.name, value];þ},þselectMany: function(element) {þvar value = new Array();þfor (var i = 0; i < element.length; i++) {þvar opt = element.options[i];þif (opt.selected) {þvar optValue = opt.value;þif (!optValue && !('value' in opt))þoptValue = opt.text;þvalue.push(optValue);þ}þ}þreturn [element.name, value];þ}þ}þ/*--------------------------------------------------------------------------*/þvar $F = Form.Element.getValue;þ/*--------------------------------------------------------------------------*/þAbstract.TimedObserver = function() {}þAbstract.TimedObserver.prototype = {þinitialize: function(element, frequency, callback) {þthis.frequency = frequency;þthis.element   = $(element);þthis.callback  = callback;þthis.lastValue = this.getValue();þthis.registerCallback();þ},þregisterCallback: function() {þsetInterval(this.onTimerEvent.bind(this), this.frequency * 1000);þ},þonTimerEvent: function() {þvar value = this.getValue();þif (this.lastValue != value) {þthis.callback(this.element, value);þthis.lastValue = value;þ}þ}þ}þForm.Element.Observer = Class.create();þForm.Element.Observer.prototype = Object.extend(new Abstract.TimedObserver(), {þgetValue: function() {þreturn Form.Element.getValue(this.element);þ}þ});þForm.Observer = Class.create();þForm.Observer.prototype = Object.extend(new Abstract.TimedObserver(), {þgetValue: function() {þreturn Form.serialize(this.element);þ}þ});þ/*--------------------------------------------------------------------------*/þAbstract.EventObserver = function() {}þAbstract.EventObserver.prototype = {þinitialize: function(element, callback) {þthis.element  = $(element);þthis.callback = callback;þthis.lastValue = this.getValue();þif (this.element.tagName.toLowerCase() == 'form')þthis.registerFormCallbacks();þelseþthis.registerCallback(this.element);þ},þonElementEvent: function() {þvar value = this.getValue();þif (this.lastValue != value) {þthis.callback(this.element, value);þthis.lastValue = value;þ}þ},þregisterFormCallbacks: function() {þvar elements = Form.getElements(this.element);þfor (var i = 0; i < elements.length; i++)þthis.registerCallback(elements[i]);þ},þregisterCallback: function(element) {þif (element.type) {þswitch (element.type.toLowerCase()) {þcase 'checkbox':þcase 'radio':þEvent.observe(element, 'click', this.onElementEvent.bind(this));þbreak;þcase 'password':þcase 'text':þcase 'textarea':þcase 'select-one':þcase 'select-multiple':þEvent.observe(element, 'change', this.onElementEvent.bind(this));þbreak;þ}þ}þ}þ}þForm.Element.EventObserver = Class.create();þForm.Element.EventObserver.prototype = Object.extend(new Abstract.EventObserver(), {þgetValue: function() {þreturn Form.Element.getValue(this.element);þ}þ});þForm.EventObserver = Class.create();þForm.EventObserver.prototype = Object.extend(new Abstract.EventObserver(), {þgetValue: function() {þreturn Form.serialize(this.element);þ}þ});þif (!window.Event) {þvar Event = new Object();þ}þObject.extend(Event, {þKEY_BACKSPACE: 8,þKEY_TAB:       9,þKEY_RETURN:   13,þKEY_ESC:      27,þKEY_LEFT:     37,þKEY_UP:       38,þKEY_RIGHT:    39,þKEY_DOWN:     40,þKEY_DELETE:   46,þelement: function(event) {þreturn event.target || event.srcElement;þ},þisLeftClick: function(event) {þreturn (((event.which) && (event.which == 1)) ||þ((event.button) && (event.button == 1)));þ},þpointerX: function(event) {þreturn event.pageX || (event.clientX +þ(document.documentElement.scrollLeft || document.body.scrollLeft));þ},þpointerY: function(event) {þreturn event.pageY || (event.clientY +þ(document.documentElement.scrollTop || document.body.scrollTop));þ},þstop: function(event) {þif (event.preventDefault) {þevent.preventDefault();þevent.stopPropagation();þ} else {þevent.returnValue = false;þevent.cancelBubble = true;þ}þ},þfindElement: function(event, tagName) {þvar element = Event.element(event);þwhile (element.parentNode && (!element.tagName ||þ(element.tagName.toUpperCase() != tagName.toUpperCase())))þelement = element.parentNode;þreturn element;þ},þobservers: false,þ_observeAndCache: function(element, name, observer, useCapture) {þif (!this.observers) this.observers = [];þif (element.addEventListener) {þthis.observers.push([element, name, observer, useCapture]);þelement.addEventListener(name, observer, useCapture);þ} else if (element.attachEvent) {þthis.observers.push([element, name, observer, useCapture]);þelement.attachEvent('on' + name, observer);þ}þ},þunloadCache: function() {þif (!Event.observers) return;þfor (var i = 0; i < Event.observers.length; i++) {þEvent.stopObserving.apply(this, Event.observers[i]);þEvent.observers[i][0] = null;þ}þEvent.observers = false;þ},þobserve: function(element, name, observer, useCapture) {þvar element = $(element);þuseCapture = useCapture || false;þif (name == 'keypress' &&þ(navigator.appVersion.match(/Konqueror|Safari|KHTML/)þ|| element.attachEvent))þname = 'keydown';þthis._observeAndCache(element, name, observer, useCapture);þ},þstopObserving: function(element, name, observer, useCapture) {þvar element = $(element);þuseCapture = useCapture || false;þif (name == 'keypress' &&þ(navigator.appVersion.match(/Konqueror|Safari|KHTML/)þ|| element.detachEvent))þname = 'keydown';þif (element.removeEventListener) {þelement.removeEventListener(name, observer, useCapture);þ} else if (element.detachEvent) {þelement.detachEvent('on' + name, observer);þ}þ}þ});þ/* prevent memory leaks in IE */þEvent.observe(window, 'unload', Event.unloadCache, false);þvar Position = {þincludeScrollOffsets: false,þprepare: function() {þthis.deltaX =  window.pageXOffsetþ|| document.documentElement.scrollLeftþ|| document.body.scrollLeftþ|| 0;þthis.deltaY =  window.pageYOffsetþ|| document.documentElement.scrollTopþ|| document.body.scrollTopþ|| 0;þ},þrealOffset: function(element) {þvar valueT = 0, valueL = 0;þdo {þvalueT += element.scrollTop  || 0;þvalueL += element.scrollLeft || 0;þelement = element.parentNode;þ} while (element);þreturn [valueL, valueT];þ},þcumulativeOffset: function(element) {þvar valueT = 0, valueL = 0;þdo {þvalueT += element.offsetTop  || 0;þvalueL += element.offsetLeft || 0;þelement = element.offsetParent;þ} while (element);þreturn [valueL, valueT];þ},þpositionedOffset: function(element) {þvar valueT = 0, valueL = 0;þdo {þvalueT += element.offsetTop  || 0;þvalueL += element.offsetLeft || 0;þelement = element.offsetParent;þif (element) {þp = Element.getStyle(element, 'position');þif (p == 'relative' || p == 'absolute') break;þ}þ} while (element);þreturn [valueL, valueT];þ},þoffsetParent: function(element) {þif (element.offsetParent) return element.offsetParent;þif (element == document.body) return element;þwhile ((element = element.parentNode) && element != document.body)þif (Element.getStyle(element, 'position') != 'static')þreturn element;þreturn document.body;þ},þwithin: function(element, x, y) {þif (this.includeScrollOffsets)þreturn this.withinIncludingScrolloffsets(element, x, y);þthis.xcomp = x;þthis.ycomp = y;þthis.offset = this.cumulativeOffset(element);þreturn (y >= this.offset[1] &&þy <  this.offset[1] + element.offsetHeight &&þx >= this.offset[0] &&þx <  this.offset[0] + element.offsetWidth);þ},þwithinIncludingScrolloffsets: function(element, x, y) {þvar offsetcache = this.realOffset(element);þthis.xcomp = x + offsetcache[0] - this.deltaX;þthis.ycomp = y + offsetcache[1] - this.deltaY;þthis.offset = this.cumulativeOffset(element);þreturn (this.ycomp >= this.offset[1] &&þthis.ycomp <  this.offset[1] + element.offsetHeight &&þthis.xcomp >= this.offset[0] &&þthis.xcomp <  this.offset[0] + element.offsetWidth);þ},þoverlap: function(mode, element) {þif (!mode) return 0;þif (mode == 'vertical')þreturn ((this.offset[1] + element.offsetHeight) - this.ycomp) /þelement.offsetHeight;þif (mode == 'horizontal')þreturn ((this.offset[0] + element.offsetWidth) - this.xcomp) /þelement.offsetWidth;þ},þclone: function(source, target) {þsource = $(source);þtarget = $(target);þtarget.style.position = 'absolute';þvar offsets = this.cumulativeOffset(source);þtarget.style.top    = offsets[1] + 'px';þtarget.style.left   = offsets[0] + 'px';þtarget.style.width  = source.offsetWidth + 'px';þtarget.style.height = source.offsetHeight + 'px';þ},þpage: function(forElement) {þvar valueT = 0, valueL = 0;þvar element = forElement;þdo {þvalueT += element.offsetTop  || 0;þvalueL += element.offsetLeft || 0;þif (element.offsetParent==document.body)þif (Element.getStyle(element,'position')=='absolute') break;þ} while (element = element.offsetParent);þelement = forElement;þdo {þvalueT -= element.scrollTop  || 0;þvalueL -= element.scrollLeft || 0;þ} while (element = element.parentNode);þreturn [valueL, valueT];þ},þclone: function(source, target) {þvar options = Object.extend({þsetLeft:    true,þsetTop:     true,þsetWidth:   true,þsetHeight:  true,þoffsetTop:  0,þoffsetLeft: 0þ}, arguments[2] || {})þsource = $(source);þvar p = Position.page(source);þtarget = $(target);þvar delta = [0, 0];þvar parent = null;þif (Element.getStyle(target,'position') == 'absolute') {þparent = Position.offsetParent(target);þdelta = Position.page(parent);þ}þif (parent == document.body) {þdelta[0] -= document.body.offsetLeft;þdelta[1] -= document.body.offsetTop;þ}þif(options.setLeft)   target.style.left  = (p[0] - delta[0] + options.offsetLeft) + 'px';þif(options.setTop)    target.style.top   = (p[1] - delta[1] + options.offsetTop) + 'px';þif(options.setWidth)  target.style.width = source.offsetWidth + 'px';þif(options.setHeight) target.style.height = source.offsetHeight + 'px';þ},þabsolutize: function(element) {þelement = $(element);þif (element.style.position == 'absolute') return;þPosition.prepare();þvar offsets = Position.positionedOffset(element);þvar top     = offsets[1];þvar left    = offsets[0];þvar width   = element.clientWidth;þvar height  = element.clientHeight;þelement._originalLeft   = left - parseFloat(element.style.left  || 0);þelement._originalTop    = top  - parseFloat(element.style.top || 0);þelement._originalWidth  = element.style.width;þelement._originalHeight = element.style.height;þelement.style.position = 'absolute';þelement.style.top    = top + 'px';;þelement.style.left   = left + 'px';;þelement.style.width  = width + 'px';;þelement.style.height = height + 'px';;þ},þrelativize: function(element) {þelement = $(element);þif (element.style.position == 'relative') return;þPosition.prepare();þelement.style.position = 'relative';þvar top  = parseFloat(element.style.top  || 0) - (element._originalTop || 0);þvar left = parseFloat(element.style.left || 0) - (element._originalLeft || 0);þelement.style.top    = top + 'px';þelement.style.left   = left + 'px';þelement.style.height = element._originalHeight;þelement.style.width  = element._originalWidth;þ}þ}þif (/Konqueror|Safari|KHTML/.test(navigator.userAgent)) {þPosition.cumulativeOffset = function(element) {þvar valueT = 0, valueL = 0;þdo {þvalueT += element.offsetTop  || 0;þvalueL += element.offsetLeft || 0;þif (element.offsetParent == document.body)þif (Element.getStyle(element, 'position') == 'absolute') break;þelement = element.offsetParent;þ} while (element);þreturn [valueL, valueT];þ}þ}þ</script>þ<!-- <script type="text/javascript" language="javascript" src="/scripts/scriptaculous.js"></script> -->þ<script type="text/javascript" language="javascript">þ/* ------------- element ext -------------- */  þString.prototype.parseColor = function() {  þvar color = '#';  þif(this.slice(0,4) == 'rgb(') {  þvar cols = this.slice(4,this.length-1).split(',');  þvar i=0; do { color += parseInt(cols[i]).toColorPart() } while (++i<3);  þ} else {  þif(this.slice(0,1) == '#') {  þif(this.length==4) for(var i=1;i<4;i++) color += (this.charAt(i) + this.charAt(i)).toLowerCase();  þif(this.length==7) color = this.toLowerCase();  þ}  þ}  þreturn(color.length==7 ? color : (arguments[0] || this));  þ}þElement.collectTextNodes = function(element) {  þreturn $A($(element).childNodes).collect( function(node) {þreturn (node.nodeType==3 ? node.nodeValue : þ(node.hasChildNodes() ? Element.collectTextNodes(node) : ''));þ}).flatten().join('');þ}þElement.collectTextNodesIgnoreClass = function(element, className) {  þreturn $A($(element).childNodes).collect( function(node) {þreturn (node.nodeType==3 ? node.nodeValue : þ((node.hasChildNodes() && !Element.hasClassName(node,className)) ? þElement.collectTextNodes(node) : ''));þ}).flatten().join('');þ}þElement.setStyle = function(element, style) {þelement = $(element);þfor(k in style) element.style[k.camelize()] = style[k];þ}þElement.setContentZoom = function(element, percent) {  þElement.setStyle(element, {fontSize: (percent/100) + 'em'});   þif(navigator.appVersion.indexOf('AppleWebKit')>0) window.scrollBy(0,0);  þ}þElement.getOpacity = function(element){  þvar opacity;þif (opacity = Element.getStyle(element, 'opacity'))  þreturn parseFloat(opacity);  þif (opacity = (Element.getStyle(element, 'filter') || '').match(/alpha\(opacity=(.*)\)/))  þif(opacity[1]) return parseFloat(opacity[1]) / 100;  þreturn 1.0;  þ}þElement.setOpacity = function(element, value){  þelement= $(element);  þif (value == 1){þElement.setStyle(element, { opacity: þ(/Gecko/.test(navigator.userAgent) && !/Konqueror|Safari|KHTML/.test(navigator.userAgent)) ? þ0.999999 : null });þif(/MSIE/.test(navigator.userAgent))  þElement.setStyle(element, {filter: Element.getStyle(element,'filter').replace(/alpha\([^\)]*\)/gi,'')});  þ} else {  þif(value < 0.00001) value = 0;  þElement.setStyle(element, {opacity: value});þif(/MSIE/.test(navigator.userAgent))  þElement.setStyle(element, þ{ filter: Element.getStyle(element,'filter').replace(/alpha\([^\)]*\)/gi,'') +þ'alpha(opacity='+value*100+')' });  þ}   þ}  þElement.getInlineOpacity = function(element){  þreturn $(element).style.opacity || '';þ}  þElement.childrenWithClassName = function(element, className) {  þreturn $A($(element).getElementsByTagName('*')).select(þfunction(c) { return Element.hasClassName(c, className) });þ}þArray.prototype.call = function() {þvar args = arguments;þthis.each(function(f){ f.apply(this, args) });þ}þ/*--------------------------------------------------------------------------*/þvar Effect = {þtagifyText: function(element) {þvar tagifyStyle = 'position:relative';þif(/MSIE/.test(navigator.userAgent)) tagifyStyle += ';zoom:1';þelement = $(element);þ$A(element.childNodes).each( function(child) {þif(child.nodeType==3) {þchild.nodeValue.toArray().each( function(character) {þelement.insertBefore(þBuilder.node('span',{style: tagifyStyle},þcharacter == ' ' ? String.fromCharCode(160) : character), þchild);þ});þElement.remove(child);þ}þ});þ},þmultiple: function(element, effect) {þvar elements;þif(((typeof element == 'object') || þ(typeof element == 'function')) && þ(element.length))þelements = element;þelseþelements = $(element).childNodes;þvar options = Object.extend({þspeed: 0.1,þdelay: 0.0þ}, arguments[2] || {});þvar masterDelay = options.delay;þ$A(elements).each( function(element, index) {þnew effect(element, Object.extend(options, { delay: index * options.speed + masterDelay }));þ});þ},þPAIRS: {þ'slide':  ['SlideDown','SlideUp'],þ'blind':  ['BlindDown','BlindUp'],þ'appear': ['Appear','Fade']þ},þtoggle: function(element, effect) {þelement = $(element);þeffect = (effect || 'appear').toLowerCase();þvar options = Object.extend({þqueue: { position:'end', scope:(element.id || 'global') }þ}, arguments[2] || {});þEffect[Element.visible(element) ? þEffect.PAIRS[effect][1] : Effect.PAIRS[effect][0]](element, options);þ}þ};þvar Effect2 = Effect; // deprecatedþ/* ------------- transitions ------------- */þEffect.Transitions = {}þEffect.Transitions.linear = function(pos) {þreturn pos;þ}þEffect.Transitions.sinoidal = function(pos) {þreturn (-Math.cos(pos*Math.PI)/2) + 0.5;þ}þEffect.Transitions.reverse  = function(pos) {þreturn 1-pos;þ}þEffect.Transitions.flicker = function(pos) {þreturn ((-Math.cos(pos*Math.PI)/4) + 0.75) + Math.random()/4;þ}þEffect.Transitions.wobble = function(pos) {þreturn (-Math.cos(pos*Math.PI*(9*pos))/2) + 0.5;þ}þEffect.Transitions.pulse = function(pos) {þreturn (Math.floor(pos*10) % 2 == 0 ? þ(pos*10-Math.floor(pos*10)) : 1-(pos*10-Math.floor(pos*10)));þ}þEffect.Transitions.none = function(pos) {þreturn 0;þ}þEffect.Transitions.full = function(pos) {þreturn 1;þ}þ/* ------------- core effects ------------- */þEffect.ScopedQueue = Class.create();þObject.extend(Object.extend(Effect.ScopedQueue.prototype, Enumerable), {þinitialize: function() {þthis.effects  = [];þthis.interval = null;þ},þ_each: function(iterator) {þthis.effects._each(iterator);þ},þadd: function(effect) {þvar timestamp = new Date().getTime();þvar position = (typeof effect.options.queue == 'string') ? þeffect.options.queue : effect.options.queue.position;þswitch(position) {þcase 'front':þthis.effects.findAll(function(e){ return e.state=='idle' }).each( function(e) {þe.startOn  += effect.finishOn;þe.finishOn += effect.finishOn;þ});þbreak;þcase 'end':þtimestamp = this.effects.pluck('finishOn').max() || timestamp;þbreak;þ}þeffect.startOn  += timestamp;þeffect.finishOn += timestamp;þthis.effects.push(effect);þif(!this.interval) þthis.interval = setInterval(this.loop.bind(this), 40);þ},þremove: function(effect) {þthis.effects = this.effects.reject(function(e) { return e==effect });þif(this.effects.length == 0) {þclearInterval(this.interval);þthis.interval = null;þ}þ},þloop: function() {þvar timePos = new Date().getTime();þthis.effects.invoke('loop', timePos);þ}þ});þEffect.Queues = {þinstances: $H(),þget: function(queueName) {þif(typeof queueName != 'string') return queueName;þif(!this.instances[queueName])þthis.instances[queueName] = new Effect.ScopedQueue();þreturn this.instances[queueName];þ}þ}þEffect.Queue = Effect.Queues.get('global');þEffect.DefaultOptions = {þtransition: Effect.Transitions.sinoidal,þduration:   1.0,   // secondsþfps:        25.0,  // max. 25fps due to Effect.Queue implementationþsync:       false, // true for combiningþfrom:       0.0,þto:         1.0,þdelay:      0.0,þqueue:      'parallel'þ}þEffect.Base = function() {};þEffect.Base.prototype = {þposition: null,þstart: function(options) {þthis.options      = Object.extend(Object.extend({},Effect.DefaultOptions), options || {});þthis.currentFrame = 0;þthis.state        = 'idle';þthis.startOn      = this.options.delay*1000;þthis.finishOn     = this.startOn + (this.options.duration*1000);þthis.event('beforeStart');þif(!this.options.sync)þEffect.Queues.get(typeof this.options.queue == 'string' ? þ'global' : this.options.queue.scope).add(this);þ},þloop: function(timePos) {þif(timePos >= this.startOn) {þif(timePos >= this.finishOn) {þthis.render(1.0);þthis.cancel();þthis.event('beforeFinish');þif(this.finish) this.finish(); þthis.event('afterFinish');þreturn;  þ}þvar pos   = (timePos - this.startOn) / (this.finishOn - this.startOn);þvar frame = Math.round(pos * this.options.fps * this.options.duration);þif(frame > this.currentFrame) {þthis.render(pos);þthis.currentFrame = frame;þ}þ}þ},þrender: function(pos) {þif(this.state == 'idle') {þthis.state = 'running';þthis.event('beforeSetup');þif(this.setup) this.setup();þthis.event('afterSetup');þ}þif(this.state == 'running') {þif(this.options.transition) pos = this.options.transition(pos);þpos *= (this.options.to-this.options.from);þpos += this.options.from;þthis.position = pos;þthis.event('beforeUpdate');þif(this.update) this.update(pos);þthis.event('afterUpdate');þ}þ},þcancel: function() {þif(!this.options.sync)þEffect.Queues.get(typeof this.options.queue == 'string' ? þ'global' : this.options.queue.scope).remove(this);þthis.state = 'finished';þ},þevent: function(eventName) {þif(this.options[eventName + 'Internal']) this.options[eventName + 'Internal'](this);þif(this.options[eventName]) this.options[eventName](this);þ},þinspect: function() {þreturn '#<Effect:' + $H(this).inspect() + ',options:' + $H(this.options).inspect() + '>';þ}þ}þEffect.Parallel = Class.create();þObject.extend(Object.extend(Effect.Parallel.prototype, Effect.Base.prototype), {þinitialize: function(effects) {þthis.effects = effects || [];þthis.start(arguments[1]);þ},þupdate: function(position) {þthis.effects.invoke('render', position);þ},þfinish: function(position) {þthis.effects.each( function(effect) {þeffect.render(1.0);þeffect.cancel();þeffect.event('beforeFinish');þif(effect.finish) effect.finish(position);þeffect.event('afterFinish');þ});þ}þ});þEffect.Opacity = Class.create();þObject.extend(Object.extend(Effect.Opacity.prototype, Effect.Base.prototype), {þinitialize: function(element) {þthis.element = $(element);þif(/MSIE/.test(navigator.userAgent) && (!this.element.hasLayout))þElement.setStyle(this.element, {zoom: 1});þvar options = Object.extend({þfrom: Element.getOpacity(this.element) || 0.0,þto:   1.0þ}, arguments[1] || {});þthis.start(options);þ},þupdate: function(position) {þElement.setOpacity(this.element, position);þ}þ});þEffect.Move = Class.create();þObject.extend(Object.extend(Effect.Move.prototype, Effect.Base.prototype), {þinitialize: function(element) {þthis.element = $(element);þvar options = Object.extend({þx:    0,þy:    0,þmode: 'relative'þ}, arguments[1] || {});þthis.start(options);þ},þsetup: function() {þElement.makePositioned(this.element);þthis.originalLeft = parseFloat(Element.getStyle(this.element,'left') || '0');þthis.originalTop  = parseFloat(Element.getStyle(this.element,'top')  || '0');þif(this.options.mode == 'absolute') {þthis.options.x = this.options.x - this.originalLeft;þthis.options.y = this.options.y - this.originalTop;þ}þ},þupdate: function(position) {þElement.setStyle(this.element, {þleft: this.options.x  * position + this.originalLeft + 'px',þtop:  this.options.y  * position + this.originalTop  + 'px'þ});þ}þ});þEffect.MoveBy = function(element, toTop, toLeft) {þreturn new Effect.Move(element, þObject.extend({ x: toLeft, y: toTop }, arguments[3] || {}));þ};þEffect.Scale = Class.create();þObject.extend(Object.extend(Effect.Scale.prototype, Effect.Base.prototype), {þinitialize: function(element, percent) {þthis.element = $(element)þvar options = Object.extend({þscaleX: true,þscaleY: true,þscaleContent: true,þscaleFromCenter: false,þscaleMode: 'box',        // 'box' or 'contents' or {} with provided valuesþscaleFrom: 100.0,þscaleTo:   percentþ}, arguments[2] || {});þthis.start(options);þ},þsetup: function() {þthis.restoreAfterFinish = this.options.restoreAfterFinish || false;þthis.elementPositioning = Element.getStyle(this.element,'position');þthis.originalStyle = {};þ['top','left','width','height','fontSize'].each( function(k) {þthis.originalStyle[k] = this.element.style[k];þ}.bind(this));þthis.originalTop  = this.element.offsetTop;þthis.originalLeft = this.element.offsetLeft;þvar fontSize = Element.getStyle(this.element,'font-size') || '100%';þ['em','px','%'].each( function(fontSizeType) {þif(fontSize.indexOf(fontSizeType)>0) {þthis.fontSize     = parseFloat(fontSize);þthis.fontSizeType = fontSizeType;þ}þ}.bind(this));þthis.factor = (this.options.scaleTo - this.options.scaleFrom)/100;þthis.dims = null;þif(this.options.scaleMode=='box')þthis.dims = [this.element.offsetHeight, this.element.offsetWidth];þif(/^content/.test(this.options.scaleMode))þthis.dims = [this.element.scrollHeight, this.element.scrollWidth];þif(!this.dims)þthis.dims = [this.options.scaleMode.originalHeight,þthis.options.scaleMode.originalWidth];þ},þupdate: function(position) {þvar currentScale = (this.options.scaleFrom/100.0) + (this.factor * position);þif(this.options.scaleContent && this.fontSize)þElement.setStyle(this.element, {fontSize: this.fontSize * currentScale + this.fontSizeType });þthis.setDimensions(this.dims[0] * currentScale, this.dims[1] * currentScale);þ},þfinish: function(position) {þif (this.restoreAfterFinish) Element.setStyle(this.element, this.originalStyle);þ},þsetDimensions: function(height, width) {þvar d = {};þif(this.options.scaleX) d.width = width + 'px';þif(this.options.scaleY) d.height = height + 'px';þif(this.options.scaleFromCenter) {þvar topd  = (height - this.dims[0])/2;þvar leftd = (width  - this.dims[1])/2;þif(this.elementPositioning == 'absolute') {þif(this.options.scaleY) d.top = this.originalTop-topd + 'px';þif(this.options.scaleX) d.left = this.originalLeft-leftd + 'px';þ} else {þif(this.options.scaleY) d.top = -topd + 'px';þif(this.options.scaleX) d.left = -leftd + 'px';þ}þ}þElement.setStyle(this.element, d);þ}þ});þEffect.Highlight = Class.create();þObject.extend(Object.extend(Effect.Highlight.prototype, Effect.Base.prototype), {þinitialize: function(element) {þthis.element = $(element);þvar options = Object.extend({ startcolor: '#ffff99' }, arguments[1] || {});þthis.start(options);þ},þsetup: function() {þif(Element.getStyle(this.element, 'display')=='none') { this.cancel(); return; }þthis.oldStyle = {þbackgroundImage: Element.getStyle(this.element, 'background-image') };þElement.setStyle(this.element, {backgroundImage: 'none'});þif(!this.options.endcolor)þthis.options.endcolor = Element.getStyle(this.element, 'background-color').parseColor('#ffffff');þif(!this.options.restorecolor)þthis.options.restorecolor = Element.getStyle(this.element, 'background-color');þthis._base  = $R(0,2).map(function(i){ return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16) }.bind(this));þthis._delta = $R(0,2).map(function(i){ return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i] }.bind(this));þ},þupdate: function(position) {þElement.setStyle(this.element,{backgroundColor: $R(0,2).inject('#',function(m,v,i){þreturn m+(Math.round(this._base[i]+(this._delta[i]*position)).toColorPart()); }.bind(this)) });þ},þfinish: function() {þElement.setStyle(this.element, Object.extend(this.oldStyle, {þbackgroundColor: this.options.restorecolorþ}));þ}þ});þEffect.ScrollTo = Class.create();þObject.extend(Object.extend(Effect.ScrollTo.prototype, Effect.Base.prototype), {þinitialize: function(element) {þthis.element = $(element);þthis.start(arguments[1] || {});þ},þsetup: function() {þPosition.prepare();þvar offsets = Position.cumulativeOffset(this.element);þif(this.options.offset) offsets[1] += this.options.offset;þvar max = window.innerHeight ? þwindow.height - window.innerHeight :þdocument.body.scrollHeight - þ(document.documentElement.clientHeight ? þdocument.documentElement.clientHeight : document.body.clientHeight);þthis.scrollStart = Position.deltaY;þthis.delta = (offsets[1] > max ? max : offsets[1]) - this.scrollStart;þ},þupdate: function(position) {þPosition.prepare();þwindow.scrollTo(Position.deltaX, þthis.scrollStart + (position*this.delta));þ}þ});þ/* ------------- combination effects ------------- */þEffect.Fade = function(element) {þvar oldOpacity = Element.getInlineOpacity(element);þvar options = Object.extend({þfrom: Element.getOpacity(element) || 1.0,þto:   0.0,þafterFinishInternal: function(effect) { with(Element) { þif(effect.options.to!=0) return;þhide(effect.element);þsetStyle(effect.element, {opacity: oldOpacity}); }}þ}, arguments[1] || {});þreturn new Effect.Opacity(element,options);þ}þEffect.Appear = function(element) {þvar options = Object.extend({þfrom: (Element.getStyle(element, 'display') == 'none' ? 0.0 : Element.getOpacity(element) || 0.0),þto:   1.0,þbeforeSetup: function(effect) { with(Element) {þsetOpacity(effect.element, effect.options.from);þshow(effect.element); }}þ}, arguments[1] || {});þreturn new Effect.Opacity(element,options);þ}þEffect.Puff = function(element) {þelement = $(element);þvar oldStyle = { opacity: Element.getInlineOpacity(element), position: Element.getStyle(element, 'position') };þreturn new Effect.Parallel(þ[ new Effect.Scale(element, 200, þ{ sync: true, scaleFromCenter: true, scaleContent: true, restoreAfterFinish: true }), þnew Effect.Opacity(element, { sync: true, to: 0.0 } ) ], þObject.extend({ duration: 1.0, þbeforeSetupInternal: function(effect) { with(Element) {þsetStyle(effect.effects[0].element, {position: 'absolute'}); }},þafterFinishInternal: function(effect) { with(Element) {þhide(effect.effects[0].element);þsetStyle(effect.effects[0].element, oldStyle); }}þ}, arguments[1] || {})þ);þ}þEffect.BlindUp = function(element) {þelement = $(element);þElement.makeClipping(element);þreturn new Effect.Scale(element, 0, þObject.extend({ scaleContent: false, þscaleX: false, þrestoreAfterFinish: true,þafterFinishInternal: function(effect) { with(Element) {þ[hide, undoClipping].call(effect.element); }} þ}, arguments[1] || {})þ);þ}þEffect.BlindDown = function(element) {þelement = $(element);þvar oldHeight = Element.getStyle(element, 'height');þvar elementDimensions = Element.getDimensions(element);þreturn new Effect.Scale(element, 100, þObject.extend({ scaleContent: false, þscaleX: false,þscaleFrom: 0,þscaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},þrestoreAfterFinish: true,þafterSetup: function(effect) { with(Element) {þmakeClipping(effect.element);þsetStyle(effect.element, {height: '0px'});þshow(effect.element); þ}},  þafterFinishInternal: function(effect) { with(Element) {þundoClipping(effect.element);þsetStyle(effect.element, {height: oldHeight});þ}}þ}, arguments[1] || {})þ);þ}þEffect.SwitchOff = function(element) {þelement = $(element);þvar oldOpacity = Element.getInlineOpacity(element);þreturn new Effect.Appear(element, { þduration: 0.4,þfrom: 0,þtransition: Effect.Transitions.flicker,þafterFinishInternal: function(effect) {þnew Effect.Scale(effect.element, 1, { þduration: 0.3, scaleFromCenter: true,þscaleX: false, scaleContent: false, restoreAfterFinish: true,þbeforeSetup: function(effect) { with(Element) {þ[makePositioned,makeClipping].call(effect.element);þ}},þafterFinishInternal: function(effect) { with(Element) {þ[hide,undoClipping,undoPositioned].call(effect.element);þsetStyle(effect.element, {opacity: oldOpacity});þ}}þ})þ}þ});þ}þEffect.DropOut = function(element) {þelement = $(element);þvar oldStyle = {þtop: Element.getStyle(element, 'top'),þleft: Element.getStyle(element, 'left'),þopacity: Element.getInlineOpacity(element) };þreturn new Effect.Parallel(þ[ new Effect.Move(element, {x: 0, y: 100, sync: true }), þnew Effect.Opacity(element, { sync: true, to: 0.0 }) ],þObject.extend(þ{ duration: 0.5,þbeforeSetup: function(effect) { with(Element) {þmakePositioned(effect.effects[0].element); }},þafterFinishInternal: function(effect) { with(Element) {þ[hide, undoPositioned].call(effect.effects[0].element);þsetStyle(effect.effects[0].element, oldStyle); }} þ}, arguments[1] || {}));þ}þEffect.Shake = function(element) {þelement = $(element);þvar oldStyle = {þtop: Element.getStyle(element, 'top'),þleft: Element.getStyle(element, 'left') };þreturn new Effect.Move(element, þ{ x:  20, y: 0, duration: 0.05, afterFinishInternal: function(effect) {þnew Effect.Move(effect.element,þ{ x: -40, y: 0, duration: 0.1,  afterFinishInternal: function(effect) {þnew Effect.Move(effect.element,þ{ x:  40, y: 0, duration: 0.1,  afterFinishInternal: function(effect) {þnew Effect.Move(effect.element,þ{ x: -40, y: 0, duration: 0.1,  afterFinishInternal: function(effect) {þnew Effect.Move(effect.element,þ{ x:  40, y: 0, duration: 0.1,  afterFinishInternal: function(effect) {þnew Effect.Move(effect.element,þ{ x: -20, y: 0, duration: 0.05, afterFinishInternal: function(effect) { with(Element) {þundoPositioned(effect.element);þsetStyle(effect.element, oldStyle);þ}}}) }}) }}) }}) }}) }});þ}þEffect.SlideDown = function(element) {þelement = $(element);þElement.cleanWhitespace(element);þvar oldInnerBottom = Element.getStyle(element.firstChild, 'bottom');þvar elementDimensions = Element.getDimensions(element);þreturn new Effect.Scale(element, 100, Object.extend({ þscaleContent: false, þscaleX: false, þscaleFrom: 0,þscaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},þrestoreAfterFinish: true,þafterSetup: function(effect) { with(Element) {þmakePositioned(effect.element);þmakePositioned(effect.element.firstChild);þif(window.opera) setStyle(effect.element, {top: ''});þmakeClipping(effect.element);þsetStyle(effect.element, {height: '0px'});þshow(element); }},þafterUpdateInternal: function(effect) { with(Element) {þsetStyle(effect.element.firstChild, {bottom:þ(effect.dims[0] - effect.element.clientHeight) + 'px' }); }},þafterFinishInternal: function(effect) { with(Element) {þundoClipping(effect.element); þundoPositioned(effect.element.firstChild);þundoPositioned(effect.element);þsetStyle(effect.element.firstChild, {bottom: oldInnerBottom}); }}þ}, arguments[1] || {})þ);þ}þEffect.SlideUp = function(element) {þelement = $(element);þElement.cleanWhitespace(element);þvar oldInnerBottom = Element.getStyle(element.firstChild, 'bottom');þreturn new Effect.Scale(element, 0, þObject.extend({ scaleContent: false, þscaleX: false, þscaleMode: 'box',þscaleFrom: 100,þrestoreAfterFinish: true,þbeforeStartInternal: function(effect) { with(Element) {þmakePositioned(effect.element);þmakePositioned(effect.element.firstChild);þif(window.opera) setStyle(effect.element, {top: ''});þmakeClipping(effect.element);þshow(element); }},  þafterUpdateInternal: function(effect) { with(Element) {þsetStyle(effect.element.firstChild, {bottom:þ(effect.dims[0] - effect.element.clientHeight) + 'px' }); }},þafterFinishInternal: function(effect) { with(Element) {þ[hide, undoClipping].call(effect.element); þundoPositioned(effect.element.firstChild);þundoPositioned(effect.element);þsetStyle(effect.element.firstChild, {bottom: oldInnerBottom}); }}þ}, arguments[1] || {})þ);þ}þEffect.Squish = function(element) {þreturn new Effect.Scale(element, window.opera ? 1 : 0, þ{ restoreAfterFinish: true,þbeforeSetup: function(effect) { with(Element) {þmakeClipping(effect.element); }},  þafterFinishInternal: function(effect) { with(Element) {þhide(effect.element); þundoClipping(effect.element); }}þ});þ}þEffect.Grow = function(element) {þelement = $(element);þvar options = Object.extend({þdirection: 'center',þmoveTransistion: Effect.Transitions.sinoidal,þscaleTransition: Effect.Transitions.sinoidal,þopacityTransition: Effect.Transitions.fullþ}, arguments[1] || {});þvar oldStyle = {þtop: element.style.top,þleft: element.style.left,þheight: element.style.height,þwidth: element.style.width,þopacity: Element.getInlineOpacity(element) };þvar dims = Element.getDimensions(element);    þvar initialMoveX, initialMoveY;þvar moveX, moveY;þswitch (options.direction) {þcase 'top-left':þinitialMoveX = initialMoveY = moveX = moveY = 0; þbreak;þcase 'top-right':þinitialMoveX = dims.width;þinitialMoveY = moveY = 0;þmoveX = -dims.width;þbreak;þcase 'bottom-left':þinitialMoveX = moveX = 0;þinitialMoveY = dims.height;þmoveY = -dims.height;þbreak;þcase 'bottom-right':þinitialMoveX = dims.width;þinitialMoveY = dims.height;þmoveX = -dims.width;þmoveY = -dims.height;þbreak;þcase 'center':þinitialMoveX = dims.width / 2;þinitialMoveY = dims.height / 2;þmoveX = -dims.width / 2;þmoveY = -dims.height / 2;þbreak;þ}þreturn new Effect.Move(element, {þx: initialMoveX,þy: initialMoveY,þduration: 0.01, þbeforeSetup: function(effect) { with(Element) {þhide(effect.element);þmakeClipping(effect.element);þmakePositioned(effect.element);þ}},þafterFinishInternal: function(effect) {þnew Effect.Parallel(þ[ new Effect.Opacity(effect.element, { sync: true, to: 1.0, from: 0.0, transition: options.opacityTransition }),þnew Effect.Move(effect.element, { x: moveX, y: moveY, sync: true, transition: options.moveTransition }),þnew Effect.Scale(effect.element, 100, {þscaleMode: { originalHeight: dims.height, originalWidth: dims.width }, þsync: true, scaleFrom: window.opera ? 1 : 0, transition: options.scaleTransition, restoreAfterFinish: true})þ], Object.extend({þbeforeSetup: function(effect) { with(Element) {þsetStyle(effect.effects[0].element, {height: '0px'});þshow(effect.effects[0].element); }},þafterFinishInternal: function(effect) { with(Element) {þ[undoClipping, undoPositioned].call(effect.effects[0].element); þsetStyle(effect.effects[0].element, oldStyle); }}þ}, options)þ)þ}þ});þ}þEffect.Shrink = function(element) {þelement = $(element);þvar options = Object.extend({þdirection: 'center',þmoveTransistion: Effect.Transitions.sinoidal,þscaleTransition: Effect.Transitions.sinoidal,þopacityTransition: Effect.Transitions.noneþ}, arguments[1] || {});þvar oldStyle = {þtop: element.style.top,þleft: element.style.left,þheight: element.style.height,þwidth: element.style.width,þopacity: Element.getInlineOpacity(element) };þvar dims = Element.getDimensions(element);þvar moveX, moveY;þswitch (options.direction) {þcase 'top-left':þmoveX = moveY = 0;þbreak;þcase 'top-right':þmoveX = dims.width;þmoveY = 0;þbreak;þcase 'bottom-left':þmoveX = 0;þmoveY = dims.height;þbreak;þcase 'bottom-right':þmoveX = dims.width;þmoveY = dims.height;þbreak;þcase 'center':  þmoveX = dims.width / 2;þmoveY = dims.height / 2;þbreak;þ}þreturn new Effect.Parallel(þ[ new Effect.Opacity(element, { sync: true, to: 0.0, from: 1.0, transition: options.opacityTransition }),þnew Effect.Scale(element, window.opera ? 1 : 0, { sync: true, transition: options.scaleTransition, restoreAfterFinish: true}),þnew Effect.Move(element, { x: moveX, y: moveY, sync: true, transition: options.moveTransition })þ], Object.extend({            þbeforeStartInternal: function(effect) { with(Element) {þ[makePositioned, makeClipping].call(effect.effects[0].element) }},þafterFinishInternal: function(effect) { with(Element) {þ[hide, undoClipping, undoPositioned].call(effect.effects[0].element);þsetStyle(effect.effects[0].element, oldStyle); }}þ}, options)þ);þ}þEffect.Pulsate = function(element) {þelement = $(element);þvar options    = arguments[1] || {};þvar oldOpacity = Element.getInlineOpacity(element);þvar transition = options.transition || Effect.Transitions.sinoidal;þvar reverser   = function(pos){ return transition(1-Effect.Transitions.pulse(pos)) };þreverser.bind(transition);þreturn new Effect.Opacity(element, þObject.extend(Object.extend({  duration: 3.0, from: 0,þafterFinishInternal: function(effect) { Element.setStyle(effect.element, {opacity: oldOpacity}); }þ}, options), {transition: reverser}));þ}þEffect.Fold = function(element) {þelement = $(element);þvar oldStyle = {þtop: element.style.top,þleft: element.style.left,þwidth: element.style.width,þheight: element.style.height };þElement.makeClipping(element);þreturn new Effect.Scale(element, 5, Object.extend({   þscaleContent: false,þscaleX: false,þafterFinishInternal: function(effect) {þnew Effect.Scale(element, 1, { þscaleContent: false, þscaleY: false,þafterFinishInternal: function(effect) { with(Element) {þ[hide, undoClipping].call(effect.element); þsetStyle(effect.element, oldStyle);þ}} });þ}}, arguments[1] || {}));þ}þ</script>þ<script type="text/javascript" language="javascript">þaddEvent(window, "load", sortables_init);þvar SORT_COLUMN_INDEX;þfunction sortables_init() {þif (!document.getElementsByTagName) return;þtbls = document.getElementsByTagName("table");þfor (ti=0;ti<tbls.length;ti++) {þthisTbl = tbls[ti];þif (Element.hasClassName(thisTbl,'sortable') && (thisTbl.id)) {þts_makeSortable(thisTbl);þ}þ}þ}þfunction ts_makeSortable(table) {þif (table.rows && table.rows.length > 0) {þvar firstRow = table.rows[0];þ}þif (!firstRow) return;þfor (var i=0;i<firstRow.cells.length;i++) {þvar cell = firstRow.cells[i];þvar txt = ts_getInnerText(cell);þif(txt!="" && txt!=" " && !Element.hasClassName(cell,"nosort")){þcell.innerHTML = '<a href="#" class="sortheader" onclick="ts_resortTable(this);return false;">'+txt+'<span class="sortarrow"></span></a>';þ}þ}þ}þfunction ts_getInnerText(el) {þif (typeof el == "string") return el;þif (typeof el == "undefined") { return el };þif (el.innerText) return el.innerText;//Not needed but it is fasterþvar str = "";þvar cs = el.childNodes;þvar l = cs.length;þfor (var i = 0; i < l; i++) {þswitch (cs[i].nodeType) {þcase 1: //ELEMENT_NODEþstr += ts_getInnerText(cs[i]);þbreak;þcase 3://TEXT_NODEþstr += cs[i].nodeValue;þbreak;þ}þ}þreturn str;þ}þfunction ts_resortTable(lnk) {þvar span;þfor (var ci=0;ci<lnk.childNodes.length;ci++) {þif (lnk.childNodes[ci].tagName && lnk.childNodes[ci].tagName.toLowerCase() == 'span') span = lnk.childNodes[ci];þ}þvar spantext = ts_getInnerText(span);þvar td = lnk.parentNode;þvar column = td.cellIndex;þvar table = getParent(td,'TABLE');þif (table.rows.length <= 1) return;þvar itm = ts_getInnerText(table.rows[1].cells[column]);þsortfn = ts_sort_caseinsensitive;þif (itm.match(/^\d\d[\/-]\d\d[\/-]\d\d\d\d$/)) sortfn = ts_sort_date;þif (itm.match(/^\d\d[\/-]\d\d[\/-]\d\d$/)) sortfn = ts_sort_date;þif (itm.match(/^[$]/)) sortfn = ts_sort_currency;þif (itm.match(/^[\d\.]+$/)) sortfn = ts_sort_numeric;þSORT_COLUMN_INDEX = column;þvar firstRow = new Array();þvar newRows = new Array();þfor (i=0;i<table.rows[0].length;i++) { firstRow[i] = table.rows[0][i]; }þfor (j=1;j<table.rows.length;j++) { newRows[j-1] = table.rows[j]; }þnewRows.sort(sortfn);þif (span.getAttribute("sortdir") == 'down') {þARROW = '<img src="/db/images/icon_down.gif"/>';þnewRows.reverse();þspan.setAttribute('sortdir','up');þ} else {þARROW = '<img src="/db/images/icon_up.gif"/>';þspan.setAttribute('sortdir','down');þ}þfor (i=0;i<newRows.length;i++) { if (!newRows[i].className || (newRows[i].className && (newRows[i].className.indexOf('sortbottom') == -1))) table.tBodies[0].appendChild(newRows[i]);}þfor (i=0;i<newRows.length;i++) { if (newRows[i].className && (newRows[i].className.indexOf('sortbottom') != -1)) table.tBodies[0].appendChild(newRows[i]);}þvar allspans = document.getElementsByTagName("span");þfor (var ci=0;ci<allspans.length;ci++) {þif (allspans[ci].className == 'sortarrow') {þif (getParent(allspans[ci],"table") == getParent(lnk,"table")) { // in the same table as us?þallspans[ci].innerHTML = '&nbsp;&nbsp;&nbsp;';þ}þ}þ}þspan.innerHTML = ARROW;þts_stripeTable(table);þ}þfunction getParent(el, pTagName) {þif (el == null) return null;þelse if (el.nodeType == 1 && el.tagName.toLowerCase() == pTagName.toLowerCase())// Gecko bug, supposed to be uppercaseþreturn el;þelseþreturn getParent(el.parentNode, pTagName);þ}þfunction ts_sort_date(a,b) {þaa = ts_getInnerText(a.cells[SORT_COLUMN_INDEX]);þbb = ts_getInnerText(b.cells[SORT_COLUMN_INDEX]);þif (aa.length == 10) {þdt1 = aa.substr(6,4)+aa.substr(3,2)+aa.substr(0,2);þ} else {þyr = aa.substr(6,2);þif (parseInt(yr) < 50) { yr = '20'+yr; } else { yr = '19'+yr; }þdt1 = yr+aa.substr(3,2)+aa.substr(0,2);þ}þif (bb.length == 10) {þdt2 = bb.substr(6,4)+bb.substr(3,2)+bb.substr(0,2);þ} else {þyr = bb.substr(6,2);þif (parseInt(yr) < 50) { yr = '20'+yr; } else { yr = '19'+yr; }þdt2 = yr+bb.substr(3,2)+bb.substr(0,2);þ}þif (dt1==dt2) return 0;þif (dt1<dt2) return -1;þreturn 1;þ}þfunction ts_sort_currency(a,b) { þaa = ts_getInnerText(a.cells[SORT_COLUMN_INDEX]).replace(/[^0-9.]/g,'');þbb = ts_getInnerText(b.cells[SORT_COLUMN_INDEX]).replace(/[^0-9.]/g,'');þreturn parseFloat(aa) - parseFloat(bb);þ}þfunction ts_sort_numeric(a,b) { þaa = parseFloat(ts_getInnerText(a.cells[SORT_COLUMN_INDEX]));þif (isNaN(aa)) aa = 0;þbb = parseFloat(ts_getInnerText(b.cells[SORT_COLUMN_INDEX])); þif (isNaN(bb)) bb = 0;þreturn aa-bb;þ}þfunction ts_sort_caseinsensitive(a,b) {þaa = ts_getInnerText(a.cells[SORT_COLUMN_INDEX]).toLowerCase();þbb = ts_getInnerText(b.cells[SORT_COLUMN_INDEX]).toLowerCase();þif (aa==bb) return 0;þif (aa<bb) return -1;þreturn 1;þ}þfunction ts_sort_default(a,b) {þaa = ts_getInnerText(a.cells[SORT_COLUMN_INDEX]);þbb = ts_getInnerText(b.cells[SORT_COLUMN_INDEX]);þif (aa==bb) return 0;þif (aa<bb) return -1;þreturn 1;þ}þfunction ts_stripeTable(tbl) {þvar table = $(tbl);þvar tbody;þif(tbody = table.getElementsByTagName("tbody")[0]) {þtable = tbody;þ}þfor(i=0;i<table.rows.length;i++) {þif(i%2) {þnewClass = "even";þoldClass = "odd";þ} else {þnewClass = "odd";þoldClass = "even";þ}þElement.removeClassName(table.rows[i],oldClass);þElement.addClassName(table.rows[i],newClass);þ}þ}þfunction addEvent(elm, evType, fn, useCapture)þ{þif (elm.addEventListener){þelm.addEventListener(evType, fn, useCapture);þreturn true;þ} else if (elm.attachEvent){þvar r = elm.attachEvent("on"+evType, fn);þreturn r;þ} else {þalert("Handler could not be removed");þ}þ} þ</script>þ<script type="text/javascript" language="javascript">þfunction createStyleRule(selector, declaration) {þif (!document.getElementsByTagName ||þ!(document.createElement || document.createElementNS)) return;þvar agt = navigator.userAgent.toLowerCase();þvar is_ie = ((agt.indexOf("msie") != -1) &&  (agt.indexOf("opera") == -1));þvar is_iewin = (is_ie &&  (agt.indexOf("win") != -1));þvar is_iemac = (is_ie &&  (agt.indexOf("mac") != -1));þif (is_iemac) return; // script doesn't work properly in IE/Macþvar head = document.getElementsByTagName("head")[0]; þvar style = (typeof document.createElementNS != "undefined") ?þdocument.createElementNS("http://www.w3.org/1999/xhtml", "style") :þdocument.createElement("style");þif (!is_iewin) {þvar styleRule = document.createTextNode(selector + " {" + declaration + "}");þstyle.appendChild(styleRule); // bugs in IE/Winþ}þstyle.setAttribute("type", "text/css");þstyle.setAttribute("media", "screen"); þhead.appendChild(style);þif (is_iewin &&  document.styleSheets &&  document.styleSheets.length > 0) {þvar lastStyle = document.styleSheets[document.styleSheets.length - 1];þif (typeof lastStyle.addRule == "object") {þlastStyle.addRule(selector, declaration);þ}þ}þ}þfunction zoomThumbnails(value) {þif(!document.all) {þvar newValue = Math.round(value);þvar cssRule = "font-size: "+newValue+"px";þcreateStyleRule("a.thumbnail pre",cssRule);þ}þ}þfunction zoomThumbnailsUpdate(value) {þvar newValue = Math.round(value);þvar cssRule = "font-size: "+newValue+"px";þcreateStyleRule("a.thumbnail pre",cssRule);þ}þvar myrules = {þ'#printqueue tr' : function(element){þelement.onmouseover = function(){þElement.addClassName(element,"hover");þ},þelement.onmouseout = function(){þElement.removeClassName(element,"hover");þ}þ},þ'a.deletejob' : function(element){þif(document.all) {þelement.onclick = function(e) {þreturn confirm("Are you sure you want to delete this job?");þ}þ}þ},þ'input.date' : function(dateField){þif(!$(dateField.id+"trigger")) {þif(dateField.id=="") {þdateField.id = dateField.name;þ}þCalendar.setup({þinputField : dateField.id, þifFormat : "%m/%d/%y",þshowsTime : true,þbutton : dateField.id, //*þstep : 1,þweekNumbers: false,þ/* range: [2004,2005,2006], */þshowsTime: false,þonUpdate: function(e) {þvar row = $(dateField.id).parentNode;þwhile(row.tagName!="TR") {þrow = row.parentNode;þ}þElement.removeClassName(row,"error");þ}þ});þ}þ}þ};þfunction selectAll() {þform = document.forms['printqueueform'];þif (form.elements['entries[]'].length) {þ  for(var i = 0; i < form.elements['entries[]'].length; i++) {þ    form.elements['entries[]'][i].checked = 1;þ  }þ} else {þ  form.elements['entries[]'].checked = 1;þ}þ}þfunction deselectAll() {þform = document.forms['printqueueform'];þif (form.elements['entries[]'].length) {þ  for(var i = 0; i < form.elements['entries[]'].length; i++) {þ    form.elements['entries[]'][i].checked = 0;þ  }þ} else {þ  form.elements['entries[]'].checked = 0;þ}þ}þfunction showAdvSearch() {þEffect.Fade('filter', {duration: 1.0});þsetTimeout("Effect.Appear('advanced_search', {duration: 1.0})", 940);þ$('search_link').innerHTML = 'Hide Advanced Search';þ$('search_link').onclick = hideAdvSearch;þ}þfunction hideAdvSearch() {þEffect.Fade('advanced_search', {duration: 1.0});þsetTimeout("Effect.Appear('filter', {duration: 1.0})", 940);þ$('search_link').innerHTML = 'Advanced Search';þ$('search_link').onclick = showAdvSearch;þ}þBehaviour.register(myrules);þ</script>þ</head>þ<body class="">þ<div id="container">þ<!-- þ<div id="header">þ<a href="/" id="logo"><img src="/db/images/logo_bravoprint.gif" /></a>þ<ul id="navbar">þ<li class="active"><a href="/dbc/SBBP.SB.LISTPEQS">Print Queue</a></li>þ</ul>þ</div>þ-->þ<div id="maincontent">þ<div id="content">þ<!--þ <h1>Print Queue</h1>þ<div id="alerts">þ</div>þ-->þ<div style="margin-left:12px; margin-bottom:30px;"> þ<div class="printDialog" id="printDialogSelected" style="display:none;left:92px;top:27px;">þ<div>þQueue <input type="text" value="" style="width:40px;" maxlength="4" name="overridequeue"/>þ<span class="button"><button type="submit" onclick="this.form.submit(); return false;">Print</button></span> þ<span class="button"><button type="button" onclick="Effect.SlideUp('printDialogSelected',{duration:0.25}); return false;">Cancel</button></span>þ</div>þ</div>þ</div>þ<form action="/dbc/SBBP.SB.LISTPEQS" method="post" id="printqueueform">þ<input type="hidden" value="" name="action" id="action"/>þ<input type="hidden" value="" name="overridequeue" id="overridequeue"/>þ<input type="hidden" value="" name="queue" id="queue"/>þ<input type="hidden" value="" name="port" id="port"/>þ<input type="hidden" value="" name="owner" id="owner"/>þ<input type="hidden" value="" name="searchstring" id="searchstring"/>þ<input type="hidden" value="" name="begindate" id="begindate"/>þ<input type="hidden" value="" name="enddate" id="enddate"/>þ<input type="hidden" value="" name="search_type" id="search_type"/>þ<div style="float: left;margin: 0 0 10px 12px;">þ<img src="/db/images/graphic_withselected_up.gif"/> <a href="#" title="Select All" onclick="selectAll();return false;">Select All</a> |þ<a href="#" title="Deselect All" onclick="deselectAll();return false;">Deselect All</a> | With Selected: þ<span id="queueOverride">Print to Queue <input type="text" value="" name="queuet" id="queuet" style="width:40px;vertical-align:bottom;"/></span>þ<a href="#" title="Print Selected" onclick="$('overridequeue').value=$('queuet').value;$('action').value='print';$('printqueueform').submit(); return false;"><img src="/db/images/button_print.gif"/></a>þ<a href="#" title="Delete Selected" onclick="if(confirm('Are you sure you want to delete the selected jobs?')) { $('action').value='delete';$('printqueueform').submit(); return false;} else { return false; }"><img src="/db/images/button_delete.gif"/></a>þ</div>þ<table class="listing sortable" id="printqueue">þ<thead>þ<tr>þ<th style="width:20px;"></th>þ<th>Job</th>þ<th>Queue</th>þ<th>User</th>þ<th>Port</th>þ<th>Size (k)</th>þ<th>Datetime</th>þ<th>Status</th>þ<th style="width:120px;"></th>þ</tr>þ</thead>þ<tbody>þ[QUEUE]þ</tbody>þ</table>þ<div style="margin: 0 0 0 12px;">þ<img src="/db/images/graphic_withselected.gif"/> <a href="#" title="Select All" onclick="selectAll();return false;">Select All</a> |þ<a href="#" title="Deselect All" onclick="deselectAll();return false;">Deselect All</a> | With Selected: þ<span id="queueOverride">Print to Queue <input type="text" value="" name="queueb" id="queueb" style="width:40px;vertical-align:bottom;"/></span>þ<a href="#" title="Print Selected" onclick="$('overridequeue').value=$('queueb').value;$('action').value='print';$('printqueueform').submit(); return false;"><img src="/db/images/button_print.gif"/></a>þ<a href="#" title="Delete Selected" onclick="if(confirm('Are you sure you want to delete the selected jobs?')) { $('action').value='delete';$('printqueueform').submit(); return false;} else { return false; }"><img src="/db/images/button_delete.gif"/></a><br/> þ</div>þ</form>þ</div>þ</div>þ</div>þ<div id="footer">þ</div>þ</body>þ</html>