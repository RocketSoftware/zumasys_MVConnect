004E14MVSENDGRID.BPþ0c0000F8CMVSENDGRID.TESTþ0c0      * PROGRAM MVSENDGRID.TESTþ      *þþ      OPEN "DICT","MVSENDGRID.BP" TO DICT.MVSENDGRID.BP ELSEþ         PRINT "No Dictionary for MVSENDGRID.BP"þ         STOPþ      ENDþþ      OPEN "MD" TO FILE.MD ELSEþ         OPEN "VOC" TO FILE.MD ELSEþ            OPEN "DICT","MVSENDGRID.BP" TO FILE.MD ELSEþ               PRINT "No MD/VOC or DICT MVSENDGRID.BP found"þ               STOPþ            ENDþ         ENDþ      ENDþþ      READ MVSENDGRID.CONFIG FROM FILE.MD, "MVSENDGRID.CONFIG.JSON" ELSEþ         PRINT "MVSendgrid is not configured yet.  Please run MVSENDGRID.CONFIG"þ         STOPþ      ENDþþ      PRINT "Enter email to send test to: ":; INPUT TEST.EMAIL.TOþ      PRINT "Enter full path to file to send (leave blank to not send a file): ":; INPUT FILE.TO.SENDþ      IF FILE.TO.SEND # "" THENþ         PRINT "Type of file: 1-pdf, 2=text: ":; INPUT ANSþ         BEGIN CASEþ            CASE ANS="1"; FILE.TYPE="application/pdf"þ            CASE ANS="2"; FILE.TYPE="text/plain"þ            CASE 1þ               PRINT "Invalid choice"þ               STOPþ         END CASEþ         PRINT "Actual file name (no path): ":; INPUT FILE.NAMEþ         IF FILE.NAME="" THEN STOPþ      ENDþ      WOBJ="WOBJ"þþ      OBJ="MAILSEND_V2"þ      CALL MVSENDGRID.API(OBJ)þ      *þþ      CALL @WOBJ(OBJ,"TOSTRING","",JSON,"PRETTIFY",1)þþþ      CALL @WOBJ(OBJ,"SET","params.to[0].email",TEST.EMAIL.TO,"",RERR)þ      CALL @WOBJ(OBJ,"SET","params.to[0].name","Test Email","",RERR)þþ      * SINCE CC IS A OPTION, THERE IS NOT A PRE-POPULATED OBJECT, WE MUST ADD ONEþ      CALL @WOBJ(OBJ,"SET.OBJECT","params.bcc[0]","{}","",RERR)þ      CALL @WOBJ(OBJ,"SET","params.bcc[0].email",TEST.EMAIL.TO,"",RERR)þ      CALL @WOBJ(OBJ,"SET","params.bcc[0].name","Test Email","",RERR)þþþ      CALL @WOBJ(OBJ,"SET","params.from","noreply@zumasys.com","",RERR)þþ      CALL @WOBJ(OBJ,"SET","params.subject","Sample email ":TIMEDATE(),"",RERR)þþ      NL=CHAR(13):CHAR(10)þþ      TEXT="Line 1"þ      TEXT:=NL:"Line 2"þ      TEXT:=NL:"Line 3"þþ      CALL @WOBJ(OBJ,"SET","params.text",TEXT,"",RERR)þþ      IF FILE.TO.SEND # "" THENþþ         CALL @WOBJ(OBJ,"SET.ARRAY","params.files","[]","",RERR)þþ         CALL @WOBJ(SOBJ,"FROMSTRING","","{}","",RERR)þ         CALL @WOBJ(SOBJ,"SET","sourcefile",FILE.TO.SEND,"",RERR)þ         CALL @WOBJ(SOBJ,"SET","filename",FILE.NAME,"",RERR)þ         CALL @WOBJ(SOBJ,"SET","type",FILE.TYPE,"",RERR)þ         CALL @WOBJ(SOBJ,"TOSTRING","",SJSON,"",RERR)þ         CALL @WOBJ(OBJ,"SET.OBJECT","params.files[-1]",SJSON,"",RERR)þþ      ENDþþ      CALL @WOBJ(OBJ,"TOSTRING","",JSON,"PRETTIFY",RERR)þ      PRINT "Press return to see the jSON option payload before calling MVSENDGRID.API":; INPUT WAITþ      PRINT JSONþ      PRINTþ      PRINT "Press return to call MVSENDGRID.  If you request a file that does not exist the routine does not catch that and your call will fail. ":; INPUT ANSþþ      CALL MVSENDGRID.API(OBJ)þþ      CALL @WOBJ(OBJ,"GET","result.status",STATUSCODE,"",RERR)þ      PRINT "Result status=":STATUSCODEþ      CALL @WOBJ(OBJ,"GET","result.statusmsg",STATUSMSG,"",RERR)þ      PRINT "Result msg   =":STATUSMSGþþ      IF STATUSCODE = "ok" OR STATUSCODE[1,1] = "2" THEN NULL ELSEþ         PRINT "Failed: ":STATUSMSGþ      ENDþþ      PRINT "Press return to see result OBJECT from call: ":; INPUT WAITþ      CALL @WOBJ(OBJ,"TOSTRING","",JSON,"PRETTIFY",RERR)þþ      PRINT JSONþþ      PRINT "Press return to see curl log: ":; INPUT ANSþþ      * 04/2/2020 - Better to send curl object as json vs getting into issues with @am,@vm,@svm!!þþ      CALL @WOBJ(OBJ,"GET","result.wcalldebug",COBJ.JSON,"",RERR)þ      CALL @WOBJ(COBJ,"FROMSTRING","",COBJ.JSON,"",RERR)þþ      CALL @WOBJ(COBJ,"LENGTH","response.log",CURL.LOG.LENGTH,"",RERR)þ      FOR X=1 TO CURL.LOG.LENGTHþ         TAG="response.log[":X-1:"]"þ         CALL @WOBJ(COBJ,"GET",TAG,CLINE,"",RERR)þ         PRINT CLINEþ      NEXT Xþþ      PRINT "PRESS RETURN TO CONTINUE: ":; INPUT OK.TO.CONTINUEþ003608MVSENDGRID.APIþ0c0      SUBROUTINE MVSENDGRID.API(OBJ)þ      **********************************************************************þ      *þ      * Copyright (C) 2018 Zumasys, Inc., All Rights Reservedþ      *þ      * Written by: Patrick Payne, Zumasysþ      * Date: 4/2/2019þ      * Description: SENDGRID wrapperþþ      **********************************************************************þ      *þ      * Purpose of this program is to front end the sendgrid library of functionsþ      *þ      * It will utilize the object model concept and try to wrap all sendgridþ      * functions into this one libraryþ      *þ      * Items to doþ      *þ      * Add File option. (COMPLETED)þ      * qc tests to validate fields sent (OUTSTANDING)þ      * Config to get user name/password/etc (COMPLETED)þ      * Return Message/Status (COMPLETED)þ      * REMOVE ALL DEBUG STATEMENTS (COMPLETED)þ      *þ      * OBJþ      * { "api":"mailsend_v2",þ      *    "params": {þ      *       "to": [þ      *         {þ      *           "email":"email address",þ      *           "name":"Nice name"þ      *         }þ      *       ],þ      *       "cc": [þ      *         {þ      *           "email":"email address",þ      *           "name":"Nice name"þ      *         }þ      *       ],þ      *       "bcc": [þ      *         {þ      *           "email":"email address",þ      *           "name":"Nice name"þ      *         }þ      *       ],þ      *       "debug":"Y or N",þ      *       "replyto":"address",þ      *       "from":"From email address",þ      *       "fromname":"From name",þ      *       "subject":"Subject",þ      *       "text":"Plain text of your email",þ      *       "html":"Html version of your email",þ      *       "files": [þ      *           {þ      *              "sourcefile":"path to file",þ      *              "filename":"file name to present file as",þ      *              "type":"type of file, application/pdf for example"þ      *           }þ      *       ]þ      *    },þ      *   "result": {þ      *      "status":"error or ok",þ      *      "statusmsg:"status msg"þ      *    }þ      *þ      *  }þ      *þ      * Starting with mailsend_v2 - We are using this version because it allowsþ      * attachments without having to base64 and include them into the json payloadþ      * v2 uses curl and a normal form-data post to get attachments.þ      *þ      * curl https://api.sendgrid.com/api/mail.send.json \þ      *-F to=recipient@domain.com -F toname=test -F subject="Example Subject" \þ      *-F text="testing text body" --form-string html="<strong>testing html body</strong>" \þ      *-F from=test@yourdomain.com -F api_user=your_sendgrid_username -F api_key=your_sendgrid_password \þ      *-F files\[attachment.gz\]=@f.php.gzþ      *þ      *þ      * This intial part will initialize a object for a user.þ      *þþ      WOBJ="WOBJ"þþ      FIELD.TYPE=""þþ      INIT.FUNCTION=OCONV(OBJ<1,1,1>,"MCU")þþ      BEGIN CASEþ         CASE INIT.FUNCTION="MAILSEND_V2"þ            GOSUB mailsendv2.initþ            RETURNþ      END CASEþþ      CALL @WOBJ(OBJ,"GET","api",API,"",RERR)þ      CALL @WOBJ(OBJ,"GET","debug",DO.DEBUG,"",RERR)þ      IF OCONV(DO.DEBUG[1,1],"MCU") = "Y" OR DO.DEBUG="1" THEN DO.DEBUG=1 ELSE DO.DEBUG=0þþ      CALL @WOBJ(OBJ,"SET.OBJECT","result","{}","",RERR)þþ      API=OCONV(API,'MCU')þþ      APISTATUS="ok"þ      APISTATUSMSG=""þþ      OPEN "DICT","MVSENDGRID.BP" TO DICT.MVSENDGRID.BP ELSEþ         APISTATUS="error"þ         APISTATUSMSG="Could not open DICT MVSENDGRID.BP"þ         GOTO end.of.routineþ      ENDþ      þ      OPEN "MD" TO FILE.MD ELSEþ          OPEN "VOC" TO FILE.MD ELSEþ              APISTATUS="error"þ              APISTATUSMSG="No MD or VOC"þ              GOTO end.of.routineþ          ENDþ      ENDþ      þ      *þ      * 7/21/202 PAP - Added option to pull config from MDþ      *                Changed nameþ      þ      READ CONFIG FROM FILE.MD,"MVSENDGRID.CONFIG.JSON"  ELSEþþ         READ CONFIG FROM DICT.MVSENDGRID.BP, "MVSENDGRID.CONFIG.JSON" ELSEþ            APISTATUS="error"þ            APISTATUSMSG="NO MVSENDGRID.CONFIG IN MD OR DICT MVSENDGRID.BP"þ            GOTO end.of.routineþ         ENDþ         þ      ENDþþ      IF TRIM(CONFIG) = "" THENþ         APISTATUS="error"þ         APISTATUSMGS="No config record."þ         GOTO end.of.routineþ      ENDþ      þ      CALL @WOBJ(CONFIGOBJ,"FROMSTRING","",CONFIG,"",RERR)þþ      þ      BEGIN CASEþ         CASE API="MAILSEND_V2"þ            GOSUB mailsendv2þ         CASE 1þ            APISTATUS="error"þ            APISTATUSMSG="Invalid api request (":API:")"þ      END CASEþþ      * lets do a larger check for a failed callþþ         CALL @WOBJ(COBJ,"GET","response.status",STATUSCODE,"",RERR)þ         CALL @WOBJ(COBJ,"GET","response.statusmsg",STATUSMSG,"",RERR)þ         IF STATUSCODE[1,1] # "2" THENþ            APISTATUS=STATUSCODEþ            APISTATUSMSG=STATUSMSGþ         ENDþþ         * LETS PACKAGE THE ENTIRE CURL RESPONSE FOR DEBUGGING PURPOSES.þ         CALL @WOBJ(COBJ,"TOSTRING","",COBJ.JSON,"",RERR); * SAFER TO PULL JSONþ         CALL @WOBJ(OBJ,"SET","result.wcalldebug",COBJ.JSON,"",RERR)þþþend.of.routine: *þþ      CALL @WOBJ(OBJ,"SET","result.status",APISTATUS,"",RERR)þ      CALL @WOBJ(OBJ,"SET","result.statusmsg",APISTATUSMSG,"",RERR)þþ      RETURNþ      STOPþþmailsendv2.init: * Initialize a email v2 objectþþ      OBJ=""þ      CALL @WOBJ(OBJ,"FROMSTRING","","{}","",RERR)þ      CALL @WOBJ(OBJ,"SET","api","mailsend_v2","",RERR)þ      CALL @WOBJ(OBJ,"SET.OBJECT","params","{}","",RERR)þ      CALL @WOBJ(OBJ,"SET.ARRAY","params.to",'[{"email":"","name"}]',"",RERR)þ      CALL @WOBJ(OBJ,"SET.ARRAY","params.cc",'[]',"",RERR)þ      CALL @WOBJ(OBJ,"SET.ARRAY","params.bcc",'[]',"",RERR)þ      CALL @WOBJ(OBJ,"SET.ARRAY","params.files",'[]',"",RERR)þþ      RETURNþþþmailsendv2: * Send an emailþþ      * V2 USES USER NAME AND PASSWORDþ      CALL @WOBJ(CONFIGOBJ,"GET","username",SENDGRID.USERNAME,"",RERR)þ      CALL @WOBJ(CONFIGOBJ,"GET","password",SENDGRID.PASSWORD,"",RERR)þþ      IF SENDGRID.USERNAME="" THENþ         APISTATUS="error"þ         APISTATUSMSG="No username defined in CONFIG.JSON"þ         RETURNþ      ENDþ      IF SENDGRID.PASSWORD="" THENþ         APISTATUS="error"þ         AISTATUSMSG="No password defined in CONFIG.JSON"þ         RETURNþ      ENDþþ      CALL @WOBJ(OBJ,"LENGTH","params.to",NUMBER.TOO,"",RERR)þ      IF NOT(NUMBER.TOO) THENþ         APISTATUS="error"þ         APISTATUS="Must supply array of to"þ         RETURNþ      ENDþþ      TOO.LABEL="to"; TOO.NAMES.LABEL="toname"þ      IF NUMBER.TOO > 1 THEN TOO.LABEL:='[]'; TOO.NAMES.LABEL:='[]'þþ      TOO=''; TOO.NAMES=''þþ      CALL @WOBJ(COBJ,"FROMSTRING","","{}","",RERR)þ      CALL @WOBJ(COBJ,"SET","method","POST","",RERR)þ      CALL @WOBJ(COBJ,"SET","url","https://api.sendgrid.com/api/mail.send.json","",RERR)þ      CALL @WOBJ(COBJ,"SET","insecure","Y","",RERR)þþþ      CALL @WOBJ(COBJ,"SET.OBJECT","headers","{}","",RERR)þþþ      CALL @WOBJ(COBJ,"SET.ARRAY","formfields","[]","",RERR)þþ      FIELD.NAME="api_user"; FIELD.VALUE=SENDGRID.USERNAME; GOSUB set.fieldþ      FIELD.NAME="api_key"; FIELD.VALUE=SENDGRID.PASSWORD; GOSUB set.fieldþþ      FOR X=1 TO NUMBER.TOOþ         P="params.to[":X-1:"]"þ         CALL @WOBJ(OBJ,"GET",P:".email",THIS.TO,"",RERR)þ         CALL @WOBJ(OBJ,"GET",P:".name",THIS.NAME,"",RERR)þ         IF INDEX(THIS.TO,'@',1) THENþ            TOO<-1>=THIS.TOþ            TOO.NAMES<-1>=THIS.NAMEþ         ENDþ      NEXT Xþþ      CONVERT CHAR(254) TO '&' IN TOOþ      CONVERT CHAR(254) TO '&' IN TOO.NAMESþþ      CALL @WOBJ(SOBJ,"FROMSTRING","","{}","",RERR)þ      CALL @WOBJ(SOBJ,"SET","name",TOO.LABEL,"",RERR)þ      CALL @WOBJ(SOBJ,"SET","value",TOO,"",RERR)þ      CALL @WOBJ(SOBJ,"TOSTRING","",SJSON,"",RERR)þ      CALL @WOBJ(COBJ,"SET.OBJECT","formfields[-1]",SJSON,"",RERR)þþ      FIELD.NAME=TOO.NAMES.LABEL; FIELD.VALUE=TOO.NAMES; GOSUB set.fieldþþ      * DO CCþ      þ      CALL @WOBJ(OBJ,"LENGTH","params.cc",NUMBER.CC,"",RERR)þ      IF NUMBER.CC THENþ      þ         CC=''; CC.NAMES=''þ         FOR X=1 TO NUMBER.CCþ            P="params.cc[":X-1:"]"þ            CALL @WOBJ(OBJ,"GET",P:".email",THIS.CC,"",RERR)þ            CALL @WOBJ(OBJ,"GET",P:".name",THIS.NAME,"",RERR)þ            IF INDEX(THIS.CC,'@',1) THENþ               CC<-1>=THIS.CCþ               CC.NAMES<-1>=THIS.NAMEþ            ENDþ            þ         NEXT Xþ   þ         CONVERT CHAR(254) TO '&' IN CCþ         CONVERT CHAR(254) TO '&' IN CC.NAMESþ þ         CC.LABEL="cc"; CC.NAMES.LABEL="ccname"þ         IF NUMBER.CC > 1 THEN CC.LABEL:='[]'; CC.NAMES.LABEL:='[]'þ         FIELD.NAME=CC.LABEL; FIELD.VALUE=CC; GOSUB set.fieldþ         FIELD.NAME=CC.NAMES.LABEL; VALUE=CC.NAMES; GOSUB set.fieldþ þ      ENDþþ      * DO BCCþ      þ      CALL @WOBJ(OBJ,"LENGTH","params.bcc",NUMBER.BCC,"",RERR)þ      IF NUMBER.BCC THENþ      þ         BCC=''; BCC.NAMES=''þ         FOR X=1 TO NUMBER.BCCþ            P="params.bcc[":X-1:"]"þ            CALL @WOBJ(OBJ,"GET",P:".email",THIS.BCC,"",RERR)þ            CALL @WOBJ(OBJ,"GET",P:".name",THIS.NAME,"",RERR)þ            IF INDEX(THIS.BCC,'@',1) THENþ               BCC<-1>=THIS.BCCþ               BCC.NAMES<-1>=THIS.NAMEþ            ENDþ            þ         NEXT Xþ   þ         CONVERT CHAR(254) TO '&' IN BCCþ         CONVERT CHAR(254) TO '&' IN BCC.NAMESþ þ         BCC.LABEL="bcc"; BCC.NAMES.LABEL="bccname"þ         IF NUMBER.BCC > 1 THEN BCC.LABEL:='[]'; BCC.NAMES.LABEL:='[]'þ         FIELD.NAME=BCC.LABEL; FIELD.VALUE=BCC; GOSUB set.fieldþ         FIELD.NAME=BCC.NAMES.LABEL; VALUE=BCC.NAMES; GOSUB set.fieldþ þ      ENDþ  þ  þ      CALL @WOBJ(OBJ,"GET","params.from",FROMEMAIL,"",RERR)þ      IF FROMEMAIL="" THENþ         APISTATUS="error"þ         APISTATUSMSG="Must supply from"þ         RETURNþ      ENDþ      FIELD.NAME="from"; FIELD.VALUE=FROMEMAIL; GOSUB set.fieldþþ      ** GET BODY **þþ      CALL @WOBJ(OBJ,"GET","params.text",TEXT.BODY,"",RERR)þ      CALL @WOBJ(OBJ,"GET","params.html",HTML.BODY,"",RERR)þ      IF HTML.BODY="" AND TEXT.BODY="" THENþ         APISTATUS="error"þ         APISTATUSMSG="Must supply either a text or html message"þ         RETURNþ      ENDþþ      * If our text.body has new lines in it we MUST write it outþ      * to a file and then pass it as a file handle!!!þ      *þ þ      *IF INDEX(TEXT.BODY,CHAR(13),1) OR INDEX(TEXT.BODY,CHAR(10),1) THENþ      * 4/2/2020 - This fix is moving to wcallþþ      IF 0 THENþ         CALL @WOBJ(FOBJ,"FROMSTRING","","{}","",RERR)þ         CALL @WOBJ(FOBJ,"SET","action","WRITE","",RERR)þ         TMP.DIR="/tmp"; * This needs to be fixed to be dynamicþ         TEXT.FILE.NAME=TMP.DIR:'/':@USER.NO:"_body.txt"þ         CALL @WOBJ(FOBJ,"SET","path",TEXT.FILE.NAME,"",RERR)þ         CALL @WOBJ(FOBJ,"SET","data",TEXT.BODY,"",RERR)þ         CALL MVDBTOOLKIT.WFILEIO(FOBJ)þ         FIELD.NAME="text"; FIELD.VALUE="@":TEXT.FILE.NAME; FIELD.TYPE="file"; GOSUB set.fieldþ      END ELSEþ         FIELD.NAME="text"; FIELD.VALUE=TEXT.BODY; GOSUB set.fieldþ      ENDþ      þ      * NEED TO ADD THE HTMLþ      þ      IF HTML.BODY = "" AND TEXT.BODY # "" THENþ         * WE NEED TO BUILD OUT A SIMPLE HTML VERSION, BASICALLY DOING NEW LINESþ         HAS.CR=DCOUNT(TEXT.BODY,CHAR(13))þ         HAS.LF=DCOUNT(TEXT.BODY,CHAR(10))þ         HTML.BODY=TEXT.BODYþ         BEGIN CASEþ            CASE HAS.CR AND HAS.LFþ               CONVERT CHAR(10) TO '' IN HTML.BODYþ               CONVERT CHAR(13) TO @AM IN HTML.BODYþ            CASE HAS.LFþ               CONVERT CHAR(10) TO @AM IN HTML.BODYþ            CASE HAS.CRþ               CONVERT CHAR(13) TO @AM IN HTML.BODYþ         END CASEþ         NUM.LINES=DCOUNT(HTML.BODY,@AM)þ         NEW.HTML.BODY=""þ         FOR A=1 TO NUM.LINESþ            LINE=HTML.BODY<A>þ            IF A > 1 THEN NEW.HTML.BODY:='<BR>'þ            NEW.HTML.BODY:=LINEþ        NEXT Aþ        HTML.BODY=NEW.HTML.BODYþ      ENDþ      þ      IF HTML.BODY # "" THENþ         *HTML.BODY="HTML VERSION<BR>":HTML.BODYþ         FIELD.NAME="html"; FIELD.VALUE=HTML.BODY; GOSUB set.fieldþ      ENDþ      þ      ** SUBJECT **þþ      CALL @WOBJ(OBJ,"GET","params.subject",SUBJECT,"",RERR)þ      IF SUBJECT="" THENþ         APISTATUS="error"þ         APISTATUSMSG="Must supply subject"þ         RETURNþ      ENDþ      FIELD.NAME="subject"; FIELD.VALUE=SUBJECT; GOSUB set.fieldþþþ      ** file uploads **þþ      CALL @WOBJ(OBJ,"LENGTH","params.files",NUM.FILES,"",RERR)þþ      IF NUM.FILES THENþ         FOR X=1 TO NUM.FILESþ            P="params.files[":X-1:"]"þ            CALL @WOBJ(OBJ,"GET",P:'.sourcefile',SOURCEFILE,"",RERR)þ            CALL @WOBJ(OBJ,"GET",P:'.filename',FILENAME,"",RERR)þ            CALL @WOBJ(OBJ,"GET",P:'.type',FILETYPE,"",RERR)þ            FIELD.NAME='files[':FILENAME:']'þ            FIELD.VALUE='@':SOURCEFILEþ            IF FILETYPE # "" THEN FIELD.VALUE:=";type=":FILETYPEþ            FIELD.TYPE='file'þ            GOSUB set.fieldþ         NEXT Xþ      ENDþþþ      CALL @WOBJ(COBJ,"TOSTRING","",CJSON,"PRETTIFY",RERR)þþ      IF DO.DEBUG THENþ         CALL @WOBJ(COBJ,"SET","debug","Y","",RERR); * SET TO DO DEBUGGINGþ      ENDþþ      CALL MVDBTOOLKIT.WCALL(COBJ)þþþ      CALL @WOBJ(COBJ,"TOSTRING","",TJSON,"PRETTIFY",RERR)þþ      CALL @WOBJ(COBJ,"GET","response.data",RESPONSE,"",RERR)þþ      CALL @WOBJ(ROBJ,"FROMSTRING","",RESPONSE,"",RERR)þ      CALL @WOBJ(ROBJ,"GET","message",APISTATUSMSG,"",RERR)þþ      RETURNþþþset.field: *þþ      CALL @WOBJ(SOBJ,"FROMSTRING","","{}","",RERR)þ      CALL @WOBJ(SOBJ,"SET","name",FIELD.NAME,"",RERR)þ      CALL @WOBJ(SOBJ,"SET","value",FIELD.VALUE,"",RERR)þ      IF FIELD.TYPE # "" THENþ         CALL @WOBJ(SOBJ,"SET","fieldtype",FIELD.TYPE,"",RERR)þ      ENDþ      FIELD.TYPE=""þ      CALL @WOBJ(SOBJ,"TOSTRING","",SJSON,"",RERR)þ      CALL @WOBJ(COBJ,"SET.OBJECT","formfields[-1]",SJSON,"",RERR)þþ      RETURN00085DMVSENDGRID.CONFIGþ0c0      * Configure sendgridþþ      OPEN "DICT","MVSENDGRID.BP" TO DICT.MVSENDGRID.BP ELSEþ         PRINT "No Dictionary for MVSENDGRID.BP"þ         STOPþ      ENDþþ      OPEN "MD" TO FILE.MD ELSEþ         OPEN "VOC" TO FILE.MD ELSEþ            PRINT "No MD or VOC found"þ            STOPþ         ENDþ      ENDþþ      * READ CONFIGURATION RECORD.  THIS FUNCTION WILL BE DEFAULT WANT THISþ      * TO BE IN THE MD/VOCþþ      READ MVSENDGRID.CONFIG FROM FILE.MD, "MVSENDGRID.CONFIG.JSON" ELSE MVSENDGRID.CONFIG="{}"þþ      CALL WOBJ(OBJ,"FROMJSON","",MVSENDGRID.CONFIG,"",RERR)þ      IF RERR # "" THENþ         PRINT RERR<2>þ         STOPþ      ENDþþuser.name: *þ      PRINT @(-1)þ      CALL WOBJ(OBJ,"GET","username",USER.NAME,"",RERR)þ      PRINTþ      PRINT "User Name: ":USER.NAMEþ      PRINT "Enter new user name or press return to keep current value or q to quit."þ      PRINTþ      PRINT "User Name: ":; INPUT NEW.USER.NAMEþþ      IF OCONV(NEW.USER.NAME,"MCU") = "Q" THEN STOPþ      þ      IF NEW.USER.NAME # "" THEN USER.NAME=NEW.USER.NAMEþþ      IF USER.NAME = "" THENþ         PRINTþ         PRINT "You must supply a user name.":; INPUT WAITþ         GOTO user.nameþ      ENDþ      þ      CALL WOBJ(OBJ,"SET","username",USER.NAME,"",RERR)þþpassword: *þ      PRINT @(-1)þ      CALL WOBJ(OBJ,"GET","password",PASSWORD,"",RERR)þ      PRINTþ      PRINT "Password: ":PASSWORDþ      PRINT "Enter Password or press return to keep current value or q to quit."þ      PRINTþ      PRINT "Password: ":; INPUT NEW.PASSWORDþ      þ      IF OCONV(NEW.PASSWORD,"MCU") = "Q" THEN STOPþþ      IF NEW.PASSWORD # "" THEN PASSWORD = NEW.PASSWORDþ      þ      IF PASSWORD = "" THENþ         PRINTþ         PRINT "You must supply a password.":; INPUT WAITþ         GOTO passwordþ      ENDþþ      CALL WOBJ(OBJ,"SET","password",PASSWORD,"",RERR)þ      þend.of.routine: *þþ      CALL WOBJ(OBJ,"TOJSON","",JSON,"PRETTIFY",RERR)þ      CONVERT CHAR(10) TO '' IN JSONþ      CONVERT CHAR(13) TO @AM IN JSONþ      þ      WRITE JSON ON FILE.MD, "MVSENDGRID.CONFIG.JSON"þ      PRINT "Updated MD/VOC MVSENDGRID.CONFIG.JSON"þ      þ      STOPþ      0000E9MV.INSTALL.CFþ0c000003BMVAPPS-PRE-SCRIPTþ0c0CREATE-FILE MVSENDGRID.BP 3,1,18 3,1,1000043MVAPPS-POST-SCRIPTþ0c0BASIC MVSENDGRID.BP *þCATALOG MVSENDGRID.BP *000048PACKAGE.INFOþ0c0SendGrid Email Integration APIþ1.0.0þdbþþþMVSENDGRIDþ186